/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/myorders/page"],{

/***/ "?5ddf":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Craman%5C%5COneDrive%5C%5CPictures%5C%5Cdecentralized-trust-chain%5C%5Csrc%5C%5Capp%5C%5Cmyorders%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Craman%5C%5COneDrive%5C%5CPictures%5C%5Cdecentralized-trust-chain%5C%5Csrc%5C%5Capp%5C%5Cmyorders%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/myorders/page.tsx */ \"(app-pages-browser)/./src/app/myorders/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDcmFtYW4lNUMlNUNPbmVEcml2ZSU1QyU1Q1BpY3R1cmVzJTVDJTVDZGVjZW50cmFsaXplZC10cnVzdC1jaGFpbiU1QyU1Q3NyYyU1QyU1Q2FwcCU1QyU1Q215b3JkZXJzJTVDJTVDcGFnZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSxnTEFBa0kiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz8zNTg0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxccmFtYW5cXFxcT25lRHJpdmVcXFxcUGljdHVyZXNcXFxcZGVjZW50cmFsaXplZC10cnVzdC1jaGFpblxcXFxzcmNcXFxcYXBwXFxcXG15b3JkZXJzXFxcXHBhZ2UudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Craman%5C%5COneDrive%5C%5CPictures%5C%5Cdecentralized-trust-chain%5C%5Csrc%5C%5Capp%5C%5Cmyorders%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVosa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQixxQkFBcUI7O0FBRXJCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQyxTQUFTO0FBQzVDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanM/OTlmYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICB2YXIgaVxuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcbiAgICAgIHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiAxMiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArXG4gICAgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9XG4gICAgICAoKHVpbnQ4W2ldIDw8IDE2KSAmIDB4RkYwMDAwKSArXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4RkYwMCkgK1xuICAgICAgKHVpbnQ4W2kgKyAyXSAmIDB4RkYpXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsodWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKSkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/base64-js/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nconst base64 = __webpack_require__(/*! base64-js */ \"(app-pages-browser)/./node_modules/base64-js/index.js\")\nconst ieee754 = __webpack_require__(/*! ieee754 */ \"(app-pages-browser)/./node_modules/ieee754/index.js\")\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9ldmVudGVtaXR0ZXIzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLEdBQUc7QUFDZCxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsR0FBRztBQUNkLFdBQVcsU0FBUztBQUNwQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsaUJBQWlCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSwwREFBMEQsT0FBTztBQUNqRTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQ0FBMEMsU0FBUztBQUNuRDtBQUNBOztBQUVBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUEsZ0JBQWdCLFlBQVk7QUFDNUI7O0FBRUE7QUFDQSw0REFBNEQ7QUFDNUQsZ0VBQWdFO0FBQ2hFLG9FQUFvRTtBQUNwRSx3RUFBd0U7QUFDeEU7QUFDQSwyREFBMkQsU0FBUztBQUNwRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsR0FBRztBQUNkLGFBQWEsY0FBYztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsVUFBVTtBQUNyQixXQUFXLEdBQUc7QUFDZCxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLFVBQVU7QUFDckIsV0FBVyxHQUFHO0FBQ2QsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsY0FBYztBQUMzQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osNERBQTRELFlBQVk7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QixhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSSxJQUE2QjtBQUNqQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ldmVudGVtaXR0ZXIzL2luZGV4LmpzP2JkZDEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eVxuICAsIHByZWZpeCA9ICd+JztcblxuLyoqXG4gKiBDb25zdHJ1Y3RvciB0byBjcmVhdGUgYSBzdG9yYWdlIGZvciBvdXIgYEVFYCBvYmplY3RzLlxuICogQW4gYEV2ZW50c2AgaW5zdGFuY2UgaXMgYSBwbGFpbiBvYmplY3Qgd2hvc2UgcHJvcGVydGllcyBhcmUgZXZlbnQgbmFtZXMuXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBFdmVudHMoKSB7fVxuXG4vL1xuLy8gV2UgdHJ5IHRvIG5vdCBpbmhlcml0IGZyb20gYE9iamVjdC5wcm90b3R5cGVgLiBJbiBzb21lIGVuZ2luZXMgY3JlYXRpbmcgYW5cbi8vIGluc3RhbmNlIGluIHRoaXMgd2F5IGlzIGZhc3RlciB0aGFuIGNhbGxpbmcgYE9iamVjdC5jcmVhdGUobnVsbClgIGRpcmVjdGx5LlxuLy8gSWYgYE9iamVjdC5jcmVhdGUobnVsbClgIGlzIG5vdCBzdXBwb3J0ZWQgd2UgcHJlZml4IHRoZSBldmVudCBuYW1lcyB3aXRoIGFcbi8vIGNoYXJhY3RlciB0byBtYWtlIHN1cmUgdGhhdCB0aGUgYnVpbHQtaW4gb2JqZWN0IHByb3BlcnRpZXMgYXJlIG5vdFxuLy8gb3ZlcnJpZGRlbiBvciB1c2VkIGFzIGFuIGF0dGFjayB2ZWN0b3IuXG4vL1xuaWYgKE9iamVjdC5jcmVhdGUpIHtcbiAgRXZlbnRzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgLy9cbiAgLy8gVGhpcyBoYWNrIGlzIG5lZWRlZCBiZWNhdXNlIHRoZSBgX19wcm90b19fYCBwcm9wZXJ0eSBpcyBzdGlsbCBpbmhlcml0ZWQgaW5cbiAgLy8gc29tZSBvbGQgYnJvd3NlcnMgbGlrZSBBbmRyb2lkIDQsIGlQaG9uZSA1LjEsIE9wZXJhIDExIGFuZCBTYWZhcmkgNS5cbiAgLy9cbiAgaWYgKCFuZXcgRXZlbnRzKCkuX19wcm90b19fKSBwcmVmaXggPSBmYWxzZTtcbn1cblxuLyoqXG4gKiBSZXByZXNlbnRhdGlvbiBvZiBhIHNpbmdsZSBldmVudCBsaXN0ZW5lci5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgbGlzdGVuZXIgZnVuY3Rpb24uXG4gKiBAcGFyYW0geyp9IGNvbnRleHQgVGhlIGNvbnRleHQgdG8gaW52b2tlIHRoZSBsaXN0ZW5lciB3aXRoLlxuICogQHBhcmFtIHtCb29sZWFufSBbb25jZT1mYWxzZV0gU3BlY2lmeSBpZiB0aGUgbGlzdGVuZXIgaXMgYSBvbmUtdGltZSBsaXN0ZW5lci5cbiAqIEBjb25zdHJ1Y3RvclxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gRUUoZm4sIGNvbnRleHQsIG9uY2UpIHtcbiAgdGhpcy5mbiA9IGZuO1xuICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLm9uY2UgPSBvbmNlIHx8IGZhbHNlO1xufVxuXG4vKipcbiAqIEFkZCBhIGxpc3RlbmVyIGZvciBhIGdpdmVuIGV2ZW50LlxuICpcbiAqIEBwYXJhbSB7RXZlbnRFbWl0dGVyfSBlbWl0dGVyIFJlZmVyZW5jZSB0byB0aGUgYEV2ZW50RW1pdHRlcmAgaW5zdGFuY2UuXG4gKiBAcGFyYW0geyhTdHJpbmd8U3ltYm9sKX0gZXZlbnQgVGhlIGV2ZW50IG5hbWUuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgbGlzdGVuZXIgZnVuY3Rpb24uXG4gKiBAcGFyYW0geyp9IGNvbnRleHQgVGhlIGNvbnRleHQgdG8gaW52b2tlIHRoZSBsaXN0ZW5lciB3aXRoLlxuICogQHBhcmFtIHtCb29sZWFufSBvbmNlIFNwZWNpZnkgaWYgdGhlIGxpc3RlbmVyIGlzIGEgb25lLXRpbWUgbGlzdGVuZXIuXG4gKiBAcmV0dXJucyB7RXZlbnRFbWl0dGVyfVxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gYWRkTGlzdGVuZXIoZW1pdHRlciwgZXZlbnQsIGZuLCBjb250ZXh0LCBvbmNlKSB7XG4gIGlmICh0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgbGlzdGVuZXIgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXIgPSBuZXcgRUUoZm4sIGNvbnRleHQgfHwgZW1pdHRlciwgb25jZSlcbiAgICAsIGV2dCA9IHByZWZpeCA/IHByZWZpeCArIGV2ZW50IDogZXZlbnQ7XG5cbiAgaWYgKCFlbWl0dGVyLl9ldmVudHNbZXZ0XSkgZW1pdHRlci5fZXZlbnRzW2V2dF0gPSBsaXN0ZW5lciwgZW1pdHRlci5fZXZlbnRzQ291bnQrKztcbiAgZWxzZSBpZiAoIWVtaXR0ZXIuX2V2ZW50c1tldnRdLmZuKSBlbWl0dGVyLl9ldmVudHNbZXZ0XS5wdXNoKGxpc3RlbmVyKTtcbiAgZWxzZSBlbWl0dGVyLl9ldmVudHNbZXZ0XSA9IFtlbWl0dGVyLl9ldmVudHNbZXZ0XSwgbGlzdGVuZXJdO1xuXG4gIHJldHVybiBlbWl0dGVyO1xufVxuXG4vKipcbiAqIENsZWFyIGV2ZW50IGJ5IG5hbWUuXG4gKlxuICogQHBhcmFtIHtFdmVudEVtaXR0ZXJ9IGVtaXR0ZXIgUmVmZXJlbmNlIHRvIHRoZSBgRXZlbnRFbWl0dGVyYCBpbnN0YW5jZS5cbiAqIEBwYXJhbSB7KFN0cmluZ3xTeW1ib2wpfSBldnQgVGhlIEV2ZW50IG5hbWUuXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjbGVhckV2ZW50KGVtaXR0ZXIsIGV2dCkge1xuICBpZiAoLS1lbWl0dGVyLl9ldmVudHNDb3VudCA9PT0gMCkgZW1pdHRlci5fZXZlbnRzID0gbmV3IEV2ZW50cygpO1xuICBlbHNlIGRlbGV0ZSBlbWl0dGVyLl9ldmVudHNbZXZ0XTtcbn1cblxuLyoqXG4gKiBNaW5pbWFsIGBFdmVudEVtaXR0ZXJgIGludGVyZmFjZSB0aGF0IGlzIG1vbGRlZCBhZ2FpbnN0IHRoZSBOb2RlLmpzXG4gKiBgRXZlbnRFbWl0dGVyYCBpbnRlcmZhY2UuXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcHVibGljXG4gKi9cbmZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHtcbiAgdGhpcy5fZXZlbnRzID0gbmV3IEV2ZW50cygpO1xuICB0aGlzLl9ldmVudHNDb3VudCA9IDA7XG59XG5cbi8qKlxuICogUmV0dXJuIGFuIGFycmF5IGxpc3RpbmcgdGhlIGV2ZW50cyBmb3Igd2hpY2ggdGhlIGVtaXR0ZXIgaGFzIHJlZ2lzdGVyZWRcbiAqIGxpc3RlbmVycy5cbiAqXG4gKiBAcmV0dXJucyB7QXJyYXl9XG4gKiBAcHVibGljXG4gKi9cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZXZlbnROYW1lcyA9IGZ1bmN0aW9uIGV2ZW50TmFtZXMoKSB7XG4gIHZhciBuYW1lcyA9IFtdXG4gICAgLCBldmVudHNcbiAgICAsIG5hbWU7XG5cbiAgaWYgKHRoaXMuX2V2ZW50c0NvdW50ID09PSAwKSByZXR1cm4gbmFtZXM7XG5cbiAgZm9yIChuYW1lIGluIChldmVudHMgPSB0aGlzLl9ldmVudHMpKSB7XG4gICAgaWYgKGhhcy5jYWxsKGV2ZW50cywgbmFtZSkpIG5hbWVzLnB1c2gocHJlZml4ID8gbmFtZS5zbGljZSgxKSA6IG5hbWUpO1xuICB9XG5cbiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICByZXR1cm4gbmFtZXMuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZXZlbnRzKSk7XG4gIH1cblxuICByZXR1cm4gbmFtZXM7XG59O1xuXG4vKipcbiAqIFJldHVybiB0aGUgbGlzdGVuZXJzIHJlZ2lzdGVyZWQgZm9yIGEgZ2l2ZW4gZXZlbnQuXG4gKlxuICogQHBhcmFtIHsoU3RyaW5nfFN5bWJvbCl9IGV2ZW50IFRoZSBldmVudCBuYW1lLlxuICogQHJldHVybnMge0FycmF5fSBUaGUgcmVnaXN0ZXJlZCBsaXN0ZW5lcnMuXG4gKiBAcHVibGljXG4gKi9cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJzID0gZnVuY3Rpb24gbGlzdGVuZXJzKGV2ZW50KSB7XG4gIHZhciBldnQgPSBwcmVmaXggPyBwcmVmaXggKyBldmVudCA6IGV2ZW50XG4gICAgLCBoYW5kbGVycyA9IHRoaXMuX2V2ZW50c1tldnRdO1xuXG4gIGlmICghaGFuZGxlcnMpIHJldHVybiBbXTtcbiAgaWYgKGhhbmRsZXJzLmZuKSByZXR1cm4gW2hhbmRsZXJzLmZuXTtcblxuICBmb3IgKHZhciBpID0gMCwgbCA9IGhhbmRsZXJzLmxlbmd0aCwgZWUgPSBuZXcgQXJyYXkobCk7IGkgPCBsOyBpKyspIHtcbiAgICBlZVtpXSA9IGhhbmRsZXJzW2ldLmZuO1xuICB9XG5cbiAgcmV0dXJuIGVlO1xufTtcblxuLyoqXG4gKiBSZXR1cm4gdGhlIG51bWJlciBvZiBsaXN0ZW5lcnMgbGlzdGVuaW5nIHRvIGEgZ2l2ZW4gZXZlbnQuXG4gKlxuICogQHBhcmFtIHsoU3RyaW5nfFN5bWJvbCl9IGV2ZW50IFRoZSBldmVudCBuYW1lLlxuICogQHJldHVybnMge051bWJlcn0gVGhlIG51bWJlciBvZiBsaXN0ZW5lcnMuXG4gKiBAcHVibGljXG4gKi9cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJDb3VudCA9IGZ1bmN0aW9uIGxpc3RlbmVyQ291bnQoZXZlbnQpIHtcbiAgdmFyIGV2dCA9IHByZWZpeCA/IHByZWZpeCArIGV2ZW50IDogZXZlbnRcbiAgICAsIGxpc3RlbmVycyA9IHRoaXMuX2V2ZW50c1tldnRdO1xuXG4gIGlmICghbGlzdGVuZXJzKSByZXR1cm4gMDtcbiAgaWYgKGxpc3RlbmVycy5mbikgcmV0dXJuIDE7XG4gIHJldHVybiBsaXN0ZW5lcnMubGVuZ3RoO1xufTtcblxuLyoqXG4gKiBDYWxscyBlYWNoIG9mIHRoZSBsaXN0ZW5lcnMgcmVnaXN0ZXJlZCBmb3IgYSBnaXZlbiBldmVudC5cbiAqXG4gKiBAcGFyYW0geyhTdHJpbmd8U3ltYm9sKX0gZXZlbnQgVGhlIGV2ZW50IG5hbWUuXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gYHRydWVgIGlmIHRoZSBldmVudCBoYWQgbGlzdGVuZXJzLCBlbHNlIGBmYWxzZWAuXG4gKiBAcHVibGljXG4gKi9cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uIGVtaXQoZXZlbnQsIGExLCBhMiwgYTMsIGE0LCBhNSkge1xuICB2YXIgZXZ0ID0gcHJlZml4ID8gcHJlZml4ICsgZXZlbnQgOiBldmVudDtcblxuICBpZiAoIXRoaXMuX2V2ZW50c1tldnRdKSByZXR1cm4gZmFsc2U7XG5cbiAgdmFyIGxpc3RlbmVycyA9IHRoaXMuX2V2ZW50c1tldnRdXG4gICAgLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoXG4gICAgLCBhcmdzXG4gICAgLCBpO1xuXG4gIGlmIChsaXN0ZW5lcnMuZm4pIHtcbiAgICBpZiAobGlzdGVuZXJzLm9uY2UpIHRoaXMucmVtb3ZlTGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVycy5mbiwgdW5kZWZpbmVkLCB0cnVlKTtcblxuICAgIHN3aXRjaCAobGVuKSB7XG4gICAgICBjYXNlIDE6IHJldHVybiBsaXN0ZW5lcnMuZm4uY2FsbChsaXN0ZW5lcnMuY29udGV4dCksIHRydWU7XG4gICAgICBjYXNlIDI6IHJldHVybiBsaXN0ZW5lcnMuZm4uY2FsbChsaXN0ZW5lcnMuY29udGV4dCwgYTEpLCB0cnVlO1xuICAgICAgY2FzZSAzOiByZXR1cm4gbGlzdGVuZXJzLmZuLmNhbGwobGlzdGVuZXJzLmNvbnRleHQsIGExLCBhMiksIHRydWU7XG4gICAgICBjYXNlIDQ6IHJldHVybiBsaXN0ZW5lcnMuZm4uY2FsbChsaXN0ZW5lcnMuY29udGV4dCwgYTEsIGEyLCBhMyksIHRydWU7XG4gICAgICBjYXNlIDU6IHJldHVybiBsaXN0ZW5lcnMuZm4uY2FsbChsaXN0ZW5lcnMuY29udGV4dCwgYTEsIGEyLCBhMywgYTQpLCB0cnVlO1xuICAgICAgY2FzZSA2OiByZXR1cm4gbGlzdGVuZXJzLmZuLmNhbGwobGlzdGVuZXJzLmNvbnRleHQsIGExLCBhMiwgYTMsIGE0LCBhNSksIHRydWU7XG4gICAgfVxuXG4gICAgZm9yIChpID0gMSwgYXJncyA9IG5ldyBBcnJheShsZW4gLTEpOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mbi5hcHBseShsaXN0ZW5lcnMuY29udGV4dCwgYXJncyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGxlbmd0aCA9IGxpc3RlbmVycy5sZW5ndGhcbiAgICAgICwgajtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGxpc3RlbmVyc1tpXS5vbmNlKSB0aGlzLnJlbW92ZUxpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lcnNbaV0uZm4sIHVuZGVmaW5lZCwgdHJ1ZSk7XG5cbiAgICAgIHN3aXRjaCAobGVuKSB7XG4gICAgICAgIGNhc2UgMTogbGlzdGVuZXJzW2ldLmZuLmNhbGwobGlzdGVuZXJzW2ldLmNvbnRleHQpOyBicmVhaztcbiAgICAgICAgY2FzZSAyOiBsaXN0ZW5lcnNbaV0uZm4uY2FsbChsaXN0ZW5lcnNbaV0uY29udGV4dCwgYTEpOyBicmVhaztcbiAgICAgICAgY2FzZSAzOiBsaXN0ZW5lcnNbaV0uZm4uY2FsbChsaXN0ZW5lcnNbaV0uY29udGV4dCwgYTEsIGEyKTsgYnJlYWs7XG4gICAgICAgIGNhc2UgNDogbGlzdGVuZXJzW2ldLmZuLmNhbGwobGlzdGVuZXJzW2ldLmNvbnRleHQsIGExLCBhMiwgYTMpOyBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBpZiAoIWFyZ3MpIGZvciAoaiA9IDEsIGFyZ3MgPSBuZXcgQXJyYXkobGVuIC0xKTsgaiA8IGxlbjsgaisrKSB7XG4gICAgICAgICAgICBhcmdzW2ogLSAxXSA9IGFyZ3VtZW50c1tqXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBsaXN0ZW5lcnNbaV0uZm4uYXBwbHkobGlzdGVuZXJzW2ldLmNvbnRleHQsIGFyZ3MpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcblxuLyoqXG4gKiBBZGQgYSBsaXN0ZW5lciBmb3IgYSBnaXZlbiBldmVudC5cbiAqXG4gKiBAcGFyYW0geyhTdHJpbmd8U3ltYm9sKX0gZXZlbnQgVGhlIGV2ZW50IG5hbWUuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgbGlzdGVuZXIgZnVuY3Rpb24uXG4gKiBAcGFyYW0geyp9IFtjb250ZXh0PXRoaXNdIFRoZSBjb250ZXh0IHRvIGludm9rZSB0aGUgbGlzdGVuZXIgd2l0aC5cbiAqIEByZXR1cm5zIHtFdmVudEVtaXR0ZXJ9IGB0aGlzYC5cbiAqIEBwdWJsaWNcbiAqL1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uIG9uKGV2ZW50LCBmbiwgY29udGV4dCkge1xuICByZXR1cm4gYWRkTGlzdGVuZXIodGhpcywgZXZlbnQsIGZuLCBjb250ZXh0LCBmYWxzZSk7XG59O1xuXG4vKipcbiAqIEFkZCBhIG9uZS10aW1lIGxpc3RlbmVyIGZvciBhIGdpdmVuIGV2ZW50LlxuICpcbiAqIEBwYXJhbSB7KFN0cmluZ3xTeW1ib2wpfSBldmVudCBUaGUgZXZlbnQgbmFtZS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBsaXN0ZW5lciBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7Kn0gW2NvbnRleHQ9dGhpc10gVGhlIGNvbnRleHQgdG8gaW52b2tlIHRoZSBsaXN0ZW5lciB3aXRoLlxuICogQHJldHVybnMge0V2ZW50RW1pdHRlcn0gYHRoaXNgLlxuICogQHB1YmxpY1xuICovXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uY2UgPSBmdW5jdGlvbiBvbmNlKGV2ZW50LCBmbiwgY29udGV4dCkge1xuICByZXR1cm4gYWRkTGlzdGVuZXIodGhpcywgZXZlbnQsIGZuLCBjb250ZXh0LCB0cnVlKTtcbn07XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBsaXN0ZW5lcnMgb2YgYSBnaXZlbiBldmVudC5cbiAqXG4gKiBAcGFyYW0geyhTdHJpbmd8U3ltYm9sKX0gZXZlbnQgVGhlIGV2ZW50IG5hbWUuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBPbmx5IHJlbW92ZSB0aGUgbGlzdGVuZXJzIHRoYXQgbWF0Y2ggdGhpcyBmdW5jdGlvbi5cbiAqIEBwYXJhbSB7Kn0gY29udGV4dCBPbmx5IHJlbW92ZSB0aGUgbGlzdGVuZXJzIHRoYXQgaGF2ZSB0aGlzIGNvbnRleHQuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IG9uY2UgT25seSByZW1vdmUgb25lLXRpbWUgbGlzdGVuZXJzLlxuICogQHJldHVybnMge0V2ZW50RW1pdHRlcn0gYHRoaXNgLlxuICogQHB1YmxpY1xuICovXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyID0gZnVuY3Rpb24gcmVtb3ZlTGlzdGVuZXIoZXZlbnQsIGZuLCBjb250ZXh0LCBvbmNlKSB7XG4gIHZhciBldnQgPSBwcmVmaXggPyBwcmVmaXggKyBldmVudCA6IGV2ZW50O1xuXG4gIGlmICghdGhpcy5fZXZlbnRzW2V2dF0pIHJldHVybiB0aGlzO1xuICBpZiAoIWZuKSB7XG4gICAgY2xlYXJFdmVudCh0aGlzLCBldnQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVycyA9IHRoaXMuX2V2ZW50c1tldnRdO1xuXG4gIGlmIChsaXN0ZW5lcnMuZm4pIHtcbiAgICBpZiAoXG4gICAgICBsaXN0ZW5lcnMuZm4gPT09IGZuICYmXG4gICAgICAoIW9uY2UgfHwgbGlzdGVuZXJzLm9uY2UpICYmXG4gICAgICAoIWNvbnRleHQgfHwgbGlzdGVuZXJzLmNvbnRleHQgPT09IGNvbnRleHQpXG4gICAgKSB7XG4gICAgICBjbGVhckV2ZW50KHRoaXMsIGV2dCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGZvciAodmFyIGkgPSAwLCBldmVudHMgPSBbXSwgbGVuZ3RoID0gbGlzdGVuZXJzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoXG4gICAgICAgIGxpc3RlbmVyc1tpXS5mbiAhPT0gZm4gfHxcbiAgICAgICAgKG9uY2UgJiYgIWxpc3RlbmVyc1tpXS5vbmNlKSB8fFxuICAgICAgICAoY29udGV4dCAmJiBsaXN0ZW5lcnNbaV0uY29udGV4dCAhPT0gY29udGV4dClcbiAgICAgICkge1xuICAgICAgICBldmVudHMucHVzaChsaXN0ZW5lcnNbaV0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vXG4gICAgLy8gUmVzZXQgdGhlIGFycmF5LCBvciByZW1vdmUgaXQgY29tcGxldGVseSBpZiB3ZSBoYXZlIG5vIG1vcmUgbGlzdGVuZXJzLlxuICAgIC8vXG4gICAgaWYgKGV2ZW50cy5sZW5ndGgpIHRoaXMuX2V2ZW50c1tldnRdID0gZXZlbnRzLmxlbmd0aCA9PT0gMSA/IGV2ZW50c1swXSA6IGV2ZW50cztcbiAgICBlbHNlIGNsZWFyRXZlbnQodGhpcywgZXZ0KTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgYWxsIGxpc3RlbmVycywgb3IgdGhvc2Ugb2YgdGhlIHNwZWNpZmllZCBldmVudC5cbiAqXG4gKiBAcGFyYW0geyhTdHJpbmd8U3ltYm9sKX0gW2V2ZW50XSBUaGUgZXZlbnQgbmFtZS5cbiAqIEByZXR1cm5zIHtFdmVudEVtaXR0ZXJ9IGB0aGlzYC5cbiAqIEBwdWJsaWNcbiAqL1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBmdW5jdGlvbiByZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnQpIHtcbiAgdmFyIGV2dDtcblxuICBpZiAoZXZlbnQpIHtcbiAgICBldnQgPSBwcmVmaXggPyBwcmVmaXggKyBldmVudCA6IGV2ZW50O1xuICAgIGlmICh0aGlzLl9ldmVudHNbZXZ0XSkgY2xlYXJFdmVudCh0aGlzLCBldnQpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuX2V2ZW50cyA9IG5ldyBFdmVudHMoKTtcbiAgICB0aGlzLl9ldmVudHNDb3VudCA9IDA7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8vXG4vLyBBbGlhcyBtZXRob2RzIG5hbWVzIGJlY2F1c2UgcGVvcGxlIHJvbGwgbGlrZSB0aGF0LlxuLy9cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub2ZmID0gRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lcjtcbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuYWRkTGlzdGVuZXIgPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uO1xuXG4vL1xuLy8gRXhwb3NlIHRoZSBwcmVmaXguXG4vL1xuRXZlbnRFbWl0dGVyLnByZWZpeGVkID0gcHJlZml4O1xuXG4vL1xuLy8gQWxsb3cgYEV2ZW50RW1pdHRlcmAgdG8gYmUgaW1wb3J0ZWQgYXMgbW9kdWxlIG5hbWVzcGFjZS5cbi8vXG5FdmVudEVtaXR0ZXIuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyO1xuXG4vL1xuLy8gRXhwb3NlIHRoZSBtb2R1bGUuXG4vL1xuaWYgKCd1bmRlZmluZWQnICE9PSB0eXBlb2YgbW9kdWxlKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gRXZlbnRFbWl0dGVyO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/eventemitter3/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXOztBQUVwQjtBQUNBO0FBQ0E7QUFDQSxTQUFTLFdBQVc7O0FBRXBCO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVMsV0FBVzs7QUFFcEI7QUFDQTtBQUNBLFNBQVMsVUFBVTs7QUFFbkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcz9jYWE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBpZWVlNzU0LiBCU0QtMy1DbGF1c2UgTGljZW5zZS4gRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnL29wZW5zb3VyY2U+ICovXG5leHBvcnRzLnJlYWQgPSBmdW5jdGlvbiAoYnVmZmVyLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbVxuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgbkJpdHMgPSAtN1xuICB2YXIgaSA9IGlzTEUgPyAobkJ5dGVzIC0gMSkgOiAwXG4gIHZhciBkID0gaXNMRSA/IC0xIDogMVxuICB2YXIgcyA9IGJ1ZmZlcltvZmZzZXQgKyBpXVxuXG4gIGkgKz0gZFxuXG4gIGUgPSBzICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIHMgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IGVMZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IChlICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIG0gPSBlICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIGUgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IG1MZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgbSA9IChtICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhc1xuICB9IGVsc2UgaWYgKGUgPT09IGVNYXgpIHtcbiAgICByZXR1cm4gbSA/IE5hTiA6ICgocyA/IC0xIDogMSkgKiBJbmZpbml0eSlcbiAgfSBlbHNlIHtcbiAgICBtID0gbSArIE1hdGgucG93KDIsIG1MZW4pXG4gICAgZSA9IGUgLSBlQmlhc1xuICB9XG4gIHJldHVybiAocyA/IC0xIDogMSkgKiBtICogTWF0aC5wb3coMiwgZSAtIG1MZW4pXG59XG5cbmV4cG9ydHMud3JpdGUgPSBmdW5jdGlvbiAoYnVmZmVyLCB2YWx1ZSwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG0sIGNcbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIHJ0ID0gKG1MZW4gPT09IDIzID8gTWF0aC5wb3coMiwgLTI0KSAtIE1hdGgucG93KDIsIC03NykgOiAwKVxuICB2YXIgaSA9IGlzTEUgPyAwIDogKG5CeXRlcyAtIDEpXG4gIHZhciBkID0gaXNMRSA/IDEgOiAtMVxuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCAodmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCkgPyAxIDogMFxuXG4gIHZhbHVlID0gTWF0aC5hYnModmFsdWUpXG5cbiAgaWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHtcbiAgICBtID0gaXNOYU4odmFsdWUpID8gMSA6IDBcbiAgICBlID0gZU1heFxuICB9IGVsc2Uge1xuICAgIGUgPSBNYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4yKVxuICAgIGlmICh2YWx1ZSAqIChjID0gTWF0aC5wb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLVxuICAgICAgYyAqPSAyXG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgdmFsdWUgKz0gcnQgLyBjXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogTWF0aC5wb3coMiwgMSAtIGVCaWFzKVxuICAgIH1cbiAgICBpZiAodmFsdWUgKiBjID49IDIpIHtcbiAgICAgIGUrK1xuICAgICAgYyAvPSAyXG4gICAgfVxuXG4gICAgaWYgKGUgKyBlQmlhcyA+PSBlTWF4KSB7XG4gICAgICBtID0gMFxuICAgICAgZSA9IGVNYXhcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKCh2YWx1ZSAqIGMpIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IGUgKyBlQmlhc1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gdmFsdWUgKiBNYXRoLnBvdygyLCBlQmlhcyAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSAwXG4gICAgfVxuICB9XG5cbiAgZm9yICg7IG1MZW4gPj0gODsgYnVmZmVyW29mZnNldCArIGldID0gbSAmIDB4ZmYsIGkgKz0gZCwgbSAvPSAyNTYsIG1MZW4gLT0gOCkge31cblxuICBlID0gKGUgPDwgbUxlbikgfCBtXG4gIGVMZW4gKz0gbUxlblxuICBmb3IgKDsgZUxlbiA+IDA7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IGUgJiAweGZmLCBpICs9IGQsIGUgLz0gMjU2LCBlTGVuIC09IDgpIHt9XG5cbiAgYnVmZmVyW29mZnNldCArIGkgLSBkXSB8PSBzICogMTI4XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ieee754/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9uYXZpZ2F0aW9uLmpzPzAwYTIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb25cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/N2UyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz9hZjhhIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tweetnacl/nacl-fast.js":
/*!*********************************************!*\
  !*** ./node_modules/tweetnacl/nacl-fast.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (true) {\n    // Node.js.\n    crypto = __webpack_require__(/*! crypto */ \"?5ddf\");\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})( true && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tweetnacl/nacl-fast.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/myorders/page.tsx":
/*!***********************************!*\
  !*** ./src/app/myorders/page.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var aptos__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! aptos */ \"(app-pages-browser)/./node_modules/aptos/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n // ✅ import AptosClient\n// Your deployed contract address & module name\nconst NODE_URL = \"https://fullnode.devnet.aptoslabs.com\";\nconst client = new aptos__WEBPACK_IMPORTED_MODULE_3__.AptosClient(NODE_URL);\nconst CONTRACT_ADDRESS = \"0xYOUR_CONTRACT_ADDRESS_HERE\";\nconst MODULE_NAME = \"ItemRegistry\";\nconst MyOrders = ()=>{\n    _s();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const [walletAddress, setWalletAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [items, setItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkConnection();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (walletAddress) {\n            fetchMyOrders();\n        }\n    }, [\n        walletAddress\n    ]);\n    const checkConnection = async ()=>{\n        if ( true && window.aptos) {\n            try {\n                const connected = await window.aptos.isConnected();\n                if (connected) {\n                    const account = await window.aptos.account();\n                    setWalletAddress(account.address);\n                    setIsConnected(true);\n                }\n            } catch (error) {\n                console.error(\"Error checking connection:\", error);\n            }\n        }\n    };\n    const connectWallet = async ()=>{\n        if ( true && window.aptos) {\n            try {\n                setLoading(true);\n                const { address } = await window.aptos.connect();\n                setWalletAddress(address);\n                setIsConnected(true);\n                window.aptos.onAccountChange((newAddress)=>{\n                    setWalletAddress(newAddress.address);\n                });\n                window.aptos.onNetworkChange((newNetwork)=>{\n                    console.log(\"Network changed:\", newNetwork);\n                });\n            } catch (err) {\n                console.error(\"Wallet connection failed:\", err);\n                alert(\"Failed to connect wallet. Please approve in Petra Wallet.\");\n            } finally{\n                setLoading(false);\n            }\n        } else {\n            alert(\"Petra wallet not found. Please install it first.\");\n            window.open(\"https://petra.app/\", \"_blank\");\n        }\n    };\n    const disconnectWallet = async ()=>{\n        if ( true && window.aptos) {\n            try {\n                await window.aptos.disconnect();\n                setWalletAddress(\"\");\n                setIsConnected(false);\n                setItems([]);\n            } catch (err) {\n                console.error(\"Wallet disconnection failed:\", err);\n            }\n        }\n    };\n    const fetchMyOrders = async ()=>{\n        try {\n            const response = await client.view({\n                function: \"\".concat(CONTRACT_ADDRESS, \"::\").concat(MODULE_NAME, \"::get_items\"),\n                type_arguments: [],\n                arguments: [\n                    walletAddress\n                ]\n            });\n            // View response is usually a nested array — parse to Item[]\n            const parsed = response[0].map((item)=>({\n                    item_type: item.item_type,\n                    item_name: item.item_name,\n                    order_id: item.order_id,\n                    pickup_date: item.pickup_date,\n                    pickup_time: item.pickup_time,\n                    wallet_address: item.wallet_address,\n                    sold_by: item.sold_by,\n                    transaction_hash: item.transaction_hash\n                }));\n            setItems(parsed);\n        } catch (err) {\n            console.error(\"Failed to fetch orders:\", err);\n        }\n    };\n    const shortenAddress = (address)=>{\n        return \"\".concat(address.slice(0, 6), \"...\").concat(address.slice(-4));\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-white text-gray-800\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                className: \"bg-white border-b border-gray-200 py-4 px-6 sticky top-0 z-10\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex justify-between items-center max-w-6xl mx-auto\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"w-10 h-10 bg-orange-600 rounded-lg flex items-center justify-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-white font-bold text-xl\",\n                                        children: \"B\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                        lineNumber: 147,\n                                        columnNumber: 15\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                    lineNumber: 146,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xl font-bold\",\n                                    children: \"BlockVerify\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                    lineNumber: 149,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                            lineNumber: 145,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                            className: \"hidden md:flex space-x-6\",\n                            children: [\n                                \"Home\",\n                                \"Products\",\n                                \"My Orders\",\n                                \"Verify\",\n                                \"Settings\"\n                            ].map((item)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"font-medium \".concat(item === \"My Orders\" ? \"text-orange-600\" : \"text-gray-600 hover:text-gray-900\"),\n                                    onClick: ()=>{\n                                        if (item === \"Home\") router.push(\"/\");\n                                        else if (item === \"Verify\") router.push(\"/verify\");\n                                        else if (item === \"Products\") router.push(\"/products\");\n                                        else if (item === \"Settings\") router.push(\"/settings\");\n                                        else if (item === \"My Orders\") router.push(\"/my-orders\");\n                                    },\n                                    children: item\n                                }, item, false, {\n                                    fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                    lineNumber: 155,\n                                    columnNumber: 17\n                                }, undefined))\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                            lineNumber: 152,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-4\",\n                            children: isConnected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center space-x-2 bg-gray-100 rounded-full pl-4 pr-2 py-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-sm font-medium\",\n                                        children: shortenAddress(walletAddress)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                        lineNumber: 179,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: disconnectWallet,\n                                        className: \"bg-gray-200 hover:bg-gray-300 rounded-full p-2 transition-colors\",\n                                        title: \"Disconnect Wallet\",\n                                        disabled: loading,\n                                        children: \"X\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                        lineNumber: 182,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                lineNumber: 178,\n                                columnNumber: 15\n                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: connectWallet,\n                                disabled: loading,\n                                className: \"bg-orange-600 hover:bg-orange-700 text-white px-4 py-2 rounded-full text-sm font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n                                children: loading ? \"Connecting...\" : \"Connect Wallet\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                lineNumber: 192,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                            lineNumber: 176,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                    lineNumber: 144,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                lineNumber: 143,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"max-w-6xl mx-auto px-6 py-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-2xl font-bold mb-6\",\n                        children: \"My Orders\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                        lineNumber: 206,\n                        columnNumber: 9\n                    }, undefined),\n                    items.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-gray-600\",\n                        children: \"No orders found.\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                        lineNumber: 209,\n                        columnNumber: 11\n                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid md:grid-cols-2 gap-6\",\n                        children: items.map((item, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"border rounded-xl p-4 shadow-sm bg-gray-50\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"font-bold text-lg\",\n                                        children: item.item_name\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                        lineNumber: 217,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm text-gray-700\",\n                                        children: item.item_type\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                        lineNumber: 218,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm\",\n                                        children: [\n                                            \"Order ID: \",\n                                            item.order_id\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                        lineNumber: 219,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm\",\n                                        children: [\n                                            \"Pickup: \",\n                                            item.pickup_date,\n                                            \" @ \",\n                                            item.pickup_time\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                        lineNumber: 220,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm\",\n                                        children: [\n                                            \"Sold By: \",\n                                            item.sold_by\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                        lineNumber: 221,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm break-all\",\n                                        children: [\n                                            \"Txn Hash: \",\n                                            item.transaction_hash\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                        lineNumber: 222,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, index, true, {\n                                fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                                lineNumber: 213,\n                                columnNumber: 15\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                        lineNumber: 211,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n                lineNumber: 205,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\raman\\\\OneDrive\\\\Pictures\\\\decentralized-trust-chain\\\\src\\\\app\\\\myorders\\\\page.tsx\",\n        lineNumber: 141,\n        columnNumber: 5\n    }, undefined);\n};\n_s(MyOrders, \"/GVjy8JqUzhQQii5pZTMJKaJeAE=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = MyOrders;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyOrders);\nvar _c;\n$RefreshReg$(_c, \"MyOrders\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/myorders/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/MjI2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/dist/index.mjs":
/*!*******************************************!*\
  !*** ./node_modules/aptos/dist/index.mjs ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APTOS_COIN: function() { return /* binding */ APTOS_COIN; },\n/* harmony export */   AccountSequenceNumber: function() { return /* binding */ AccountSequenceNumber; },\n/* harmony export */   Account_Transactions_Select_Column: function() { return /* binding */ Account_Transactions_Select_Column; },\n/* harmony export */   Address_Events_Summary_Select_Column: function() { return /* binding */ Address_Events_Summary_Select_Column; },\n/* harmony export */   Address_Version_From_Events_Select_Column: function() { return /* binding */ Address_Version_From_Events_Select_Column; },\n/* harmony export */   Address_Version_From_Move_Resources_Select_Column: function() { return /* binding */ Address_Version_From_Move_Resources_Select_Column; },\n/* harmony export */   AnsClient: function() { return /* binding */ AnsClient; },\n/* harmony export */   ApiError: function() { return /* binding */ ApiError; },\n/* harmony export */   AptosAccount: function() { return /* binding */ AptosAccount; },\n/* harmony export */   AptosApiError: function() { return /* binding */ AptosApiError; },\n/* harmony export */   AptosClient: function() { return /* binding */ AptosClient; },\n/* harmony export */   AptosToken: function() { return /* binding */ AptosToken; },\n/* harmony export */   BCS: function() { return /* binding */ bcs_exports; },\n/* harmony export */   Block_Metadata_Transactions_Select_Column: function() { return /* binding */ Block_Metadata_Transactions_Select_Column; },\n/* harmony export */   CKDPriv: function() { return /* binding */ CKDPriv; },\n/* harmony export */   COIN_TRANSFER: function() { return /* binding */ COIN_TRANSFER; },\n/* harmony export */   CoinClient: function() { return /* binding */ CoinClient; },\n/* harmony export */   Coin_Activities_Select_Column: function() { return /* binding */ Coin_Activities_Select_Column; },\n/* harmony export */   Coin_Balances_Select_Column: function() { return /* binding */ Coin_Balances_Select_Column; },\n/* harmony export */   Coin_Infos_Select_Column: function() { return /* binding */ Coin_Infos_Select_Column; },\n/* harmony export */   Coin_Supply_Select_Column: function() { return /* binding */ Coin_Supply_Select_Column; },\n/* harmony export */   Collection_Datas_Select_Column: function() { return /* binding */ Collection_Datas_Select_Column; },\n/* harmony export */   Current_Ans_Lookup_Select_Column: function() { return /* binding */ Current_Ans_Lookup_Select_Column; },\n/* harmony export */   Current_Ans_Lookup_V2_Select_Column: function() { return /* binding */ Current_Ans_Lookup_V2_Select_Column; },\n/* harmony export */   Current_Aptos_Names_Select_Column: function() { return /* binding */ Current_Aptos_Names_Select_Column; },\n/* harmony export */   Current_Coin_Balances_Select_Column: function() { return /* binding */ Current_Coin_Balances_Select_Column; },\n/* harmony export */   Current_Collection_Datas_Select_Column: function() { return /* binding */ Current_Collection_Datas_Select_Column; },\n/* harmony export */   Current_Collection_Ownership_V2_View_Select_Column: function() { return /* binding */ Current_Collection_Ownership_V2_View_Select_Column; },\n/* harmony export */   Current_Collections_V2_Select_Column: function() { return /* binding */ Current_Collections_V2_Select_Column; },\n/* harmony export */   Current_Delegated_Staking_Pool_Balances_Select_Column: function() { return /* binding */ Current_Delegated_Staking_Pool_Balances_Select_Column; },\n/* harmony export */   Current_Delegated_Voter_Select_Column: function() { return /* binding */ Current_Delegated_Voter_Select_Column; },\n/* harmony export */   Current_Delegator_Balances_Select_Column: function() { return /* binding */ Current_Delegator_Balances_Select_Column; },\n/* harmony export */   Current_Fungible_Asset_Balances_Select_Column: function() { return /* binding */ Current_Fungible_Asset_Balances_Select_Column; },\n/* harmony export */   Current_Objects_Select_Column: function() { return /* binding */ Current_Objects_Select_Column; },\n/* harmony export */   Current_Staking_Pool_Voter_Select_Column: function() { return /* binding */ Current_Staking_Pool_Voter_Select_Column; },\n/* harmony export */   Current_Table_Items_Select_Column: function() { return /* binding */ Current_Table_Items_Select_Column; },\n/* harmony export */   Current_Token_Datas_Select_Column: function() { return /* binding */ Current_Token_Datas_Select_Column; },\n/* harmony export */   Current_Token_Datas_V2_Select_Column: function() { return /* binding */ Current_Token_Datas_V2_Select_Column; },\n/* harmony export */   Current_Token_Ownerships_Select_Column: function() { return /* binding */ Current_Token_Ownerships_Select_Column; },\n/* harmony export */   Current_Token_Ownerships_V2_Select_Column: function() { return /* binding */ Current_Token_Ownerships_V2_Select_Column; },\n/* harmony export */   Current_Token_Pending_Claims_Select_Column: function() { return /* binding */ Current_Token_Pending_Claims_Select_Column; },\n/* harmony export */   Cursor_Ordering: function() { return /* binding */ Cursor_Ordering; },\n/* harmony export */   Delegated_Staking_Activities_Select_Column: function() { return /* binding */ Delegated_Staking_Activities_Select_Column; },\n/* harmony export */   Delegated_Staking_Pools_Select_Column: function() { return /* binding */ Delegated_Staking_Pools_Select_Column; },\n/* harmony export */   Delegator_Distinct_Pool_Select_Column: function() { return /* binding */ Delegator_Distinct_Pool_Select_Column; },\n/* harmony export */   Events_Select_Column: function() { return /* binding */ Events_Select_Column; },\n/* harmony export */   FailedTransactionError: function() { return /* binding */ FailedTransactionError; },\n/* harmony export */   FaucetClient: function() { return /* binding */ FaucetClient; },\n/* harmony export */   FungibleAssetClient: function() { return /* binding */ FungibleAssetClient; },\n/* harmony export */   Fungible_Asset_Activities_Select_Column: function() { return /* binding */ Fungible_Asset_Activities_Select_Column; },\n/* harmony export */   Fungible_Asset_Metadata_Select_Column: function() { return /* binding */ Fungible_Asset_Metadata_Select_Column; },\n/* harmony export */   HexString: function() { return /* binding */ HexString; },\n/* harmony export */   IndexerClient: function() { return /* binding */ IndexerClient; },\n/* harmony export */   Indexer_Status_Select_Column: function() { return /* binding */ Indexer_Status_Select_Column; },\n/* harmony export */   Ledger_Infos_Select_Column: function() { return /* binding */ Ledger_Infos_Select_Column; },\n/* harmony export */   Move_Resources_Select_Column: function() { return /* binding */ Move_Resources_Select_Column; },\n/* harmony export */   Network: function() { return /* binding */ Network; },\n/* harmony export */   NetworkToIndexerAPI: function() { return /* binding */ NetworkToIndexerAPI; },\n/* harmony export */   NetworkToNodeAPI: function() { return /* binding */ NetworkToNodeAPI; },\n/* harmony export */   Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column: function() { return /* binding */ Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column; },\n/* harmony export */   Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column: function() { return /* binding */ Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column; },\n/* harmony export */   Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column: function() { return /* binding */ Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column; },\n/* harmony export */   Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column: function() { return /* binding */ Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column; },\n/* harmony export */   Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column: function() { return /* binding */ Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column; },\n/* harmony export */   Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column: function() { return /* binding */ Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column; },\n/* harmony export */   NodeAPIToNetwork: function() { return /* binding */ NodeAPIToNetwork; },\n/* harmony export */   Num_Active_Delegator_Per_Pool_Select_Column: function() { return /* binding */ Num_Active_Delegator_Per_Pool_Select_Column; },\n/* harmony export */   Order_By: function() { return /* binding */ Order_By; },\n/* harmony export */   Processor_Status_Select_Column: function() { return /* binding */ Processor_Status_Select_Column; },\n/* harmony export */   PropertyMap: function() { return /* binding */ PropertyMap; },\n/* harmony export */   PropertyValue: function() { return /* binding */ PropertyValue; },\n/* harmony export */   Proposal_Votes_Select_Column: function() { return /* binding */ Proposal_Votes_Select_Column; },\n/* harmony export */   Provider: function() { return /* binding */ Provider; },\n/* harmony export */   TRANSFER_COINS: function() { return /* binding */ TRANSFER_COINS; },\n/* harmony export */   Table_Items_Select_Column: function() { return /* binding */ Table_Items_Select_Column; },\n/* harmony export */   Table_Metadatas_Select_Column: function() { return /* binding */ Table_Metadatas_Select_Column; },\n/* harmony export */   TokenClient: function() { return /* binding */ TokenClient; },\n/* harmony export */   TokenTypes: function() { return /* binding */ token_types_exports; },\n/* harmony export */   Token_Activities_Select_Column: function() { return /* binding */ Token_Activities_Select_Column; },\n/* harmony export */   Token_Activities_V2_Select_Column: function() { return /* binding */ Token_Activities_V2_Select_Column; },\n/* harmony export */   Token_Datas_Select_Column: function() { return /* binding */ Token_Datas_Select_Column; },\n/* harmony export */   Token_Ownerships_Select_Column: function() { return /* binding */ Token_Ownerships_Select_Column; },\n/* harmony export */   Tokens_Select_Column: function() { return /* binding */ Tokens_Select_Column; },\n/* harmony export */   TransactionBuilder: function() { return /* binding */ TransactionBuilder; },\n/* harmony export */   TransactionBuilderABI: function() { return /* binding */ TransactionBuilderABI; },\n/* harmony export */   TransactionBuilderEd25519: function() { return /* binding */ TransactionBuilderEd25519; },\n/* harmony export */   TransactionBuilderMultiEd25519: function() { return /* binding */ TransactionBuilderMultiEd25519; },\n/* harmony export */   TransactionBuilderRemoteABI: function() { return /* binding */ TransactionBuilderRemoteABI; },\n/* harmony export */   TransactionWorker: function() { return /* binding */ TransactionWorker; },\n/* harmony export */   TransactionWorkerEvents: function() { return /* binding */ TransactionWorkerEvents; },\n/* harmony export */   TxnBuilderTypes: function() { return /* binding */ aptos_types_exports; },\n/* harmony export */   TypeTagParser: function() { return /* binding */ TypeTagParser; },\n/* harmony export */   Types: function() { return /* binding */ generated_exports; },\n/* harmony export */   User_Transactions_Select_Column: function() { return /* binding */ User_Transactions_Select_Column; },\n/* harmony export */   WaitForTransactionError: function() { return /* binding */ WaitForTransactionError; },\n/* harmony export */   ansContractsMap: function() { return /* binding */ ansContractsMap; },\n/* harmony export */   aptosRequest: function() { return /* binding */ aptosRequest; },\n/* harmony export */   argToTransactionArgument: function() { return /* binding */ argToTransactionArgument; },\n/* harmony export */   derivePath: function() { return /* binding */ derivePath; },\n/* harmony export */   deserializePropertyMap: function() { return /* binding */ deserializePropertyMap; },\n/* harmony export */   deserializeValueBasedOnTypeTag: function() { return /* binding */ deserializeValueBasedOnTypeTag; },\n/* harmony export */   ensureBigInt: function() { return /* binding */ ensureBigInt; },\n/* harmony export */   ensureBoolean: function() { return /* binding */ ensureBoolean; },\n/* harmony export */   ensureNumber: function() { return /* binding */ ensureNumber; },\n/* harmony export */   get: function() { return /* binding */ get; },\n/* harmony export */   getAddressFromAccountOrAddress: function() { return /* binding */ getAddressFromAccountOrAddress; },\n/* harmony export */   getMasterKeyFromSeed: function() { return /* binding */ getMasterKeyFromSeed; },\n/* harmony export */   getPropertyType: function() { return /* binding */ getPropertyType; },\n/* harmony export */   getPropertyValueRaw: function() { return /* binding */ getPropertyValueRaw; },\n/* harmony export */   getPublicKey: function() { return /* binding */ getPublicKey; },\n/* harmony export */   getSinglePropertyValueRaw: function() { return /* binding */ getSinglePropertyValueRaw; },\n/* harmony export */   isValidPath: function() { return /* binding */ isValidPath; },\n/* harmony export */   nameComponentPattern: function() { return /* binding */ nameComponentPattern; },\n/* harmony export */   namePattern: function() { return /* binding */ namePattern; },\n/* harmony export */   post: function() { return /* binding */ post; },\n/* harmony export */   serializeArg: function() { return /* binding */ serializeArg; }\n/* harmony export */ });\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tweetnacl */ \"(app-pages-browser)/./node_modules/tweetnacl/nacl-fast.js\");\n/* harmony import */ var _scure_bip39__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @scure/bip39 */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@scure/bip39/esm/index.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @noble/hashes/utils */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/hmac */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/hmac.js\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var _aptos_labs_aptos_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aptos-labs/aptos-client */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@aptos-labs/aptos-client/dist/browser/index.browser.mjs\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! eventemitter3 */ \"(app-pages-browser)/./node_modules/eventemitter3/index.mjs\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n// src/account/aptos_account.ts\n\n\n\n\n\n\n// src/utils/hd-key.ts\n\n\n\n\nvar pathRegex = /^m(\\/[0-9]+')+$/;\nvar replaceDerive = (val) => val.replace(\"'\", \"\");\nvar HMAC_KEY = \"ed25519 seed\";\nvar HARDENED_OFFSET = 2147483648;\nvar getMasterKeyFromSeed = (seed) => {\n  const h = _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_2__.hmac.create(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_3__.sha512, HMAC_KEY);\n  const I = h.update((0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(seed)).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR\n  };\n};\nvar CKDPriv = ({ key, chainCode }, index) => {\n  const buffer = new ArrayBuffer(4);\n  new DataView(buffer).setUint32(0, index);\n  const indexBytes = new Uint8Array(buffer);\n  const zero = new Uint8Array([0]);\n  const data = new Uint8Array([...zero, ...key, ...indexBytes]);\n  const I = _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_2__.hmac.create(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_3__.sha512, chainCode).update(data).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR\n  };\n};\nvar getPublicKey = (privateKey, withZeroByte = true) => {\n  const keyPair = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair.fromSeed(privateKey);\n  const signPk = keyPair.secretKey.subarray(32);\n  const zero = new Uint8Array([0]);\n  return withZeroByte ? new Uint8Array([...zero, ...signPk]) : signPk;\n};\nvar isValidPath = (path) => {\n  if (!pathRegex.test(path)) {\n    return false;\n  }\n  return !path.split(\"/\").slice(1).map(replaceDerive).some(Number.isNaN);\n};\nvar derivePath = (path, seed, offset = HARDENED_OFFSET) => {\n  if (!isValidPath(path)) {\n    throw new Error(\"Invalid derivation path\");\n  }\n  const { key, chainCode } = getMasterKeyFromSeed(seed);\n  const segments = path.split(\"/\").slice(1).map(replaceDerive).map((el) => parseInt(el, 10));\n  return segments.reduce((parentKeys, segment) => CKDPriv(parentKeys, segment + offset), { key, chainCode });\n};\n\n// src/version.ts\nvar VERSION = \"1.21.0\";\n\n// src/utils/misc.ts\nasync function sleep(timeMs) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeMs);\n  });\n}\nvar DEFAULT_VERSION_PATH_BASE = \"/v1\";\nfunction fixNodeUrl(nodeUrl) {\n  let out = `${nodeUrl}`;\n  if (out.endsWith(\"/\")) {\n    out = out.substring(0, out.length - 1);\n  }\n  if (!out.endsWith(DEFAULT_VERSION_PATH_BASE)) {\n    out = `${out}${DEFAULT_VERSION_PATH_BASE}`;\n  }\n  return out;\n}\nvar DEFAULT_MAX_GAS_AMOUNT = 2e5;\nvar DEFAULT_TXN_EXP_SEC_FROM_NOW = 20;\nvar DEFAULT_TXN_TIMEOUT_SEC = 20;\nvar APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\nvar CUSTOM_REQUEST_HEADER = { \"x-aptos-client\": `aptos-ts-sdk/${VERSION}` };\n\n// src/utils/memoize-decorator.ts\nfunction Memoize(args) {\n  let hashFunction;\n  let ttlMs;\n  let tags;\n  if (typeof args === \"object\") {\n    hashFunction = args.hashFunction;\n    ttlMs = args.ttlMs;\n    tags = args.tags;\n  } else {\n    hashFunction = args;\n  }\n  return (target, propertyKey, descriptor) => {\n    if (descriptor.value != null) {\n      descriptor.value = getNewFunction(descriptor.value, hashFunction, ttlMs, tags);\n    } else if (descriptor.get != null) {\n      descriptor.get = getNewFunction(descriptor.get, hashFunction, ttlMs, tags);\n    } else {\n      throw new Error(\"Only put a Memoize() decorator on a method or get accessor.\");\n    }\n  };\n}\nfunction MemoizeExpiring(ttlMs, hashFunction) {\n  return Memoize({\n    ttlMs,\n    hashFunction\n  });\n}\nvar clearCacheTagsMap = /* @__PURE__ */ new Map();\nfunction clear(tags) {\n  const cleared = /* @__PURE__ */ new Set();\n  for (const tag of tags) {\n    const maps = clearCacheTagsMap.get(tag);\n    if (maps) {\n      for (const mp of maps) {\n        if (!cleared.has(mp)) {\n          mp.clear();\n          cleared.add(mp);\n        }\n      }\n    }\n  }\n  return cleared.size;\n}\nfunction getNewFunction(originalMethod, hashFunction, ttlMs = 0, tags) {\n  const propMapName = Symbol(\"__memoized_map__\");\n  return function(...args) {\n    let returnedValue;\n    const that = this;\n    if (!that.hasOwnProperty(propMapName)) {\n      Object.defineProperty(that, propMapName, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: /* @__PURE__ */ new Map()\n      });\n    }\n    const myMap = that[propMapName];\n    if (Array.isArray(tags)) {\n      for (const tag of tags) {\n        if (clearCacheTagsMap.has(tag)) {\n          clearCacheTagsMap.get(tag).push(myMap);\n        } else {\n          clearCacheTagsMap.set(tag, [myMap]);\n        }\n      }\n    }\n    if (hashFunction || args.length > 0 || ttlMs > 0) {\n      let hashKey;\n      if (hashFunction === true) {\n        hashKey = args.map((a) => a.toString()).join(\"!\");\n      } else if (hashFunction) {\n        hashKey = hashFunction.apply(that, args);\n      } else {\n        hashKey = args[0];\n      }\n      const timestampKey = `${hashKey}__timestamp`;\n      let isExpired = false;\n      if (ttlMs > 0) {\n        if (!myMap.has(timestampKey)) {\n          isExpired = true;\n        } else {\n          const timestamp = myMap.get(timestampKey);\n          isExpired = Date.now() - timestamp > ttlMs;\n        }\n      }\n      if (myMap.has(hashKey) && !isExpired) {\n        returnedValue = myMap.get(hashKey);\n      } else {\n        returnedValue = originalMethod.apply(that, args);\n        myMap.set(hashKey, returnedValue);\n        if (ttlMs > 0) {\n          myMap.set(timestampKey, Date.now());\n        }\n      }\n    } else {\n      const hashKey = that;\n      if (myMap.has(hashKey)) {\n        returnedValue = myMap.get(hashKey);\n      } else {\n        returnedValue = originalMethod.apply(that, args);\n        myMap.set(hashKey, returnedValue);\n      }\n    }\n    return returnedValue;\n  };\n}\n\n// src/client/core.ts\n\n\n// src/client/types.ts\nvar AptosApiError = class extends Error {\n  constructor(request2, response, message) {\n    super(message);\n    this.name = \"AptosApiError\";\n    this.url = response.url;\n    this.status = response.status;\n    this.statusText = response.statusText;\n    this.data = response.data;\n    this.request = request2;\n  }\n};\n\n// src/client/core.ts\nvar errors = {\n  400: \"Bad Request\",\n  401: \"Unauthorized\",\n  403: \"Forbidden\",\n  404: \"Not Found\",\n  429: \"Too Many Requests\",\n  500: \"Internal Server Error\",\n  502: \"Bad Gateway\",\n  503: \"Service Unavailable\"\n};\nasync function request(url, method, body, contentType, params, overrides) {\n  const headers = {\n    ...overrides == null ? void 0 : overrides.HEADERS,\n    \"x-aptos-client\": `aptos-ts-sdk/${VERSION}`,\n    \"content-type\": contentType != null ? contentType : \"application/json\"\n  };\n  if (overrides == null ? void 0 : overrides.TOKEN) {\n    headers.Authorization = `Bearer ${overrides == null ? void 0 : overrides.TOKEN}`;\n  }\n  const response = await (0,_aptos_labs_aptos_client__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({ url, method, body, params, headers, overrides });\n  return response;\n}\nasync function aptosRequest(options) {\n  const { url, endpoint, method, body, contentType, params, overrides } = options;\n  const fullEndpoint = `${url}/${endpoint != null ? endpoint : \"\"}`;\n  const response = await request(fullEndpoint, method, body, contentType, params, overrides);\n  const result = {\n    status: response.status,\n    statusText: response.statusText,\n    data: response.data,\n    headers: response.headers,\n    config: response.config,\n    url: fullEndpoint\n  };\n  if (result.status >= 200 && result.status < 300) {\n    return result;\n  }\n  const errorMessage = errors[result.status];\n  throw new AptosApiError(options, result, errorMessage != null ? errorMessage : \"Generic Error\");\n}\n\n// src/client/get.ts\nasync function get(options) {\n  const response = await aptosRequest({ ...options, method: \"GET\" });\n  return response;\n}\n\n// src/client/post.ts\nasync function post(options) {\n  const response = await aptosRequest({ ...options, method: \"POST\" });\n  return response;\n}\n\n// src/utils/pagination_helpers.ts\nasync function paginateWithCursor(options) {\n  const out = [];\n  let cursor;\n  const requestParams = options.params;\n  while (true) {\n    requestParams.start = cursor;\n    const response = await get({\n      url: options.url,\n      endpoint: options.endpoint,\n      params: requestParams,\n      originMethod: options.originMethod,\n      overrides: options.overrides\n    });\n    cursor = response.headers[\"x-aptos-cursor\"];\n    delete response.headers;\n    out.push(...response.data);\n    if (cursor === null || cursor === void 0) {\n      break;\n    }\n  }\n  return out;\n}\n\n// src/utils/api-endpoints.ts\nvar NetworkToIndexerAPI = {\n  mainnet: \"https://indexer.mainnet.aptoslabs.com/v1/graphql\",\n  testnet: \"https://indexer-testnet.staging.gcp.aptosdev.com/v1/graphql\",\n  devnet: \"https://indexer-devnet.staging.gcp.aptosdev.com/v1/graphql\",\n  local: \"http://127.0.0.1:8090/v1/graphql\"\n};\nvar NetworkToNodeAPI = {\n  mainnet: \"https://fullnode.mainnet.aptoslabs.com/v1\",\n  testnet: \"https://fullnode.testnet.aptoslabs.com/v1\",\n  devnet: \"https://fullnode.devnet.aptoslabs.com/v1\",\n  local: \"http://127.0.0.1:8080/v1\"\n};\nvar NodeAPIToNetwork = {\n  \"https://fullnode.mainnet.aptoslabs.com/v1\": \"mainnet\",\n  \"https://fullnode.testnet.aptoslabs.com/v1\": \"testnet\",\n  \"https://fullnode.devnet.aptoslabs.com/v1\": \"devnet\",\n  \"http://127.0.0.1:8080/v1\": \"local\"\n};\nvar Network = /* @__PURE__ */ ((Network3) => {\n  Network3[\"MAINNET\"] = \"mainnet\";\n  Network3[\"TESTNET\"] = \"testnet\";\n  Network3[\"DEVNET\"] = \"devnet\";\n  Network3[\"LOCAL\"] = \"local\";\n  return Network3;\n})(Network || {});\n\n// src/utils/hex_string.ts\n\nvar HexString = class _HexString {\n  /**\n   * Creates new hex string from Buffer\n   * @param buffer A buffer to convert\n   * @returns New HexString\n   */\n  static fromBuffer(buffer) {\n    return _HexString.fromUint8Array(buffer);\n  }\n  /**\n   * Creates new hex string from Uint8Array\n   * @param arr Uint8Array to convert\n   * @returns New HexString\n   */\n  static fromUint8Array(arr) {\n    return new _HexString((0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(arr));\n  }\n  /**\n   * Ensures `hexString` is instance of `HexString` class\n   * @param hexString String to check\n   * @returns New HexString if `hexString` is regular string or `hexString` if it is HexString instance\n   * @example\n   * ```\n   *  const regularString = \"string\";\n   *  const hexString = new HexString(\"string\"); // \"0xstring\"\n   *  HexString.ensure(regularString); // \"0xstring\"\n   *  HexString.ensure(hexString); // \"0xstring\"\n   * ```\n   */\n  static ensure(hexString) {\n    if (typeof hexString === \"string\") {\n      return new _HexString(hexString);\n    }\n    return hexString;\n  }\n  /**\n   * Creates new HexString instance from regular string. If specified string already starts with \"0x\" prefix,\n   * it will not add another one\n   * @param hexString String to convert\n   * @example\n   * ```\n   *  const string = \"string\";\n   *  new HexString(string); // \"0xstring\"\n   * ```\n   */\n  constructor(hexString) {\n    if (hexString.startsWith(\"0x\")) {\n      this.hexString = hexString;\n    } else {\n      this.hexString = `0x${hexString}`;\n    }\n  }\n  /**\n   * Getter for inner hexString\n   * @returns Inner hex string\n   */\n  hex() {\n    return this.hexString;\n  }\n  /**\n   * Getter for inner hexString without prefix\n   * @returns Inner hex string without prefix\n   * @example\n   * ```\n   *  const hexString = new HexString(\"string\"); // \"0xstring\"\n   *  hexString.noPrefix(); // \"string\"\n   * ```\n   */\n  noPrefix() {\n    return this.hexString.slice(2);\n  }\n  /**\n   * Overrides default `toString` method\n   * @returns Inner hex string\n   */\n  toString() {\n    return this.hex();\n  }\n  /**\n   * Trimmes extra zeroes in the begining of a string\n   * @returns Inner hexString without leading zeroes\n   * @example\n   * ```\n   *  new HexString(\"0x000000string\").toShortString(); // result = \"0xstring\"\n   * ```\n   */\n  toShortString() {\n    const trimmed = this.hexString.replace(/^0x0*/, \"\");\n    return `0x${trimmed}`;\n  }\n  /**\n   * Converts hex string to a Uint8Array\n   * @returns Uint8Array from inner hexString without prefix\n   */\n  toUint8Array() {\n    return Uint8Array.from((0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(this.noPrefix()));\n  }\n};\n\n// src/aptos_types/index.ts\nvar aptos_types_exports = {};\n__export(aptos_types_exports, {\n  AccountAddress: () => AccountAddress,\n  AccountAuthenticator: () => AccountAuthenticator,\n  AccountAuthenticatorEd25519: () => AccountAuthenticatorEd25519,\n  AccountAuthenticatorMultiEd25519: () => AccountAuthenticatorMultiEd25519,\n  ArgumentABI: () => ArgumentABI,\n  AuthenticationKey: () => AuthenticationKey,\n  ChainId: () => ChainId,\n  ChangeSet: () => ChangeSet,\n  Ed25519PublicKey: () => Ed25519PublicKey,\n  Ed25519Signature: () => Ed25519Signature,\n  EntryFunction: () => EntryFunction,\n  EntryFunctionABI: () => EntryFunctionABI,\n  FeePayerRawTransaction: () => FeePayerRawTransaction,\n  Identifier: () => Identifier,\n  Module: () => Module,\n  ModuleId: () => ModuleId,\n  MultiAgentRawTransaction: () => MultiAgentRawTransaction,\n  MultiEd25519PublicKey: () => MultiEd25519PublicKey,\n  MultiEd25519Signature: () => MultiEd25519Signature,\n  MultiSig: () => MultiSig,\n  MultiSigTransactionPayload: () => MultiSigTransactionPayload,\n  RawTransaction: () => RawTransaction,\n  RawTransactionWithData: () => RawTransactionWithData,\n  RotationProofChallenge: () => RotationProofChallenge,\n  Script: () => Script,\n  ScriptABI: () => ScriptABI,\n  SignedTransaction: () => SignedTransaction,\n  StructTag: () => StructTag,\n  Transaction: () => Transaction,\n  TransactionArgument: () => TransactionArgument,\n  TransactionArgumentAddress: () => TransactionArgumentAddress,\n  TransactionArgumentBool: () => TransactionArgumentBool,\n  TransactionArgumentU128: () => TransactionArgumentU128,\n  TransactionArgumentU16: () => TransactionArgumentU16,\n  TransactionArgumentU256: () => TransactionArgumentU256,\n  TransactionArgumentU32: () => TransactionArgumentU32,\n  TransactionArgumentU64: () => TransactionArgumentU64,\n  TransactionArgumentU8: () => TransactionArgumentU8,\n  TransactionArgumentU8Vector: () => TransactionArgumentU8Vector,\n  TransactionAuthenticator: () => TransactionAuthenticator,\n  TransactionAuthenticatorEd25519: () => TransactionAuthenticatorEd25519,\n  TransactionAuthenticatorFeePayer: () => TransactionAuthenticatorFeePayer,\n  TransactionAuthenticatorMultiAgent: () => TransactionAuthenticatorMultiAgent,\n  TransactionAuthenticatorMultiEd25519: () => TransactionAuthenticatorMultiEd25519,\n  TransactionPayload: () => TransactionPayload,\n  TransactionPayloadEntryFunction: () => TransactionPayloadEntryFunction,\n  TransactionPayloadMultisig: () => TransactionPayloadMultisig,\n  TransactionPayloadScript: () => TransactionPayloadScript,\n  TransactionScriptABI: () => TransactionScriptABI,\n  TypeArgumentABI: () => TypeArgumentABI,\n  TypeTag: () => TypeTag,\n  TypeTagAddress: () => TypeTagAddress,\n  TypeTagBool: () => TypeTagBool,\n  TypeTagParser: () => TypeTagParser,\n  TypeTagParserError: () => TypeTagParserError,\n  TypeTagSigner: () => TypeTagSigner,\n  TypeTagStruct: () => TypeTagStruct,\n  TypeTagU128: () => TypeTagU128,\n  TypeTagU16: () => TypeTagU16,\n  TypeTagU256: () => TypeTagU256,\n  TypeTagU32: () => TypeTagU32,\n  TypeTagU64: () => TypeTagU64,\n  TypeTagU8: () => TypeTagU8,\n  TypeTagVector: () => TypeTagVector,\n  UserTransaction: () => UserTransaction,\n  WriteSet: () => WriteSet,\n  objectStructTag: () => objectStructTag,\n  optionStructTag: () => optionStructTag,\n  stringStructTag: () => stringStructTag\n});\n\n// src/bcs/index.ts\nvar bcs_exports = {};\n__export(bcs_exports, {\n  Deserializer: () => Deserializer,\n  Serializer: () => Serializer,\n  bcsSerializeBool: () => bcsSerializeBool,\n  bcsSerializeBytes: () => bcsSerializeBytes,\n  bcsSerializeFixedBytes: () => bcsSerializeFixedBytes,\n  bcsSerializeStr: () => bcsSerializeStr,\n  bcsSerializeU128: () => bcsSerializeU128,\n  bcsSerializeU16: () => bcsSerializeU16,\n  bcsSerializeU256: () => bcsSerializeU256,\n  bcsSerializeU32: () => bcsSerializeU32,\n  bcsSerializeU8: () => bcsSerializeU8,\n  bcsSerializeUint64: () => bcsSerializeUint64,\n  bcsToBytes: () => bcsToBytes,\n  deserializeVector: () => deserializeVector,\n  serializeVector: () => serializeVector,\n  serializeVectorWithFunc: () => serializeVectorWithFunc\n});\n\n// src/bcs/consts.ts\nvar MAX_U8_NUMBER = 2 ** 8 - 1;\nvar MAX_U16_NUMBER = 2 ** 16 - 1;\nvar MAX_U32_NUMBER = 2 ** 32 - 1;\nvar MAX_U64_BIG_INT = BigInt(2 ** 64) - BigInt(1);\nvar MAX_U128_BIG_INT = BigInt(2 ** 128) - BigInt(1);\nvar MAX_U256_BIG_INT = BigInt(2 ** 256) - BigInt(1);\n\n// src/bcs/serializer.ts\nvar Serializer = class {\n  constructor() {\n    this.buffer = new ArrayBuffer(64);\n    this.offset = 0;\n  }\n  ensureBufferWillHandleSize(bytes) {\n    while (this.buffer.byteLength < this.offset + bytes) {\n      const newBuffer = new ArrayBuffer(this.buffer.byteLength * 2);\n      new Uint8Array(newBuffer).set(new Uint8Array(this.buffer));\n      this.buffer = newBuffer;\n    }\n  }\n  serialize(values) {\n    this.ensureBufferWillHandleSize(values.length);\n    new Uint8Array(this.buffer, this.offset).set(values);\n    this.offset += values.length;\n  }\n  serializeWithFunction(fn, bytesLength, value) {\n    this.ensureBufferWillHandleSize(bytesLength);\n    const dv = new DataView(this.buffer, this.offset);\n    fn.apply(dv, [0, value, true]);\n    this.offset += bytesLength;\n  }\n  /**\n   * Serializes a string. UTF8 string is supported. Serializes the string's bytes length \"l\" first,\n   * and then serializes \"l\" bytes of the string content.\n   *\n   * BCS layout for \"string\": string_length | string_content. string_length is the bytes length of\n   * the string that is uleb128 encoded. string_length is a u32 integer.\n   *\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeStr(\"çå∞≠¢õß∂ƒ∫\");\n   * assert(serializer.getBytes() === new Uint8Array([24, 0xc3, 0xa7, 0xc3, 0xa5, 0xe2, 0x88, 0x9e,\n   * 0xe2, 0x89, 0xa0, 0xc2, 0xa2, 0xc3, 0xb5, 0xc3, 0x9f, 0xe2, 0x88, 0x82, 0xc6, 0x92, 0xe2, 0x88, 0xab]));\n   * ```\n   */\n  serializeStr(value) {\n    const textEncoder = new TextEncoder();\n    this.serializeBytes(textEncoder.encode(value));\n  }\n  /**\n   * Serializes an array of bytes.\n   *\n   * BCS layout for \"bytes\": bytes_length | bytes. bytes_length is the length of the bytes array that is\n   * uleb128 encoded. bytes_length is a u32 integer.\n   */\n  serializeBytes(value) {\n    this.serializeU32AsUleb128(value.length);\n    this.serialize(value);\n  }\n  /**\n   * Serializes an array of bytes with known length. Therefore length doesn't need to be\n   * serialized to help deserialization.  When deserializing, the number of\n   * bytes to deserialize needs to be passed in.\n   */\n  serializeFixedBytes(value) {\n    this.serialize(value);\n  }\n  /**\n   * Serializes a boolean value.\n   *\n   * BCS layout for \"boolean\": One byte. \"0x01\" for True and \"0x00\" for False.\n   */\n  serializeBool(value) {\n    if (typeof value !== \"boolean\") {\n      throw new Error(\"Value needs to be a boolean\");\n    }\n    const byteValue = value ? 1 : 0;\n    this.serialize(new Uint8Array([byteValue]));\n  }\n  serializeU8(value) {\n    this.serialize(new Uint8Array([value]));\n  }\n  serializeU16(value) {\n    this.serializeWithFunction(DataView.prototype.setUint16, 2, value);\n  }\n  serializeU32(value) {\n    this.serializeWithFunction(DataView.prototype.setUint32, 4, value);\n  }\n  serializeU64(value) {\n    const low = BigInt(value.toString()) & BigInt(MAX_U32_NUMBER);\n    const high = BigInt(value.toString()) >> BigInt(32);\n    this.serializeU32(Number(low));\n    this.serializeU32(Number(high));\n  }\n  serializeU128(value) {\n    const low = BigInt(value.toString()) & MAX_U64_BIG_INT;\n    const high = BigInt(value.toString()) >> BigInt(64);\n    this.serializeU64(low);\n    this.serializeU64(high);\n  }\n  serializeU256(value) {\n    const low = BigInt(value.toString()) & MAX_U128_BIG_INT;\n    const high = BigInt(value.toString()) >> BigInt(128);\n    this.serializeU128(low);\n    this.serializeU128(high);\n  }\n  serializeU32AsUleb128(val) {\n    let value = val;\n    const valueArray = [];\n    while (value >>> 7 !== 0) {\n      valueArray.push(value & 127 | 128);\n      value >>>= 7;\n    }\n    valueArray.push(value);\n    this.serialize(new Uint8Array(valueArray));\n  }\n  /**\n   * Returns the buffered bytes\n   */\n  getBytes() {\n    return new Uint8Array(this.buffer).slice(0, this.offset);\n  }\n};\n__decorateClass([\n  checkNumberRange(0, MAX_U8_NUMBER)\n], Serializer.prototype, \"serializeU8\", 1);\n__decorateClass([\n  checkNumberRange(0, MAX_U16_NUMBER)\n], Serializer.prototype, \"serializeU16\", 1);\n__decorateClass([\n  checkNumberRange(0, MAX_U32_NUMBER)\n], Serializer.prototype, \"serializeU32\", 1);\n__decorateClass([\n  checkNumberRange(BigInt(0), MAX_U64_BIG_INT)\n], Serializer.prototype, \"serializeU64\", 1);\n__decorateClass([\n  checkNumberRange(BigInt(0), MAX_U128_BIG_INT)\n], Serializer.prototype, \"serializeU128\", 1);\n__decorateClass([\n  checkNumberRange(BigInt(0), MAX_U256_BIG_INT)\n], Serializer.prototype, \"serializeU256\", 1);\n__decorateClass([\n  checkNumberRange(0, MAX_U32_NUMBER)\n], Serializer.prototype, \"serializeU32AsUleb128\", 1);\nfunction checkNumberRange(minValue, maxValue, message) {\n  return (target, propertyKey, descriptor) => {\n    const childFunction = descriptor.value;\n    descriptor.value = function deco(value) {\n      const valueBigInt = BigInt(value.toString());\n      if (valueBigInt > BigInt(maxValue.toString()) || valueBigInt < BigInt(minValue.toString())) {\n        throw new Error(message || \"Value is out of range\");\n      }\n      childFunction.apply(this, [value]);\n    };\n    return descriptor;\n  };\n}\n\n// src/bcs/deserializer.ts\nvar Deserializer = class {\n  constructor(data) {\n    this.buffer = new ArrayBuffer(data.length);\n    new Uint8Array(this.buffer).set(data, 0);\n    this.offset = 0;\n  }\n  read(length) {\n    if (this.offset + length > this.buffer.byteLength) {\n      throw new Error(\"Reached to the end of buffer\");\n    }\n    const bytes = this.buffer.slice(this.offset, this.offset + length);\n    this.offset += length;\n    return bytes;\n  }\n  /**\n   * Deserializes a string. UTF8 string is supported. Reads the string's bytes length \"l\" first,\n   * and then reads \"l\" bytes of content. Decodes the byte array into a string.\n   *\n   * BCS layout for \"string\": string_length | string_content. string_length is the bytes length of\n   * the string that is uleb128 encoded. string_length is a u32 integer.\n   *\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([24, 0xc3, 0xa7, 0xc3, 0xa5, 0xe2, 0x88, 0x9e,\n   * 0xe2, 0x89, 0xa0, 0xc2, 0xa2, 0xc3, 0xb5, 0xc3, 0x9f, 0xe2, 0x88, 0x82, 0xc6, 0x92, 0xe2, 0x88, 0xab]));\n   * assert(deserializer.deserializeStr() === \"çå∞≠¢õß∂ƒ∫\");\n   * ```\n   */\n  deserializeStr() {\n    const value = this.deserializeBytes();\n    const textDecoder = new TextDecoder();\n    return textDecoder.decode(value);\n  }\n  /**\n   * Deserializes an array of bytes.\n   *\n   * BCS layout for \"bytes\": bytes_length | bytes. bytes_length is the length of the bytes array that is\n   * uleb128 encoded. bytes_length is a u32 integer.\n   */\n  deserializeBytes() {\n    const len = this.deserializeUleb128AsU32();\n    return new Uint8Array(this.read(len));\n  }\n  /**\n   * Deserializes an array of bytes. The number of bytes to read is already known.\n   *\n   */\n  deserializeFixedBytes(len) {\n    return new Uint8Array(this.read(len));\n  }\n  /**\n   * Deserializes a boolean value.\n   *\n   * BCS layout for \"boolean\": One byte. \"0x01\" for True and \"0x00\" for False.\n   */\n  deserializeBool() {\n    const bool = new Uint8Array(this.read(1))[0];\n    if (bool !== 1 && bool !== 0) {\n      throw new Error(\"Invalid boolean value\");\n    }\n    return bool === 1;\n  }\n  /**\n   * Deserializes a uint8 number.\n   *\n   * BCS layout for \"uint8\": One byte. Binary format in little-endian representation.\n   */\n  deserializeU8() {\n    return new DataView(this.read(1)).getUint8(0);\n  }\n  /**\n   * Deserializes a uint16 number.\n   *\n   * BCS layout for \"uint16\": Two bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x34, 0x12]));\n   * assert(deserializer.deserializeU16() === 4660);\n   * ```\n   */\n  deserializeU16() {\n    return new DataView(this.read(2)).getUint16(0, true);\n  }\n  /**\n   * Deserializes a uint32 number.\n   *\n   * BCS layout for \"uint32\": Four bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x78, 0x56, 0x34, 0x12]));\n   * assert(deserializer.deserializeU32() === 305419896);\n   * ```\n   */\n  deserializeU32() {\n    return new DataView(this.read(4)).getUint32(0, true);\n  }\n  /**\n   * Deserializes a uint64 number.\n   *\n   * BCS layout for \"uint64\": Eight bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x00, 0xEF, 0xCD, 0xAB, 0x78, 0x56, 0x34, 0x12]));\n   * assert(deserializer.deserializeU64() === 1311768467750121216);\n   * ```\n   */\n  deserializeU64() {\n    const low = this.deserializeU32();\n    const high = this.deserializeU32();\n    return BigInt(BigInt(high) << BigInt(32) | BigInt(low));\n  }\n  /**\n   * Deserializes a uint128 number.\n   *\n   * BCS layout for \"uint128\": Sixteen bytes. Binary format in little-endian representation.\n   */\n  deserializeU128() {\n    const low = this.deserializeU64();\n    const high = this.deserializeU64();\n    return BigInt(high << BigInt(64) | low);\n  }\n  /**\n   * Deserializes a uint256 number.\n   *\n   * BCS layout for \"uint256\": Thirty-two bytes. Binary format in little-endian representation.\n   */\n  deserializeU256() {\n    const low = this.deserializeU128();\n    const high = this.deserializeU128();\n    return BigInt(high << BigInt(128) | low);\n  }\n  /**\n   * Deserializes a uleb128 encoded uint32 number.\n   *\n   * BCS use uleb128 encoding in two cases: (1) lengths of variable-length sequences and (2) tags of enum values\n   */\n  deserializeUleb128AsU32() {\n    let value = BigInt(0);\n    let shift = 0;\n    while (value < MAX_U32_NUMBER) {\n      const byte = this.deserializeU8();\n      value |= BigInt(byte & 127) << BigInt(shift);\n      if ((byte & 128) === 0) {\n        break;\n      }\n      shift += 7;\n    }\n    if (value > MAX_U32_NUMBER) {\n      throw new Error(\"Overflow while parsing uleb128-encoded uint32 value\");\n    }\n    return Number(value);\n  }\n};\n\n// src/bcs/helper.ts\nfunction serializeVector(value, serializer) {\n  serializer.serializeU32AsUleb128(value.length);\n  value.forEach((item) => {\n    item.serialize(serializer);\n  });\n}\nfunction serializeVectorWithFunc(value, func) {\n  const serializer = new Serializer();\n  serializer.serializeU32AsUleb128(value.length);\n  const f = serializer[func];\n  value.forEach((item) => {\n    f.call(serializer, item);\n  });\n  return serializer.getBytes();\n}\nfunction deserializeVector(deserializer, cls) {\n  const length = deserializer.deserializeUleb128AsU32();\n  const list = [];\n  for (let i = 0; i < length; i += 1) {\n    list.push(cls.deserialize(deserializer));\n  }\n  return list;\n}\nfunction bcsToBytes(value) {\n  const serializer = new Serializer();\n  value.serialize(serializer);\n  return serializer.getBytes();\n}\nfunction bcsSerializeUint64(value) {\n  const serializer = new Serializer();\n  serializer.serializeU64(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeU8(value) {\n  const serializer = new Serializer();\n  serializer.serializeU8(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeU16(value) {\n  const serializer = new Serializer();\n  serializer.serializeU16(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeU32(value) {\n  const serializer = new Serializer();\n  serializer.serializeU32(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeU128(value) {\n  const serializer = new Serializer();\n  serializer.serializeU128(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeU256(value) {\n  const serializer = new Serializer();\n  serializer.serializeU256(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeBool(value) {\n  const serializer = new Serializer();\n  serializer.serializeBool(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeStr(value) {\n  const serializer = new Serializer();\n  serializer.serializeStr(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeBytes(value) {\n  const serializer = new Serializer();\n  serializer.serializeBytes(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeFixedBytes(value) {\n  const serializer = new Serializer();\n  serializer.serializeFixedBytes(value);\n  return serializer.getBytes();\n}\n\n// src/aptos_types/transaction.ts\n\n\n// src/aptos_types/account_address.ts\nvar _AccountAddress = class _AccountAddress {\n  constructor(address) {\n    if (address.length !== _AccountAddress.LENGTH) {\n      throw new Error(\"Expected address of length 32\");\n    }\n    this.address = address;\n  }\n  /**\n   * Creates AccountAddress from a hex string.\n   * @param addr Hex string can be with a prefix or without a prefix,\n   *   e.g. '0x1aa' or '1aa'. Hex string will be left padded with 0s if too short.\n   */\n  static fromHex(addr) {\n    let address = HexString.ensure(addr);\n    if (address.noPrefix().length % 2 !== 0) {\n      address = new HexString(`0${address.noPrefix()}`);\n    }\n    const addressBytes = address.toUint8Array();\n    if (addressBytes.length > _AccountAddress.LENGTH) {\n      throw new Error(\"Hex string is too long. Address's length is 32 bytes.\");\n    } else if (addressBytes.length === _AccountAddress.LENGTH) {\n      return new _AccountAddress(addressBytes);\n    }\n    const res = new Uint8Array(_AccountAddress.LENGTH);\n    res.set(addressBytes, _AccountAddress.LENGTH - addressBytes.length);\n    return new _AccountAddress(res);\n  }\n  /**\n   * Checks if the string is a valid AccountAddress\n   * @param addr Hex string can be with a prefix or without a prefix,\n   *   e.g. '0x1aa' or '1aa'. Hex string will be left padded with 0s if too short.\n   */\n  static isValid(addr) {\n    if (addr === \"\") {\n      return false;\n    }\n    let address = HexString.ensure(addr);\n    if (address.noPrefix().length % 2 !== 0) {\n      address = new HexString(`0${address.noPrefix()}`);\n    }\n    const addressBytes = address.toUint8Array();\n    return addressBytes.length <= _AccountAddress.LENGTH;\n  }\n  /**\n   * Return a hex string from account Address.\n   */\n  toHexString() {\n    return HexString.fromUint8Array(this.address).hex();\n  }\n  serialize(serializer) {\n    serializer.serializeFixedBytes(this.address);\n  }\n  static deserialize(deserializer) {\n    return new _AccountAddress(deserializer.deserializeFixedBytes(_AccountAddress.LENGTH));\n  }\n  /**\n   * Standardizes an address to the format \"0x\" followed by 64 lowercase hexadecimal digits.\n   */\n  static standardizeAddress(address) {\n    const lowercaseAddress = address.toLowerCase();\n    const addressWithoutPrefix = lowercaseAddress.startsWith(\"0x\") ? lowercaseAddress.slice(2) : lowercaseAddress;\n    const addressWithPadding = addressWithoutPrefix.padStart(64, \"0\");\n    return `0x${addressWithPadding}`;\n  }\n};\n_AccountAddress.LENGTH = 32;\n_AccountAddress.CORE_CODE_ADDRESS = _AccountAddress.fromHex(\"0x1\");\nvar AccountAddress = _AccountAddress;\n\n// src/aptos_types/ed25519.ts\nvar _Ed25519PublicKey = class _Ed25519PublicKey {\n  constructor(value) {\n    if (value.length !== _Ed25519PublicKey.LENGTH) {\n      throw new Error(`Ed25519PublicKey length should be ${_Ed25519PublicKey.LENGTH}`);\n    }\n    this.value = value;\n  }\n  toBytes() {\n    return this.value;\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.value);\n  }\n  static deserialize(deserializer) {\n    const value = deserializer.deserializeBytes();\n    return new _Ed25519PublicKey(value);\n  }\n};\n_Ed25519PublicKey.LENGTH = 32;\nvar Ed25519PublicKey = _Ed25519PublicKey;\nvar _Ed25519Signature = class _Ed25519Signature {\n  constructor(value) {\n    this.value = value;\n    if (value.length !== _Ed25519Signature.LENGTH) {\n      throw new Error(`Ed25519Signature length should be ${_Ed25519Signature.LENGTH}`);\n    }\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.value);\n  }\n  static deserialize(deserializer) {\n    const value = deserializer.deserializeBytes();\n    return new _Ed25519Signature(value);\n  }\n};\n_Ed25519Signature.LENGTH = 64;\nvar Ed25519Signature = _Ed25519Signature;\n\n// src/aptos_types/multi_ed25519.ts\nvar MAX_SIGNATURES_SUPPORTED = 32;\nvar MultiEd25519PublicKey = class _MultiEd25519PublicKey {\n  /**\n   * Public key for a K-of-N multisig transaction. A K-of-N multisig transaction means that for such a\n   * transaction to be executed, at least K out of the N authorized signers have signed the transaction\n   * and passed the check conducted by the chain.\n   *\n   * @see {@link\n   * https://aptos.dev/guides/creating-a-signed-transaction#multisignature-transactions | Creating a Signed Transaction}\n   *\n   * @param public_keys A list of public keys\n   * @param threshold At least \"threshold\" signatures must be valid\n   */\n  constructor(public_keys, threshold) {\n    this.public_keys = public_keys;\n    this.threshold = threshold;\n    if (threshold > MAX_SIGNATURES_SUPPORTED) {\n      throw new Error(`\"threshold\" cannot be larger than ${MAX_SIGNATURES_SUPPORTED}`);\n    }\n  }\n  /**\n   * Converts a MultiEd25519PublicKey into bytes with: bytes = p1_bytes | ... | pn_bytes | threshold\n   */\n  toBytes() {\n    const bytes = new Uint8Array(this.public_keys.length * Ed25519PublicKey.LENGTH + 1);\n    this.public_keys.forEach((k, i) => {\n      bytes.set(k.value, i * Ed25519PublicKey.LENGTH);\n    });\n    bytes[this.public_keys.length * Ed25519PublicKey.LENGTH] = this.threshold;\n    return bytes;\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.toBytes());\n  }\n  static deserialize(deserializer) {\n    const bytes = deserializer.deserializeBytes();\n    const threshold = bytes[bytes.length - 1];\n    const keys = [];\n    for (let i = 0; i < bytes.length - 1; i += Ed25519PublicKey.LENGTH) {\n      const begin = i;\n      keys.push(new Ed25519PublicKey(bytes.subarray(begin, begin + Ed25519PublicKey.LENGTH)));\n    }\n    return new _MultiEd25519PublicKey(keys, threshold);\n  }\n};\nvar _MultiEd25519Signature = class _MultiEd25519Signature {\n  /**\n   * Signature for a K-of-N multisig transaction.\n   *\n   * @see {@link\n   * https://aptos.dev/guides/creating-a-signed-transaction#multisignature-transactions | Creating a Signed Transaction}\n   *\n   * @param signatures A list of ed25519 signatures\n   * @param bitmap 4 bytes, at most 32 signatures are supported. If Nth bit value is `1`, the Nth\n   * signature should be provided in `signatures`. Bits are read from left to right\n   */\n  constructor(signatures, bitmap) {\n    this.signatures = signatures;\n    this.bitmap = bitmap;\n    if (bitmap.length !== _MultiEd25519Signature.BITMAP_LEN) {\n      throw new Error(`\"bitmap\" length should be ${_MultiEd25519Signature.BITMAP_LEN}`);\n    }\n  }\n  /**\n   * Converts a MultiEd25519Signature into bytes with `bytes = s1_bytes | ... | sn_bytes | bitmap`\n   */\n  toBytes() {\n    const bytes = new Uint8Array(this.signatures.length * Ed25519Signature.LENGTH + _MultiEd25519Signature.BITMAP_LEN);\n    this.signatures.forEach((k, i) => {\n      bytes.set(k.value, i * Ed25519Signature.LENGTH);\n    });\n    bytes.set(this.bitmap, this.signatures.length * Ed25519Signature.LENGTH);\n    return bytes;\n  }\n  /**\n   * Helper method to create a bitmap out of the specified bit positions\n   * @param bits The bitmap positions that should be set. A position starts at index 0.\n   * Valid position should range between 0 and 31.\n   * @example\n   * Here's an example of valid `bits`\n   * ```\n   * [0, 2, 31]\n   * ```\n   * `[0, 2, 31]` means the 1st, 3rd and 32nd bits should be set in the bitmap.\n   * The result bitmap should be 0b1010000000000000000000000000001\n   *\n   * @returns bitmap that is 32bit long\n   */\n  static createBitmap(bits) {\n    const firstBitInByte = 128;\n    const bitmap = new Uint8Array([0, 0, 0, 0]);\n    const dupCheckSet = /* @__PURE__ */ new Set();\n    bits.forEach((bit) => {\n      if (bit >= MAX_SIGNATURES_SUPPORTED) {\n        throw new Error(`Invalid bit value ${bit}.`);\n      }\n      if (dupCheckSet.has(bit)) {\n        throw new Error(\"Duplicated bits detected.\");\n      }\n      dupCheckSet.add(bit);\n      const byteOffset = Math.floor(bit / 8);\n      let byte = bitmap[byteOffset];\n      byte |= firstBitInByte >> bit % 8;\n      bitmap[byteOffset] = byte;\n    });\n    return bitmap;\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.toBytes());\n  }\n  static deserialize(deserializer) {\n    const bytes = deserializer.deserializeBytes();\n    const bitmap = bytes.subarray(bytes.length - 4);\n    const sigs = [];\n    for (let i = 0; i < bytes.length - bitmap.length; i += Ed25519Signature.LENGTH) {\n      const begin = i;\n      sigs.push(new Ed25519Signature(bytes.subarray(begin, begin + Ed25519Signature.LENGTH)));\n    }\n    return new _MultiEd25519Signature(sigs, bitmap);\n  }\n};\n_MultiEd25519Signature.BITMAP_LEN = 4;\nvar MultiEd25519Signature = _MultiEd25519Signature;\n\n// src/aptos_types/authenticator.ts\nvar TransactionAuthenticator = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionAuthenticatorEd25519.load(deserializer);\n      case 1:\n        return TransactionAuthenticatorMultiEd25519.load(deserializer);\n      case 2:\n        return TransactionAuthenticatorMultiAgent.load(deserializer);\n      case 3:\n        return TransactionAuthenticatorFeePayer.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionAuthenticator: ${index}`);\n    }\n  }\n};\nvar TransactionAuthenticatorEd25519 = class _TransactionAuthenticatorEd25519 extends TransactionAuthenticator {\n  /**\n   * An authenticator for single signature.\n   *\n   * @param public_key Client's public key.\n   * @param signature Signature of a raw transaction.\n   * @see {@link https://aptos.dev/guides/creating-a-signed-transaction/ | Creating a Signed Transaction}\n   * for details about generating a signature.\n   */\n  constructor(public_key, signature) {\n    super();\n    this.public_key = public_key;\n    this.signature = signature;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n  static load(deserializer) {\n    const public_key = Ed25519PublicKey.deserialize(deserializer);\n    const signature = Ed25519Signature.deserialize(deserializer);\n    return new _TransactionAuthenticatorEd25519(public_key, signature);\n  }\n};\nvar TransactionAuthenticatorMultiEd25519 = class _TransactionAuthenticatorMultiEd25519 extends TransactionAuthenticator {\n  /**\n   * An authenticator for multiple signatures.\n   *\n   * @param public_key\n   * @param signature\n   *\n   */\n  constructor(public_key, signature) {\n    super();\n    this.public_key = public_key;\n    this.signature = signature;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n  static load(deserializer) {\n    const public_key = MultiEd25519PublicKey.deserialize(deserializer);\n    const signature = MultiEd25519Signature.deserialize(deserializer);\n    return new _TransactionAuthenticatorMultiEd25519(public_key, signature);\n  }\n};\nvar TransactionAuthenticatorMultiAgent = class _TransactionAuthenticatorMultiAgent extends TransactionAuthenticator {\n  constructor(sender, secondary_signer_addresses, secondary_signers) {\n    super();\n    this.sender = sender;\n    this.secondary_signer_addresses = secondary_signer_addresses;\n    this.secondary_signers = secondary_signers;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(2);\n    this.sender.serialize(serializer);\n    serializeVector(this.secondary_signer_addresses, serializer);\n    serializeVector(this.secondary_signers, serializer);\n  }\n  static load(deserializer) {\n    const sender = AccountAuthenticator.deserialize(deserializer);\n    const secondary_signer_addresses = deserializeVector(deserializer, AccountAddress);\n    const secondary_signers = deserializeVector(deserializer, AccountAuthenticator);\n    return new _TransactionAuthenticatorMultiAgent(sender, secondary_signer_addresses, secondary_signers);\n  }\n};\nvar TransactionAuthenticatorFeePayer = class _TransactionAuthenticatorFeePayer extends TransactionAuthenticator {\n  constructor(sender, secondary_signer_addresses, secondary_signers, fee_payer) {\n    super();\n    this.sender = sender;\n    this.secondary_signer_addresses = secondary_signer_addresses;\n    this.secondary_signers = secondary_signers;\n    this.fee_payer = fee_payer;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(3);\n    this.sender.serialize(serializer);\n    serializeVector(this.secondary_signer_addresses, serializer);\n    serializeVector(this.secondary_signers, serializer);\n    this.fee_payer.address.serialize(serializer);\n    this.fee_payer.authenticator.serialize(serializer);\n  }\n  static load(deserializer) {\n    const sender = AccountAuthenticator.deserialize(deserializer);\n    const secondary_signer_addresses = deserializeVector(deserializer, AccountAddress);\n    const secondary_signers = deserializeVector(deserializer, AccountAuthenticator);\n    const address = AccountAddress.deserialize(deserializer);\n    const authenticator = AccountAuthenticator.deserialize(deserializer);\n    const fee_payer = { address, authenticator };\n    return new _TransactionAuthenticatorFeePayer(sender, secondary_signer_addresses, secondary_signers, fee_payer);\n  }\n};\nvar AccountAuthenticator = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return AccountAuthenticatorEd25519.load(deserializer);\n      case 1:\n        return AccountAuthenticatorMultiEd25519.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for AccountAuthenticator: ${index}`);\n    }\n  }\n};\nvar AccountAuthenticatorEd25519 = class _AccountAuthenticatorEd25519 extends AccountAuthenticator {\n  constructor(public_key, signature) {\n    super();\n    this.public_key = public_key;\n    this.signature = signature;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n  static load(deserializer) {\n    const public_key = Ed25519PublicKey.deserialize(deserializer);\n    const signature = Ed25519Signature.deserialize(deserializer);\n    return new _AccountAuthenticatorEd25519(public_key, signature);\n  }\n};\nvar AccountAuthenticatorMultiEd25519 = class _AccountAuthenticatorMultiEd25519 extends AccountAuthenticator {\n  constructor(public_key, signature) {\n    super();\n    this.public_key = public_key;\n    this.signature = signature;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n  static load(deserializer) {\n    const public_key = MultiEd25519PublicKey.deserialize(deserializer);\n    const signature = MultiEd25519Signature.deserialize(deserializer);\n    return new _AccountAuthenticatorMultiEd25519(public_key, signature);\n  }\n};\n\n// src/aptos_types/identifier.ts\nvar Identifier = class _Identifier {\n  constructor(value) {\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeStr(this.value);\n  }\n  static deserialize(deserializer) {\n    const value = deserializer.deserializeStr();\n    return new _Identifier(value);\n  }\n};\n\n// src/aptos_types/type_tag.ts\nvar TypeTag = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TypeTagBool.load(deserializer);\n      case 1:\n        return TypeTagU8.load(deserializer);\n      case 2:\n        return TypeTagU64.load(deserializer);\n      case 3:\n        return TypeTagU128.load(deserializer);\n      case 4:\n        return TypeTagAddress.load(deserializer);\n      case 5:\n        return TypeTagSigner.load(deserializer);\n      case 6:\n        return TypeTagVector.load(deserializer);\n      case 7:\n        return TypeTagStruct.load(deserializer);\n      case 8:\n        return TypeTagU16.load(deserializer);\n      case 9:\n        return TypeTagU32.load(deserializer);\n      case 10:\n        return TypeTagU256.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TypeTag: ${index}`);\n    }\n  }\n};\nvar TypeTagBool = class _TypeTagBool extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n  }\n  static load(_deserializer) {\n    return new _TypeTagBool();\n  }\n};\nvar TypeTagU8 = class _TypeTagU8 extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n  }\n  static load(_deserializer) {\n    return new _TypeTagU8();\n  }\n};\nvar TypeTagU16 = class _TypeTagU16 extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(8);\n  }\n  static load(_deserializer) {\n    return new _TypeTagU16();\n  }\n};\nvar TypeTagU32 = class _TypeTagU32 extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(9);\n  }\n  static load(_deserializer) {\n    return new _TypeTagU32();\n  }\n};\nvar TypeTagU64 = class _TypeTagU64 extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(2);\n  }\n  static load(_deserializer) {\n    return new _TypeTagU64();\n  }\n};\nvar TypeTagU128 = class _TypeTagU128 extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(3);\n  }\n  static load(_deserializer) {\n    return new _TypeTagU128();\n  }\n};\nvar TypeTagU256 = class _TypeTagU256 extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(10);\n  }\n  static load(_deserializer) {\n    return new _TypeTagU256();\n  }\n};\nvar TypeTagAddress = class _TypeTagAddress extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(4);\n  }\n  static load(_deserializer) {\n    return new _TypeTagAddress();\n  }\n};\nvar TypeTagSigner = class _TypeTagSigner extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(5);\n  }\n  static load(_deserializer) {\n    return new _TypeTagSigner();\n  }\n};\nvar TypeTagVector = class _TypeTagVector extends TypeTag {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(6);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = TypeTag.deserialize(deserializer);\n    return new _TypeTagVector(value);\n  }\n};\nvar TypeTagStruct = class _TypeTagStruct extends TypeTag {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(7);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = StructTag.deserialize(deserializer);\n    return new _TypeTagStruct(value);\n  }\n  isStringTypeTag() {\n    if (this.value.module_name.value === \"string\" && this.value.name.value === \"String\" && this.value.address.toHexString() === AccountAddress.CORE_CODE_ADDRESS.toHexString()) {\n      return true;\n    }\n    return false;\n  }\n};\nvar StructTag = class _StructTag {\n  constructor(address, module_name, name, type_args) {\n    this.address = address;\n    this.module_name = module_name;\n    this.name = name;\n    this.type_args = type_args;\n  }\n  /**\n   * Converts a string literal to a StructTag\n   * @param structTag String literal in format \"AcountAddress::module_name::ResourceName\",\n   *   e.g. \"0x1::aptos_coin::AptosCoin\"\n   * @returns\n   */\n  static fromString(structTag) {\n    const typeTagStruct = new TypeTagParser(structTag).parseTypeTag();\n    return new _StructTag(\n      typeTagStruct.value.address,\n      typeTagStruct.value.module_name,\n      typeTagStruct.value.name,\n      typeTagStruct.value.type_args\n    );\n  }\n  serialize(serializer) {\n    this.address.serialize(serializer);\n    this.module_name.serialize(serializer);\n    this.name.serialize(serializer);\n    serializeVector(this.type_args, serializer);\n  }\n  static deserialize(deserializer) {\n    const address = AccountAddress.deserialize(deserializer);\n    const moduleName = Identifier.deserialize(deserializer);\n    const name = Identifier.deserialize(deserializer);\n    const typeArgs = deserializeVector(deserializer, TypeTag);\n    return new _StructTag(address, moduleName, name, typeArgs);\n  }\n};\nvar stringStructTag = new StructTag(\n  AccountAddress.fromHex(\"0x1\"),\n  new Identifier(\"string\"),\n  new Identifier(\"String\"),\n  []\n);\nfunction optionStructTag(typeArg) {\n  return new StructTag(AccountAddress.fromHex(\"0x1\"), new Identifier(\"option\"), new Identifier(\"Option\"), [typeArg]);\n}\nfunction objectStructTag(typeArg) {\n  return new StructTag(AccountAddress.fromHex(\"0x1\"), new Identifier(\"object\"), new Identifier(\"Object\"), [typeArg]);\n}\nfunction bail(message) {\n  throw new TypeTagParserError(message);\n}\nfunction isWhiteSpace(c) {\n  if (c.match(/\\s/)) {\n    return true;\n  }\n  return false;\n}\nfunction isValidAlphabetic(c) {\n  if (c.match(/[_A-Za-z0-9]/g)) {\n    return true;\n  }\n  return false;\n}\nfunction isGeneric(c) {\n  if (c.match(/T\\d+/g)) {\n    return true;\n  }\n  return false;\n}\nfunction nextToken(tagStr, pos) {\n  const c = tagStr[pos];\n  if (c === \":\") {\n    if (tagStr.slice(pos, pos + 2) === \"::\") {\n      return [[\"COLON\", \"::\"], 2];\n    }\n    bail(\"Unrecognized token.\");\n  } else if (c === \"<\") {\n    return [[\"LT\", \"<\"], 1];\n  } else if (c === \">\") {\n    return [[\"GT\", \">\"], 1];\n  } else if (c === \",\") {\n    return [[\"COMMA\", \",\"], 1];\n  } else if (isWhiteSpace(c)) {\n    let res = \"\";\n    for (let i = pos; i < tagStr.length; i += 1) {\n      const char = tagStr[i];\n      if (isWhiteSpace(char)) {\n        res = `${res}${char}`;\n      } else {\n        break;\n      }\n    }\n    return [[\"SPACE\", res], res.length];\n  } else if (isValidAlphabetic(c)) {\n    let res = \"\";\n    for (let i = pos; i < tagStr.length; i += 1) {\n      const char = tagStr[i];\n      if (isValidAlphabetic(char)) {\n        res = `${res}${char}`;\n      } else {\n        break;\n      }\n    }\n    if (isGeneric(res)) {\n      return [[\"GENERIC\", res], res.length];\n    }\n    return [[\"IDENT\", res], res.length];\n  }\n  throw new Error(\"Unrecognized token.\");\n}\nfunction tokenize(tagStr) {\n  let pos = 0;\n  const tokens = [];\n  while (pos < tagStr.length) {\n    const [token, size] = nextToken(tagStr, pos);\n    if (token[0] !== \"SPACE\") {\n      tokens.push(token);\n    }\n    pos += size;\n  }\n  return tokens;\n}\nvar TypeTagParser = class _TypeTagParser {\n  constructor(tagStr, typeTags) {\n    this.typeTags = [];\n    this.tokens = tokenize(tagStr);\n    this.typeTags = typeTags || [];\n  }\n  consume(targetToken) {\n    const token = this.tokens.shift();\n    if (!token || token[1] !== targetToken) {\n      bail(\"Invalid type tag.\");\n    }\n  }\n  /**\n   * Consumes all of an unused generic field, mostly applicable to object\n   *\n   * Note: This is recursive.  it can be problematic if there's bad input\n   * @private\n   */\n  consumeWholeGeneric() {\n    this.consume(\"<\");\n    while (this.tokens[0][1] !== \">\") {\n      if (this.tokens[0][1] === \"<\") {\n        this.consumeWholeGeneric();\n      } else {\n        this.tokens.shift();\n      }\n    }\n    this.consume(\">\");\n  }\n  parseCommaList(endToken, allowTraillingComma) {\n    const res = [];\n    if (this.tokens.length <= 0) {\n      bail(\"Invalid type tag.\");\n    }\n    while (this.tokens[0][1] !== endToken) {\n      res.push(this.parseTypeTag());\n      if (this.tokens.length > 0 && this.tokens[0][1] === endToken) {\n        break;\n      }\n      this.consume(\",\");\n      if (this.tokens.length > 0 && this.tokens[0][1] === endToken && allowTraillingComma) {\n        break;\n      }\n      if (this.tokens.length <= 0) {\n        bail(\"Invalid type tag.\");\n      }\n    }\n    return res;\n  }\n  parseTypeTag() {\n    if (this.tokens.length === 0) {\n      bail(\"Invalid type tag.\");\n    }\n    const [tokenTy, tokenVal] = this.tokens.shift();\n    if (tokenVal === \"u8\") {\n      return new TypeTagU8();\n    }\n    if (tokenVal === \"u16\") {\n      return new TypeTagU16();\n    }\n    if (tokenVal === \"u32\") {\n      return new TypeTagU32();\n    }\n    if (tokenVal === \"u64\") {\n      return new TypeTagU64();\n    }\n    if (tokenVal === \"u128\") {\n      return new TypeTagU128();\n    }\n    if (tokenVal === \"u256\") {\n      return new TypeTagU256();\n    }\n    if (tokenVal === \"bool\") {\n      return new TypeTagBool();\n    }\n    if (tokenVal === \"address\") {\n      return new TypeTagAddress();\n    }\n    if (tokenVal === \"vector\") {\n      this.consume(\"<\");\n      const res = this.parseTypeTag();\n      this.consume(\">\");\n      return new TypeTagVector(res);\n    }\n    if (tokenVal === \"string\") {\n      return new TypeTagStruct(stringStructTag);\n    }\n    if (tokenTy === \"IDENT\" && (tokenVal.startsWith(\"0x\") || tokenVal.startsWith(\"0X\"))) {\n      const address = AccountAddress.fromHex(tokenVal);\n      this.consume(\"::\");\n      const [moduleTokenTy, module] = this.tokens.shift();\n      if (moduleTokenTy !== \"IDENT\") {\n        bail(\"Invalid type tag.\");\n      }\n      this.consume(\"::\");\n      const [nameTokenTy, name] = this.tokens.shift();\n      if (nameTokenTy !== \"IDENT\") {\n        bail(\"Invalid type tag.\");\n      }\n      if (AccountAddress.CORE_CODE_ADDRESS.toHexString() === address.toHexString() && module === \"object\" && name === \"Object\") {\n        this.consumeWholeGeneric();\n        return new TypeTagAddress();\n      }\n      let tyTags = [];\n      if (this.tokens.length > 0 && this.tokens[0][1] === \"<\") {\n        this.consume(\"<\");\n        tyTags = this.parseCommaList(\">\", true);\n        this.consume(\">\");\n      }\n      const structTag = new StructTag(address, new Identifier(module), new Identifier(name), tyTags);\n      return new TypeTagStruct(structTag);\n    }\n    if (tokenTy === \"GENERIC\") {\n      if (this.typeTags.length === 0) {\n        bail(\"Can't convert generic type since no typeTags were specified.\");\n      }\n      const idx = parseInt(tokenVal.substring(1), 10);\n      return new _TypeTagParser(this.typeTags[idx]).parseTypeTag();\n    }\n    throw new Error(\"Invalid type tag.\");\n  }\n};\nvar TypeTagParserError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"TypeTagParserError\";\n  }\n};\n\n// src/aptos_types/transaction.ts\nvar RawTransaction = class _RawTransaction {\n  /**\n   * RawTransactions contain the metadata and payloads that can be submitted to Aptos chain for execution.\n   * RawTransactions must be signed before Aptos chain can execute them.\n   *\n   * @param sender Account address of the sender.\n   * @param sequence_number Sequence number of this transaction. This must match the sequence number stored in\n   *   the sender's account at the time the transaction executes.\n   * @param payload Instructions for the Aptos Blockchain, including publishing a module,\n   *   execute a entry function or execute a script payload.\n   * @param max_gas_amount Maximum total gas to spend for this transaction. The account must have more\n   *   than this gas or the transaction will be discarded during validation.\n   * @param gas_unit_price Price to be paid per gas unit.\n   * @param expiration_timestamp_secs The blockchain timestamp at which the blockchain would discard this transaction.\n   * @param chain_id The chain ID of the blockchain that this transaction is intended to be run on.\n   */\n  constructor(sender, sequence_number, payload, max_gas_amount, gas_unit_price, expiration_timestamp_secs, chain_id) {\n    this.sender = sender;\n    this.sequence_number = sequence_number;\n    this.payload = payload;\n    this.max_gas_amount = max_gas_amount;\n    this.gas_unit_price = gas_unit_price;\n    this.expiration_timestamp_secs = expiration_timestamp_secs;\n    this.chain_id = chain_id;\n  }\n  serialize(serializer) {\n    this.sender.serialize(serializer);\n    serializer.serializeU64(this.sequence_number);\n    this.payload.serialize(serializer);\n    serializer.serializeU64(this.max_gas_amount);\n    serializer.serializeU64(this.gas_unit_price);\n    serializer.serializeU64(this.expiration_timestamp_secs);\n    this.chain_id.serialize(serializer);\n  }\n  static deserialize(deserializer) {\n    const sender = AccountAddress.deserialize(deserializer);\n    const sequence_number = deserializer.deserializeU64();\n    const payload = TransactionPayload.deserialize(deserializer);\n    const max_gas_amount = deserializer.deserializeU64();\n    const gas_unit_price = deserializer.deserializeU64();\n    const expiration_timestamp_secs = deserializer.deserializeU64();\n    const chain_id = ChainId.deserialize(deserializer);\n    return new _RawTransaction(\n      sender,\n      sequence_number,\n      payload,\n      max_gas_amount,\n      gas_unit_price,\n      expiration_timestamp_secs,\n      chain_id\n    );\n  }\n};\nvar Script = class _Script {\n  /**\n   * Scripts contain the Move bytecodes payload that can be submitted to Aptos chain for execution.\n   * @param code Move bytecode\n   * @param ty_args Type arguments that bytecode requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to bytecode function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   */\n  constructor(code, ty_args, args) {\n    this.code = code;\n    this.ty_args = ty_args;\n    this.args = args;\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.code);\n    serializeVector(this.ty_args, serializer);\n    serializeVector(this.args, serializer);\n  }\n  static deserialize(deserializer) {\n    const code = deserializer.deserializeBytes();\n    const ty_args = deserializeVector(deserializer, TypeTag);\n    const args = deserializeVector(deserializer, TransactionArgument);\n    return new _Script(code, ty_args, args);\n  }\n};\nvar EntryFunction = class _EntryFunction {\n  /**\n   * Contains the payload to run a function within a module.\n   * @param module_name Fully qualified module name. ModuleId consists of account address and module name.\n   * @param function_name The function to run.\n   * @param ty_args Type arguments that move function requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to the move function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   */\n  constructor(module_name, function_name, ty_args, args) {\n    this.module_name = module_name;\n    this.function_name = function_name;\n    this.ty_args = ty_args;\n    this.args = args;\n  }\n  /**\n   *\n   * @param module Fully qualified module name in format \"AccountAddress::module_name\" e.g. \"0x1::coin\"\n   * @param func Function name\n   * @param ty_args Type arguments that move function requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to the move function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @returns\n   */\n  static natural(module, func, ty_args, args) {\n    return new _EntryFunction(ModuleId.fromStr(module), new Identifier(func), ty_args, args);\n  }\n  /**\n   * `natual` is deprecated, please use `natural`\n   *\n   * @deprecated.\n   */\n  static natual(module, func, ty_args, args) {\n    return _EntryFunction.natural(module, func, ty_args, args);\n  }\n  serialize(serializer) {\n    this.module_name.serialize(serializer);\n    this.function_name.serialize(serializer);\n    serializeVector(this.ty_args, serializer);\n    serializer.serializeU32AsUleb128(this.args.length);\n    this.args.forEach((item) => {\n      serializer.serializeBytes(item);\n    });\n  }\n  static deserialize(deserializer) {\n    const module_name = ModuleId.deserialize(deserializer);\n    const function_name = Identifier.deserialize(deserializer);\n    const ty_args = deserializeVector(deserializer, TypeTag);\n    const length = deserializer.deserializeUleb128AsU32();\n    const list = [];\n    for (let i = 0; i < length; i += 1) {\n      list.push(deserializer.deserializeBytes());\n    }\n    const args = list;\n    return new _EntryFunction(module_name, function_name, ty_args, args);\n  }\n};\nvar MultiSigTransactionPayload = class _MultiSigTransactionPayload {\n  /**\n   * Contains the payload to run a multisig account transaction.\n   * @param transaction_payload The payload of the multisig transaction. This can only be EntryFunction for now but\n   * Script might be supported in the future.\n   */\n  constructor(transaction_payload) {\n    this.transaction_payload = transaction_payload;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.transaction_payload.serialize(serializer);\n  }\n  static deserialize(deserializer) {\n    deserializer.deserializeUleb128AsU32();\n    return new _MultiSigTransactionPayload(EntryFunction.deserialize(deserializer));\n  }\n};\nvar MultiSig = class _MultiSig {\n  /**\n   * Contains the payload to run a multisig account transaction.\n   * @param multisig_address The multisig account address the transaction will be executed as.\n   * @param transaction_payload The payload of the multisig transaction. This is optional when executing a multisig\n   *  transaction whose payload is already stored on chain.\n   */\n  constructor(multisig_address, transaction_payload) {\n    this.multisig_address = multisig_address;\n    this.transaction_payload = transaction_payload;\n  }\n  serialize(serializer) {\n    this.multisig_address.serialize(serializer);\n    if (this.transaction_payload === void 0) {\n      serializer.serializeBool(false);\n    } else {\n      serializer.serializeBool(true);\n      this.transaction_payload.serialize(serializer);\n    }\n  }\n  static deserialize(deserializer) {\n    const multisig_address = AccountAddress.deserialize(deserializer);\n    const payloadPresent = deserializer.deserializeBool();\n    let transaction_payload;\n    if (payloadPresent) {\n      transaction_payload = MultiSigTransactionPayload.deserialize(deserializer);\n    }\n    return new _MultiSig(multisig_address, transaction_payload);\n  }\n};\nvar Module = class _Module {\n  /**\n   * Contains the bytecode of a Move module that can be published to the Aptos chain.\n   * @param code Move bytecode of a module.\n   */\n  constructor(code) {\n    this.code = code;\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.code);\n  }\n  static deserialize(deserializer) {\n    const code = deserializer.deserializeBytes();\n    return new _Module(code);\n  }\n};\nvar ModuleId = class _ModuleId {\n  /**\n   * Full name of a module.\n   * @param address The account address.\n   * @param name The name of the module under the account at \"address\".\n   */\n  constructor(address, name) {\n    this.address = address;\n    this.name = name;\n  }\n  /**\n   * Converts a string literal to a ModuleId\n   * @param moduleId String literal in format \"AccountAddress::module_name\", e.g. \"0x1::coin\"\n   * @returns\n   */\n  static fromStr(moduleId) {\n    const parts = moduleId.split(\"::\");\n    if (parts.length !== 2) {\n      throw new Error(\"Invalid module id.\");\n    }\n    return new _ModuleId(AccountAddress.fromHex(new HexString(parts[0])), new Identifier(parts[1]));\n  }\n  serialize(serializer) {\n    this.address.serialize(serializer);\n    this.name.serialize(serializer);\n  }\n  static deserialize(deserializer) {\n    const address = AccountAddress.deserialize(deserializer);\n    const name = Identifier.deserialize(deserializer);\n    return new _ModuleId(address, name);\n  }\n};\nvar ChangeSet = class {\n  serialize(serializer) {\n    throw new Error(\"Not implemented.\");\n  }\n  static deserialize(deserializer) {\n    throw new Error(\"Not implemented.\");\n  }\n};\nvar WriteSet = class {\n  serialize(serializer) {\n    throw new Error(\"Not implmented.\");\n  }\n  static deserialize(deserializer) {\n    throw new Error(\"Not implmented.\");\n  }\n};\nvar SignedTransaction = class _SignedTransaction {\n  /**\n   * A SignedTransaction consists of a raw transaction and an authenticator. The authenticator\n   * contains a client's public key and the signature of the raw transaction.\n   *\n   * @see {@link https://aptos.dev/guides/creating-a-signed-transaction/ | Creating a Signed Transaction}\n   *\n   * @param raw_txn\n   * @param authenticator Contains a client's public key and the signature of the raw transaction.\n   *   Authenticator has 3 flavors: single signature, multi-signature and multi-agent.\n   *   @see authenticator.ts for details.\n   */\n  constructor(raw_txn, authenticator) {\n    this.raw_txn = raw_txn;\n    this.authenticator = authenticator;\n  }\n  serialize(serializer) {\n    this.raw_txn.serialize(serializer);\n    this.authenticator.serialize(serializer);\n  }\n  static deserialize(deserializer) {\n    const raw_txn = RawTransaction.deserialize(deserializer);\n    const authenticator = TransactionAuthenticator.deserialize(deserializer);\n    return new _SignedTransaction(raw_txn, authenticator);\n  }\n};\nvar RawTransactionWithData = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return MultiAgentRawTransaction.load(deserializer);\n      case 1:\n        return FeePayerRawTransaction.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for RawTransactionWithData: ${index}`);\n    }\n  }\n};\nvar MultiAgentRawTransaction = class _MultiAgentRawTransaction extends RawTransactionWithData {\n  constructor(raw_txn, secondary_signer_addresses) {\n    super();\n    this.raw_txn = raw_txn;\n    this.secondary_signer_addresses = secondary_signer_addresses;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.raw_txn.serialize(serializer);\n    serializeVector(this.secondary_signer_addresses, serializer);\n  }\n  static load(deserializer) {\n    const rawTxn = RawTransaction.deserialize(deserializer);\n    const secondarySignerAddresses = deserializeVector(deserializer, AccountAddress);\n    return new _MultiAgentRawTransaction(rawTxn, secondarySignerAddresses);\n  }\n};\nvar FeePayerRawTransaction = class _FeePayerRawTransaction extends RawTransactionWithData {\n  constructor(raw_txn, secondary_signer_addresses, fee_payer_address) {\n    super();\n    this.raw_txn = raw_txn;\n    this.secondary_signer_addresses = secondary_signer_addresses;\n    this.fee_payer_address = fee_payer_address;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n    this.raw_txn.serialize(serializer);\n    serializeVector(this.secondary_signer_addresses, serializer);\n    this.fee_payer_address.serialize(serializer);\n  }\n  static load(deserializer) {\n    const rawTxn = RawTransaction.deserialize(deserializer);\n    const secondarySignerAddresses = deserializeVector(deserializer, AccountAddress);\n    const feePayerAddress = AccountAddress.deserialize(deserializer);\n    return new _FeePayerRawTransaction(rawTxn, secondarySignerAddresses, feePayerAddress);\n  }\n};\nvar TransactionPayload = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionPayloadScript.load(deserializer);\n      case 2:\n        return TransactionPayloadEntryFunction.load(deserializer);\n      case 3:\n        return TransactionPayloadMultisig.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionPayload: ${index}`);\n    }\n  }\n};\nvar TransactionPayloadScript = class _TransactionPayloadScript extends TransactionPayload {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = Script.deserialize(deserializer);\n    return new _TransactionPayloadScript(value);\n  }\n};\nvar TransactionPayloadEntryFunction = class _TransactionPayloadEntryFunction extends TransactionPayload {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(2);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = EntryFunction.deserialize(deserializer);\n    return new _TransactionPayloadEntryFunction(value);\n  }\n};\nvar TransactionPayloadMultisig = class _TransactionPayloadMultisig extends TransactionPayload {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(3);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = MultiSig.deserialize(deserializer);\n    return new _TransactionPayloadMultisig(value);\n  }\n};\nvar ChainId = class _ChainId {\n  constructor(value) {\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU8(this.value);\n  }\n  static deserialize(deserializer) {\n    const value = deserializer.deserializeU8();\n    return new _ChainId(value);\n  }\n};\nvar TransactionArgument = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionArgumentU8.load(deserializer);\n      case 1:\n        return TransactionArgumentU64.load(deserializer);\n      case 2:\n        return TransactionArgumentU128.load(deserializer);\n      case 3:\n        return TransactionArgumentAddress.load(deserializer);\n      case 4:\n        return TransactionArgumentU8Vector.load(deserializer);\n      case 5:\n        return TransactionArgumentBool.load(deserializer);\n      case 6:\n        return TransactionArgumentU16.load(deserializer);\n      case 7:\n        return TransactionArgumentU32.load(deserializer);\n      case 8:\n        return TransactionArgumentU256.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionArgument: ${index}`);\n    }\n  }\n};\nvar TransactionArgumentU8 = class _TransactionArgumentU8 extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    serializer.serializeU8(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU8();\n    return new _TransactionArgumentU8(value);\n  }\n};\nvar TransactionArgumentU16 = class _TransactionArgumentU16 extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(6);\n    serializer.serializeU16(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU16();\n    return new _TransactionArgumentU16(value);\n  }\n};\nvar TransactionArgumentU32 = class _TransactionArgumentU32 extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(7);\n    serializer.serializeU32(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU32();\n    return new _TransactionArgumentU32(value);\n  }\n};\nvar TransactionArgumentU64 = class _TransactionArgumentU64 extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n    serializer.serializeU64(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU64();\n    return new _TransactionArgumentU64(value);\n  }\n};\nvar TransactionArgumentU128 = class _TransactionArgumentU128 extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(2);\n    serializer.serializeU128(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU128();\n    return new _TransactionArgumentU128(value);\n  }\n};\nvar TransactionArgumentU256 = class _TransactionArgumentU256 extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(8);\n    serializer.serializeU256(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU256();\n    return new _TransactionArgumentU256(value);\n  }\n};\nvar TransactionArgumentAddress = class _TransactionArgumentAddress extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(3);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = AccountAddress.deserialize(deserializer);\n    return new _TransactionArgumentAddress(value);\n  }\n};\nvar TransactionArgumentU8Vector = class _TransactionArgumentU8Vector extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(4);\n    serializer.serializeBytes(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeBytes();\n    return new _TransactionArgumentU8Vector(value);\n  }\n};\nvar TransactionArgumentBool = class _TransactionArgumentBool extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(5);\n    serializer.serializeBool(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeBool();\n    return new _TransactionArgumentBool(value);\n  }\n};\nvar Transaction = class {\n  getHashSalt() {\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_6__.sha3_256.create();\n    hash.update(\"APTOS::Transaction\");\n    return hash.digest();\n  }\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return UserTransaction.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for Transaction: ${index}`);\n    }\n  }\n};\nvar UserTransaction = class _UserTransaction extends Transaction {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  hash() {\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_6__.sha3_256.create();\n    hash.update(this.getHashSalt());\n    hash.update(bcsToBytes(this));\n    return hash.digest();\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    return new _UserTransaction(SignedTransaction.deserialize(deserializer));\n  }\n};\n\n// src/aptos_types/abi.ts\nvar TypeArgumentABI = class _TypeArgumentABI {\n  /**\n   * Constructs a TypeArgumentABI instance.\n   * @param name\n   */\n  constructor(name) {\n    this.name = name;\n  }\n  serialize(serializer) {\n    serializer.serializeStr(this.name);\n  }\n  static deserialize(deserializer) {\n    const name = deserializer.deserializeStr();\n    return new _TypeArgumentABI(name);\n  }\n};\nvar ArgumentABI = class _ArgumentABI {\n  /**\n   * Constructs an ArgumentABI instance.\n   * @param name\n   * @param type_tag\n   */\n  constructor(name, type_tag) {\n    this.name = name;\n    this.type_tag = type_tag;\n  }\n  serialize(serializer) {\n    serializer.serializeStr(this.name);\n    this.type_tag.serialize(serializer);\n  }\n  static deserialize(deserializer) {\n    const name = deserializer.deserializeStr();\n    const typeTag = TypeTag.deserialize(deserializer);\n    return new _ArgumentABI(name, typeTag);\n  }\n};\nvar ScriptABI = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionScriptABI.load(deserializer);\n      case 1:\n        return EntryFunctionABI.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionPayload: ${index}`);\n    }\n  }\n};\nvar TransactionScriptABI = class _TransactionScriptABI extends ScriptABI {\n  /**\n   * Constructs a TransactionScriptABI instance.\n   * @param name Entry function name\n   * @param doc\n   * @param code\n   * @param ty_args\n   * @param args\n   */\n  constructor(name, doc, code, ty_args, args) {\n    super();\n    this.name = name;\n    this.doc = doc;\n    this.code = code;\n    this.ty_args = ty_args;\n    this.args = args;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    serializer.serializeStr(this.name);\n    serializer.serializeStr(this.doc);\n    serializer.serializeBytes(this.code);\n    serializeVector(this.ty_args, serializer);\n    serializeVector(this.args, serializer);\n  }\n  static load(deserializer) {\n    const name = deserializer.deserializeStr();\n    const doc = deserializer.deserializeStr();\n    const code = deserializer.deserializeBytes();\n    const tyArgs = deserializeVector(deserializer, TypeArgumentABI);\n    const args = deserializeVector(deserializer, ArgumentABI);\n    return new _TransactionScriptABI(name, doc, code, tyArgs, args);\n  }\n};\nvar EntryFunctionABI = class _EntryFunctionABI extends ScriptABI {\n  /**\n   * Constructs a EntryFunctionABI instance\n   * @param name\n   * @param module_name Fully qualified module id\n   * @param doc\n   * @param ty_args\n   * @param args\n   */\n  constructor(name, module_name, doc, ty_args, args) {\n    super();\n    this.name = name;\n    this.module_name = module_name;\n    this.doc = doc;\n    this.ty_args = ty_args;\n    this.args = args;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n    serializer.serializeStr(this.name);\n    this.module_name.serialize(serializer);\n    serializer.serializeStr(this.doc);\n    serializeVector(this.ty_args, serializer);\n    serializeVector(this.args, serializer);\n  }\n  static load(deserializer) {\n    const name = deserializer.deserializeStr();\n    const moduleName = ModuleId.deserialize(deserializer);\n    const doc = deserializer.deserializeStr();\n    const tyArgs = deserializeVector(deserializer, TypeArgumentABI);\n    const args = deserializeVector(deserializer, ArgumentABI);\n    return new _EntryFunctionABI(name, moduleName, doc, tyArgs, args);\n  }\n};\n\n// src/aptos_types/authentication_key.ts\n\nvar _AuthenticationKey = class _AuthenticationKey {\n  constructor(bytes) {\n    if (bytes.length !== _AuthenticationKey.LENGTH) {\n      throw new Error(\"Expected a byte array of length 32\");\n    }\n    this.bytes = bytes;\n  }\n  /**\n   * Converts a K-of-N MultiEd25519PublicKey to AuthenticationKey with:\n   * `auth_key = sha3-256(p_1 | … | p_n | K | 0x01)`. `K` represents the K-of-N required for\n   * authenticating the transaction. `0x01` is the 1-byte scheme for multisig.\n   */\n  static fromMultiEd25519PublicKey(publicKey) {\n    const pubKeyBytes = publicKey.toBytes();\n    const bytes = new Uint8Array(pubKeyBytes.length + 1);\n    bytes.set(pubKeyBytes);\n    bytes.set([_AuthenticationKey.MULTI_ED25519_SCHEME], pubKeyBytes.length);\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_6__.sha3_256.create();\n    hash.update(bytes);\n    return new _AuthenticationKey(hash.digest());\n  }\n  static fromEd25519PublicKey(publicKey) {\n    const pubKeyBytes = publicKey.value;\n    const bytes = new Uint8Array(pubKeyBytes.length + 1);\n    bytes.set(pubKeyBytes);\n    bytes.set([_AuthenticationKey.ED25519_SCHEME], pubKeyBytes.length);\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_6__.sha3_256.create();\n    hash.update(bytes);\n    return new _AuthenticationKey(hash.digest());\n  }\n  /**\n   * Derives an account address from AuthenticationKey. Since current AccountAddress is 32 bytes,\n   * AuthenticationKey bytes are directly translated to AccountAddress.\n   */\n  derivedAddress() {\n    return HexString.fromUint8Array(this.bytes);\n  }\n};\n_AuthenticationKey.LENGTH = 32;\n_AuthenticationKey.MULTI_ED25519_SCHEME = 1;\n_AuthenticationKey.ED25519_SCHEME = 0;\n_AuthenticationKey.DERIVE_RESOURCE_ACCOUNT_SCHEME = 255;\nvar AuthenticationKey = _AuthenticationKey;\n\n// src/aptos_types/rotation_proof_challenge.ts\nvar RotationProofChallenge = class {\n  constructor(accountAddress, moduleName, structName, sequenceNumber, originator, currentAuthKey, newPublicKey) {\n    this.accountAddress = accountAddress;\n    this.moduleName = moduleName;\n    this.structName = structName;\n    this.sequenceNumber = sequenceNumber;\n    this.originator = originator;\n    this.currentAuthKey = currentAuthKey;\n    this.newPublicKey = newPublicKey;\n  }\n  serialize(serializer) {\n    this.accountAddress.serialize(serializer);\n    serializer.serializeStr(this.moduleName);\n    serializer.serializeStr(this.structName);\n    serializer.serializeU64(this.sequenceNumber);\n    this.originator.serialize(serializer);\n    this.currentAuthKey.serialize(serializer);\n    serializer.serializeBytes(this.newPublicKey);\n  }\n};\n\n// src/account/aptos_account.ts\nvar _AptosAccount = class _AptosAccount {\n  static fromAptosAccountObject(obj) {\n    return new _AptosAccount(HexString.ensure(obj.privateKeyHex).toUint8Array(), obj.address);\n  }\n  /**\n   * Check's if the derive path is valid\n   */\n  static isValidPath(path) {\n    return /^m\\/44'\\/637'\\/[0-9]+'\\/[0-9]+'\\/[0-9]+'+$/.test(path);\n  }\n  /**\n   * Creates new account with bip44 path and mnemonics,\n   * @param path. (e.g. m/44'/637'/0'/0'/0')\n   * Detailed description: {@link https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki}\n   * @param mnemonics.\n   * @returns AptosAccount\n   */\n  static fromDerivePath(path, mnemonics) {\n    if (!_AptosAccount.isValidPath(path)) {\n      throw new Error(\"Invalid derivation path\");\n    }\n    const normalizeMnemonics = mnemonics.trim().split(/\\s+/).map((part) => part.toLowerCase()).join(\" \");\n    const { key } = derivePath(path, (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(_scure_bip39__WEBPACK_IMPORTED_MODULE_1__.mnemonicToSeedSync(normalizeMnemonics)));\n    return new _AptosAccount(key);\n  }\n  /**\n   * Creates new account instance. Constructor allows passing in an address,\n   * to handle account key rotation, where auth_key != public_key\n   * @param privateKeyBytes  Private key from which account key pair will be generated.\n   * If not specified, new key pair is going to be created.\n   * @param address Account address (e.g. 0xe8012714cd17606cee7188a2a365eef3fe760be598750678c8c5954eb548a591).\n   * If not specified, a new one will be generated from public key\n   */\n  constructor(privateKeyBytes, address) {\n    if (privateKeyBytes) {\n      this.signingKey = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair.fromSeed(privateKeyBytes.slice(0, 32));\n    } else {\n      this.signingKey = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair();\n    }\n    this.accountAddress = HexString.ensure(address || this.authKey().hex());\n  }\n  /**\n   * This is the key by which Aptos account is referenced.\n   * It is the 32-byte of the SHA-3 256 cryptographic hash\n   * of the public key(s) concatenated with a signature scheme identifier byte\n   * @returns Address associated with the given account\n   */\n  address() {\n    return this.accountAddress;\n  }\n  authKey() {\n    const pubKey = new Ed25519PublicKey(this.signingKey.publicKey);\n    const authKey = AuthenticationKey.fromEd25519PublicKey(pubKey);\n    return authKey.derivedAddress();\n  }\n  /**\n   * Takes source address and seeds and returns the resource account address\n   * @param sourceAddress Address used to derive the resource account\n   * @param seed The seed bytes\n   * @returns The resource account address\n   */\n  static getResourceAccountAddress(sourceAddress, seed) {\n    const source = bcsToBytes(AccountAddress.fromHex(sourceAddress));\n    const bytes = new Uint8Array([...source, ...seed, AuthenticationKey.DERIVE_RESOURCE_ACCOUNT_SCHEME]);\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_6__.sha3_256.create();\n    hash.update(bytes);\n    return HexString.fromUint8Array(hash.digest());\n  }\n  /**\n   * Takes creator address and collection name and returns the collection id hash.\n   * Collection id hash are generated as sha256 hash of (`creator_address::collection_name`)\n   *\n   * @param creatorAddress Collection creator address\n   * @param collectionName The collection name\n   * @returns The collection id hash\n   */\n  static getCollectionID(creatorAddress, collectionName) {\n    const seed = new TextEncoder().encode(`${creatorAddress}::${collectionName}`);\n    const hash = _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_7__.sha256.create();\n    hash.update(seed);\n    return HexString.fromUint8Array(hash.digest());\n  }\n  /**\n   * This key is generated with Ed25519 scheme.\n   * Public key is used to check a signature of transaction, signed by given account\n   * @returns The public key for the associated account\n   */\n  pubKey() {\n    return HexString.fromUint8Array(this.signingKey.publicKey);\n  }\n  /**\n   * Signs specified `buffer` with account's private key\n   * @param buffer A buffer to sign\n   * @returns A signature HexString\n   */\n  signBuffer(buffer) {\n    const signature = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.detached(buffer, this.signingKey.secretKey);\n    return HexString.fromUint8Array(signature);\n  }\n  /**\n   * Signs specified `hexString` with account's private key\n   * @param hexString A regular string or HexString to sign\n   * @returns A signature HexString\n   */\n  signHexString(hexString) {\n    const toSign = HexString.ensure(hexString).toUint8Array();\n    return this.signBuffer(toSign);\n  }\n  /**\n   * Verifies the signature of the message with the public key of the account\n   * @param message a signed message\n   * @param signature the signature of the message\n   */\n  verifySignature(message, signature) {\n    const rawMessage = HexString.ensure(message).toUint8Array();\n    const rawSignature = HexString.ensure(signature).toUint8Array();\n    return tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.detached.verify(rawMessage, rawSignature, this.signingKey.publicKey);\n  }\n  /**\n   * Derives account address, public key and private key\n   * @returns AptosAccountObject instance.\n   * @example An example of the returned AptosAccountObject object\n   * ```\n   * {\n   *    address: \"0xe8012714cd17606cee7188a2a365eef3fe760be598750678c8c5954eb548a591\",\n   *    publicKeyHex: \"0xf56d8524faf79fbc0f48c13aeed3b0ce5dd376b4db93b8130a107c0a5e04ba04\",\n   *    privateKeyHex: `0x009c9f7c992a06cfafe916f125d8adb7a395fca243e264a8e56a4b3e6accf940\n   *      d2b11e9ece3049ce60e3c7b4a1c58aebfa9298e29a30a58a67f1998646135204`\n   * }\n   * ```\n   */\n  toPrivateKeyObject() {\n    return {\n      address: this.address().hex(),\n      publicKeyHex: this.pubKey().hex(),\n      privateKeyHex: HexString.fromUint8Array(this.signingKey.secretKey.slice(0, 32)).hex()\n    };\n  }\n};\n__decorateClass([\n  Memoize()\n], _AptosAccount.prototype, \"authKey\", 1);\nvar AptosAccount = _AptosAccount;\nfunction getAddressFromAccountOrAddress(accountOrAddress) {\n  return accountOrAddress instanceof AptosAccount ? accountOrAddress.address() : HexString.ensure(accountOrAddress);\n}\n\n// src/indexer/generated/queries.ts\nvar CurrentTokenOwnershipFieldsFragmentDoc = `\n    fragment CurrentTokenOwnershipFields on current_token_ownerships_v2 {\n  token_standard\n  token_properties_mutated_v1\n  token_data_id\n  table_type_v1\n  storage_id\n  property_version_v1\n  owner_address\n  last_transaction_version\n  last_transaction_timestamp\n  is_soulbound_v2\n  is_fungible_v2\n  amount\n  current_token_data {\n    collection_id\n    description\n    is_fungible_v2\n    largest_property_version_v1\n    last_transaction_timestamp\n    last_transaction_version\n    maximum\n    supply\n    token_data_id\n    token_name\n    token_properties\n    token_standard\n    token_uri\n    current_collection {\n      collection_id\n      collection_name\n      creator_address\n      current_supply\n      description\n      last_transaction_timestamp\n      last_transaction_version\n      max_supply\n      mutable_description\n      mutable_uri\n      table_handle_v1\n      token_standard\n      total_minted_v2\n      uri\n    }\n  }\n}\n    `;\nvar TokenDataFieldsFragmentDoc = `\n    fragment TokenDataFields on current_token_datas {\n  creator_address\n  collection_name\n  description\n  metadata_uri\n  name\n  token_data_id_hash\n  collection_data_id_hash\n}\n    `;\nvar CollectionDataFieldsFragmentDoc = `\n    fragment CollectionDataFields on current_collection_datas {\n  metadata_uri\n  supply\n  description\n  collection_name\n  collection_data_id_hash\n  table_handle\n  creator_address\n}\n    `;\nvar TokenActivitiesFieldsFragmentDoc = `\n    fragment TokenActivitiesFields on token_activities_v2 {\n  after_value\n  before_value\n  entry_function_id_str\n  event_account_address\n  event_index\n  from_address\n  is_fungible_v2\n  property_version_v1\n  to_address\n  token_amount\n  token_data_id\n  token_standard\n  transaction_timestamp\n  transaction_version\n  type\n}\n    `;\nvar GetAccountCoinsDataCount = `\n    query getAccountCoinsDataCount($address: String) {\n  current_fungible_asset_balances_aggregate(\n    where: {owner_address: {_eq: $address}}\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nvar GetAccountCoinsData = `\n    query getAccountCoinsData($where_condition: current_fungible_asset_balances_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_fungible_asset_balances_order_by!]) {\n  current_fungible_asset_balances(\n    where: $where_condition\n    offset: $offset\n    limit: $limit\n    order_by: $order_by\n  ) {\n    amount\n    asset_type\n    is_frozen\n    is_primary\n    last_transaction_timestamp\n    last_transaction_version\n    owner_address\n    storage_id\n    token_standard\n    metadata {\n      token_standard\n      symbol\n      supply_aggregator_table_key_v1\n      supply_aggregator_table_handle_v1\n      project_uri\n      name\n      last_transaction_version\n      last_transaction_timestamp\n      icon_uri\n      decimals\n      creator_address\n      asset_type\n    }\n  }\n}\n    `;\nvar GetAccountCurrentTokens = `\n    query getAccountCurrentTokens($address: String!, $offset: Int, $limit: Int) {\n  current_token_ownerships(\n    where: {owner_address: {_eq: $address}, amount: {_gt: 0}}\n    order_by: [{last_transaction_version: desc}, {creator_address: asc}, {collection_name: asc}, {name: asc}]\n    offset: $offset\n    limit: $limit\n  ) {\n    amount\n    current_token_data {\n      ...TokenDataFields\n    }\n    current_collection_data {\n      ...CollectionDataFields\n    }\n    last_transaction_version\n    property_version\n  }\n}\n    ${TokenDataFieldsFragmentDoc}\n${CollectionDataFieldsFragmentDoc}`;\nvar GetAccountTokensCount = `\n    query getAccountTokensCount($where_condition: current_token_ownerships_v2_bool_exp, $offset: Int, $limit: Int) {\n  current_token_ownerships_v2_aggregate(\n    where: $where_condition\n    offset: $offset\n    limit: $limit\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nvar GetAccountTransactionsCount = `\n    query getAccountTransactionsCount($address: String) {\n  account_transactions_aggregate(where: {account_address: {_eq: $address}}) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nvar GetAccountTransactionsData = `\n    query getAccountTransactionsData($where_condition: account_transactions_bool_exp!, $offset: Int, $limit: Int, $order_by: [account_transactions_order_by!]) {\n  account_transactions(\n    where: $where_condition\n    order_by: $order_by\n    limit: $limit\n    offset: $offset\n  ) {\n    token_activities_v2 {\n      ...TokenActivitiesFields\n    }\n    transaction_version\n    account_address\n  }\n}\n    ${TokenActivitiesFieldsFragmentDoc}`;\nvar GetCollectionData = `\n    query getCollectionData($where_condition: current_collections_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_collections_v2_order_by!]) {\n  current_collections_v2(\n    where: $where_condition\n    offset: $offset\n    limit: $limit\n    order_by: $order_by\n  ) {\n    collection_id\n    collection_name\n    creator_address\n    current_supply\n    description\n    last_transaction_timestamp\n    last_transaction_version\n    max_supply\n    mutable_description\n    mutable_uri\n    table_handle_v1\n    token_standard\n    total_minted_v2\n    uri\n  }\n}\n    `;\nvar GetCollectionsWithOwnedTokens = `\n    query getCollectionsWithOwnedTokens($where_condition: current_collection_ownership_v2_view_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_collection_ownership_v2_view_order_by!]) {\n  current_collection_ownership_v2_view(\n    where: $where_condition\n    offset: $offset\n    limit: $limit\n    order_by: $order_by\n  ) {\n    current_collection {\n      collection_id\n      collection_name\n      creator_address\n      current_supply\n      description\n      last_transaction_timestamp\n      last_transaction_version\n      mutable_description\n      max_supply\n      mutable_uri\n      table_handle_v1\n      token_standard\n      total_minted_v2\n      uri\n    }\n    collection_id\n    collection_name\n    collection_uri\n    creator_address\n    distinct_tokens\n    last_transaction_version\n    owner_address\n    single_token_uri\n  }\n}\n    `;\nvar GetCurrentObjects = `\n    query getCurrentObjects($where_condition: current_objects_bool_exp, $offset: Int, $limit: Int, $order_by: [current_objects_order_by!]) {\n  current_objects(\n    where: $where_condition\n    offset: $offset\n    limit: $limit\n    order_by: $order_by\n  ) {\n    allow_ungated_transfer\n    state_key_hash\n    owner_address\n    object_address\n    last_transaction_version\n    last_guid_creation_num\n    is_deleted\n  }\n}\n    `;\nvar GetDelegatedStakingActivities = `\n    query getDelegatedStakingActivities($delegatorAddress: String, $poolAddress: String) {\n  delegated_staking_activities(\n    where: {delegator_address: {_eq: $delegatorAddress}, pool_address: {_eq: $poolAddress}}\n  ) {\n    amount\n    delegator_address\n    event_index\n    event_type\n    pool_address\n    transaction_version\n  }\n}\n    `;\nvar GetIndexerLedgerInfo = `\n    query getIndexerLedgerInfo {\n  ledger_infos {\n    chain_id\n  }\n}\n    `;\nvar GetNumberOfDelegators = `\n    query getNumberOfDelegators($poolAddress: String) {\n  num_active_delegator_per_pool(\n    where: {pool_address: {_eq: $poolAddress}, num_active_delegator: {_gt: \"0\"}}\n    distinct_on: pool_address\n  ) {\n    num_active_delegator\n    pool_address\n  }\n}\n    `;\nvar GetOwnedTokens = `\n    query getOwnedTokens($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {\n  current_token_ownerships_v2(\n    where: $where_condition\n    offset: $offset\n    limit: $limit\n    order_by: $order_by\n  ) {\n    ...CurrentTokenOwnershipFields\n  }\n}\n    ${CurrentTokenOwnershipFieldsFragmentDoc}`;\nvar GetOwnedTokensByTokenData = `\n    query getOwnedTokensByTokenData($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {\n  current_token_ownerships_v2(\n    where: $where_condition\n    offset: $offset\n    limit: $limit\n    order_by: $order_by\n  ) {\n    ...CurrentTokenOwnershipFields\n  }\n}\n    ${CurrentTokenOwnershipFieldsFragmentDoc}`;\nvar GetTokenActivities = `\n    query getTokenActivities($where_condition: token_activities_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [token_activities_v2_order_by!]) {\n  token_activities_v2(\n    where: $where_condition\n    order_by: $order_by\n    offset: $offset\n    limit: $limit\n  ) {\n    ...TokenActivitiesFields\n  }\n}\n    ${TokenActivitiesFieldsFragmentDoc}`;\nvar GetTokenActivitiesCount = `\n    query getTokenActivitiesCount($token_id: String) {\n  token_activities_v2_aggregate(where: {token_data_id: {_eq: $token_id}}) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nvar GetTokenCurrentOwnerData = `\n    query getTokenCurrentOwnerData($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {\n  current_token_ownerships_v2(\n    where: $where_condition\n    offset: $offset\n    limit: $limit\n    order_by: $order_by\n  ) {\n    ...CurrentTokenOwnershipFields\n  }\n}\n    ${CurrentTokenOwnershipFieldsFragmentDoc}`;\nvar GetTokenData = `\n    query getTokenData($where_condition: current_token_datas_v2_bool_exp, $offset: Int, $limit: Int, $order_by: [current_token_datas_v2_order_by!]) {\n  current_token_datas_v2(\n    where: $where_condition\n    offset: $offset\n    limit: $limit\n    order_by: $order_by\n  ) {\n    collection_id\n    description\n    is_fungible_v2\n    largest_property_version_v1\n    last_transaction_timestamp\n    last_transaction_version\n    maximum\n    supply\n    token_data_id\n    token_name\n    token_properties\n    token_standard\n    token_uri\n    current_collection {\n      collection_id\n      collection_name\n      creator_address\n      current_supply\n      description\n      last_transaction_timestamp\n      last_transaction_version\n      max_supply\n      mutable_description\n      mutable_uri\n      table_handle_v1\n      token_standard\n      total_minted_v2\n      uri\n    }\n  }\n}\n    `;\nvar GetTokenOwnedFromCollection = `\n    query getTokenOwnedFromCollection($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {\n  current_token_ownerships_v2(\n    where: $where_condition\n    offset: $offset\n    limit: $limit\n    order_by: $order_by\n  ) {\n    ...CurrentTokenOwnershipFields\n  }\n}\n    ${CurrentTokenOwnershipFieldsFragmentDoc}`;\nvar GetTokenOwnersData = `\n    query getTokenOwnersData($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {\n  current_token_ownerships_v2(\n    where: $where_condition\n    offset: $offset\n    limit: $limit\n    order_by: $order_by\n  ) {\n    ...CurrentTokenOwnershipFields\n  }\n}\n    ${CurrentTokenOwnershipFieldsFragmentDoc}`;\nvar GetTopUserTransactions = `\n    query getTopUserTransactions($limit: Int) {\n  user_transactions(limit: $limit, order_by: {version: desc}) {\n    version\n  }\n}\n    `;\nvar GetUserTransactions = `\n    query getUserTransactions($where_condition: user_transactions_bool_exp!, $offset: Int, $limit: Int, $order_by: [user_transactions_order_by!]) {\n  user_transactions(\n    order_by: $order_by\n    where: $where_condition\n    limit: $limit\n    offset: $offset\n  ) {\n    version\n  }\n}\n    `;\n\n// src/transaction_builder/builder.ts\n\n\n// src/transaction_builder/builder_utils.ts\nfunction assertType(val, types, message) {\n  if (!(types == null ? void 0 : types.includes(typeof val))) {\n    throw new Error(\n      message || `Invalid arg: ${val} type should be ${types instanceof Array ? types.join(\" or \") : types}`\n    );\n  }\n}\nfunction ensureBoolean(val) {\n  assertType(val, [\"boolean\", \"string\"]);\n  if (typeof val === \"boolean\") {\n    return val;\n  }\n  if (val === \"true\") {\n    return true;\n  }\n  if (val === \"false\") {\n    return false;\n  }\n  throw new Error(\"Invalid boolean string.\");\n}\nfunction ensureNumber(val) {\n  assertType(val, [\"number\", \"string\"]);\n  if (typeof val === \"number\") {\n    return val;\n  }\n  const res = Number.parseInt(val, 10);\n  if (Number.isNaN(res)) {\n    throw new Error(\"Invalid number string.\");\n  }\n  return res;\n}\nfunction ensureBigInt(val) {\n  assertType(val, [\"number\", \"bigint\", \"string\"]);\n  return BigInt(val);\n}\nfunction serializeArg(argVal, argType, serializer) {\n  serializeArgInner(argVal, argType, serializer, 0);\n}\nfunction serializeArgInner(argVal, argType, serializer, depth) {\n  if (argType instanceof TypeTagBool) {\n    serializer.serializeBool(ensureBoolean(argVal));\n  } else if (argType instanceof TypeTagU8) {\n    serializer.serializeU8(ensureNumber(argVal));\n  } else if (argType instanceof TypeTagU16) {\n    serializer.serializeU16(ensureNumber(argVal));\n  } else if (argType instanceof TypeTagU32) {\n    serializer.serializeU32(ensureNumber(argVal));\n  } else if (argType instanceof TypeTagU64) {\n    serializer.serializeU64(ensureBigInt(argVal));\n  } else if (argType instanceof TypeTagU128) {\n    serializer.serializeU128(ensureBigInt(argVal));\n  } else if (argType instanceof TypeTagU256) {\n    serializer.serializeU256(ensureBigInt(argVal));\n  } else if (argType instanceof TypeTagAddress) {\n    serializeAddress(argVal, serializer);\n  } else if (argType instanceof TypeTagVector) {\n    serializeVector2(argVal, argType, serializer, depth);\n  } else if (argType instanceof TypeTagStruct) {\n    serializeStruct(argVal, argType, serializer, depth);\n  } else {\n    throw new Error(\"Unsupported arg type.\");\n  }\n}\nfunction serializeAddress(argVal, serializer) {\n  let addr;\n  if (typeof argVal === \"string\" || argVal instanceof HexString) {\n    addr = AccountAddress.fromHex(argVal);\n  } else if (argVal instanceof AccountAddress) {\n    addr = argVal;\n  } else {\n    throw new Error(\"Invalid account address.\");\n  }\n  addr.serialize(serializer);\n}\nfunction serializeVector2(argVal, argType, serializer, depth) {\n  if (argType.value instanceof TypeTagU8) {\n    if (argVal instanceof Uint8Array) {\n      serializer.serializeBytes(argVal);\n      return;\n    }\n    if (argVal instanceof HexString) {\n      serializer.serializeBytes(argVal.toUint8Array());\n      return;\n    }\n    if (typeof argVal === \"string\") {\n      serializer.serializeStr(argVal);\n      return;\n    }\n  }\n  if (!Array.isArray(argVal)) {\n    throw new Error(\"Invalid vector args.\");\n  }\n  serializer.serializeU32AsUleb128(argVal.length);\n  argVal.forEach((arg) => serializeArgInner(arg, argType.value, serializer, depth + 1));\n}\nfunction serializeStruct(argVal, argType, serializer, depth) {\n  const { address, module_name: moduleName, name, type_args: typeArgs } = argType.value;\n  const structType = `${HexString.fromUint8Array(address.address).toShortString()}::${moduleName.value}::${name.value}`;\n  if (structType === \"0x1::string::String\") {\n    assertType(argVal, [\"string\"]);\n    serializer.serializeStr(argVal);\n  } else if (structType === \"0x1::object::Object\") {\n    serializeAddress(argVal, serializer);\n  } else if (structType === \"0x1::option::Option\") {\n    if (typeArgs.length !== 1) {\n      throw new Error(`Option has the wrong number of type arguments ${typeArgs.length}`);\n    }\n    serializeOption(argVal, typeArgs[0], serializer, depth);\n  } else {\n    throw new Error(\"Unsupported struct type in function argument\");\n  }\n}\nfunction serializeOption(argVal, argType, serializer, depth) {\n  if (argVal === void 0 || argVal === null) {\n    serializer.serializeU32AsUleb128(0);\n  } else {\n    serializer.serializeU32AsUleb128(1);\n    serializeArgInner(argVal, argType, serializer, depth + 1);\n  }\n}\nfunction argToTransactionArgument(argVal, argType) {\n  if (argType instanceof TypeTagBool) {\n    return new TransactionArgumentBool(ensureBoolean(argVal));\n  }\n  if (argType instanceof TypeTagU8) {\n    return new TransactionArgumentU8(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU16) {\n    return new TransactionArgumentU16(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU32) {\n    return new TransactionArgumentU32(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU64) {\n    return new TransactionArgumentU64(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagU128) {\n    return new TransactionArgumentU128(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagU256) {\n    return new TransactionArgumentU256(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagAddress) {\n    let addr;\n    if (typeof argVal === \"string\" || argVal instanceof HexString) {\n      addr = AccountAddress.fromHex(argVal);\n    } else if (argVal instanceof AccountAddress) {\n      addr = argVal;\n    } else {\n      throw new Error(\"Invalid account address.\");\n    }\n    return new TransactionArgumentAddress(addr);\n  }\n  if (argType instanceof TypeTagVector && argType.value instanceof TypeTagU8) {\n    if (!(argVal instanceof Uint8Array)) {\n      throw new Error(`${argVal} should be an instance of Uint8Array`);\n    }\n    return new TransactionArgumentU8Vector(argVal);\n  }\n  throw new Error(\"Unknown type for TransactionArgument.\");\n}\n\n// src/transaction_builder/builder.ts\nvar RAW_TRANSACTION_SALT = \"APTOS::RawTransaction\";\nvar RAW_TRANSACTION_WITH_DATA_SALT = \"APTOS::RawTransactionWithData\";\nvar TransactionBuilder = class {\n  constructor(signingFunction, rawTxnBuilder) {\n    this.rawTxnBuilder = rawTxnBuilder;\n    this.signingFunction = signingFunction;\n  }\n  /**\n   * Builds a RawTransaction. Relays the call to TransactionBuilderABI.build\n   * @param func\n   * @param ty_tags\n   * @param args\n   */\n  build(func, ty_tags, args) {\n    if (!this.rawTxnBuilder) {\n      throw new Error(\"this.rawTxnBuilder doesn't exist.\");\n    }\n    return this.rawTxnBuilder.build(func, ty_tags, args);\n  }\n  /** Generates a Signing Message out of a raw transaction. */\n  static getSigningMessage(rawTxn) {\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_6__.sha3_256.create();\n    if (rawTxn instanceof RawTransaction) {\n      hash.update(RAW_TRANSACTION_SALT);\n    } else if (rawTxn instanceof MultiAgentRawTransaction) {\n      hash.update(RAW_TRANSACTION_WITH_DATA_SALT);\n    } else if (rawTxn instanceof FeePayerRawTransaction) {\n      hash.update(RAW_TRANSACTION_WITH_DATA_SALT);\n    } else {\n      throw new Error(\"Unknown transaction type.\");\n    }\n    const prefix = hash.digest();\n    const body = bcsToBytes(rawTxn);\n    const mergedArray = new Uint8Array(prefix.length + body.length);\n    mergedArray.set(prefix);\n    mergedArray.set(body, prefix.length);\n    return mergedArray;\n  }\n};\nvar TransactionBuilderEd25519 = class extends TransactionBuilder {\n  constructor(signingFunction, publicKey, rawTxnBuilder) {\n    super(signingFunction, rawTxnBuilder);\n    this.publicKey = publicKey;\n  }\n  rawToSigned(rawTxn) {\n    const signingMessage = TransactionBuilder.getSigningMessage(rawTxn);\n    const signature = this.signingFunction(signingMessage);\n    const authenticator = new TransactionAuthenticatorEd25519(\n      new Ed25519PublicKey(this.publicKey),\n      signature\n    );\n    return new SignedTransaction(rawTxn, authenticator);\n  }\n  /** Signs a raw transaction and returns a bcs serialized transaction. */\n  sign(rawTxn) {\n    return bcsToBytes(this.rawToSigned(rawTxn));\n  }\n};\nvar TransactionBuilderMultiEd25519 = class extends TransactionBuilder {\n  constructor(signingFunction, publicKey) {\n    super(signingFunction);\n    this.publicKey = publicKey;\n  }\n  rawToSigned(rawTxn) {\n    const signingMessage = TransactionBuilder.getSigningMessage(rawTxn);\n    const signature = this.signingFunction(signingMessage);\n    const authenticator = new TransactionAuthenticatorMultiEd25519(this.publicKey, signature);\n    return new SignedTransaction(rawTxn, authenticator);\n  }\n  /** Signs a raw transaction and returns a bcs serialized transaction. */\n  sign(rawTxn) {\n    return bcsToBytes(this.rawToSigned(rawTxn));\n  }\n};\nvar TransactionBuilderABI = class _TransactionBuilderABI {\n  /**\n   * Constructs a TransactionBuilderABI instance\n   * @param abis List of binary ABIs.\n   * @param builderConfig Configs for creating a raw transaction.\n   */\n  constructor(abis, builderConfig) {\n    this.abiMap = /* @__PURE__ */ new Map();\n    abis.forEach((abi) => {\n      const deserializer = new Deserializer(abi);\n      const scriptABI = ScriptABI.deserialize(deserializer);\n      let k;\n      if (scriptABI instanceof EntryFunctionABI) {\n        const funcABI = scriptABI;\n        const { address: addr, name: moduleName } = funcABI.module_name;\n        k = `${HexString.fromUint8Array(addr.address).toShortString()}::${moduleName.value}::${funcABI.name}`;\n      } else {\n        const funcABI = scriptABI;\n        k = funcABI.name;\n      }\n      if (this.abiMap.has(k)) {\n        throw new Error(\"Found conflicting ABI interfaces\");\n      }\n      this.abiMap.set(k, scriptABI);\n    });\n    this.builderConfig = {\n      maxGasAmount: BigInt(DEFAULT_MAX_GAS_AMOUNT),\n      expSecFromNow: DEFAULT_TXN_EXP_SEC_FROM_NOW,\n      ...builderConfig\n    };\n  }\n  static toBCSArgs(abiArgs, args) {\n    if (abiArgs.length !== args.length) {\n      throw new Error(\"Wrong number of args provided.\");\n    }\n    return args.map((arg, i) => {\n      const serializer = new Serializer();\n      serializeArg(arg, abiArgs[i].type_tag, serializer);\n      return serializer.getBytes();\n    });\n  }\n  static toTransactionArguments(abiArgs, args) {\n    if (abiArgs.length !== args.length) {\n      throw new Error(\"Wrong number of args provided.\");\n    }\n    return args.map((arg, i) => argToTransactionArgument(arg, abiArgs[i].type_tag));\n  }\n  setSequenceNumber(seqNumber) {\n    this.builderConfig.sequenceNumber = BigInt(seqNumber);\n  }\n  /**\n   * Builds a TransactionPayload. For dApps, chain ID and account sequence numbers are only known to the wallet.\n   * Instead of building a RawTransaction (requires chainID and sequenceNumber), dApps can build a TransactionPayload\n   * and pass the payload to the wallet for signing and sending.\n   * @param func Fully qualified func names, e.g. 0x1::aptos_account::transfer\n   * @param ty_tags TypeTag strings\n   * @param args Function arguments\n   * @returns TransactionPayload\n   */\n  buildTransactionPayload(func, ty_tags, args) {\n    const typeTags = ty_tags.map((ty_arg) => new TypeTagParser(ty_arg).parseTypeTag());\n    let payload;\n    if (!this.abiMap.has(func)) {\n      throw new Error(`Cannot find function: ${func}`);\n    }\n    const scriptABI = this.abiMap.get(func);\n    if (scriptABI instanceof EntryFunctionABI) {\n      const funcABI = scriptABI;\n      const bcsArgs = _TransactionBuilderABI.toBCSArgs(funcABI.args, args);\n      payload = new TransactionPayloadEntryFunction(\n        new EntryFunction(funcABI.module_name, new Identifier(funcABI.name), typeTags, bcsArgs)\n      );\n    } else if (scriptABI instanceof TransactionScriptABI) {\n      const funcABI = scriptABI;\n      const scriptArgs = _TransactionBuilderABI.toTransactionArguments(funcABI.args, args);\n      payload = new TransactionPayloadScript(new Script(funcABI.code, typeTags, scriptArgs));\n    } else {\n      throw new Error(\"Unknown ABI format.\");\n    }\n    return payload;\n  }\n  /**\n   * Builds a RawTransaction\n   * @param func Fully qualified func names, e.g. 0x1::aptos_account::transfer\n   * @param ty_tags TypeTag strings.\n   * @example Below are valid value examples\n   * ```\n   * // Structs are in format `AccountAddress::ModuleName::StructName`\n   * 0x1::aptos_coin::AptosCoin\n   * // Vectors are in format `vector<other_tag_string>`\n   * vector<0x1::aptos_coin::AptosCoin>\n   * bool\n   * u8\n   * u16\n   * u32\n   * u64\n   * u128\n   * u256\n   * address\n   * ```\n   * @param args Function arguments\n   * @returns RawTransaction\n   */\n  build(func, ty_tags, args) {\n    const { sender, sequenceNumber, gasUnitPrice, maxGasAmount, expSecFromNow, chainId } = this.builderConfig;\n    if (!gasUnitPrice) {\n      throw new Error(\"No gasUnitPrice provided.\");\n    }\n    const senderAccount = sender instanceof AccountAddress ? sender : AccountAddress.fromHex(sender);\n    const expTimestampSec = BigInt(Math.floor(Date.now() / 1e3) + Number(expSecFromNow));\n    const payload = this.buildTransactionPayload(func, ty_tags, args);\n    if (payload) {\n      return new RawTransaction(\n        senderAccount,\n        BigInt(sequenceNumber),\n        payload,\n        BigInt(maxGasAmount),\n        BigInt(gasUnitPrice),\n        expTimestampSec,\n        new ChainId(Number(chainId))\n      );\n    }\n    throw new Error(\"Invalid ABI.\");\n  }\n};\nvar TransactionBuilderRemoteABI = class {\n  // We don't want the builder to depend on the actual AptosClient. There might be circular dependencies.\n  constructor(aptosClient2, builderConfig) {\n    this.aptosClient = aptosClient2;\n    this.builderConfig = builderConfig;\n  }\n  async fetchABI(addr) {\n    const modules = await this.aptosClient.getAccountModules(addr);\n    const abis = modules.map((module) => module.abi).flatMap(\n      (abi) => abi.exposed_functions.filter((ef) => ef.is_entry).map(\n        (ef) => ({\n          fullName: `${abi.address}::${abi.name}::${ef.name}`,\n          ...ef\n        })\n      )\n    );\n    const abiMap = /* @__PURE__ */ new Map();\n    abis.forEach((abi) => {\n      abiMap.set(abi.fullName, abi);\n    });\n    return abiMap;\n  }\n  /**\n   * Builds a raw transaction. Only support script function a.k.a entry function payloads\n   *\n   * @param func fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coin::transfer\n   * @param ty_tags\n   * @param args\n   * @returns RawTransaction\n   */\n  async build(func, ty_tags, args) {\n    const normlize = (s) => s.replace(/^0[xX]0*/g, \"0x\");\n    func = normlize(func);\n    const funcNameParts = func.split(\"::\");\n    if (funcNameParts.length !== 3) {\n      throw new Error(\n        // eslint-disable-next-line max-len\n        \"'func' needs to be a fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coin::transfer\"\n      );\n    }\n    const [addr, module] = func.split(\"::\");\n    const abiMap = await this.fetchABI(addr);\n    if (!abiMap.has(func)) {\n      throw new Error(`${func} doesn't exist.`);\n    }\n    const funcAbi = abiMap.get(func);\n    const abiArgs = funcAbi.params.filter((param) => param !== \"signer\" && param !== \"&signer\");\n    const typeArgABIs = abiArgs.map(\n      (abiArg, i) => new ArgumentABI(`var${i}`, new TypeTagParser(abiArg, ty_tags).parseTypeTag())\n    );\n    const entryFunctionABI = new EntryFunctionABI(\n      funcAbi.name,\n      ModuleId.fromStr(`${addr}::${module}`),\n      \"\",\n      // Doc string\n      funcAbi.generic_type_params.map((_, i) => new TypeArgumentABI(`${i}`)),\n      typeArgABIs\n    );\n    const { sender, ...rest } = this.builderConfig;\n    const senderAddress = sender instanceof AccountAddress ? HexString.fromUint8Array(sender.address) : sender;\n    const [{ sequence_number: sequenceNumber }, chainId, { gas_estimate: gasUnitPrice }] = await Promise.all([\n      (rest == null ? void 0 : rest.sequenceNumber) ? Promise.resolve({ sequence_number: rest == null ? void 0 : rest.sequenceNumber }) : this.aptosClient.getAccount(senderAddress),\n      (rest == null ? void 0 : rest.chainId) ? Promise.resolve(rest == null ? void 0 : rest.chainId) : this.aptosClient.getChainId(),\n      (rest == null ? void 0 : rest.gasUnitPrice) ? Promise.resolve({ gas_estimate: rest == null ? void 0 : rest.gasUnitPrice }) : this.aptosClient.estimateGasPrice()\n    ]);\n    const builderABI = new TransactionBuilderABI([bcsToBytes(entryFunctionABI)], {\n      sender,\n      sequenceNumber,\n      chainId,\n      gasUnitPrice: BigInt(gasUnitPrice),\n      ...rest\n    });\n    return builderABI.build(func, ty_tags, args);\n  }\n};\n__decorateClass([\n  MemoizeExpiring(10 * 60 * 1e3)\n], TransactionBuilderRemoteABI.prototype, \"fetchABI\", 1);\n\n// src/providers/aptos_client.ts\nvar _AptosClient = class _AptosClient {\n  /**\n   * Build a client configured to connect to an Aptos node at the given URL.\n   *\n   * Note: If you forget to append `/v1` to the URL, the client constructor\n   * will automatically append it. If you don't want this URL processing to\n   * take place, set doNotFixNodeUrl to true.\n   *\n   * @param nodeUrl URL of the Aptos Node API endpoint.\n   * @param config Additional configuration options for the generated Axios client.\n   */\n  constructor(nodeUrl, config, doNotFixNodeUrl = false) {\n    if (!nodeUrl) {\n      throw new Error(\"Node URL cannot be empty.\");\n    }\n    if (doNotFixNodeUrl) {\n      this.nodeUrl = nodeUrl;\n    } else {\n      this.nodeUrl = fixNodeUrl(nodeUrl);\n    }\n    this.config = config === void 0 || config === null ? {} : { ...config };\n  }\n  async getAccount(accountAddress) {\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: `accounts/${HexString.ensure(accountAddress).hex()}`,\n      originMethod: \"getAccount\",\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async getAccountTransactions(accountAddress, query) {\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: `accounts/${HexString.ensure(accountAddress).hex()}/transactions`,\n      originMethod: \"getAccountTransactions\",\n      params: { start: query == null ? void 0 : query.start, limit: query == null ? void 0 : query.limit },\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async getAccountModules(accountAddress, query) {\n    const out = await paginateWithCursor({\n      url: this.nodeUrl,\n      endpoint: `accounts/${accountAddress}/modules`,\n      params: { ledger_version: query == null ? void 0 : query.ledgerVersion, limit: 1e3 },\n      originMethod: \"getAccountModules\",\n      overrides: { ...this.config }\n    });\n    return out;\n  }\n  async getAccountModule(accountAddress, moduleName, query) {\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: `accounts/${HexString.ensure(accountAddress).hex()}/module/${moduleName}`,\n      originMethod: \"getAccountModule\",\n      params: { ledger_version: query == null ? void 0 : query.ledgerVersion },\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async getAccountResources(accountAddress, query) {\n    const out = await paginateWithCursor({\n      url: this.nodeUrl,\n      endpoint: `accounts/${accountAddress}/resources`,\n      params: { ledger_version: query == null ? void 0 : query.ledgerVersion, limit: 9999 },\n      originMethod: \"getAccountResources\",\n      overrides: { ...this.config }\n    });\n    return out;\n  }\n  async getAccountResource(accountAddress, resourceType, query) {\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: `accounts/${HexString.ensure(accountAddress).hex()}/resource/${resourceType}`,\n      originMethod: \"getAccountResource\",\n      params: { ledger_version: query == null ? void 0 : query.ledgerVersion },\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  /** Generates a signed transaction that can be submitted to the chain for execution. */\n  static generateBCSTransaction(accountFrom, rawTxn) {\n    const txnBuilder = new TransactionBuilderEd25519((signingMessage) => {\n      const sigHexStr = accountFrom.signBuffer(signingMessage);\n      return new aptos_types_exports.Ed25519Signature(sigHexStr.toUint8Array());\n    }, accountFrom.pubKey().toUint8Array());\n    return txnBuilder.sign(rawTxn);\n  }\n  /**\n   * Note: Unless you have a specific reason for using this, it'll probably be simpler\n   * to use `simulateTransaction`.\n   *\n   * Generates a BCS transaction that can be submitted to the chain for simulation.\n   *\n   * @param accountFrom The account that will be used to send the transaction\n   * for simulation.\n   * @param rawTxn The raw transaction to be simulated, likely created by calling\n   * the `generateTransaction` function.\n   * @returns The BCS encoded signed transaction, which you should then pass into\n   * the `submitBCSSimulation` function.\n   */\n  static generateBCSSimulation(accountFrom, rawTxn) {\n    const txnBuilder = new TransactionBuilderEd25519((_signingMessage) => {\n      const invalidSigBytes = new Uint8Array(64);\n      return new aptos_types_exports.Ed25519Signature(invalidSigBytes);\n    }, accountFrom.pubKey().toUint8Array());\n    return txnBuilder.sign(rawTxn);\n  }\n  /** Generates an entry function transaction request that can be submitted to produce a raw transaction that\n   * can be signed, which upon being signed can be submitted to the blockchain\n   * This function fetches the remote ABI and uses it to serialized the data, therefore\n   * users don't need to handle serialization by themselves.\n   * @param sender Hex-encoded 32 byte Aptos account address of transaction sender\n   * @param payload Entry function transaction payload type\n   * @param options Options allow to overwrite default transaction options.\n   * @returns A raw transaction object\n   */\n  async generateTransaction(sender, payload, options) {\n    const config = { sender };\n    if (options == null ? void 0 : options.sequence_number) {\n      config.sequenceNumber = options.sequence_number;\n    }\n    if (options == null ? void 0 : options.gas_unit_price) {\n      config.gasUnitPrice = options.gas_unit_price;\n    }\n    if (options == null ? void 0 : options.max_gas_amount) {\n      config.maxGasAmount = options.max_gas_amount;\n    }\n    if (options == null ? void 0 : options.expiration_timestamp_secs) {\n      const timestamp = Number.parseInt(options.expiration_timestamp_secs, 10);\n      config.expSecFromNow = timestamp - Math.floor(Date.now() / 1e3);\n    }\n    const builder = new TransactionBuilderRemoteABI(this, config);\n    return builder.build(payload.function, payload.type_arguments, payload.arguments);\n  }\n  /**\n   * Generates a fee payer transaction that can be signed and submitted to chain\n   *\n   * @param sender the sender's account address\n   * @param payload the transaction payload\n   * @param fee_payer the fee payer account\n   * @param secondarySignerAccounts an optional array of the secondary signers accounts\n   * @returns a fee payer raw transaction that can be signed and submitted to chain\n   */\n  async generateFeePayerTransaction(sender, payload, feePayer, secondarySignerAccounts = [], options) {\n    const rawTxn = await this.generateTransaction(sender, payload, options);\n    const signers = secondarySignerAccounts.map((signer) => AccountAddress.fromHex(signer));\n    const feePayerTxn = new aptos_types_exports.FeePayerRawTransaction(rawTxn, signers, AccountAddress.fromHex(feePayer));\n    return feePayerTxn;\n  }\n  /**\n   * Submits fee payer transaction to chain\n   *\n   * @param feePayerTransaction the raw transaction to be submitted, of type FeePayerRawTransaction\n   * @param senderAuthenticator the sender account authenticator (can get from signMultiTransaction() method)\n   * @param feePayerAuthenticator the feepayer account authenticator (can get from signMultiTransaction() method)\n   * @param signersAuthenticators an optional array of the signer account authenticators\n   * @returns The pending transaction\n   */\n  async submitFeePayerTransaction(feePayerTransaction, senderAuthenticator, feePayerAuthenticator, additionalSignersAuthenticators = []) {\n    const txAuthenticatorFeePayer = new aptos_types_exports.TransactionAuthenticatorFeePayer(\n      senderAuthenticator,\n      feePayerTransaction.secondary_signer_addresses,\n      additionalSignersAuthenticators,\n      { address: feePayerTransaction.fee_payer_address, authenticator: feePayerAuthenticator }\n    );\n    const bcsTxn = bcsToBytes(\n      new aptos_types_exports.SignedTransaction(feePayerTransaction.raw_txn, txAuthenticatorFeePayer)\n    );\n    const transactionRes = await this.submitSignedBCSTransaction(bcsTxn);\n    return transactionRes;\n  }\n  /**\n   * Signs a multi transaction type (multi agent / fee payer) and returns the\n   * signer authenticator to be used to submit the transaction.\n   *\n   * @param signer the account to sign on the transaction\n   * @param rawTxn a MultiAgentRawTransaction or FeePayerRawTransaction\n   * @returns signer authenticator\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async signMultiTransaction(signer, rawTxn) {\n    const signerSignature = new aptos_types_exports.Ed25519Signature(\n      signer.signBuffer(TransactionBuilder.getSigningMessage(rawTxn)).toUint8Array()\n    );\n    const signerAuthenticator = new aptos_types_exports.AccountAuthenticatorEd25519(\n      new aptos_types_exports.Ed25519PublicKey(signer.signingKey.publicKey),\n      signerSignature\n    );\n    return Promise.resolve(signerAuthenticator);\n  }\n  /** Converts a transaction request produced by `generateTransaction` into a properly\n   * signed transaction, which can then be submitted to the blockchain\n   * @param accountFrom AptosAccount of transaction sender\n   * @param rawTransaction A raw transaction generated by `generateTransaction` method\n   * @returns A transaction, signed with sender account\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async signTransaction(accountFrom, rawTransaction) {\n    return Promise.resolve(_AptosClient.generateBCSTransaction(accountFrom, rawTransaction));\n  }\n  async getEventsByCreationNumber(address, creationNumber, query) {\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: `accounts/${HexString.ensure(address).hex()}/events/${creationNumber}`,\n      originMethod: \"getEventsByCreationNumber\",\n      params: { start: query == null ? void 0 : query.start, limit: query == null ? void 0 : query.limit },\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async getEventsByEventHandle(address, eventHandleStruct, fieldName, query) {\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: `accounts/${HexString.ensure(address).hex()}/events/${eventHandleStruct}/${fieldName}`,\n      originMethod: \"getEventsByEventHandle\",\n      params: { start: query == null ? void 0 : query.start, limit: query == null ? void 0 : query.limit },\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  /**\n   * Submits a signed transaction to the transaction endpoint.\n   * @param signedTxn A transaction, signed by `signTransaction` method\n   * @returns Transaction that is accepted and submitted to mempool\n   */\n  async submitTransaction(signedTxn) {\n    return this.submitSignedBCSTransaction(signedTxn);\n  }\n  /**\n   * Generates and submits a transaction to the transaction simulation\n   * endpoint. For this we generate a transaction with a fake signature.\n   *\n   * @param accountOrPubkey The sender or sender's public key. When private key is available, `AptosAccount` instance\n   * can be used to send the transaction for simulation. If private key is not available, sender's public key can be\n   * used to send the transaction for simulation.\n   * @param rawTransaction The raw transaction to be simulated, likely created\n   * by calling the `generateTransaction` function.\n   * @param query.estimateGasUnitPrice If set to true, the gas unit price in the\n   * transaction will be ignored and the estimated value will be used.\n   * @param query.estimateMaxGasAmount If set to true, the max gas value in the\n   * transaction will be ignored and the maximum possible gas will be used.\n   * @param query.estimatePrioritizedGasUnitPrice If set to true, the transaction will use a higher price than the\n   * original estimate.\n   * @returns The BCS encoded signed transaction, which you should then provide\n   *\n   */\n  async simulateTransaction(accountOrPubkey, rawTransaction, query) {\n    let signedTxn;\n    if (accountOrPubkey instanceof AptosAccount) {\n      signedTxn = _AptosClient.generateBCSSimulation(accountOrPubkey, rawTransaction);\n    } else if (accountOrPubkey instanceof MultiEd25519PublicKey) {\n      const txnBuilder = new TransactionBuilderMultiEd25519(() => {\n        const { threshold } = accountOrPubkey;\n        const bits = [];\n        const signatures = [];\n        for (let i = 0; i < threshold; i += 1) {\n          bits.push(i);\n          signatures.push(new aptos_types_exports.Ed25519Signature(new Uint8Array(64)));\n        }\n        const bitmap = aptos_types_exports.MultiEd25519Signature.createBitmap(bits);\n        return new aptos_types_exports.MultiEd25519Signature(signatures, bitmap);\n      }, accountOrPubkey);\n      signedTxn = txnBuilder.sign(rawTransaction);\n    } else {\n      const txnBuilder = new TransactionBuilderEd25519(() => {\n        const invalidSigBytes = new Uint8Array(64);\n        return new aptos_types_exports.Ed25519Signature(invalidSigBytes);\n      }, accountOrPubkey.toBytes());\n      signedTxn = txnBuilder.sign(rawTransaction);\n    }\n    return this.submitBCSSimulation(signedTxn, query);\n  }\n  async submitSignedBCSTransaction(signedTxn) {\n    const { data } = await post({\n      url: this.nodeUrl,\n      body: signedTxn,\n      endpoint: \"transactions\",\n      originMethod: \"submitSignedBCSTransaction\",\n      contentType: \"application/x.aptos.signed_transaction+bcs\",\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async submitBCSSimulation(bcsBody, query) {\n    var _a, _b, _c;\n    const queryParams = {\n      estimate_gas_unit_price: (_a = query == null ? void 0 : query.estimateGasUnitPrice) != null ? _a : false,\n      estimate_max_gas_amount: (_b = query == null ? void 0 : query.estimateMaxGasAmount) != null ? _b : false,\n      estimate_prioritized_gas_unit_price: (_c = query == null ? void 0 : query.estimatePrioritizedGasUnitPrice) != null ? _c : false\n    };\n    const { data } = await post({\n      url: this.nodeUrl,\n      body: bcsBody,\n      endpoint: \"transactions/simulate\",\n      params: queryParams,\n      originMethod: \"submitBCSSimulation\",\n      contentType: \"application/x.aptos.signed_transaction+bcs\",\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async getTransactions(query) {\n    var _a;\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: \"transactions\",\n      originMethod: \"getTransactions\",\n      params: { start: (_a = query == null ? void 0 : query.start) == null ? void 0 : _a.toString(), limit: query == null ? void 0 : query.limit },\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async getTransactionByHash(txnHash) {\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: `transactions/by_hash/${txnHash}`,\n      originMethod: \"getTransactionByHash\",\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async getTransactionByVersion(txnVersion) {\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: `transactions/by_version/${txnVersion}`,\n      originMethod: \"getTransactionByVersion\",\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  /**\n   * Defines if specified transaction is currently in pending state\n   * @param txnHash A hash of transaction\n   *\n   * To create a transaction hash:\n   *\n   * 1. Create hash message bytes: \"Aptos::Transaction\" bytes + BCS bytes of Transaction.\n   * 2. Apply hash algorithm SHA3-256 to the hash message bytes.\n   * 3. Hex-encode the hash bytes with 0x prefix.\n   *\n   * @returns `true` if transaction is in pending state and `false` otherwise\n   */\n  async transactionPending(txnHash) {\n    try {\n      const response = await this.getTransactionByHash(txnHash);\n      return response.type === \"pending_transaction\";\n    } catch (e) {\n      if ((e == null ? void 0 : e.status) === 404) {\n        return true;\n      }\n      throw e;\n    }\n  }\n  /**\n   * Wait for a transaction to move past pending state.\n   *\n   * There are 4 possible outcomes:\n   * 1. Transaction is processed and successfully committed to the blockchain.\n   * 2. Transaction is rejected for some reason, and is therefore not committed\n   *    to the blockchain.\n   * 3. Transaction is committed but execution failed, meaning no changes were\n   *    written to the blockchain state.\n   * 4. Transaction is not processed within the specified timeout.\n   *\n   * In case 1, this function resolves with the transaction response returned\n   * by the API.\n   *\n   * In case 2, the function will throw an ApiError, likely with an HTTP status\n   * code indicating some problem with the request (e.g. 400).\n   *\n   * In case 3, if `checkSuccess` is false (the default), this function returns\n   * the transaction response just like in case 1, in which the `success` field\n   * will be false. If `checkSuccess` is true, it will instead throw a\n   * FailedTransactionError.\n   *\n   * In case 4, this function throws a WaitForTransactionError.\n   *\n   * @param txnHash The hash of a transaction previously submitted to the blockchain.\n   * @param extraArgs.timeoutSecs Timeout in seconds. Defaults to 20 seconds.\n   * @param extraArgs.checkSuccess See above. Defaults to false.\n   * @returns See above.\n   *\n   * @example\n   * ```\n   * const rawTransaction = await this.generateRawTransaction(sender.address(), payload, extraArgs);\n   * const bcsTxn = AptosClient.generateBCSTransaction(sender, rawTransaction);\n   * const pendingTransaction = await this.submitSignedBCSTransaction(bcsTxn);\n   * const transasction = await this.aptosClient.waitForTransactionWithResult(pendingTransaction.hash);\n   * ```\n   */\n  async waitForTransactionWithResult(txnHash, extraArgs) {\n    var _a, _b;\n    const timeoutSecs = (_a = extraArgs == null ? void 0 : extraArgs.timeoutSecs) != null ? _a : DEFAULT_TXN_TIMEOUT_SEC;\n    const checkSuccess = (_b = extraArgs == null ? void 0 : extraArgs.checkSuccess) != null ? _b : false;\n    let isPending = true;\n    let count = 0;\n    let lastTxn;\n    while (isPending) {\n      if (count >= timeoutSecs) {\n        break;\n      }\n      try {\n        lastTxn = await this.getTransactionByHash(txnHash);\n        isPending = lastTxn.type === \"pending_transaction\";\n        if (!isPending) {\n          break;\n        }\n      } catch (e) {\n        const isApiError = e instanceof ApiError;\n        const isRequestError = isApiError && e.status !== 404 && e.status >= 400 && e.status < 500;\n        if (!isApiError || isRequestError) {\n          throw e;\n        }\n      }\n      await sleep(1e3);\n      count += 1;\n    }\n    if (lastTxn === void 0) {\n      throw new Error(`Waiting for transaction ${txnHash} failed`);\n    }\n    if (isPending) {\n      throw new WaitForTransactionError(\n        `Waiting for transaction ${txnHash} timed out after ${timeoutSecs} seconds`,\n        lastTxn\n      );\n    }\n    if (!checkSuccess) {\n      return lastTxn;\n    }\n    if (!(lastTxn == null ? void 0 : lastTxn.success)) {\n      throw new FailedTransactionError(\n        `Transaction ${txnHash} failed with an error: ${lastTxn.vm_status}`,\n        lastTxn\n      );\n    }\n    return lastTxn;\n  }\n  /**\n   * This function works the same as `waitForTransactionWithResult` except it\n   * doesn't return the transaction in those cases, it returns nothing. For\n   * more information, see the documentation for `waitForTransactionWithResult`.\n   */\n  async waitForTransaction(txnHash, extraArgs) {\n    await this.waitForTransactionWithResult(txnHash, extraArgs);\n  }\n  async getLedgerInfo() {\n    const { data } = await get({\n      url: this.nodeUrl,\n      originMethod: \"getLedgerInfo\",\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async getChainId() {\n    const result = await this.getLedgerInfo();\n    return result.chain_id;\n  }\n  async getTableItem(handle, data, query) {\n    var _a;\n    const response = await post({\n      url: this.nodeUrl,\n      body: data,\n      endpoint: `tables/${handle}/item`,\n      originMethod: \"getTableItem\",\n      params: { ledger_version: (_a = query == null ? void 0 : query.ledgerVersion) == null ? void 0 : _a.toString() },\n      overrides: { ...this.config }\n    });\n    return response.data;\n  }\n  /**\n   * Generates a raw transaction out of a transaction payload\n   * @param accountFrom\n   * @param payload\n   * @param extraArgs\n   * @returns A raw transaction object\n   */\n  async generateRawTransaction(accountFrom, payload, extraArgs) {\n    const [{ sequence_number: sequenceNumber }, chainId, { gas_estimate: gasEstimate }] = await Promise.all([\n      (extraArgs == null ? void 0 : extraArgs.providedSequenceNumber) ? Promise.resolve({ sequence_number: extraArgs.providedSequenceNumber }) : this.getAccount(accountFrom),\n      this.getChainId(),\n      (extraArgs == null ? void 0 : extraArgs.gasUnitPrice) ? Promise.resolve({ gas_estimate: extraArgs.gasUnitPrice }) : this.estimateGasPrice()\n    ]);\n    const { maxGasAmount, gasUnitPrice, expireTimestamp } = {\n      maxGasAmount: BigInt(DEFAULT_MAX_GAS_AMOUNT),\n      gasUnitPrice: BigInt(gasEstimate),\n      expireTimestamp: BigInt(Math.floor(Date.now() / 1e3) + DEFAULT_TXN_EXP_SEC_FROM_NOW),\n      ...extraArgs\n    };\n    return new aptos_types_exports.RawTransaction(\n      aptos_types_exports.AccountAddress.fromHex(accountFrom),\n      BigInt(sequenceNumber),\n      payload,\n      maxGasAmount,\n      gasUnitPrice,\n      expireTimestamp,\n      new aptos_types_exports.ChainId(chainId)\n    );\n  }\n  /**\n   * Helper for generating, signing, and submitting a transaction.\n   *\n   * @param sender AptosAccount of transaction sender.\n   * @param payload Transaction payload.\n   * @param extraArgs Extra args for building the transaction payload.\n   * @returns The transaction response from the API.\n   */\n  async generateSignSubmitTransaction(sender, payload, extraArgs) {\n    const rawTransaction = await this.generateRawTransaction(sender.address(), payload, extraArgs);\n    const bcsTxn = _AptosClient.generateBCSTransaction(sender, rawTransaction);\n    const pendingTransaction = await this.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Helper for signing and submitting a transaction.\n   *\n   * @param sender AptosAccount of transaction sender.\n   * @param transaction A generated Raw transaction payload.\n   * @returns The transaction response from the API.\n   */\n  async signAndSubmitTransaction(sender, transaction) {\n    const bcsTxn = _AptosClient.generateBCSTransaction(sender, transaction);\n    const pendingTransaction = await this.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Publishes a move package. `packageMetadata` and `modules` can be generated with command\n   * `aptos move compile --save-metadata [ --included-artifacts=<...> ]`.\n   * @param sender\n   * @param packageMetadata package metadata bytes\n   * @param modules bytecodes of modules\n   * @param extraArgs\n   * @returns Transaction hash\n   */\n  async publishPackage(sender, packageMetadata, modules, extraArgs) {\n    const codeSerializer = new Serializer();\n    serializeVector(modules, codeSerializer);\n    const payload = new aptos_types_exports.TransactionPayloadEntryFunction(\n      aptos_types_exports.EntryFunction.natural(\n        \"0x1::code\",\n        \"publish_package_txn\",\n        [],\n        [bcsSerializeBytes(packageMetadata), codeSerializer.getBytes()]\n      )\n    );\n    return this.generateSignSubmitTransaction(sender, payload, extraArgs);\n  }\n  /**\n   * Publishes a move packages by creating a resource account.\n   * The package cannot be upgraded since it is deployed by resource account\n   * `packageMetadata` and `modules` can be generated with command\n   * `aptos move compile --save-metadata [ --included-artifacts=<...> ]`.\n   * @param sender\n   * @param seed seeds for creation of resource address\n   * @param packageMetadata package metadata bytes\n   * @param modules bytecodes of modules\n   * @param extraArgs\n   * @returns Transaction hash\n   */\n  async createResourceAccountAndPublishPackage(sender, seed, packageMetadata, modules, extraArgs) {\n    const codeSerializer = new Serializer();\n    serializeVector(modules, codeSerializer);\n    const payload = new aptos_types_exports.TransactionPayloadEntryFunction(\n      aptos_types_exports.EntryFunction.natural(\n        \"0x1::resource_account\",\n        \"create_resource_account_and_publish_package\",\n        [],\n        [bcsSerializeBytes(seed), bcsSerializeBytes(packageMetadata), codeSerializer.getBytes()]\n      )\n    );\n    return this.generateSignSubmitTransaction(sender, payload, extraArgs);\n  }\n  /**\n   * Helper for generating, submitting, and waiting for a transaction, and then\n   * checking whether it was committed successfully. Under the hood this is just\n   * `generateSignSubmitTransaction` and then `waitForTransactionWithResult`, see\n   * those for information about the return / error semantics of this function.\n   */\n  async generateSignSubmitWaitForTransaction(sender, payload, extraArgs) {\n    const txnHash = await this.generateSignSubmitTransaction(sender, payload, extraArgs);\n    return this.waitForTransactionWithResult(txnHash, extraArgs);\n  }\n  async estimateGasPrice() {\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: \"estimate_gas_price\",\n      originMethod: \"estimateGasPrice\",\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async estimateMaxGasAmount(forAccount) {\n    const typeTag = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n    const [{ gas_estimate: gasUnitPrice }, resources] = await Promise.all([\n      this.estimateGasPrice(),\n      this.getAccountResources(forAccount)\n    ]);\n    const accountResource = resources.find((r) => r.type === typeTag);\n    const balance = BigInt(accountResource.data.coin.value);\n    return balance / BigInt(gasUnitPrice);\n  }\n  /**\n   * Rotate an account's auth key. After rotation, only the new private key can be used to sign txns for\n   * the account.\n   * WARNING: You must create a new instance of AptosAccount after using this function.\n   * @param forAccount Account of which the auth key will be rotated\n   * @param toPrivateKeyBytes New private key\n   * @param extraArgs Extra args for building the transaction payload.\n   * @returns PendingTransaction\n   */\n  async rotateAuthKeyEd25519(forAccount, toPrivateKeyBytes, extraArgs) {\n    const { sequence_number: sequenceNumber, authentication_key: authKey } = await this.getAccount(\n      forAccount.address()\n    );\n    const helperAccount = new AptosAccount(toPrivateKeyBytes);\n    const challenge = new aptos_types_exports.RotationProofChallenge(\n      aptos_types_exports.AccountAddress.CORE_CODE_ADDRESS,\n      \"account\",\n      \"RotationProofChallenge\",\n      BigInt(sequenceNumber),\n      aptos_types_exports.AccountAddress.fromHex(forAccount.address()),\n      new aptos_types_exports.AccountAddress(new HexString(authKey).toUint8Array()),\n      helperAccount.pubKey().toUint8Array()\n    );\n    const challengeHex = HexString.fromUint8Array(bcsToBytes(challenge));\n    const proofSignedByCurrentPrivateKey = forAccount.signHexString(challengeHex);\n    const proofSignedByNewPrivateKey = helperAccount.signHexString(challengeHex);\n    const payload = new aptos_types_exports.TransactionPayloadEntryFunction(\n      aptos_types_exports.EntryFunction.natural(\n        \"0x1::account\",\n        \"rotate_authentication_key\",\n        [],\n        [\n          bcsSerializeU8(0),\n          // ed25519 scheme\n          bcsSerializeBytes(forAccount.pubKey().toUint8Array()),\n          bcsSerializeU8(0),\n          // ed25519 scheme\n          bcsSerializeBytes(helperAccount.pubKey().toUint8Array()),\n          bcsSerializeBytes(proofSignedByCurrentPrivateKey.toUint8Array()),\n          bcsSerializeBytes(proofSignedByNewPrivateKey.toUint8Array())\n        ]\n      )\n    );\n    const rawTransaction = await this.generateRawTransaction(forAccount.address(), payload, extraArgs);\n    const bcsTxn = _AptosClient.generateBCSTransaction(forAccount, rawTransaction);\n    return this.submitSignedBCSTransaction(bcsTxn);\n  }\n  /**\n   * Lookup the original address by the current derived address\n   * @param addressOrAuthKey\n   * @returns original address\n   */\n  async lookupOriginalAddress(addressOrAuthKey) {\n    const resource = await this.getAccountResource(\"0x1\", \"0x1::account::OriginatingAddress\");\n    const {\n      address_map: { handle }\n    } = resource.data;\n    const origAddress = await this.getTableItem(handle, {\n      key_type: \"address\",\n      value_type: \"address\",\n      key: HexString.ensure(addressOrAuthKey).hex()\n    });\n    return new HexString(origAddress);\n  }\n  async getBlockByHeight(blockHeight, withTransactions) {\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: `blocks/by_height/${blockHeight}`,\n      originMethod: \"getBlockByHeight\",\n      params: { with_transactions: withTransactions },\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async getBlockByVersion(version, withTransactions) {\n    const { data } = await get({\n      url: this.nodeUrl,\n      endpoint: `blocks/by_version/${version}`,\n      originMethod: \"getBlockByVersion\",\n      params: { with_transactions: withTransactions },\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  async view(payload, ledger_version) {\n    const { data } = await post({\n      url: this.nodeUrl,\n      body: payload,\n      endpoint: \"view\",\n      originMethod: \"getTableItem\",\n      params: { ledger_version },\n      overrides: { ...this.config }\n    });\n    return data;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  clearCache(tags) {\n    clear(tags);\n  }\n};\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getAccount\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getAccountTransactions\", 1);\n__decorateClass([\n  parseApiError,\n  MemoizeExpiring(10 * 60 * 1e3)\n], _AptosClient.prototype, \"getAccountModules\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getAccountModule\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getAccountResources\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getAccountResource\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getEventsByCreationNumber\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getEventsByEventHandle\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"submitSignedBCSTransaction\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"submitBCSSimulation\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getTransactions\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getTransactionByHash\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getTransactionByVersion\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getLedgerInfo\", 1);\n__decorateClass([\n  Memoize()\n], _AptosClient.prototype, \"getChainId\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getTableItem\", 1);\n__decorateClass([\n  parseApiError,\n  Memoize({\n    ttlMs: 5 * 60 * 1e3,\n    // cache result for 5min\n    tags: [\"gas_estimates\"]\n  })\n], _AptosClient.prototype, \"estimateGasPrice\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"estimateMaxGasAmount\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getBlockByHeight\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"getBlockByVersion\", 1);\n__decorateClass([\n  parseApiError\n], _AptosClient.prototype, \"view\", 1);\nvar AptosClient = _AptosClient;\nvar WaitForTransactionError = class extends Error {\n  constructor(message, lastSubmittedTransaction) {\n    super(message);\n    this.lastSubmittedTransaction = lastSubmittedTransaction;\n  }\n};\nvar FailedTransactionError = class extends Error {\n  constructor(message, transaction) {\n    super(message);\n    this.transaction = transaction;\n  }\n};\nvar ApiError = class extends Error {\n  constructor(status, message, errorCode, vmErrorCode) {\n    super(message);\n    this.status = status;\n    this.message = message;\n    this.errorCode = errorCode;\n    this.vmErrorCode = vmErrorCode;\n  }\n};\nfunction parseApiError(target, propertyKey, descriptor) {\n  const childFunction = descriptor.value;\n  descriptor.value = async function wrapper(...args) {\n    var _a, _b;\n    try {\n      const res = await childFunction.apply(this, [...args]);\n      return res;\n    } catch (e) {\n      if (e instanceof AptosApiError) {\n        throw new ApiError(\n          e.status,\n          JSON.stringify({ message: e.message, ...e.data }),\n          (_a = e.data) == null ? void 0 : _a.error_code,\n          (_b = e.data) == null ? void 0 : _b.vm_error_code\n        );\n      }\n      throw e;\n    }\n  };\n  return descriptor;\n}\n\n// src/providers/indexer.ts\nvar IndexerClient = class _IndexerClient {\n  /**\n   * @param endpoint URL of the Aptos Indexer API endpoint.\n   */\n  constructor(endpoint, config) {\n    this.endpoint = endpoint;\n    this.config = config;\n  }\n  /**\n   * Indexer only accepts address in the long format, i.e a 66 chars long -> 0x<64 chars>\n   * This method makes sure address is 66 chars long.\n   * @param address\n   */\n  static validateAddress(address) {\n    if (address.length < 66) {\n      throw new Error(`${address} is less than 66 chars long.`);\n    }\n  }\n  /**\n   * Makes axios client call to fetch data from Aptos Indexer.\n   *\n   * @param graphqlQuery A GraphQL query to pass in the `data` axios call.\n   */\n  async queryIndexer(graphqlQuery) {\n    const response = await post({\n      url: this.endpoint,\n      body: graphqlQuery,\n      overrides: { WITH_CREDENTIALS: false, ...this.config }\n    });\n    if (response.data.errors) {\n      throw new ApiError(\n        response.data.errors[0].extensions.code,\n        JSON.stringify({\n          message: response.data.errors[0].message,\n          error_code: response.data.errors[0].extensions.code\n        })\n      );\n    }\n    return response.data.data;\n  }\n  /**\n   * Queries Indexer Ledger Info\n   *\n   * @returns GetLedgerInfoQuery response type\n   */\n  async getIndexerLedgerInfo() {\n    const graphqlQuery = {\n      query: GetIndexerLedgerInfo\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  // TOKENS //\n  /**\n   * @deprecated please use `getOwnedTokens` query\n   *\n   * Queries an Aptos account's NFTs by owner address\n   *\n   * @param ownerAddress Hex-encoded 32 byte Aptos account address\n   * @returns GetAccountCurrentTokensQuery response type\n   */\n  async getAccountNFTs(ownerAddress, options) {\n    const address = HexString.ensure(ownerAddress).hex();\n    _IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountCurrentTokens,\n      variables: { address, offset: options == null ? void 0 : options.offset, limit: options == null ? void 0 : options.limit }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries a token activities by token address (v2) or token data id (v1)\n   *\n   * @param idHash token address (v2) or token data id (v1)\n   * @returns GetTokenActivitiesQuery response type\n   */\n  async getTokenActivities(token, extraArgs) {\n    var _a, _b;\n    const tokenAddress = HexString.ensure(token).hex();\n    _IndexerClient.validateAddress(tokenAddress);\n    const whereCondition = {\n      token_data_id: { _eq: tokenAddress }\n    };\n    if (extraArgs == null ? void 0 : extraArgs.tokenStandard) {\n      whereCondition.token_standard = { _eq: extraArgs == null ? void 0 : extraArgs.tokenStandard };\n    }\n    const graphqlQuery = {\n      query: GetTokenActivities,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Gets the count of token's activities by token address (v2) or token data id (v1)\n   *\n   * @param token token address (v2) or token data id (v1)\n   * @returns GetTokenActivitiesCountQuery response type\n   */\n  async getTokenActivitiesCount(token) {\n    const graphqlQuery = {\n      query: GetTokenActivitiesCount,\n      variables: { token_id: token }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Gets the count of tokens owned by an account\n   *\n   * @param ownerAddress Owner address\n   * @returns AccountTokensCountQuery response type\n   */\n  async getAccountTokensCount(ownerAddress, extraArgs) {\n    var _a, _b;\n    const whereCondition = {\n      owner_address: { _eq: ownerAddress },\n      amount: { _gt: \"0\" }\n    };\n    if (extraArgs == null ? void 0 : extraArgs.tokenStandard) {\n      whereCondition.token_standard = { _eq: extraArgs == null ? void 0 : extraArgs.tokenStandard };\n    }\n    const address = HexString.ensure(ownerAddress).hex();\n    _IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountTokensCount,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries token data by token address (v2) or token data id (v1)\n   *\n   * @param token token address (v2) or token data id (v1)\n   * @returns GetTokenDataQuery response type\n   */\n  // :!:>getTokenData\n  async getTokenData(token, extraArgs) {\n    var _a, _b;\n    const tokenAddress = HexString.ensure(token).hex();\n    _IndexerClient.validateAddress(tokenAddress);\n    const whereCondition = {\n      token_data_id: { _eq: tokenAddress }\n    };\n    if (extraArgs == null ? void 0 : extraArgs.tokenStandard) {\n      whereCondition.token_standard = { _eq: extraArgs == null ? void 0 : extraArgs.tokenStandard };\n    }\n    const graphqlQuery = {\n      query: GetTokenData,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  // <:!:getTokenData\n  /**\n   * Queries token owners data by token address (v2) or token data id (v1).\n   * This query returns historical owners data.\n   *\n   * To fetch token v2 standard, pass in the optional `tokenStandard` parameter and\n   * dont pass `propertyVersion` parameter (as propertyVersion only compatible with v1 standard)\n   *\n   * @param token token address (v2) or token data id (v1)\n   * @param propertyVersion Property version (optional) - only compatible with token v1 standard\n   * @returns GetTokenOwnersDataQuery response type\n   */\n  async getTokenOwnersData(token, propertyVersion, extraArgs) {\n    var _a, _b;\n    const tokenAddress = HexString.ensure(token).hex();\n    _IndexerClient.validateAddress(tokenAddress);\n    const whereCondition = {\n      token_data_id: { _eq: tokenAddress },\n      amount: { _gt: \"0\" }\n    };\n    if (propertyVersion) {\n      whereCondition.property_version_v1 = { _eq: propertyVersion };\n    }\n    if (extraArgs == null ? void 0 : extraArgs.tokenStandard) {\n      whereCondition.token_standard = { _eq: extraArgs == null ? void 0 : extraArgs.tokenStandard };\n    }\n    const graphqlQuery = {\n      query: GetTokenOwnersData,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries current token owner data by token address (v2) or token data id (v1).\n   * This query returns the current token owner data.\n   *\n   * To fetch token v2 standard, pass in the optional `tokenStandard` parameter and\n   * dont pass `propertyVersion` parameter (as propertyVersion only compatible with v1 standard)\n   *\n   * @param token token address (v2) or token data id (v1)\n   * @param propertyVersion Property version (optional) - only compatible with token v1 standard\n   * @returns GetTokenCurrentOwnerDataQuery response type\n   */\n  async getTokenCurrentOwnerData(token, propertyVersion, extraArgs) {\n    var _a, _b;\n    const tokenAddress = HexString.ensure(token).hex();\n    _IndexerClient.validateAddress(tokenAddress);\n    const whereCondition = {\n      token_data_id: { _eq: tokenAddress },\n      amount: { _gt: \"0\" }\n    };\n    if (propertyVersion) {\n      whereCondition.property_version_v1 = { _eq: propertyVersion };\n    }\n    if (extraArgs == null ? void 0 : extraArgs.tokenStandard) {\n      whereCondition.token_standard = { _eq: extraArgs == null ? void 0 : extraArgs.tokenStandard };\n    }\n    const graphqlQuery = {\n      query: GetTokenCurrentOwnerData,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries account's current owned tokens.\n   * This query returns all tokens (v1 and v2 standards) an account owns, including NFTs, fungible, soulbound, etc.\n   * If you want to get only the token from a specific standrd, you can pass an optional tokenStandard param\n   *\n   * @param ownerAddress The token owner address we want to get the tokens for\n   * @returns GetOwnedTokensQuery response type\n   */\n  async getOwnedTokens(ownerAddress, extraArgs) {\n    var _a, _b;\n    const address = HexString.ensure(ownerAddress).hex();\n    _IndexerClient.validateAddress(address);\n    const whereCondition = {\n      owner_address: { _eq: address },\n      amount: { _gt: 0 }\n    };\n    if (extraArgs == null ? void 0 : extraArgs.tokenStandard) {\n      whereCondition.token_standard = { _eq: extraArgs == null ? void 0 : extraArgs.tokenStandard };\n    }\n    const graphqlQuery = {\n      query: GetOwnedTokens,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries account's current owned tokens by token address (v2) or token data id (v1).\n   *\n   * @param token token address (v2) or token data id (v1)\n   * @returns GetOwnedTokensByTokenDataQuery response type\n   */\n  async getOwnedTokensByTokenData(token, extraArgs) {\n    var _a, _b;\n    const address = HexString.ensure(token).hex();\n    _IndexerClient.validateAddress(address);\n    const whereCondition = {\n      token_data_id: { _eq: address },\n      amount: { _gt: 0 }\n    };\n    if (extraArgs == null ? void 0 : extraArgs.tokenStandard) {\n      whereCondition.token_standard = { _eq: extraArgs == null ? void 0 : extraArgs.tokenStandard };\n    }\n    const graphqlQuery = {\n      query: GetOwnedTokensByTokenData,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries all tokens of a specific collection that an account owns by the collection address\n   *\n   * @param ownerAddress owner address that owns the tokens\n   * @param collectionAddress the collection address\n   * @returns GetTokenOwnedFromCollectionQuery response type\n   */\n  async getTokenOwnedFromCollectionAddress(ownerAddress, collectionAddress, extraArgs) {\n    var _a, _b;\n    const ownerHexAddress = HexString.ensure(ownerAddress).hex();\n    _IndexerClient.validateAddress(ownerHexAddress);\n    const collectionHexAddress = HexString.ensure(collectionAddress).hex();\n    _IndexerClient.validateAddress(collectionHexAddress);\n    const whereCondition = {\n      owner_address: { _eq: ownerHexAddress },\n      current_token_data: { collection_id: { _eq: collectionHexAddress } },\n      amount: { _gt: 0 }\n    };\n    if (extraArgs == null ? void 0 : extraArgs.tokenStandard) {\n      whereCondition.token_standard = { _eq: extraArgs == null ? void 0 : extraArgs.tokenStandard };\n    }\n    const graphqlQuery = {\n      query: GetTokenOwnedFromCollection,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries all tokens of a specific collection that an account owns by the collection name and collection\n   * creator address\n   *\n   * @param ownerAddress owner address that owns the tokens\n   * @param collectionName the collection name\n   * @param creatorAddress the collection creator address\n   * @returns GetTokenOwnedFromCollectionQuery response type\n   */\n  async getTokenOwnedFromCollectionNameAndCreatorAddress(ownerAddress, collectionName, creatorAddress, extraArgs) {\n    const collectionAddress = await this.getCollectionAddress(creatorAddress, collectionName, extraArgs);\n    const tokens = await this.getTokenOwnedFromCollectionAddress(ownerAddress, collectionAddress, extraArgs);\n    return tokens;\n  }\n  /**\n   * Queries data of a specific collection by the collection creator address and the collection name.\n   *\n   * if, for some reason, a creator account has 2 collections with the same name in v1 and v2,\n   * can pass an optional `tokenStandard` parameter to query a specific standard\n   *\n   * @param creatorAddress the collection creator address\n   * @param collectionName the collection name\n   * @returns GetCollectionDataQuery response type\n   */\n  async getCollectionData(creatorAddress, collectionName, extraArgs) {\n    var _a, _b;\n    const address = HexString.ensure(creatorAddress).hex();\n    _IndexerClient.validateAddress(address);\n    const whereCondition = {\n      collection_name: { _eq: collectionName },\n      creator_address: { _eq: address }\n    };\n    if (extraArgs == null ? void 0 : extraArgs.tokenStandard) {\n      whereCondition.token_standard = { _eq: extraArgs == null ? void 0 : extraArgs.tokenStandard };\n    }\n    const graphqlQuery = {\n      query: GetCollectionData,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries a collection address.\n   *\n   * @param creatorAddress the collection creator address\n   * @param collectionName the collection name\n   * @returns the collection address\n   */\n  async getCollectionAddress(creatorAddress, collectionName, extraArgs) {\n    return (await this.getCollectionData(creatorAddress, collectionName, extraArgs)).current_collections_v2[0].collection_id;\n  }\n  /**\n   * Queries for all collections that an account has tokens for.\n   *\n   * @param ownerAddress the account address that owns the tokens\n   * @returns GetCollectionsWithOwnedTokensQuery response type\n   */\n  async getCollectionsWithOwnedTokens(ownerAddress, extraArgs) {\n    var _a, _b;\n    const ownerHexAddress = HexString.ensure(ownerAddress).hex();\n    _IndexerClient.validateAddress(ownerHexAddress);\n    const whereCondition = {\n      owner_address: { _eq: ownerHexAddress }\n    };\n    if (extraArgs == null ? void 0 : extraArgs.tokenStandard) {\n      whereCondition.current_collection = { token_standard: { _eq: extraArgs == null ? void 0 : extraArgs.tokenStandard } };\n    }\n    const graphqlQuery = {\n      query: GetCollectionsWithOwnedTokens,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  // TRANSACTIONS //\n  /**\n   * Gets the count of transactions submitted by an account\n   *\n   * @param address Account address\n   * @returns GetAccountTransactionsCountQuery response type\n   */\n  async getAccountTransactionsCount(accountAddress) {\n    const address = HexString.ensure(accountAddress).hex();\n    _IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountTransactionsCount,\n      variables: { address }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries an account transactions data\n   *\n   * @param address Account address\n   * @returns GetAccountTransactionsDataQuery response type\n   */\n  async getAccountTransactionsData(accountAddress, extraArgs) {\n    var _a, _b;\n    const address = HexString.ensure(accountAddress).hex();\n    _IndexerClient.validateAddress(address);\n    const whereCondition = {\n      account_address: { _eq: address }\n    };\n    const graphqlQuery = {\n      query: GetAccountTransactionsData,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries top user transactions\n   *\n   * @param limit\n   * @returns GetTopUserTransactionsQuery response type\n   */\n  async getTopUserTransactions(limit) {\n    const graphqlQuery = {\n      query: GetTopUserTransactions,\n      variables: { limit }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries top user transactions\n   *\n   * @param startVersion optional - can be set to tell indexer what version to start from\n   * @returns GetUserTransactionsQuery response type\n   */\n  async getUserTransactions(extraArgs) {\n    var _a, _b;\n    const whereCondition = {\n      version: { _lte: extraArgs == null ? void 0 : extraArgs.startVersion }\n    };\n    const graphqlQuery = {\n      query: GetUserTransactions,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  // STAKING //\n  /**\n   * Queries delegated staking activities\n   *\n   * @param delegatorAddress Delegator address\n   * @param poolAddress Pool address\n   * @returns GetDelegatedStakingActivitiesQuery response type\n   */\n  async getDelegatedStakingActivities(delegatorAddress, poolAddress) {\n    const delegator = HexString.ensure(delegatorAddress).hex();\n    const pool = HexString.ensure(poolAddress).hex();\n    _IndexerClient.validateAddress(delegator);\n    _IndexerClient.validateAddress(pool);\n    const graphqlQuery = {\n      query: GetDelegatedStakingActivities,\n      variables: {\n        delegatorAddress: delegator,\n        poolAddress: pool\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries current number of delegators in a pool\n   *\n   * @returns GetNumberOfDelegatorsQuery response type\n   */\n  async getNumberOfDelegators(poolAddress) {\n    const address = HexString.ensure(poolAddress).hex();\n    _IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetNumberOfDelegators,\n      variables: { poolAddress: address }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  // ACCOUNT //\n  /**\n   * Queries an account coin data\n   *\n   * @param ownerAddress Owner address\n   * @returns GetAccountCoinsDataQuery response type\n   */\n  async getAccountCoinsData(ownerAddress, extraArgs) {\n    var _a, _b;\n    const address = HexString.ensure(ownerAddress).hex();\n    _IndexerClient.validateAddress(address);\n    const whereCondition = {\n      owner_address: { _eq: address }\n    };\n    const graphqlQuery = {\n      query: GetAccountCoinsData,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries an account coin data count\n   *\n   * @param ownerAddress Owner address\n   * @returns GetAccountCoinsDataCountQuery response type\n   */\n  async getAccountCoinsDataCount(ownerAddress) {\n    const address = HexString.ensure(ownerAddress).hex();\n    _IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountCoinsDataCount,\n      variables: {\n        address\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  /**\n   * Queries an account owned objects\n   *\n   * @param ownerAddress Owner address\n   * @returns GetCurrentObjectsQuery response type\n   */\n  async getAccountOwnedObjects(ownerAddress, extraArgs) {\n    var _a, _b;\n    const address = HexString.ensure(ownerAddress).hex();\n    _IndexerClient.validateAddress(address);\n    const whereCondition = {\n      owner_address: { _eq: address }\n    };\n    const graphqlQuery = {\n      query: GetCurrentObjects,\n      variables: {\n        where_condition: whereCondition,\n        offset: (_a = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _a.offset,\n        limit: (_b = extraArgs == null ? void 0 : extraArgs.options) == null ? void 0 : _b.limit,\n        order_by: extraArgs == null ? void 0 : extraArgs.orderBy\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n};\n\n// src/providers/provider.ts\nvar Provider = class {\n  constructor(network, config, doNotFixNodeUrl = false) {\n    let fullNodeUrl = null;\n    let indexerUrl = null;\n    if (typeof network === \"object\" && isCustomEndpoints(network)) {\n      fullNodeUrl = network.fullnodeUrl;\n      indexerUrl = network.indexerUrl;\n      this.network = \"CUSTOM\";\n    } else {\n      fullNodeUrl = NetworkToNodeAPI[network];\n      indexerUrl = NetworkToIndexerAPI[network];\n      this.network = network;\n    }\n    if (this.network === \"CUSTOM\" && !fullNodeUrl) {\n      throw new Error(\"fullnode url is not provided\");\n    }\n    if (indexerUrl) {\n      this.indexerClient = new IndexerClient(indexerUrl, config);\n    }\n    this.aptosClient = new AptosClient(fullNodeUrl, config, doNotFixNodeUrl);\n  }\n};\nfunction applyMixin(targetClass, baseClass, baseClassProp) {\n  Object.getOwnPropertyNames(baseClass.prototype).forEach((propertyName) => {\n    const propertyDescriptor = Object.getOwnPropertyDescriptor(baseClass.prototype, propertyName);\n    if (!propertyDescriptor)\n      return;\n    propertyDescriptor.value = function(...args) {\n      return this[baseClassProp][propertyName](...args);\n    };\n    Object.defineProperty(targetClass.prototype, propertyName, propertyDescriptor);\n  });\n  Object.getOwnPropertyNames(baseClass).forEach((propertyName) => {\n    const propertyDescriptor = Object.getOwnPropertyDescriptor(baseClass, propertyName);\n    if (!propertyDescriptor)\n      return;\n    propertyDescriptor.value = function(...args) {\n      return this[baseClassProp][propertyName](...args);\n    };\n    if (targetClass.hasOwnProperty.call(targetClass, propertyName)) {\n      return;\n    }\n    Object.defineProperty(targetClass, propertyName, propertyDescriptor);\n  });\n}\napplyMixin(Provider, AptosClient, \"aptosClient\");\napplyMixin(Provider, IndexerClient, \"indexerClient\");\nfunction isCustomEndpoints(network) {\n  return network.fullnodeUrl !== void 0 && typeof network.fullnodeUrl === \"string\";\n}\n\n// src/utils/property_map_serde.ts\nvar PropertyValue = class {\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n};\nvar PropertyMap = class {\n  constructor() {\n    this.data = {};\n  }\n  setProperty(key, value) {\n    this.data[key] = value;\n  }\n};\nfunction getPropertyType(typ) {\n  let typeTag;\n  if (typ === \"string\" || typ === \"String\") {\n    typeTag = new TypeTagStruct(stringStructTag);\n  } else {\n    typeTag = new TypeTagParser(typ).parseTypeTag();\n  }\n  return typeTag;\n}\nfunction getPropertyValueRaw(values, types) {\n  if (values.length !== types.length) {\n    throw new Error(\"Length of property values and types not match\");\n  }\n  const results = new Array();\n  types.forEach((typ, index) => {\n    try {\n      const typeTag = getPropertyType(typ);\n      const serializer = new Serializer();\n      serializeArg(values[index], typeTag, serializer);\n      results.push(serializer.getBytes());\n    } catch (error) {\n      results.push(new TextEncoder().encode(values[index]));\n    }\n  });\n  return results;\n}\nfunction getSinglePropertyValueRaw(value, type) {\n  if (!value || !type) {\n    throw new Error(\"value or type can not be empty\");\n  }\n  try {\n    const typeTag = getPropertyType(type);\n    const serializer = new Serializer();\n    serializeArg(value, typeTag, serializer);\n    return serializer.getBytes();\n  } catch (error) {\n    return new TextEncoder().encode(value);\n  }\n}\nfunction deserializePropertyMap(rawPropertyMap) {\n  const entries = rawPropertyMap.map.data;\n  const pm = new PropertyMap();\n  entries.forEach((prop) => {\n    const { key } = prop;\n    const val = prop.value.value;\n    const typ = prop.value.type;\n    const typeTag = getPropertyType(typ);\n    const newValue = deserializeValueBasedOnTypeTag(typeTag, val);\n    const pv = new PropertyValue(typ, newValue);\n    pm.setProperty(key, pv);\n  });\n  return pm;\n}\nfunction deserializeValueBasedOnTypeTag(tag, val) {\n  const de = new Deserializer(new HexString(val).toUint8Array());\n  let res = \"\";\n  if (tag instanceof TypeTagU8) {\n    res = de.deserializeU8().toString();\n  } else if (tag instanceof TypeTagU64) {\n    res = de.deserializeU64().toString();\n  } else if (tag instanceof TypeTagU128) {\n    res = de.deserializeU128().toString();\n  } else if (tag instanceof TypeTagBool) {\n    res = de.deserializeBool() ? \"true\" : \"false\";\n  } else if (tag instanceof TypeTagAddress) {\n    res = HexString.fromUint8Array(de.deserializeFixedBytes(32)).hex();\n  } else if (tag instanceof TypeTagStruct && tag.isStringTypeTag()) {\n    res = de.deserializeStr();\n  } else {\n    res = val;\n  }\n  return res;\n}\n\n// src/aptos_types/token_types.ts\nvar token_types_exports = {};\n__export(token_types_exports, {\n  PropertyMap: () => PropertyMap,\n  PropertyValue: () => PropertyValue,\n  Token: () => Token,\n  TokenData: () => TokenData\n});\nvar TokenData = class {\n  constructor(collection, description, name, maximum, supply, uri, default_properties, mutability_config) {\n    this.collection = collection;\n    this.description = description;\n    this.name = name;\n    this.maximum = maximum;\n    this.supply = supply;\n    this.uri = uri;\n    this.default_properties = deserializePropertyMap(default_properties);\n    this.mutability_config = mutability_config;\n  }\n};\nvar Token = class {\n  constructor(id, amount, token_properties) {\n    this.id = id;\n    this.amount = amount;\n    this.token_properties = deserializePropertyMap(token_properties);\n  }\n};\n\n// src/plugins/token_client.ts\nvar TokenClient = class {\n  /**\n   * Creates new TokenClient instance\n   *\n   * @param aptosClient AptosClient instance\n   */\n  constructor(aptosClient2) {\n    this.aptosClient = aptosClient2;\n  }\n  /**\n   * Creates a new NFT collection within the specified account\n   *\n   * @param account AptosAccount where collection will be created\n   * @param name Collection name\n   * @param description Collection description\n   * @param uri URL to additional info about collection\n   * @param maxAmount Maximum number of `token_data` allowed within this collection\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>createCollection\n  async createCollection(account, name, description, uri, maxAmount = MAX_U64_BIG_INT, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::create_collection_script\",\n      [],\n      [name, description, uri, maxAmount, [false, false, false]]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Creates a new NFT within the specified account\n   *\n   * @param account AptosAccount where token will be created\n   * @param collectionName Name of collection, that token belongs to\n   * @param name Token name\n   * @param description Token description\n   * @param supply Token supply\n   * @param uri URL to additional info about token\n   * @param max The maxium of tokens can be minted from this token\n   * @param royalty_payee_address the address to receive the royalty, the address can be a shared account address.\n   * @param royalty_points_denominator the denominator for calculating royalty\n   * @param royalty_points_numerator the numerator for calculating royalty\n   * @param property_keys the property keys for storing on-chain properties\n   * @param property_values the property values to be stored on-chain\n   * @param property_types the type of property values\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>createToken\n  async createToken(account, collectionName, name, description, supply, uri, max = MAX_U64_BIG_INT, royalty_payee_address = account.address(), royalty_points_denominator = 0, royalty_points_numerator = 0, property_keys = [], property_values = [], property_types = [], extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::create_token_script\",\n      [],\n      [\n        collectionName,\n        name,\n        description,\n        supply,\n        max,\n        uri,\n        royalty_payee_address,\n        royalty_points_denominator,\n        royalty_points_numerator,\n        [false, false, false, false, false],\n        property_keys,\n        getPropertyValueRaw(property_values, property_types),\n        property_types\n      ]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Creates a new NFT within the specified account\n   *\n   * @param account AptosAccount where token will be created\n   * @param collectionName Name of collection, that token belongs to\n   * @param name Token name\n   * @param description Token description\n   * @param supply Token supply\n   * @param uri URL to additional info about token\n   * @param max The maxium of tokens can be minted from this token\n   * @param royalty_payee_address the address to receive the royalty, the address can be a shared account address.\n   * @param royalty_points_denominator the denominator for calculating royalty\n   * @param royalty_points_numerator the numerator for calculating royalty\n   * @param property_keys the property keys for storing on-chain properties\n   * @param property_values the property values to be stored on-chain\n   * @param property_types the type of property values\n   * @param mutability_config configs which field is mutable\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>createToken\n  async createTokenWithMutabilityConfig(account, collectionName, name, description, supply, uri, max = MAX_U64_BIG_INT, royalty_payee_address = account.address(), royalty_points_denominator = 0, royalty_points_numerator = 0, property_keys = [], property_values = [], property_types = [], mutability_config = [false, false, false, false, false], extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::create_token_script\",\n      [],\n      [\n        collectionName,\n        name,\n        description,\n        supply,\n        max,\n        uri,\n        royalty_payee_address,\n        royalty_points_denominator,\n        royalty_points_numerator,\n        mutability_config,\n        property_keys,\n        property_values,\n        property_types\n      ]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Transfers specified amount of tokens from account to receiver\n   *\n   * @param account AptosAccount where token from which tokens will be transfered\n   * @param receiver  Hex-encoded 32 byte Aptos account address to which tokens will be transfered\n   * @param creator Hex-encoded 32 byte Aptos account address to which created tokens\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async offerToken(account, receiver, creator, collectionName, name, amount, property_version = 0, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token_transfers::offer_script\",\n      [],\n      [receiver, creator, collectionName, name, property_version, amount]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Claims a token on specified account\n   *\n   * @param account AptosAccount which will claim token\n   * @param sender Hex-encoded 32 byte Aptos account address which holds a token\n   * @param creator Hex-encoded 32 byte Aptos account address which created a token\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async claimToken(account, sender, creator, collectionName, name, property_version = 0, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token_transfers::claim_script\",\n      [],\n      [sender, creator, collectionName, name, property_version]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Removes a token from pending claims list\n   *\n   * @param account AptosAccount which will remove token from pending list\n   * @param receiver Hex-encoded 32 byte Aptos account address which had to claim token\n   * @param creator Hex-encoded 32 byte Aptos account address which created a token\n   * @param collectionName Name of collection where token is strored\n   * @param name Token name\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async cancelTokenOffer(account, receiver, creator, collectionName, name, property_version = 0, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token_transfers::cancel_offer_script\",\n      [],\n      [receiver, creator, collectionName, name, property_version]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Directly transfer the specified amount of tokens from account to receiver\n   * using a single multi signature transaction.\n   *\n   * @param sender AptosAccount where token from which tokens will be transferred\n   * @param receiver Hex-encoded 32 byte Aptos account address to which tokens will be transferred\n   * @param creator Hex-encoded 32 byte Aptos account address to which created tokens\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transferred\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async directTransferToken(sender, receiver, creator, collectionName, name, amount, propertyVersion = 0, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: sender.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::direct_transfer_script\",\n      [],\n      [creator, collectionName, name, propertyVersion, amount]\n    );\n    const multiAgentTxn = new aptos_types_exports.MultiAgentRawTransaction(rawTxn, [\n      aptos_types_exports.AccountAddress.fromHex(receiver.address())\n    ]);\n    const senderSignature = new aptos_types_exports.Ed25519Signature(\n      sender.signBuffer(TransactionBuilder.getSigningMessage(multiAgentTxn)).toUint8Array()\n    );\n    const senderAuthenticator = new aptos_types_exports.AccountAuthenticatorEd25519(\n      new aptos_types_exports.Ed25519PublicKey(sender.signingKey.publicKey),\n      senderSignature\n    );\n    const receiverSignature = new aptos_types_exports.Ed25519Signature(\n      receiver.signBuffer(TransactionBuilder.getSigningMessage(multiAgentTxn)).toUint8Array()\n    );\n    const receiverAuthenticator = new aptos_types_exports.AccountAuthenticatorEd25519(\n      new aptos_types_exports.Ed25519PublicKey(receiver.signingKey.publicKey),\n      receiverSignature\n    );\n    const multiAgentAuthenticator = new aptos_types_exports.TransactionAuthenticatorMultiAgent(\n      senderAuthenticator,\n      [aptos_types_exports.AccountAddress.fromHex(receiver.address())],\n      // Secondary signer addresses\n      [receiverAuthenticator]\n      // Secondary signer authenticators\n    );\n    const bcsTxn = bcsToBytes(new aptos_types_exports.SignedTransaction(rawTxn, multiAgentAuthenticator));\n    const transactionRes = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return transactionRes.hash;\n  }\n  /**\n   * Directly transfer the specified amount of tokens from account to receiver\n   * using a single multi signature transaction.\n   *\n   * @param sender AptosAccount where token from which tokens will be transferred\n   * @param receiver Hex-encoded 32 byte Aptos account address to which tokens will be transferred\n   * @param creator Hex-encoded 32 byte Aptos account address to which created tokens\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transferred\n   * @param fee_payer AptosAccount which will pay fee for transaction\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async directTransferTokenWithFeePayer(sender, receiver, creator, collectionName, name, amount, fee_payer, propertyVersion = 0, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: sender.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::direct_transfer_script\",\n      [],\n      [creator, collectionName, name, propertyVersion, amount]\n    );\n    const feePayerTxn = new aptos_types_exports.FeePayerRawTransaction(\n      rawTxn,\n      [aptos_types_exports.AccountAddress.fromHex(receiver.address())],\n      aptos_types_exports.AccountAddress.fromHex(fee_payer.address())\n    );\n    const senderSignature = new aptos_types_exports.Ed25519Signature(\n      sender.signBuffer(TransactionBuilder.getSigningMessage(feePayerTxn)).toUint8Array()\n    );\n    const senderAuthenticator = new aptos_types_exports.AccountAuthenticatorEd25519(\n      new aptos_types_exports.Ed25519PublicKey(sender.signingKey.publicKey),\n      senderSignature\n    );\n    const receiverSignature = new aptos_types_exports.Ed25519Signature(\n      receiver.signBuffer(TransactionBuilder.getSigningMessage(feePayerTxn)).toUint8Array()\n    );\n    const receiverAuthenticator = new aptos_types_exports.AccountAuthenticatorEd25519(\n      new aptos_types_exports.Ed25519PublicKey(receiver.signingKey.publicKey),\n      receiverSignature\n    );\n    const feePayerSignature = new aptos_types_exports.Ed25519Signature(\n      fee_payer.signBuffer(TransactionBuilder.getSigningMessage(feePayerTxn)).toUint8Array()\n    );\n    const feePayerAuthenticator = new aptos_types_exports.AccountAuthenticatorEd25519(\n      new aptos_types_exports.Ed25519PublicKey(fee_payer.signingKey.publicKey),\n      feePayerSignature\n    );\n    const txAuthenticatorFeePayer = new aptos_types_exports.TransactionAuthenticatorFeePayer(\n      senderAuthenticator,\n      [aptos_types_exports.AccountAddress.fromHex(receiver.address())],\n      [receiverAuthenticator],\n      { address: aptos_types_exports.AccountAddress.fromHex(fee_payer.address()), authenticator: feePayerAuthenticator }\n    );\n    const bcsTxn = bcsToBytes(new aptos_types_exports.SignedTransaction(rawTxn, txAuthenticatorFeePayer));\n    const transactionRes = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return transactionRes.hash;\n  }\n  /**\n   * User opt-in or out direct transfer through a boolean flag\n   *\n   * @param sender AptosAccount where the token will be transferred\n   * @param optIn boolean value indicates user want to opt-in or out of direct transfer\n   * @returns The hash of the transaction submitted to the API\n   */\n  async optInTokenTransfer(sender, optIn, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: sender.address(), ...extraArgs });\n    const rawTxn = await builder.build(\"0x3::token::opt_in_direct_transfer\", [], [optIn]);\n    const bcsTxn = AptosClient.generateBCSTransaction(sender, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Directly transfer token to a receiver. The receiver should have opted in to direct transfer\n   *\n   * @param sender AptosAccount where the token will be transferred\n   * @param creator  address of the token creator\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param property_version the version of token PropertyMap\n   * @param amount Amount of tokens which will be transfered\n   * @returns The hash of the transaction submitted to the API\n   */\n  async transferWithOptIn(sender, creator, collectionName, tokenName, propertyVersion, receiver, amount, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: sender.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::transfer_with_opt_in\",\n      [],\n      [creator, collectionName, tokenName, propertyVersion, receiver, amount]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(sender, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * BurnToken by Creator\n   *\n   * @param creator creator of the token\n   * @param ownerAddress address of the token owner\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap\n   * @returns The hash of the transaction submitted to the API\n   */\n  async burnByCreator(creator, ownerAddress, collection, name, PropertyVersion, amount, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: creator.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::burn_by_creator\",\n      [],\n      [ownerAddress, collection, name, PropertyVersion, amount]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(creator, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * BurnToken by Owner\n   *\n   * @param owner creator of the token\n   * @param creatorAddress address of the token creator\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap\n   * @returns The hash of the transaction submitted to the API\n   */\n  async burnByOwner(owner, creatorAddress, collection, name, PropertyVersion, amount, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: owner.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::burn\",\n      [],\n      [creatorAddress, collection, name, PropertyVersion, amount]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(owner, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * creator mutates the properties of the tokens\n   *\n   * @param account AptosAccount who modifies the token properties\n   * @param tokenOwner the address of account owning the token\n   * @param creator the creator of the token\n   * @param collection_name the name of the token collection\n   * @param tokenName the name of created token\n   * @param propertyVersion the property_version of the token to be modified\n   * @param amount the number of tokens to be modified\n   *\n   * @returns The hash of the transaction submitted to the API\n   */\n  async mutateTokenProperties(account, tokenOwner, creator, collection_name, tokenName, propertyVersion, amount, keys, values, types, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::mutate_token_properties\",\n      [],\n      [tokenOwner, creator, collection_name, tokenName, propertyVersion, amount, keys, values, types]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Queries collection data\n   * @param creator Hex-encoded 32 byte Aptos account address which created a collection\n   * @param collectionName Collection name\n   * @returns Collection data in below format\n   * ```\n   *  Collection {\n   *    // Describes the collection\n   *    description: string,\n   *    // Unique name within this creators account for this collection\n   *    name: string,\n   *    // URL for additional information/media\n   *    uri: string,\n   *    // Total number of distinct Tokens tracked by the collection\n   *    count: number,\n   *    // Optional maximum number of tokens allowed within this collections\n   *    maximum: number\n   *  }\n   * ```\n   */\n  async getCollectionData(creator, collectionName) {\n    const resources = await this.aptosClient.getAccountResources(creator);\n    const accountResource = resources.find(\n      (r) => r.type === \"0x3::token::Collections\"\n    );\n    const { handle } = accountResource.data.collection_data;\n    const getCollectionTableItemRequest = {\n      key_type: \"0x1::string::String\",\n      value_type: \"0x3::token::CollectionData\",\n      key: collectionName\n    };\n    const collectionTable = await this.aptosClient.getTableItem(handle, getCollectionTableItemRequest);\n    return collectionTable;\n  }\n  /**\n   * Queries token data from collection\n   *\n   * @param creator Hex-encoded 32 byte Aptos account address which created a token\n   * @param collectionName Name of collection, which holds a token\n   * @param tokenName Token name\n   * @returns Token data in below format\n   * ```\n   * TokenData {\n   *     // Unique name within this creators account for this Token's collection\n   *     collection: string;\n   *     // Describes this Token\n   *     description: string;\n   *     // The name of this Token\n   *     name: string;\n   *     // Optional maximum number of this type of Token.\n   *     maximum: number;\n   *     // Total number of this type of Token\n   *     supply: number;\n   *     /// URL for additional information / media\n   *     uri: string;\n   *   }\n   * ```\n   */\n  // :!:>getTokenData\n  async getTokenData(creator, collectionName, tokenName) {\n    const creatorHex = creator instanceof HexString ? creator.hex() : creator;\n    const collection = await this.aptosClient.getAccountResource(\n      creatorHex,\n      \"0x3::token::Collections\"\n    );\n    const { handle } = collection.data.token_data;\n    const tokenDataId = {\n      creator: creatorHex,\n      collection: collectionName,\n      name: tokenName\n    };\n    const getTokenTableItemRequest = {\n      key_type: \"0x3::token::TokenDataId\",\n      value_type: \"0x3::token::TokenData\",\n      key: tokenDataId\n    };\n    const rawTokenData = await this.aptosClient.getTableItem(handle, getTokenTableItemRequest);\n    return new TokenData(\n      rawTokenData.collection,\n      rawTokenData.description,\n      rawTokenData.name,\n      rawTokenData.maximum,\n      rawTokenData.supply,\n      rawTokenData.uri,\n      rawTokenData.default_properties,\n      rawTokenData.mutability_config\n    );\n  }\n  // <:!:getTokenData\n  /**\n   * Queries token balance for the token creator\n   */\n  async getToken(creator, collectionName, tokenName, property_version = \"0\") {\n    const tokenDataId = {\n      creator: creator instanceof HexString ? creator.hex() : creator,\n      collection: collectionName,\n      name: tokenName\n    };\n    return this.getTokenForAccount(creator, {\n      token_data_id: tokenDataId,\n      property_version\n    });\n  }\n  /**\n   * Queries token balance for a token account\n   * @param account Hex-encoded 32 byte Aptos account address which created a token\n   * @param tokenId token id\n   *\n   * TODO: Update this:\n   * @example\n   * ```\n   * {\n   *   creator: '0x1',\n   *   collection: 'Some collection',\n   *   name: 'Awesome token'\n   * }\n   * ```\n   * @returns Token object in below format\n   * ```\n   * Token {\n   *   id: TokenId;\n   *   value: number;\n   * }\n   * ```\n   */\n  async getTokenForAccount(account, tokenId) {\n    const tokenStore = await this.aptosClient.getAccountResource(\n      account instanceof HexString ? account.hex() : account,\n      \"0x3::token::TokenStore\"\n    );\n    const { handle } = tokenStore.data.tokens;\n    const getTokenTableItemRequest = {\n      key_type: \"0x3::token::TokenId\",\n      value_type: \"0x3::token::Token\",\n      key: tokenId\n    };\n    try {\n      const rawToken = await this.aptosClient.getTableItem(handle, getTokenTableItemRequest);\n      return new Token(rawToken.id, rawToken.amount, rawToken.token_properties);\n    } catch (error) {\n      if ((error == null ? void 0 : error.status) === 404) {\n        return {\n          id: tokenId,\n          amount: \"0\",\n          token_properties: new PropertyMap()\n        };\n      }\n      return error;\n    }\n  }\n};\n\n// src/plugins/fungible_asset_client.ts\nvar FungibleAssetClient = class {\n  /**\n   * Creates new FungibleAssetClient instance\n   *\n   * @param provider Provider instance\n   */\n  constructor(provider) {\n    this.assetType = \"0x1::fungible_asset::Metadata\";\n    this.provider = provider;\n  }\n  /**\n   *  Transfer `amount` of fungible asset from sender's primary store to recipient's primary store.\n   *\n   * Use this method to transfer any fungible asset including fungible token.\n   *\n   * @param sender The sender account\n   * @param fungibleAssetMetadataAddress The fungible asset address.\n   * For example if you’re transferring USDT this would be the USDT address\n   * @param recipient Recipient address\n   * @param amount Number of assets to transfer\n   * @returns The hash of the transaction submitted to the API\n   */\n  async transfer(sender, fungibleAssetMetadataAddress, recipient, amount, extraArgs) {\n    const rawTransaction = await this.generateTransfer(\n      sender,\n      fungibleAssetMetadataAddress,\n      recipient,\n      amount,\n      extraArgs\n    );\n    const txnHash = await this.provider.signAndSubmitTransaction(sender, rawTransaction);\n    return txnHash;\n  }\n  /**\n   * Get the balance of a fungible asset from the account's primary fungible store.\n   *\n   * @param account Account that you want to get the balance of.\n   * @param fungibleAssetMetadataAddress The fungible asset address you want to check the balance of\n   * @returns Promise that resolves to the balance\n   */\n  async getPrimaryBalance(account, fungibleAssetMetadataAddress) {\n    const payload = {\n      function: \"0x1::primary_fungible_store::balance\",\n      type_arguments: [this.assetType],\n      arguments: [HexString.ensure(account).hex(), HexString.ensure(fungibleAssetMetadataAddress).hex()]\n    };\n    const response = await this.provider.view(payload);\n    return BigInt(response[0]);\n  }\n  /**\n   *\n   * Generate a transfer transaction that can be used to sign and submit to transfer an asset amount\n   * from the sender primary fungible store to the recipient primary fungible store.\n   *\n   * This method can be used if you want/need to get the raw transaction so you can\n   * first simulate the transaction and then sign and submit it.\n   *\n   * @param sender The sender account\n   * @param fungibleAssetMetadataAddress The fungible asset address.\n   * For example if you’re transferring USDT this would be the USDT address\n   * @param recipient Recipient address\n   * @param amount Number of assets to transfer\n   * @returns Raw Transaction\n   */\n  async generateTransfer(sender, fungibleAssetMetadataAddress, recipient, amount, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.provider, {\n      sender: sender.address(),\n      ...extraArgs\n    });\n    const rawTxn = await builder.build(\n      \"0x1::primary_fungible_store::transfer\",\n      [this.assetType],\n      [HexString.ensure(fungibleAssetMetadataAddress).hex(), HexString.ensure(recipient).hex(), amount]\n    );\n    return rawTxn;\n  }\n};\n\n// src/plugins/aptos_token.ts\nvar PropertyTypeMap = {\n  BOOLEAN: \"bool\",\n  U8: \"u8\",\n  U16: \"u16\",\n  U32: \"u32\",\n  U64: \"u64\",\n  U128: \"u128\",\n  U256: \"u256\",\n  ADDRESS: \"address\",\n  VECTOR: \"vector<u8>\",\n  STRING: \"string\"\n};\nvar AptosToken = class {\n  /**\n   * Creates new AptosToken instance\n   *\n   * @param provider Provider instance\n   */\n  constructor(provider) {\n    this.tokenType = \"0x4::token::Token\";\n    this.provider = provider;\n  }\n  async submitTransaction(account, funcName, typeArgs, args, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.provider, {\n      sender: account.address(),\n      ...extraArgs\n    });\n    const rawTxn = await builder.build(`0x4::aptos_token::${funcName}`, typeArgs, args);\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.provider.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Creates a new collection within the specified account\n   *\n   * @param creator AptosAccount where collection will be created\n   * @param description Collection description\n   * @param name Collection name\n   * @param uri URL to additional info about collection\n   * @param options CreateCollectionOptions type. By default all values set to `true` or `0`\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>createCollection\n  async createCollection(creator, description, name, uri, maxSupply = MAX_U64_BIG_INT, options, extraArgs) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k;\n    return this.submitTransaction(\n      creator,\n      \"create_collection\",\n      [],\n      [\n        description,\n        maxSupply,\n        name,\n        uri,\n        (_a = options == null ? void 0 : options.mutableDescription) != null ? _a : true,\n        (_b = options == null ? void 0 : options.mutableRoyalty) != null ? _b : true,\n        (_c = options == null ? void 0 : options.mutableURI) != null ? _c : true,\n        (_d = options == null ? void 0 : options.mutableTokenDescription) != null ? _d : true,\n        (_e = options == null ? void 0 : options.mutableTokenName) != null ? _e : true,\n        (_f = options == null ? void 0 : options.mutableTokenProperties) != null ? _f : true,\n        (_g = options == null ? void 0 : options.mutableTokenURI) != null ? _g : true,\n        (_h = options == null ? void 0 : options.tokensBurnableByCreator) != null ? _h : true,\n        (_i = options == null ? void 0 : options.tokensFreezableByCreator) != null ? _i : true,\n        (_j = options == null ? void 0 : options.royaltyNumerator) != null ? _j : 0,\n        (_k = options == null ? void 0 : options.royaltyDenominator) != null ? _k : 1\n      ],\n      extraArgs\n    );\n  }\n  /**\n   * Mint a new token within the specified account\n   *\n   * @param account AptosAccount where token will be created\n   * @param collection Name of collection, that token belongs to\n   * @param description Token description\n   * @param name Token name\n   * @param uri URL to additional info about token\n   * @param propertyKeys the property keys for storing on-chain properties\n   * @param propertyTypes the type of property values\n   * @param propertyValues the property values to be stored on-chain\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>mint\n  async mint(account, collection, description, name, uri, propertyKeys = [], propertyTypes = [], propertyValues = [], extraArgs) {\n    return this.submitTransaction(\n      account,\n      \"mint\",\n      [],\n      [\n        collection,\n        description,\n        name,\n        uri,\n        propertyKeys,\n        propertyTypes,\n        getPropertyValueRaw(propertyValues, propertyTypes)\n      ],\n      extraArgs\n    );\n  }\n  /**\n   * Mint a soul bound token into a recipient's account\n   *\n   * @param account AptosAccount that mints the token\n   * @param collection Name of collection, that token belongs to\n   * @param description Token description\n   * @param name Token name\n   * @param uri URL to additional info about token\n   * @param recipient AptosAccount where token will be created\n   * @param propertyKeys the property keys for storing on-chain properties\n   * @param propertyTypes the type of property values\n   * @param propertyValues the property values to be stored on-chain\n   * @returns The hash of the transaction submitted to the API\n   */\n  async mintSoulBound(account, collection, description, name, uri, recipient, propertyKeys = [], propertyTypes = [], propertyValues = [], extraArgs) {\n    return this.submitTransaction(\n      account,\n      \"mint_soul_bound\",\n      [],\n      [\n        collection,\n        description,\n        name,\n        uri,\n        propertyKeys,\n        propertyTypes,\n        getPropertyValueRaw(propertyValues, propertyTypes),\n        recipient.address().hex()\n      ],\n      extraArgs\n    );\n  }\n  /**\n   * Burn a token by its creator\n   * @param creator Creator account\n   * @param token Token address\n   * @returns The hash of the transaction submitted to the API\n   */\n  async burnToken(creator, token, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"burn\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex()],\n      extraArgs\n    );\n  }\n  /**\n   * Freeze token transfer ability\n   * @param creator Creator account\n   * @param token Token address\n   * @returns The hash of the transaction submitted to the API\n   */\n  async freezeTokenTransafer(creator, token, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"freeze_transfer\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex()],\n      extraArgs\n    );\n  }\n  /**\n   * Unfreeze token transfer ability\n   * @param creator Creator account\n   * @param token Token address\n   * @returns The hash of the transaction submitted to the API\n   */\n  async unfreezeTokenTransafer(creator, token, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"unfreeze_transfer\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex()],\n      extraArgs\n    );\n  }\n  /**\n   * Set token description\n   * @param creator Creator account\n   * @param token Token address\n   * @param description Token description\n   * @returns The hash of the transaction submitted to the API\n   */\n  async setTokenDescription(creator, token, description, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"set_description\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), description],\n      extraArgs\n    );\n  }\n  /**\n   * Set token name\n   * @param creator Creator account\n   * @param token Token address\n   * @param name Token name\n   * @returns The hash of the transaction submitted to the API\n   */\n  async setTokenName(creator, token, name, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"set_name\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), name],\n      extraArgs\n    );\n  }\n  /**\n   * Set token URI\n   * @param creator Creator account\n   * @param token Token address\n   * @param uri Token uri\n   * @returns The hash of the transaction submitted to the API\n   */\n  async setTokenURI(creator, token, uri, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"set_uri\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), uri],\n      extraArgs\n    );\n  }\n  /**\n   * Add token property\n   * @param creator Creator account\n   * @param token Token address\n   * @param key the property key for storing on-chain property\n   * @param type the type of property value\n   * @param value the property value to be stored on-chain\n   * @returns The hash of the transaction submitted to the API\n   */\n  async addTokenProperty(creator, token, propertyKey, propertyType, propertyValue, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"add_property\",\n      [tokenType || this.tokenType],\n      [\n        HexString.ensure(token).hex(),\n        propertyKey,\n        PropertyTypeMap[propertyType],\n        getSinglePropertyValueRaw(propertyValue, PropertyTypeMap[propertyType])\n      ],\n      extraArgs\n    );\n  }\n  /**\n   * Remove token property\n   * @param creator Creator account\n   * @param token Token address\n   * @param key the property key stored on-chain\n   * @returns The hash of the transaction submitted to the API\n   */\n  async removeTokenProperty(creator, token, propertyKey, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"remove_property\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), propertyKey],\n      extraArgs\n    );\n  }\n  /**\n   * Update token property\n   * @param creator Creator account\n   * @param token Token address\n   * @param key the property key stored on-chain\n   * @param type the property typed stored on-chain\n   * @param value the property value to be stored on-chain\n   * @returns The hash of the transaction submitted to the API\n   */\n  async updateTokenProperty(creator, token, propertyKey, propertyType, propertyValue, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"update_property\",\n      [tokenType || this.tokenType],\n      [\n        HexString.ensure(token).hex(),\n        propertyKey,\n        PropertyTypeMap[propertyType],\n        getSinglePropertyValueRaw(propertyValue, PropertyTypeMap[propertyType])\n      ],\n      extraArgs\n    );\n  }\n  async addTypedProperty(creator, token, propertyKey, propertyType, propertyValue, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"add_typed_property\",\n      [tokenType || this.tokenType, PropertyTypeMap[propertyType]],\n      [HexString.ensure(token).hex(), propertyKey, propertyValue],\n      extraArgs\n    );\n  }\n  async updateTypedProperty(creator, token, propertyKey, propertyType, propertyValue, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"update_typed_property\",\n      [tokenType || this.tokenType, PropertyTypeMap[propertyType]],\n      [HexString.ensure(token).hex(), propertyKey, propertyValue],\n      extraArgs\n    );\n  }\n  /**\n   * Transfer a non fungible token ownership.\n   * We can transfer a token only when the token is not frozen (i.e. owner transfer is not disabled such as for soul bound tokens)\n   * @param owner The account of the current token owner\n   * @param token Token address\n   * @param recipient Recipient address\n   * @returns The hash of the transaction submitted to the API\n   */\n  async transferTokenOwnership(owner, token, recipient, tokenType, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.provider, {\n      sender: owner.address(),\n      ...extraArgs\n    });\n    const rawTxn = await builder.build(\n      \"0x1::object::transfer\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), HexString.ensure(recipient).hex()]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(owner, rawTxn);\n    const pendingTransaction = await this.provider.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Transfer a token. This function supports transfer non-fungible token and fungible token.\n   *\n   * To set the token type, set isFungibleToken param to true or false.\n   * If isFungibleToken param is not set, the function would query Indexer\n   * for the token data and check whether it is a non-fungible or a fungible token.\n   *\n   * Note: this function supports only token v2 standard (it does not support the token v1 standard)\n   *\n   * @param data NonFungibleTokenParameters | FungibleTokenParameters type\n   * @param isFungibleToken (optional) The token type, non-fungible or fungible token.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async transfer(data, isFungibleToken) {\n    let isFungible = isFungibleToken;\n    if (isFungible === void 0 || isFungible === null) {\n      const tokenData = await this.provider.getTokenData(HexString.ensure(data.tokenAddress).hex());\n      isFungible = tokenData.current_token_datas_v2[0].is_fungible_v2;\n    }\n    if (isFungible) {\n      const token2 = data;\n      const fungibleAsset = new FungibleAssetClient(this.provider);\n      const txnHash2 = await fungibleAsset.transfer(\n        token2.owner,\n        token2.tokenAddress,\n        token2.recipient,\n        token2.amount,\n        token2.extraArgs\n      );\n      return txnHash2;\n    }\n    const token = data;\n    const txnHash = await this.transferTokenOwnership(\n      token.owner,\n      token.tokenAddress,\n      token.recipient,\n      token.tokenType,\n      token.extraArgs\n    );\n    return txnHash;\n  }\n  /**\n   * Burn an object by the object owner\n   * @param owner The object owner account\n   * @param objectId The object address\n   * @optional objectType. The object type, default to \"0x1::object::ObjectCore\"\n   * @returns The hash of the transaction submitted to the API\n   */\n  async burnObject(owner, objectId, objectType, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.provider, {\n      sender: owner.address(),\n      ...extraArgs\n    });\n    const rawTxn = await builder.build(\n      \"0x1::object::burn\",\n      [objectType || \"0x1::object::ObjectCore\"],\n      [HexString.ensure(objectId).hex()]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(owner, rawTxn);\n    const pendingTransaction = await this.provider.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n};\n\n// src/plugins/coin_client.ts\nvar TRANSFER_COINS = \"0x1::aptos_account::transfer_coins\";\nvar COIN_TRANSFER = \"0x1::coin::transfer\";\nvar CoinClient = class {\n  /**\n   * Creates new CoinClient instance\n   * @param aptosClient AptosClient instance\n   */\n  constructor(aptosClient2) {\n    this.aptosClient = aptosClient2;\n  }\n  /**\n   * Generate, sign, and submit a transaction to the Aptos blockchain API to\n   * transfer coins from one account to another. By default it transfers\n   * 0x1::aptos_coin::AptosCoin, but you can specify a different coin type\n   * with the `coinType` argument.\n   *\n   * You may set `createReceiverIfMissing` to true if you want to create the\n   * receiver account if it does not exist on chain yet. If you do not set\n   * this to true, the transaction will fail if the receiver account does not\n   * exist on-chain.\n   *\n   * The TS SDK supports fungible assets operations. If you want to use CoinClient\n   * with this feature, set the `coinType` to be the fungible asset metadata address.\n   * This option uses the `FungibleAssetClient` class and queries the\n   * fungible asset primary store.\n   *\n   * @param from Account sending the coins\n   * @param to Account to receive the coins\n   * @param amount Number of coins to transfer\n   * @param extraArgs Extra args for building the transaction or configuring how\n   * the client should submit and wait for the transaction\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>transfer\n  async transfer(from, to, amount, extraArgs) {\n    var _a, _b, _c;\n    const isTypeTag = ((_a = extraArgs == null ? void 0 : extraArgs.coinType) != null ? _a : \"\").toString().includes(\"::\");\n    if ((extraArgs == null ? void 0 : extraArgs.coinType) && !isTypeTag && AccountAddress.isValid(extraArgs.coinType)) {\n      console.warn(\"to transfer a fungible asset, use `FungibleAssetClient()` class for better support\");\n      const provider = new Provider({\n        fullnodeUrl: this.aptosClient.nodeUrl,\n        indexerUrl: (_b = NetworkToIndexerAPI[NodeAPIToNetwork[this.aptosClient.nodeUrl]]) != null ? _b : this.aptosClient.nodeUrl\n      });\n      const fungibleAsset = new FungibleAssetClient(provider);\n      const txnHash = await fungibleAsset.transfer(\n        from,\n        extraArgs == null ? void 0 : extraArgs.coinType,\n        getAddressFromAccountOrAddress(to),\n        amount\n      );\n      return txnHash;\n    }\n    const coinTypeToTransfer = (_c = extraArgs == null ? void 0 : extraArgs.coinType) != null ? _c : APTOS_COIN;\n    let func;\n    if ((extraArgs == null ? void 0 : extraArgs.createReceiverIfMissing) === void 0) {\n      func = TRANSFER_COINS;\n    } else {\n      func = (extraArgs == null ? void 0 : extraArgs.createReceiverIfMissing) ? TRANSFER_COINS : COIN_TRANSFER;\n    }\n    const toAddress = getAddressFromAccountOrAddress(to);\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: from.address(), ...extraArgs });\n    const rawTxn = await builder.build(func, [coinTypeToTransfer], [toAddress, amount]);\n    const bcsTxn = AptosClient.generateBCSTransaction(from, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  // <:!:transfer\n  /**\n   * Get the balance of the account. By default it checks the balance of\n   * 0x1::aptos_coin::AptosCoin, but you can specify a different coin type.\n   *\n   * to use a different type, set the `coinType` to be the fungible asset type.\n   *\n   * The TS SDK supports fungible assets operations. If you want to use CoinClient\n   * with this feature, set the `coinType` to be the fungible asset metadata address.\n   * This option uses the FungibleAssetClient class and queries the\n   * fungible asset primary store.\n   *\n   * @param account Account that you want to get the balance of.\n   * @param extraArgs Extra args for checking the balance.\n   * @returns Promise that resolves to the balance as a bigint.\n   */\n  // :!:>checkBalance\n  async checkBalance(account, extraArgs) {\n    var _a, _b, _c;\n    const isTypeTag = ((_a = extraArgs == null ? void 0 : extraArgs.coinType) != null ? _a : \"\").toString().includes(\"::\");\n    if ((extraArgs == null ? void 0 : extraArgs.coinType) && !isTypeTag && AccountAddress.isValid(extraArgs.coinType)) {\n      console.warn(\"to check balance of a fungible asset, use `FungibleAssetClient()` class for better support\");\n      const provider = new Provider({\n        fullnodeUrl: this.aptosClient.nodeUrl,\n        indexerUrl: (_b = NetworkToIndexerAPI[NodeAPIToNetwork[this.aptosClient.nodeUrl]]) != null ? _b : this.aptosClient.nodeUrl\n      });\n      const fungibleAsset = new FungibleAssetClient(provider);\n      const balance = await fungibleAsset.getPrimaryBalance(\n        getAddressFromAccountOrAddress(account),\n        extraArgs == null ? void 0 : extraArgs.coinType\n      );\n      return balance;\n    }\n    const coinType = (_c = extraArgs == null ? void 0 : extraArgs.coinType) != null ? _c : APTOS_COIN;\n    const typeTag = `0x1::coin::CoinStore<${coinType}>`;\n    const address = getAddressFromAccountOrAddress(account);\n    const accountResource = await this.aptosClient.getAccountResource(address, typeTag);\n    return BigInt(accountResource.data.coin.value);\n  }\n  // <:!:checkBalance\n};\n\n// src/plugins/faucet_client.ts\nvar FaucetClient = class extends AptosClient {\n  /**\n   * Establishes a connection to Aptos node\n   * @param nodeUrl A url of the Aptos Node API endpoint\n   * @param faucetUrl A faucet url\n   * @param config An optional config for inner axios instance\n   * Detailed config description: {@link https://github.com/axios/axios#request-config}\n   */\n  constructor(nodeUrl, faucetUrl, config) {\n    super(nodeUrl, config);\n    if (!faucetUrl) {\n      throw new Error(\"Faucet URL cannot be empty.\");\n    }\n    this.faucetUrl = faucetUrl;\n    this.config = config;\n  }\n  /**\n   * This creates an account if it does not exist and mints the specified amount of\n   * coins into that account\n   * @param address Hex-encoded 16 bytes Aptos account address wich mints tokens\n   * @param amount Amount of tokens to mint\n   * @param timeoutSecs\n   * @returns Hashes of submitted transactions\n   */\n  async fundAccount(address, amount, timeoutSecs = DEFAULT_TXN_TIMEOUT_SEC) {\n    const { data } = await post({\n      url: this.faucetUrl,\n      endpoint: \"mint\",\n      body: null,\n      params: {\n        address: HexString.ensure(address).noPrefix(),\n        amount\n      },\n      overrides: { ...this.config },\n      originMethod: \"fundAccount\"\n    });\n    const promises = [];\n    for (let i = 0; i < data.length; i += 1) {\n      const tnxHash = data[i];\n      promises.push(this.waitForTransaction(tnxHash, { timeoutSecs }));\n    }\n    await Promise.all(promises);\n    return data;\n  }\n};\n\n// src/plugins/ans_client.ts\nvar ansContractsMap = {\n  testnet: \"0x5f8fd2347449685cf41d4db97926ec3a096eaf381332be4f1318ad4d16a8497c\",\n  mainnet: \"0x867ed1f6bf916171b1de3ee92849b8978b7d1b9e0a8cc982a3d19d535dfd9c0c\"\n};\nvar nameComponentPattern = /^[a-z\\d][a-z\\d-]{1,61}[a-z\\d]$/;\nvar namePattern = new RegExp(\n  \"^(?:(?<subdomain>[^.]+)\\\\.(?!apt$))?(?<domain>[^.]+)(?:\\\\.apt)?$\"\n);\nvar AnsClient = class {\n  /**\n   * Creates new AnsClient instance\n   * @param provider Provider instance\n   * @param contractAddress An optional contract address.\n   * If there is no contract address matching to the provided network\n   * then the AnsClient class expects a contract address -\n   * this is to support both mainnet/testnet networks and local development.\n   */\n  constructor(provider, contractAddress) {\n    var _a;\n    this.provider = provider;\n    if (!ansContractsMap[this.provider.network] && !contractAddress) {\n      throw new Error(\"Error: For custom providers, you must pass in a contract address\");\n    }\n    this.contractAddress = (_a = ansContractsMap[this.provider.network]) != null ? _a : contractAddress;\n  }\n  /**\n   * Returns the primary name for the given account address\n   * @param address An account address\n   * @returns Account's primary name | null if there is no primary name defined\n   */\n  async getPrimaryNameByAddress(address) {\n    const ansResource = await this.provider.getAccountResource(\n      this.contractAddress,\n      `${this.contractAddress}::domains::ReverseLookupRegistryV1`\n    );\n    const data = ansResource.data;\n    const { handle } = data.registry;\n    const domainsTableItemRequest = {\n      key_type: \"address\",\n      value_type: `${this.contractAddress}::domains::NameRecordKeyV1`,\n      key: address\n    };\n    try {\n      const item = await this.provider.getTableItem(handle, domainsTableItemRequest);\n      return item.subdomain_name.vec[0] ? `${item.subdomain_name.vec[0]}.${item.domain_name}` : item.domain_name;\n    } catch (error) {\n      if (error.status === 404) {\n        return null;\n      }\n      throw new Error(error);\n    }\n  }\n  /**\n   * Returns the target account address for the given name\n   * @param name ANS name\n   * @returns Account address | null\n   */\n  async getAddressByName(name) {\n    var _a, _b;\n    const { domain, subdomain } = (_b = (_a = name.match(namePattern)) == null ? void 0 : _a.groups) != null ? _b : {};\n    if (!domain)\n      return null;\n    const registration = subdomain ? await this.getRegistrationForSubdomainName(domain, subdomain) : await this.getRegistrationForDomainName(domain);\n    return registration === null ? null : registration.target;\n  }\n  /**\n   * Mint a new Aptos name\n   *\n   * @param account AptosAccount where collection will be created\n   * @param domainName Aptos domain name to mint\n   * @param years year duration of the domain name\n   * @returns The hash of the pending transaction submitted to the API\n   */\n  async mintAptosName(account, domainName, years = 1, extraArgs) {\n    if (domainName.match(nameComponentPattern) === null) {\n      throw new ApiError(400, `Name ${domainName} is not valid`);\n    }\n    const registration = await this.getRegistrationForDomainName(domainName);\n    if (registration) {\n      const now2 = Math.ceil(Date.now() / 1e3);\n      if (now2 < registration.expirationTimestampSeconds) {\n        throw new ApiError(400, `Name ${domainName} is not available`);\n      }\n    }\n    const builder = new TransactionBuilderRemoteABI(this.provider.aptosClient, {\n      sender: account.address(),\n      ...extraArgs\n    });\n    const rawTxn = await builder.build(`${this.contractAddress}::domains::register_domain`, [], [domainName, years]);\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.provider.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Mint a new Aptos Subdomain\n   *\n   * @param account AptosAccount the owner of the domain name\n   * @param subdomainName subdomain name to mint\n   * @param domainName Aptos domain name to mint under\n   * @param expirationTimestampSeconds must be set between the domains expiration and the current time\n   * @returns The hash of the pending transaction submitted to the API\n   */\n  async mintAptosSubdomain(account, subdomainName, domainName, expirationTimestampSeconds, extraArgs) {\n    if (domainName.match(nameComponentPattern) === null) {\n      throw new ApiError(400, `Domain name ${domainName} is not valid`);\n    }\n    if (subdomainName.match(nameComponentPattern) === null) {\n      throw new ApiError(400, `Subdomain name ${subdomainName} is not valid`);\n    }\n    const subdomainRegistration = await this.getRegistrationForSubdomainName(domainName, subdomainName);\n    if (subdomainRegistration) {\n      const now3 = Math.ceil(Date.now() / 1e3);\n      if (now3 < subdomainRegistration.expirationTimestampSeconds) {\n        throw new ApiError(400, `Name ${subdomainName}.${domainName} is not available`);\n      }\n    }\n    const domainRegistration = await this.getRegistrationForDomainName(domainName);\n    if (domainRegistration === null) {\n      throw new ApiError(400, `Domain name ${domainName} does not exist`);\n    }\n    const now2 = Math.ceil(Date.now() / 1e3);\n    if (domainRegistration.expirationTimestampSeconds < now2) {\n      throw new ApiError(400, `Domain name ${domainName} expired`);\n    }\n    const actualExpirationTimestampSeconds = expirationTimestampSeconds || domainRegistration.expirationTimestampSeconds;\n    if (actualExpirationTimestampSeconds < now2) {\n      throw new ApiError(400, `Expiration for ${subdomainName}.${domainName} is before now`);\n    }\n    const builder = new TransactionBuilderRemoteABI(this.provider.aptosClient, {\n      sender: account.address(),\n      ...extraArgs\n    });\n    const rawTxn = await builder.build(\n      `${this.contractAddress}::domains::register_subdomain`,\n      [],\n      [subdomainName, domainName, actualExpirationTimestampSeconds]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.provider.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * @param account AptosAccount the owner of the domain name\n   * @param subdomainName subdomain name to mint\n   * @param domainName Aptos domain name to mint\n   * @param target the target address for the subdomain\n   * @returns The hash of the pending transaction submitted to the API\n   */\n  async setSubdomainAddress(account, subdomainName, domainName, target, extraArgs) {\n    const standardizeAddress = AccountAddress.standardizeAddress(target);\n    if (domainName.match(nameComponentPattern) === null) {\n      throw new ApiError(400, `Name ${domainName} is not valid`);\n    }\n    if (subdomainName.match(nameComponentPattern) === null) {\n      throw new ApiError(400, `Name ${subdomainName} is not valid`);\n    }\n    const builder = new TransactionBuilderRemoteABI(this.provider.aptosClient, {\n      sender: account.address(),\n      ...extraArgs\n    });\n    const rawTxn = await builder.build(\n      `${this.contractAddress}::domains::set_subdomain_address`,\n      [],\n      [subdomainName, domainName, standardizeAddress]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.provider.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Initialize reverse lookup for contract owner\n   *\n   * @param owner the `aptos_names` AptosAccount\n   * @returns The hash of the pending transaction submitted to the API\n   */\n  async initReverseLookupRegistry(owner, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.provider.aptosClient, {\n      sender: owner.address(),\n      ...extraArgs\n    });\n    const rawTxn = await builder.build(`${this.contractAddress}::domains::init_reverse_lookup_registry_v1`, [], []);\n    const bcsTxn = AptosClient.generateBCSTransaction(owner, rawTxn);\n    const pendingTransaction = await this.provider.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  /**\n   * Returns the AnsRegistry for the given domain name\n   * @param domain domain name\n   * @example\n   * if name is `aptos.apt`\n   * domain = aptos\n   *\n   * @returns AnsRegistry | null\n   */\n  async getRegistrationForDomainName(domain) {\n    if (domain.match(nameComponentPattern) === null)\n      return null;\n    const ansResource = await this.provider.getAccountResource(\n      this.contractAddress,\n      `${this.contractAddress}::domains::NameRegistryV1`\n    );\n    const data = ansResource.data;\n    const { handle } = data.registry;\n    const domainsTableItemRequest = {\n      key_type: `${this.contractAddress}::domains::NameRecordKeyV1`,\n      value_type: `${this.contractAddress}::domains::NameRecordV1`,\n      key: {\n        subdomain_name: { vec: [] },\n        domain_name: domain\n      }\n    };\n    try {\n      const item = await this.provider.getTableItem(handle, domainsTableItemRequest);\n      return {\n        target: item.target_address.vec.length === 1 ? item.target_address.vec[0] : null,\n        expirationTimestampSeconds: item.expiration_time_sec\n      };\n    } catch (error) {\n      if (error.status === 404) {\n        return null;\n      }\n      throw new Error(error);\n    }\n  }\n  /**\n   * Returns the AnsRegistry for the given subdomain_name\n   * @param domain domain name\n   * @param subdomain subdomain name\n   * @example\n   * if name is `dev.aptos.apt`\n   * domain = aptos\n   * subdomain = dev\n   *\n   * @returns AnsRegistry | null\n   */\n  async getRegistrationForSubdomainName(domain, subdomain) {\n    if (domain.match(nameComponentPattern) === null)\n      return null;\n    if (subdomain.match(nameComponentPattern) === null)\n      return null;\n    const ansResource = await this.provider.getAccountResource(\n      this.contractAddress,\n      `${this.contractAddress}::domains::NameRegistryV1`\n    );\n    const data = ansResource.data;\n    const { handle } = data.registry;\n    const domainsTableItemRequest = {\n      key_type: `${this.contractAddress}::domains::NameRecordKeyV1`,\n      value_type: `${this.contractAddress}::domains::NameRecordV1`,\n      key: {\n        subdomain_name: { vec: [subdomain] },\n        domain_name: domain\n      }\n    };\n    try {\n      const item = await this.provider.getTableItem(handle, domainsTableItemRequest);\n      return {\n        target: item.target_address.vec.length === 1 ? item.target_address.vec[0] : null,\n        expirationTimestampSeconds: item.expiration_time_sec\n      };\n    } catch (error) {\n      if (error.status === 404) {\n        return null;\n      }\n      throw new Error(error);\n    }\n  }\n};\n\n// src/transactions/account_sequence_number.ts\nvar now = () => Math.floor(Date.now() / 1e3);\nvar AccountSequenceNumber = class {\n  constructor(provider, account, maxWaitTime, maximumInFlight, sleepTime) {\n    // sequence number on chain\n    this.lastUncommintedNumber = null;\n    // local sequence number\n    this.currentNumber = null;\n    /**\n     * We want to guarantee that we preserve ordering of workers to requests.\n     *\n     * `lock` is used to try to prevent multiple coroutines from accessing a shared resource at the same time,\n     * which can result in race conditions and data inconsistency.\n     * This code actually doesn't do it though, since we aren't giving out a slot, it is still somewhat a race condition.\n     *\n     * The ideal solution is likely that each thread grabs the next number from a incremental integer.\n     * When they complete, they increment that number and that entity is able to enter the `lock`.\n     * That would guarantee ordering.\n     */\n    this.lock = false;\n    this.provider = provider;\n    this.account = account;\n    this.maxWaitTime = maxWaitTime;\n    this.maximumInFlight = maximumInFlight;\n    this.sleepTime = sleepTime;\n  }\n  /**\n   * Returns the next available sequence number for this account\n   *\n   * @returns next available sequence number\n   */\n  async nextSequenceNumber() {\n    while (this.lock) {\n      await sleep(this.sleepTime);\n    }\n    this.lock = true;\n    let nextNumber = BigInt(0);\n    try {\n      if (this.lastUncommintedNumber === null || this.currentNumber === null) {\n        await this.initialize();\n      }\n      if (this.currentNumber - this.lastUncommintedNumber >= this.maximumInFlight) {\n        await this.update();\n        const startTime = now();\n        while (this.currentNumber - this.lastUncommintedNumber >= this.maximumInFlight) {\n          await sleep(this.sleepTime);\n          if (now() - startTime > this.maxWaitTime) {\n            console.warn(`Waited over 30 seconds for a transaction to commit, resyncing ${this.account.address()}`);\n            await this.initialize();\n          } else {\n            await this.update();\n          }\n        }\n      }\n      nextNumber = this.currentNumber;\n      this.currentNumber += BigInt(1);\n    } catch (e) {\n      console.error(\"error in getting next sequence number for this account\", e);\n    } finally {\n      this.lock = false;\n    }\n    return nextNumber;\n  }\n  /**\n   * Initializes this account with the sequence number on chain\n   */\n  async initialize() {\n    const { sequence_number: sequenceNumber } = await this.provider.getAccount(this.account.address());\n    this.currentNumber = BigInt(sequenceNumber);\n    this.lastUncommintedNumber = BigInt(sequenceNumber);\n  }\n  /**\n   * Updates this account sequence number with the one on-chain\n   *\n   * @returns on-chain sequence number for this account\n   */\n  async update() {\n    const { sequence_number: sequenceNumber } = await this.provider.getAccount(this.account.address());\n    this.lastUncommintedNumber = BigInt(sequenceNumber);\n    return this.lastUncommintedNumber;\n  }\n  /**\n   * Synchronizes local sequence number with the seqeunce number on chain for this account.\n   *\n   * Poll the network until all submitted transactions have either been committed or until\n   * the maximum wait time has elapsed\n   */\n  async synchronize() {\n    if (this.lastUncommintedNumber === this.currentNumber)\n      return;\n    while (this.lock) {\n      await sleep(this.sleepTime);\n    }\n    this.lock = true;\n    try {\n      await this.update();\n      const startTime = now();\n      while (this.lastUncommintedNumber !== this.currentNumber) {\n        if (now() - startTime > this.maxWaitTime) {\n          console.warn(`Waited over 30 seconds for a transaction to commit, resyncing ${this.account.address()}`);\n          await this.initialize();\n        } else {\n          await sleep(this.sleepTime);\n          await this.update();\n        }\n      }\n    } catch (e) {\n      console.error(\"error in synchronizing this account sequence number with the one on chain\", e);\n    } finally {\n      this.lock = false;\n    }\n  }\n};\n\n// src/transactions/transaction_worker.ts\n\n\n// src/transactions/async_queue.ts\nvar AsyncQueue = class {\n  constructor() {\n    this.queue = [];\n    // The pendingDequeue is used to handle the resolution of promises when items are enqueued and dequeued.\n    this.pendingDequeue = [];\n    this.cancelled = false;\n  }\n  /**\n   * The enqueue method adds an item to the queue. If there are pending dequeued promises,\n   * in the pendingDequeue, it resolves the oldest promise with the enqueued item immediately.\n   * Otherwise, it adds the item to the queue.\n   *\n   * @param item T\n   */\n  enqueue(item) {\n    this.cancelled = false;\n    if (this.pendingDequeue.length > 0) {\n      const promise = this.pendingDequeue.shift();\n      promise == null ? void 0 : promise.resolve(item);\n      return;\n    }\n    this.queue.push(item);\n  }\n  /**\n   * The dequeue method returns a promise that resolves to the next item in the queue.\n   * If the queue is not empty, it resolves the promise immediately with the next item.\n   * Otherwise, it creates a new promise. The promise's resolve function is stored\n   * in the pendingDequeue with a unique counter value as the key.\n   * The newly created promise is then returned, and it will be resolved later when an item is enqueued.\n   *\n   * @returns Promise<T>\n   */\n  async dequeue() {\n    if (this.queue.length > 0) {\n      return Promise.resolve(this.queue.shift());\n    }\n    return new Promise((resolve, reject) => {\n      this.pendingDequeue.push({ resolve, reject });\n    });\n  }\n  /**\n   * The isEmpty method returns whether the queue is empty or not.\n   *\n   * @returns boolean\n   */\n  isEmpty() {\n    return this.queue.length === 0;\n  }\n  /**\n   * The cancel method cancels all pending promises in the queue.\n   * It rejects the promises with a AsyncQueueCancelledError error,\n   * ensuring that any awaiting code can handle the cancellation appropriately.\n   */\n  cancel() {\n    this.cancelled = true;\n    this.pendingDequeue.forEach(async ({ reject }) => {\n      reject(new AsyncQueueCancelledError(\"Task cancelled\"));\n    });\n    this.pendingDequeue = [];\n    this.queue.length = 0;\n  }\n  /**\n   * The isCancelled method returns whether the queue is cancelled or not.\n   *\n   * @returns boolean\n   */\n  isCancelled() {\n    return this.cancelled;\n  }\n  /**\n   * The pendingDequeueLength method returns the length of the pendingDequeue.\n   *\n   * @returns number\n   */\n  pendingDequeueLength() {\n    return this.pendingDequeue.length;\n  }\n};\nvar AsyncQueueCancelledError = class extends Error {\n};\n\n// src/transactions/transaction_worker.ts\nvar promiseFulfilledStatus = \"fulfilled\";\nvar TransactionWorkerEvents = /* @__PURE__ */ ((TransactionWorkerEvents2) => {\n  TransactionWorkerEvents2[\"TransactionSent\"] = \"transactionSent\";\n  TransactionWorkerEvents2[\"TransactionSendFailed\"] = \"transactionsendFailed\";\n  TransactionWorkerEvents2[\"TransactionExecuted\"] = \"transactionExecuted\";\n  TransactionWorkerEvents2[\"TransactionExecutionFailed\"] = \"transactionexecutionFailed\";\n  return TransactionWorkerEvents2;\n})(TransactionWorkerEvents || {});\nvar TransactionWorker = class extends eventemitter3__WEBPACK_IMPORTED_MODULE_8__[\"default\"] {\n  /**\n   * Provides a simple framework for receiving payloads to be processed.\n   *\n   * @param provider - a client provider\n   * @param sender - a sender as AptosAccount\n   * @param maxWaitTime - the max wait time to wait before resyncing the sequence number\n   * to the current on-chain state, default to 30\n   * @param maximumInFlight - submit up to `maximumInFlight` transactions per account.\n   * Mempool limits the number of transactions per account to 100, hence why we default to 100.\n   * @param sleepTime - If `maximumInFlight` are in flight, wait `sleepTime` seconds before re-evaluating, default to 10\n   */\n  constructor(provider, account, maxWaitTime = 30, maximumInFlight = 100, sleepTime = 10) {\n    super();\n    this.taskQueue = new AsyncQueue();\n    /**\n     * transactions payloads waiting to be generated and signed\n     *\n     * TODO support entry function payload from ABI builder\n     */\n    this.transactionsQueue = new AsyncQueue();\n    /**\n     * signed transactions waiting to be submitted\n     */\n    this.outstandingTransactions = new AsyncQueue();\n    /**\n     * transactions that have been submitted to chain\n     */\n    this.sentTransactions = [];\n    /**\n     * transactions that have been committed to chain\n     */\n    this.executedTransactions = [];\n    this.provider = provider;\n    this.account = account;\n    this.started = false;\n    this.accountSequnceNumber = new AccountSequenceNumber(provider, account, maxWaitTime, maximumInFlight, sleepTime);\n  }\n  /**\n   * Gets the current account sequence number,\n   * generates the transaction with the account sequence number,\n   * adds the transaction to the outstanding transaction queue\n   * to be processed later.\n   */\n  async submitNextTransaction() {\n    try {\n      while (true) {\n        if (this.transactionsQueue.isEmpty())\n          return;\n        const sequenceNumber = await this.accountSequnceNumber.nextSequenceNumber();\n        if (sequenceNumber === null)\n          return;\n        const transaction = await this.generateNextTransaction(this.account, sequenceNumber);\n        if (!transaction)\n          return;\n        const pendingTransaction = this.provider.submitSignedBCSTransaction(transaction);\n        await this.outstandingTransactions.enqueue([pendingTransaction, sequenceNumber]);\n      }\n    } catch (error) {\n      if (error instanceof AsyncQueueCancelledError) {\n        return;\n      }\n      console.log(error);\n    }\n  }\n  /**\n   * Reads the outstanding transaction queue and submits the transaction to chain.\n   *\n   * If the transaction has fulfilled, it pushes the transaction to the processed\n   * transactions queue and fires a transactionsFulfilled event.\n   *\n   * If the transaction has failed, it pushes the transaction to the processed\n   * transactions queue with the failure reason and fires a transactionsFailed event.\n   */\n  async processTransactions() {\n    try {\n      while (true) {\n        const awaitingTransactions = [];\n        const sequenceNumbers = [];\n        let [pendingTransaction, sequenceNumber] = await this.outstandingTransactions.dequeue();\n        awaitingTransactions.push(pendingTransaction);\n        sequenceNumbers.push(sequenceNumber);\n        while (!this.outstandingTransactions.isEmpty()) {\n          [pendingTransaction, sequenceNumber] = await this.outstandingTransactions.dequeue();\n          awaitingTransactions.push(pendingTransaction);\n          sequenceNumbers.push(sequenceNumber);\n        }\n        const sentTransactions = await Promise.allSettled(awaitingTransactions);\n        for (let i = 0; i < sentTransactions.length && i < sequenceNumbers.length; i += 1) {\n          const sentTransaction = sentTransactions[i];\n          sequenceNumber = sequenceNumbers[i];\n          if (sentTransaction.status === promiseFulfilledStatus) {\n            this.sentTransactions.push([sentTransaction.value.hash, sequenceNumber, null]);\n            this.emit(\"transactionSent\" /* TransactionSent */, [\n              this.sentTransactions.length,\n              sentTransaction.value.hash\n            ]);\n            await this.checkTransaction(sentTransaction, sequenceNumber);\n          } else {\n            this.sentTransactions.push([sentTransaction.status, sequenceNumber, sentTransaction.reason]);\n            this.emit(\"transactionsendFailed\" /* TransactionSendFailed */, [\n              this.sentTransactions.length,\n              sentTransaction.reason\n            ]);\n          }\n        }\n      }\n    } catch (error) {\n      if (error instanceof AsyncQueueCancelledError) {\n        return;\n      }\n      console.log(error);\n    }\n  }\n  /**\n   * Once transaction has been sent to chain, we check for its execution status.\n   * @param sentTransaction transactions that were sent to chain and are now waiting to be executed\n   * @param sequenceNumber the account's sequence number that was sent with the transaction\n   */\n  async checkTransaction(sentTransaction, sequenceNumber) {\n    const waitFor = [];\n    waitFor.push(this.provider.waitForTransactionWithResult(sentTransaction.value.hash, { checkSuccess: true }));\n    const sentTransactions = await Promise.allSettled(waitFor);\n    for (let i = 0; i < sentTransactions.length; i += 1) {\n      const executedTransaction = sentTransactions[i];\n      if (executedTransaction.status === promiseFulfilledStatus) {\n        this.executedTransactions.push([executedTransaction.value.hash, sequenceNumber, null]);\n        this.emit(\"transactionExecuted\" /* TransactionExecuted */, [\n          this.executedTransactions.length,\n          executedTransaction.value.hash\n        ]);\n      } else {\n        this.executedTransactions.push([executedTransaction.status, sequenceNumber, executedTransaction.reason]);\n        this.emit(\"transactionexecutionFailed\" /* TransactionExecutionFailed */, [\n          this.executedTransactions.length,\n          executedTransaction.reason\n        ]);\n      }\n    }\n  }\n  /**\n   * Push transaction to the transactions queue\n   * @param payload Transaction payload\n   */\n  async push(payload) {\n    await this.transactionsQueue.enqueue(payload);\n  }\n  /**\n   * Generates a signed transaction that can be submitted to chain\n   * @param account an Aptos account\n   * @param sequenceNumber a sequence number the transaction will be generated with\n   * @returns\n   */\n  async generateNextTransaction(account, sequenceNumber) {\n    if (this.transactionsQueue.isEmpty())\n      return void 0;\n    const payload = await this.transactionsQueue.dequeue();\n    const rawTransaction = await this.provider.generateRawTransaction(account.address(), payload, {\n      providedSequenceNumber: sequenceNumber\n    });\n    const signedTransaction = AptosClient.generateBCSTransaction(account, rawTransaction);\n    return signedTransaction;\n  }\n  /**\n   * Starts transaction submission and transaction processing.\n   */\n  async run() {\n    try {\n      while (!this.taskQueue.isCancelled()) {\n        const task = await this.taskQueue.dequeue();\n        await task();\n      }\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  /**\n   * Starts the transaction management process.\n   */\n  start() {\n    if (this.started) {\n      throw new Error(\"worker has already started\");\n    }\n    this.started = true;\n    this.taskQueue.enqueue(() => this.submitNextTransaction());\n    this.taskQueue.enqueue(() => this.processTransactions());\n    this.run();\n  }\n  /**\n   * Stops the the transaction management process.\n   */\n  stop() {\n    if (this.taskQueue.isCancelled()) {\n      throw new Error(\"worker has already stopped\");\n    }\n    this.started = false;\n    this.taskQueue.cancel();\n  }\n};\n\n// src/generated/index.ts\nvar generated_exports = {};\n__export(generated_exports, {\n  AptosErrorCode: () => AptosErrorCode,\n  MoveFunctionVisibility: () => MoveFunctionVisibility,\n  RoleType: () => RoleType\n});\n\n// src/generated/models/AptosErrorCode.ts\nvar AptosErrorCode = /* @__PURE__ */ ((AptosErrorCode2) => {\n  AptosErrorCode2[\"ACCOUNT_NOT_FOUND\"] = \"account_not_found\";\n  AptosErrorCode2[\"RESOURCE_NOT_FOUND\"] = \"resource_not_found\";\n  AptosErrorCode2[\"MODULE_NOT_FOUND\"] = \"module_not_found\";\n  AptosErrorCode2[\"STRUCT_FIELD_NOT_FOUND\"] = \"struct_field_not_found\";\n  AptosErrorCode2[\"VERSION_NOT_FOUND\"] = \"version_not_found\";\n  AptosErrorCode2[\"TRANSACTION_NOT_FOUND\"] = \"transaction_not_found\";\n  AptosErrorCode2[\"TABLE_ITEM_NOT_FOUND\"] = \"table_item_not_found\";\n  AptosErrorCode2[\"BLOCK_NOT_FOUND\"] = \"block_not_found\";\n  AptosErrorCode2[\"STATE_VALUE_NOT_FOUND\"] = \"state_value_not_found\";\n  AptosErrorCode2[\"VERSION_PRUNED\"] = \"version_pruned\";\n  AptosErrorCode2[\"BLOCK_PRUNED\"] = \"block_pruned\";\n  AptosErrorCode2[\"INVALID_INPUT\"] = \"invalid_input\";\n  AptosErrorCode2[\"INVALID_TRANSACTION_UPDATE\"] = \"invalid_transaction_update\";\n  AptosErrorCode2[\"SEQUENCE_NUMBER_TOO_OLD\"] = \"sequence_number_too_old\";\n  AptosErrorCode2[\"VM_ERROR\"] = \"vm_error\";\n  AptosErrorCode2[\"HEALTH_CHECK_FAILED\"] = \"health_check_failed\";\n  AptosErrorCode2[\"MEMPOOL_IS_FULL\"] = \"mempool_is_full\";\n  AptosErrorCode2[\"INTERNAL_ERROR\"] = \"internal_error\";\n  AptosErrorCode2[\"WEB_FRAMEWORK_ERROR\"] = \"web_framework_error\";\n  AptosErrorCode2[\"BCS_NOT_SUPPORTED\"] = \"bcs_not_supported\";\n  AptosErrorCode2[\"API_DISABLED\"] = \"api_disabled\";\n  return AptosErrorCode2;\n})(AptosErrorCode || {});\n\n// src/generated/models/MoveFunctionVisibility.ts\nvar MoveFunctionVisibility = /* @__PURE__ */ ((MoveFunctionVisibility2) => {\n  MoveFunctionVisibility2[\"PRIVATE\"] = \"private\";\n  MoveFunctionVisibility2[\"PUBLIC\"] = \"public\";\n  MoveFunctionVisibility2[\"FRIEND\"] = \"friend\";\n  return MoveFunctionVisibility2;\n})(MoveFunctionVisibility || {});\n\n// src/generated/models/RoleType.ts\nvar RoleType = /* @__PURE__ */ ((RoleType2) => {\n  RoleType2[\"VALIDATOR\"] = \"validator\";\n  RoleType2[\"FULL_NODE\"] = \"full_node\";\n  return RoleType2;\n})(RoleType || {});\n\n// src/indexer/generated/types.ts\nvar Account_Transactions_Select_Column = /* @__PURE__ */ ((Account_Transactions_Select_Column2) => {\n  Account_Transactions_Select_Column2[\"AccountAddress\"] = \"account_address\";\n  Account_Transactions_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  return Account_Transactions_Select_Column2;\n})(Account_Transactions_Select_Column || {});\nvar Address_Events_Summary_Select_Column = /* @__PURE__ */ ((Address_Events_Summary_Select_Column2) => {\n  Address_Events_Summary_Select_Column2[\"AccountAddress\"] = \"account_address\";\n  Address_Events_Summary_Select_Column2[\"MinBlockHeight\"] = \"min_block_height\";\n  Address_Events_Summary_Select_Column2[\"NumDistinctVersions\"] = \"num_distinct_versions\";\n  return Address_Events_Summary_Select_Column2;\n})(Address_Events_Summary_Select_Column || {});\nvar Address_Version_From_Events_Select_Column = /* @__PURE__ */ ((Address_Version_From_Events_Select_Column2) => {\n  Address_Version_From_Events_Select_Column2[\"AccountAddress\"] = \"account_address\";\n  Address_Version_From_Events_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  return Address_Version_From_Events_Select_Column2;\n})(Address_Version_From_Events_Select_Column || {});\nvar Address_Version_From_Move_Resources_Select_Column = /* @__PURE__ */ ((Address_Version_From_Move_Resources_Select_Column2) => {\n  Address_Version_From_Move_Resources_Select_Column2[\"Address\"] = \"address\";\n  Address_Version_From_Move_Resources_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  return Address_Version_From_Move_Resources_Select_Column2;\n})(Address_Version_From_Move_Resources_Select_Column || {});\nvar Block_Metadata_Transactions_Select_Column = /* @__PURE__ */ ((Block_Metadata_Transactions_Select_Column2) => {\n  Block_Metadata_Transactions_Select_Column2[\"BlockHeight\"] = \"block_height\";\n  Block_Metadata_Transactions_Select_Column2[\"Epoch\"] = \"epoch\";\n  Block_Metadata_Transactions_Select_Column2[\"FailedProposerIndices\"] = \"failed_proposer_indices\";\n  Block_Metadata_Transactions_Select_Column2[\"Id\"] = \"id\";\n  Block_Metadata_Transactions_Select_Column2[\"PreviousBlockVotesBitvec\"] = \"previous_block_votes_bitvec\";\n  Block_Metadata_Transactions_Select_Column2[\"Proposer\"] = \"proposer\";\n  Block_Metadata_Transactions_Select_Column2[\"Round\"] = \"round\";\n  Block_Metadata_Transactions_Select_Column2[\"Timestamp\"] = \"timestamp\";\n  Block_Metadata_Transactions_Select_Column2[\"Version\"] = \"version\";\n  return Block_Metadata_Transactions_Select_Column2;\n})(Block_Metadata_Transactions_Select_Column || {});\nvar Coin_Activities_Select_Column = /* @__PURE__ */ ((Coin_Activities_Select_Column2) => {\n  Coin_Activities_Select_Column2[\"ActivityType\"] = \"activity_type\";\n  Coin_Activities_Select_Column2[\"Amount\"] = \"amount\";\n  Coin_Activities_Select_Column2[\"BlockHeight\"] = \"block_height\";\n  Coin_Activities_Select_Column2[\"CoinType\"] = \"coin_type\";\n  Coin_Activities_Select_Column2[\"EntryFunctionIdStr\"] = \"entry_function_id_str\";\n  Coin_Activities_Select_Column2[\"EventAccountAddress\"] = \"event_account_address\";\n  Coin_Activities_Select_Column2[\"EventCreationNumber\"] = \"event_creation_number\";\n  Coin_Activities_Select_Column2[\"EventIndex\"] = \"event_index\";\n  Coin_Activities_Select_Column2[\"EventSequenceNumber\"] = \"event_sequence_number\";\n  Coin_Activities_Select_Column2[\"IsGasFee\"] = \"is_gas_fee\";\n  Coin_Activities_Select_Column2[\"IsTransactionSuccess\"] = \"is_transaction_success\";\n  Coin_Activities_Select_Column2[\"OwnerAddress\"] = \"owner_address\";\n  Coin_Activities_Select_Column2[\"StorageRefundAmount\"] = \"storage_refund_amount\";\n  Coin_Activities_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Coin_Activities_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  return Coin_Activities_Select_Column2;\n})(Coin_Activities_Select_Column || {});\nvar Coin_Balances_Select_Column = /* @__PURE__ */ ((Coin_Balances_Select_Column2) => {\n  Coin_Balances_Select_Column2[\"Amount\"] = \"amount\";\n  Coin_Balances_Select_Column2[\"CoinType\"] = \"coin_type\";\n  Coin_Balances_Select_Column2[\"CoinTypeHash\"] = \"coin_type_hash\";\n  Coin_Balances_Select_Column2[\"OwnerAddress\"] = \"owner_address\";\n  Coin_Balances_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Coin_Balances_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  return Coin_Balances_Select_Column2;\n})(Coin_Balances_Select_Column || {});\nvar Coin_Infos_Select_Column = /* @__PURE__ */ ((Coin_Infos_Select_Column2) => {\n  Coin_Infos_Select_Column2[\"CoinType\"] = \"coin_type\";\n  Coin_Infos_Select_Column2[\"CoinTypeHash\"] = \"coin_type_hash\";\n  Coin_Infos_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Coin_Infos_Select_Column2[\"Decimals\"] = \"decimals\";\n  Coin_Infos_Select_Column2[\"Name\"] = \"name\";\n  Coin_Infos_Select_Column2[\"SupplyAggregatorTableHandle\"] = \"supply_aggregator_table_handle\";\n  Coin_Infos_Select_Column2[\"SupplyAggregatorTableKey\"] = \"supply_aggregator_table_key\";\n  Coin_Infos_Select_Column2[\"Symbol\"] = \"symbol\";\n  Coin_Infos_Select_Column2[\"TransactionCreatedTimestamp\"] = \"transaction_created_timestamp\";\n  Coin_Infos_Select_Column2[\"TransactionVersionCreated\"] = \"transaction_version_created\";\n  return Coin_Infos_Select_Column2;\n})(Coin_Infos_Select_Column || {});\nvar Coin_Supply_Select_Column = /* @__PURE__ */ ((Coin_Supply_Select_Column2) => {\n  Coin_Supply_Select_Column2[\"CoinType\"] = \"coin_type\";\n  Coin_Supply_Select_Column2[\"CoinTypeHash\"] = \"coin_type_hash\";\n  Coin_Supply_Select_Column2[\"Supply\"] = \"supply\";\n  Coin_Supply_Select_Column2[\"TransactionEpoch\"] = \"transaction_epoch\";\n  Coin_Supply_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Coin_Supply_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  return Coin_Supply_Select_Column2;\n})(Coin_Supply_Select_Column || {});\nvar Collection_Datas_Select_Column = /* @__PURE__ */ ((Collection_Datas_Select_Column2) => {\n  Collection_Datas_Select_Column2[\"CollectionDataIdHash\"] = \"collection_data_id_hash\";\n  Collection_Datas_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Collection_Datas_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Collection_Datas_Select_Column2[\"Description\"] = \"description\";\n  Collection_Datas_Select_Column2[\"DescriptionMutable\"] = \"description_mutable\";\n  Collection_Datas_Select_Column2[\"Maximum\"] = \"maximum\";\n  Collection_Datas_Select_Column2[\"MaximumMutable\"] = \"maximum_mutable\";\n  Collection_Datas_Select_Column2[\"MetadataUri\"] = \"metadata_uri\";\n  Collection_Datas_Select_Column2[\"Supply\"] = \"supply\";\n  Collection_Datas_Select_Column2[\"TableHandle\"] = \"table_handle\";\n  Collection_Datas_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Collection_Datas_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  Collection_Datas_Select_Column2[\"UriMutable\"] = \"uri_mutable\";\n  return Collection_Datas_Select_Column2;\n})(Collection_Datas_Select_Column || {});\nvar Current_Ans_Lookup_Select_Column = /* @__PURE__ */ ((Current_Ans_Lookup_Select_Column2) => {\n  Current_Ans_Lookup_Select_Column2[\"Domain\"] = \"domain\";\n  Current_Ans_Lookup_Select_Column2[\"ExpirationTimestamp\"] = \"expiration_timestamp\";\n  Current_Ans_Lookup_Select_Column2[\"IsDeleted\"] = \"is_deleted\";\n  Current_Ans_Lookup_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Ans_Lookup_Select_Column2[\"RegisteredAddress\"] = \"registered_address\";\n  Current_Ans_Lookup_Select_Column2[\"Subdomain\"] = \"subdomain\";\n  Current_Ans_Lookup_Select_Column2[\"TokenName\"] = \"token_name\";\n  return Current_Ans_Lookup_Select_Column2;\n})(Current_Ans_Lookup_Select_Column || {});\nvar Current_Ans_Lookup_V2_Select_Column = /* @__PURE__ */ ((Current_Ans_Lookup_V2_Select_Column2) => {\n  Current_Ans_Lookup_V2_Select_Column2[\"Domain\"] = \"domain\";\n  Current_Ans_Lookup_V2_Select_Column2[\"ExpirationTimestamp\"] = \"expiration_timestamp\";\n  Current_Ans_Lookup_V2_Select_Column2[\"IsDeleted\"] = \"is_deleted\";\n  Current_Ans_Lookup_V2_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Ans_Lookup_V2_Select_Column2[\"RegisteredAddress\"] = \"registered_address\";\n  Current_Ans_Lookup_V2_Select_Column2[\"Subdomain\"] = \"subdomain\";\n  Current_Ans_Lookup_V2_Select_Column2[\"TokenName\"] = \"token_name\";\n  Current_Ans_Lookup_V2_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  return Current_Ans_Lookup_V2_Select_Column2;\n})(Current_Ans_Lookup_V2_Select_Column || {});\nvar Current_Aptos_Names_Select_Column = /* @__PURE__ */ ((Current_Aptos_Names_Select_Column2) => {\n  Current_Aptos_Names_Select_Column2[\"Domain\"] = \"domain\";\n  Current_Aptos_Names_Select_Column2[\"DomainWithSuffix\"] = \"domain_with_suffix\";\n  Current_Aptos_Names_Select_Column2[\"ExpirationTimestamp\"] = \"expiration_timestamp\";\n  Current_Aptos_Names_Select_Column2[\"IsActive\"] = \"is_active\";\n  Current_Aptos_Names_Select_Column2[\"IsPrimary\"] = \"is_primary\";\n  Current_Aptos_Names_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Aptos_Names_Select_Column2[\"OwnerAddress\"] = \"owner_address\";\n  Current_Aptos_Names_Select_Column2[\"RegisteredAddress\"] = \"registered_address\";\n  Current_Aptos_Names_Select_Column2[\"Subdomain\"] = \"subdomain\";\n  Current_Aptos_Names_Select_Column2[\"TokenName\"] = \"token_name\";\n  Current_Aptos_Names_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  return Current_Aptos_Names_Select_Column2;\n})(Current_Aptos_Names_Select_Column || {});\nvar Current_Coin_Balances_Select_Column = /* @__PURE__ */ ((Current_Coin_Balances_Select_Column2) => {\n  Current_Coin_Balances_Select_Column2[\"Amount\"] = \"amount\";\n  Current_Coin_Balances_Select_Column2[\"CoinType\"] = \"coin_type\";\n  Current_Coin_Balances_Select_Column2[\"CoinTypeHash\"] = \"coin_type_hash\";\n  Current_Coin_Balances_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Current_Coin_Balances_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Coin_Balances_Select_Column2[\"OwnerAddress\"] = \"owner_address\";\n  return Current_Coin_Balances_Select_Column2;\n})(Current_Coin_Balances_Select_Column || {});\nvar Current_Collection_Datas_Select_Column = /* @__PURE__ */ ((Current_Collection_Datas_Select_Column2) => {\n  Current_Collection_Datas_Select_Column2[\"CollectionDataIdHash\"] = \"collection_data_id_hash\";\n  Current_Collection_Datas_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Current_Collection_Datas_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Current_Collection_Datas_Select_Column2[\"Description\"] = \"description\";\n  Current_Collection_Datas_Select_Column2[\"DescriptionMutable\"] = \"description_mutable\";\n  Current_Collection_Datas_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Current_Collection_Datas_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Collection_Datas_Select_Column2[\"Maximum\"] = \"maximum\";\n  Current_Collection_Datas_Select_Column2[\"MaximumMutable\"] = \"maximum_mutable\";\n  Current_Collection_Datas_Select_Column2[\"MetadataUri\"] = \"metadata_uri\";\n  Current_Collection_Datas_Select_Column2[\"Supply\"] = \"supply\";\n  Current_Collection_Datas_Select_Column2[\"TableHandle\"] = \"table_handle\";\n  Current_Collection_Datas_Select_Column2[\"UriMutable\"] = \"uri_mutable\";\n  return Current_Collection_Datas_Select_Column2;\n})(Current_Collection_Datas_Select_Column || {});\nvar Current_Collection_Ownership_V2_View_Select_Column = /* @__PURE__ */ ((Current_Collection_Ownership_V2_View_Select_Column2) => {\n  Current_Collection_Ownership_V2_View_Select_Column2[\"CollectionId\"] = \"collection_id\";\n  Current_Collection_Ownership_V2_View_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Current_Collection_Ownership_V2_View_Select_Column2[\"CollectionUri\"] = \"collection_uri\";\n  Current_Collection_Ownership_V2_View_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Current_Collection_Ownership_V2_View_Select_Column2[\"DistinctTokens\"] = \"distinct_tokens\";\n  Current_Collection_Ownership_V2_View_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Collection_Ownership_V2_View_Select_Column2[\"OwnerAddress\"] = \"owner_address\";\n  Current_Collection_Ownership_V2_View_Select_Column2[\"SingleTokenUri\"] = \"single_token_uri\";\n  return Current_Collection_Ownership_V2_View_Select_Column2;\n})(Current_Collection_Ownership_V2_View_Select_Column || {});\nvar Current_Collections_V2_Select_Column = /* @__PURE__ */ ((Current_Collections_V2_Select_Column2) => {\n  Current_Collections_V2_Select_Column2[\"CollectionId\"] = \"collection_id\";\n  Current_Collections_V2_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Current_Collections_V2_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Current_Collections_V2_Select_Column2[\"CurrentSupply\"] = \"current_supply\";\n  Current_Collections_V2_Select_Column2[\"Description\"] = \"description\";\n  Current_Collections_V2_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Current_Collections_V2_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Collections_V2_Select_Column2[\"MaxSupply\"] = \"max_supply\";\n  Current_Collections_V2_Select_Column2[\"MutableDescription\"] = \"mutable_description\";\n  Current_Collections_V2_Select_Column2[\"MutableUri\"] = \"mutable_uri\";\n  Current_Collections_V2_Select_Column2[\"TableHandleV1\"] = \"table_handle_v1\";\n  Current_Collections_V2_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  Current_Collections_V2_Select_Column2[\"TotalMintedV2\"] = \"total_minted_v2\";\n  Current_Collections_V2_Select_Column2[\"Uri\"] = \"uri\";\n  return Current_Collections_V2_Select_Column2;\n})(Current_Collections_V2_Select_Column || {});\nvar Current_Delegated_Staking_Pool_Balances_Select_Column = /* @__PURE__ */ ((Current_Delegated_Staking_Pool_Balances_Select_Column2) => {\n  Current_Delegated_Staking_Pool_Balances_Select_Column2[\"ActiveTableHandle\"] = \"active_table_handle\";\n  Current_Delegated_Staking_Pool_Balances_Select_Column2[\"InactiveTableHandle\"] = \"inactive_table_handle\";\n  Current_Delegated_Staking_Pool_Balances_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Delegated_Staking_Pool_Balances_Select_Column2[\"OperatorCommissionPercentage\"] = \"operator_commission_percentage\";\n  Current_Delegated_Staking_Pool_Balances_Select_Column2[\"StakingPoolAddress\"] = \"staking_pool_address\";\n  Current_Delegated_Staking_Pool_Balances_Select_Column2[\"TotalCoins\"] = \"total_coins\";\n  Current_Delegated_Staking_Pool_Balances_Select_Column2[\"TotalShares\"] = \"total_shares\";\n  return Current_Delegated_Staking_Pool_Balances_Select_Column2;\n})(Current_Delegated_Staking_Pool_Balances_Select_Column || {});\nvar Current_Delegated_Voter_Select_Column = /* @__PURE__ */ ((Current_Delegated_Voter_Select_Column2) => {\n  Current_Delegated_Voter_Select_Column2[\"DelegationPoolAddress\"] = \"delegation_pool_address\";\n  Current_Delegated_Voter_Select_Column2[\"DelegatorAddress\"] = \"delegator_address\";\n  Current_Delegated_Voter_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Current_Delegated_Voter_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Delegated_Voter_Select_Column2[\"PendingVoter\"] = \"pending_voter\";\n  Current_Delegated_Voter_Select_Column2[\"TableHandle\"] = \"table_handle\";\n  Current_Delegated_Voter_Select_Column2[\"Voter\"] = \"voter\";\n  return Current_Delegated_Voter_Select_Column2;\n})(Current_Delegated_Voter_Select_Column || {});\nvar Current_Delegator_Balances_Select_Column = /* @__PURE__ */ ((Current_Delegator_Balances_Select_Column2) => {\n  Current_Delegator_Balances_Select_Column2[\"DelegatorAddress\"] = \"delegator_address\";\n  Current_Delegator_Balances_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Delegator_Balances_Select_Column2[\"ParentTableHandle\"] = \"parent_table_handle\";\n  Current_Delegator_Balances_Select_Column2[\"PoolAddress\"] = \"pool_address\";\n  Current_Delegator_Balances_Select_Column2[\"PoolType\"] = \"pool_type\";\n  Current_Delegator_Balances_Select_Column2[\"Shares\"] = \"shares\";\n  Current_Delegator_Balances_Select_Column2[\"TableHandle\"] = \"table_handle\";\n  return Current_Delegator_Balances_Select_Column2;\n})(Current_Delegator_Balances_Select_Column || {});\nvar Current_Fungible_Asset_Balances_Select_Column = /* @__PURE__ */ ((Current_Fungible_Asset_Balances_Select_Column2) => {\n  Current_Fungible_Asset_Balances_Select_Column2[\"Amount\"] = \"amount\";\n  Current_Fungible_Asset_Balances_Select_Column2[\"AssetType\"] = \"asset_type\";\n  Current_Fungible_Asset_Balances_Select_Column2[\"IsFrozen\"] = \"is_frozen\";\n  Current_Fungible_Asset_Balances_Select_Column2[\"IsPrimary\"] = \"is_primary\";\n  Current_Fungible_Asset_Balances_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Current_Fungible_Asset_Balances_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Fungible_Asset_Balances_Select_Column2[\"OwnerAddress\"] = \"owner_address\";\n  Current_Fungible_Asset_Balances_Select_Column2[\"StorageId\"] = \"storage_id\";\n  Current_Fungible_Asset_Balances_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  return Current_Fungible_Asset_Balances_Select_Column2;\n})(Current_Fungible_Asset_Balances_Select_Column || {});\nvar Current_Objects_Select_Column = /* @__PURE__ */ ((Current_Objects_Select_Column2) => {\n  Current_Objects_Select_Column2[\"AllowUngatedTransfer\"] = \"allow_ungated_transfer\";\n  Current_Objects_Select_Column2[\"IsDeleted\"] = \"is_deleted\";\n  Current_Objects_Select_Column2[\"LastGuidCreationNum\"] = \"last_guid_creation_num\";\n  Current_Objects_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Objects_Select_Column2[\"ObjectAddress\"] = \"object_address\";\n  Current_Objects_Select_Column2[\"OwnerAddress\"] = \"owner_address\";\n  Current_Objects_Select_Column2[\"StateKeyHash\"] = \"state_key_hash\";\n  return Current_Objects_Select_Column2;\n})(Current_Objects_Select_Column || {});\nvar Current_Staking_Pool_Voter_Select_Column = /* @__PURE__ */ ((Current_Staking_Pool_Voter_Select_Column2) => {\n  Current_Staking_Pool_Voter_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Staking_Pool_Voter_Select_Column2[\"OperatorAddress\"] = \"operator_address\";\n  Current_Staking_Pool_Voter_Select_Column2[\"StakingPoolAddress\"] = \"staking_pool_address\";\n  Current_Staking_Pool_Voter_Select_Column2[\"VoterAddress\"] = \"voter_address\";\n  return Current_Staking_Pool_Voter_Select_Column2;\n})(Current_Staking_Pool_Voter_Select_Column || {});\nvar Current_Table_Items_Select_Column = /* @__PURE__ */ ((Current_Table_Items_Select_Column2) => {\n  Current_Table_Items_Select_Column2[\"DecodedKey\"] = \"decoded_key\";\n  Current_Table_Items_Select_Column2[\"DecodedValue\"] = \"decoded_value\";\n  Current_Table_Items_Select_Column2[\"IsDeleted\"] = \"is_deleted\";\n  Current_Table_Items_Select_Column2[\"Key\"] = \"key\";\n  Current_Table_Items_Select_Column2[\"KeyHash\"] = \"key_hash\";\n  Current_Table_Items_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Table_Items_Select_Column2[\"TableHandle\"] = \"table_handle\";\n  return Current_Table_Items_Select_Column2;\n})(Current_Table_Items_Select_Column || {});\nvar Current_Token_Datas_Select_Column = /* @__PURE__ */ ((Current_Token_Datas_Select_Column2) => {\n  Current_Token_Datas_Select_Column2[\"CollectionDataIdHash\"] = \"collection_data_id_hash\";\n  Current_Token_Datas_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Current_Token_Datas_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Current_Token_Datas_Select_Column2[\"DefaultProperties\"] = \"default_properties\";\n  Current_Token_Datas_Select_Column2[\"Description\"] = \"description\";\n  Current_Token_Datas_Select_Column2[\"DescriptionMutable\"] = \"description_mutable\";\n  Current_Token_Datas_Select_Column2[\"LargestPropertyVersion\"] = \"largest_property_version\";\n  Current_Token_Datas_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Current_Token_Datas_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Token_Datas_Select_Column2[\"Maximum\"] = \"maximum\";\n  Current_Token_Datas_Select_Column2[\"MaximumMutable\"] = \"maximum_mutable\";\n  Current_Token_Datas_Select_Column2[\"MetadataUri\"] = \"metadata_uri\";\n  Current_Token_Datas_Select_Column2[\"Name\"] = \"name\";\n  Current_Token_Datas_Select_Column2[\"PayeeAddress\"] = \"payee_address\";\n  Current_Token_Datas_Select_Column2[\"PropertiesMutable\"] = \"properties_mutable\";\n  Current_Token_Datas_Select_Column2[\"RoyaltyMutable\"] = \"royalty_mutable\";\n  Current_Token_Datas_Select_Column2[\"RoyaltyPointsDenominator\"] = \"royalty_points_denominator\";\n  Current_Token_Datas_Select_Column2[\"RoyaltyPointsNumerator\"] = \"royalty_points_numerator\";\n  Current_Token_Datas_Select_Column2[\"Supply\"] = \"supply\";\n  Current_Token_Datas_Select_Column2[\"TokenDataIdHash\"] = \"token_data_id_hash\";\n  Current_Token_Datas_Select_Column2[\"UriMutable\"] = \"uri_mutable\";\n  return Current_Token_Datas_Select_Column2;\n})(Current_Token_Datas_Select_Column || {});\nvar Current_Token_Datas_V2_Select_Column = /* @__PURE__ */ ((Current_Token_Datas_V2_Select_Column2) => {\n  Current_Token_Datas_V2_Select_Column2[\"CollectionId\"] = \"collection_id\";\n  Current_Token_Datas_V2_Select_Column2[\"Description\"] = \"description\";\n  Current_Token_Datas_V2_Select_Column2[\"IsFungibleV2\"] = \"is_fungible_v2\";\n  Current_Token_Datas_V2_Select_Column2[\"LargestPropertyVersionV1\"] = \"largest_property_version_v1\";\n  Current_Token_Datas_V2_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Current_Token_Datas_V2_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Token_Datas_V2_Select_Column2[\"Maximum\"] = \"maximum\";\n  Current_Token_Datas_V2_Select_Column2[\"Supply\"] = \"supply\";\n  Current_Token_Datas_V2_Select_Column2[\"TokenDataId\"] = \"token_data_id\";\n  Current_Token_Datas_V2_Select_Column2[\"TokenName\"] = \"token_name\";\n  Current_Token_Datas_V2_Select_Column2[\"TokenProperties\"] = \"token_properties\";\n  Current_Token_Datas_V2_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  Current_Token_Datas_V2_Select_Column2[\"TokenUri\"] = \"token_uri\";\n  return Current_Token_Datas_V2_Select_Column2;\n})(Current_Token_Datas_V2_Select_Column || {});\nvar Current_Token_Ownerships_Select_Column = /* @__PURE__ */ ((Current_Token_Ownerships_Select_Column2) => {\n  Current_Token_Ownerships_Select_Column2[\"Amount\"] = \"amount\";\n  Current_Token_Ownerships_Select_Column2[\"CollectionDataIdHash\"] = \"collection_data_id_hash\";\n  Current_Token_Ownerships_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Current_Token_Ownerships_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Current_Token_Ownerships_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Current_Token_Ownerships_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Token_Ownerships_Select_Column2[\"Name\"] = \"name\";\n  Current_Token_Ownerships_Select_Column2[\"OwnerAddress\"] = \"owner_address\";\n  Current_Token_Ownerships_Select_Column2[\"PropertyVersion\"] = \"property_version\";\n  Current_Token_Ownerships_Select_Column2[\"TableType\"] = \"table_type\";\n  Current_Token_Ownerships_Select_Column2[\"TokenDataIdHash\"] = \"token_data_id_hash\";\n  Current_Token_Ownerships_Select_Column2[\"TokenProperties\"] = \"token_properties\";\n  return Current_Token_Ownerships_Select_Column2;\n})(Current_Token_Ownerships_Select_Column || {});\nvar Current_Token_Ownerships_V2_Select_Column = /* @__PURE__ */ ((Current_Token_Ownerships_V2_Select_Column2) => {\n  Current_Token_Ownerships_V2_Select_Column2[\"Amount\"] = \"amount\";\n  Current_Token_Ownerships_V2_Select_Column2[\"IsFungibleV2\"] = \"is_fungible_v2\";\n  Current_Token_Ownerships_V2_Select_Column2[\"IsSoulboundV2\"] = \"is_soulbound_v2\";\n  Current_Token_Ownerships_V2_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Current_Token_Ownerships_V2_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Token_Ownerships_V2_Select_Column2[\"OwnerAddress\"] = \"owner_address\";\n  Current_Token_Ownerships_V2_Select_Column2[\"PropertyVersionV1\"] = \"property_version_v1\";\n  Current_Token_Ownerships_V2_Select_Column2[\"StorageId\"] = \"storage_id\";\n  Current_Token_Ownerships_V2_Select_Column2[\"TableTypeV1\"] = \"table_type_v1\";\n  Current_Token_Ownerships_V2_Select_Column2[\"TokenDataId\"] = \"token_data_id\";\n  Current_Token_Ownerships_V2_Select_Column2[\"TokenPropertiesMutatedV1\"] = \"token_properties_mutated_v1\";\n  Current_Token_Ownerships_V2_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  return Current_Token_Ownerships_V2_Select_Column2;\n})(Current_Token_Ownerships_V2_Select_Column || {});\nvar Current_Token_Pending_Claims_Select_Column = /* @__PURE__ */ ((Current_Token_Pending_Claims_Select_Column2) => {\n  Current_Token_Pending_Claims_Select_Column2[\"Amount\"] = \"amount\";\n  Current_Token_Pending_Claims_Select_Column2[\"CollectionDataIdHash\"] = \"collection_data_id_hash\";\n  Current_Token_Pending_Claims_Select_Column2[\"CollectionId\"] = \"collection_id\";\n  Current_Token_Pending_Claims_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Current_Token_Pending_Claims_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Current_Token_Pending_Claims_Select_Column2[\"FromAddress\"] = \"from_address\";\n  Current_Token_Pending_Claims_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Current_Token_Pending_Claims_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Current_Token_Pending_Claims_Select_Column2[\"Name\"] = \"name\";\n  Current_Token_Pending_Claims_Select_Column2[\"PropertyVersion\"] = \"property_version\";\n  Current_Token_Pending_Claims_Select_Column2[\"TableHandle\"] = \"table_handle\";\n  Current_Token_Pending_Claims_Select_Column2[\"ToAddress\"] = \"to_address\";\n  Current_Token_Pending_Claims_Select_Column2[\"TokenDataId\"] = \"token_data_id\";\n  Current_Token_Pending_Claims_Select_Column2[\"TokenDataIdHash\"] = \"token_data_id_hash\";\n  return Current_Token_Pending_Claims_Select_Column2;\n})(Current_Token_Pending_Claims_Select_Column || {});\nvar Cursor_Ordering = /* @__PURE__ */ ((Cursor_Ordering2) => {\n  Cursor_Ordering2[\"Asc\"] = \"ASC\";\n  Cursor_Ordering2[\"Desc\"] = \"DESC\";\n  return Cursor_Ordering2;\n})(Cursor_Ordering || {});\nvar Delegated_Staking_Activities_Select_Column = /* @__PURE__ */ ((Delegated_Staking_Activities_Select_Column2) => {\n  Delegated_Staking_Activities_Select_Column2[\"Amount\"] = \"amount\";\n  Delegated_Staking_Activities_Select_Column2[\"DelegatorAddress\"] = \"delegator_address\";\n  Delegated_Staking_Activities_Select_Column2[\"EventIndex\"] = \"event_index\";\n  Delegated_Staking_Activities_Select_Column2[\"EventType\"] = \"event_type\";\n  Delegated_Staking_Activities_Select_Column2[\"PoolAddress\"] = \"pool_address\";\n  Delegated_Staking_Activities_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  return Delegated_Staking_Activities_Select_Column2;\n})(Delegated_Staking_Activities_Select_Column || {});\nvar Delegated_Staking_Pools_Select_Column = /* @__PURE__ */ ((Delegated_Staking_Pools_Select_Column2) => {\n  Delegated_Staking_Pools_Select_Column2[\"FirstTransactionVersion\"] = \"first_transaction_version\";\n  Delegated_Staking_Pools_Select_Column2[\"StakingPoolAddress\"] = \"staking_pool_address\";\n  return Delegated_Staking_Pools_Select_Column2;\n})(Delegated_Staking_Pools_Select_Column || {});\nvar Delegator_Distinct_Pool_Select_Column = /* @__PURE__ */ ((Delegator_Distinct_Pool_Select_Column2) => {\n  Delegator_Distinct_Pool_Select_Column2[\"DelegatorAddress\"] = \"delegator_address\";\n  Delegator_Distinct_Pool_Select_Column2[\"PoolAddress\"] = \"pool_address\";\n  return Delegator_Distinct_Pool_Select_Column2;\n})(Delegator_Distinct_Pool_Select_Column || {});\nvar Events_Select_Column = /* @__PURE__ */ ((Events_Select_Column2) => {\n  Events_Select_Column2[\"AccountAddress\"] = \"account_address\";\n  Events_Select_Column2[\"CreationNumber\"] = \"creation_number\";\n  Events_Select_Column2[\"Data\"] = \"data\";\n  Events_Select_Column2[\"EventIndex\"] = \"event_index\";\n  Events_Select_Column2[\"IndexedType\"] = \"indexed_type\";\n  Events_Select_Column2[\"SequenceNumber\"] = \"sequence_number\";\n  Events_Select_Column2[\"TransactionBlockHeight\"] = \"transaction_block_height\";\n  Events_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  Events_Select_Column2[\"Type\"] = \"type\";\n  return Events_Select_Column2;\n})(Events_Select_Column || {});\nvar Fungible_Asset_Activities_Select_Column = /* @__PURE__ */ ((Fungible_Asset_Activities_Select_Column2) => {\n  Fungible_Asset_Activities_Select_Column2[\"Amount\"] = \"amount\";\n  Fungible_Asset_Activities_Select_Column2[\"AssetType\"] = \"asset_type\";\n  Fungible_Asset_Activities_Select_Column2[\"BlockHeight\"] = \"block_height\";\n  Fungible_Asset_Activities_Select_Column2[\"EntryFunctionIdStr\"] = \"entry_function_id_str\";\n  Fungible_Asset_Activities_Select_Column2[\"EventIndex\"] = \"event_index\";\n  Fungible_Asset_Activities_Select_Column2[\"GasFeePayerAddress\"] = \"gas_fee_payer_address\";\n  Fungible_Asset_Activities_Select_Column2[\"IsFrozen\"] = \"is_frozen\";\n  Fungible_Asset_Activities_Select_Column2[\"IsGasFee\"] = \"is_gas_fee\";\n  Fungible_Asset_Activities_Select_Column2[\"IsTransactionSuccess\"] = \"is_transaction_success\";\n  Fungible_Asset_Activities_Select_Column2[\"OwnerAddress\"] = \"owner_address\";\n  Fungible_Asset_Activities_Select_Column2[\"StorageId\"] = \"storage_id\";\n  Fungible_Asset_Activities_Select_Column2[\"StorageRefundAmount\"] = \"storage_refund_amount\";\n  Fungible_Asset_Activities_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  Fungible_Asset_Activities_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Fungible_Asset_Activities_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  Fungible_Asset_Activities_Select_Column2[\"Type\"] = \"type\";\n  return Fungible_Asset_Activities_Select_Column2;\n})(Fungible_Asset_Activities_Select_Column || {});\nvar Fungible_Asset_Metadata_Select_Column = /* @__PURE__ */ ((Fungible_Asset_Metadata_Select_Column2) => {\n  Fungible_Asset_Metadata_Select_Column2[\"AssetType\"] = \"asset_type\";\n  Fungible_Asset_Metadata_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Fungible_Asset_Metadata_Select_Column2[\"Decimals\"] = \"decimals\";\n  Fungible_Asset_Metadata_Select_Column2[\"IconUri\"] = \"icon_uri\";\n  Fungible_Asset_Metadata_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Fungible_Asset_Metadata_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Fungible_Asset_Metadata_Select_Column2[\"Name\"] = \"name\";\n  Fungible_Asset_Metadata_Select_Column2[\"ProjectUri\"] = \"project_uri\";\n  Fungible_Asset_Metadata_Select_Column2[\"SupplyAggregatorTableHandleV1\"] = \"supply_aggregator_table_handle_v1\";\n  Fungible_Asset_Metadata_Select_Column2[\"SupplyAggregatorTableKeyV1\"] = \"supply_aggregator_table_key_v1\";\n  Fungible_Asset_Metadata_Select_Column2[\"Symbol\"] = \"symbol\";\n  Fungible_Asset_Metadata_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  return Fungible_Asset_Metadata_Select_Column2;\n})(Fungible_Asset_Metadata_Select_Column || {});\nvar Indexer_Status_Select_Column = /* @__PURE__ */ ((Indexer_Status_Select_Column2) => {\n  Indexer_Status_Select_Column2[\"Db\"] = \"db\";\n  Indexer_Status_Select_Column2[\"IsIndexerUp\"] = \"is_indexer_up\";\n  return Indexer_Status_Select_Column2;\n})(Indexer_Status_Select_Column || {});\nvar Ledger_Infos_Select_Column = /* @__PURE__ */ ((Ledger_Infos_Select_Column2) => {\n  Ledger_Infos_Select_Column2[\"ChainId\"] = \"chain_id\";\n  return Ledger_Infos_Select_Column2;\n})(Ledger_Infos_Select_Column || {});\nvar Move_Resources_Select_Column = /* @__PURE__ */ ((Move_Resources_Select_Column2) => {\n  Move_Resources_Select_Column2[\"Address\"] = \"address\";\n  Move_Resources_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  return Move_Resources_Select_Column2;\n})(Move_Resources_Select_Column || {});\nvar Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column = /* @__PURE__ */ ((Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2) => {\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"BuyItNowPrice\"] = \"buy_it_now_price\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"CoinType\"] = \"coin_type\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"CollectionId\"] = \"collection_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"ContractAddress\"] = \"contract_address\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"CurrentBidPrice\"] = \"current_bid_price\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"CurrentBidder\"] = \"current_bidder\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"EntryFunctionIdStr\"] = \"entry_function_id_str\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"ExpirationTime\"] = \"expiration_time\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"FeeScheduleId\"] = \"fee_schedule_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"IsDeleted\"] = \"is_deleted\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"ListingId\"] = \"listing_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"Marketplace\"] = \"marketplace\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"Seller\"] = \"seller\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"StartingBidPrice\"] = \"starting_bid_price\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"TokenAmount\"] = \"token_amount\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"TokenDataId\"] = \"token_data_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  return Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column2;\n})(Nft_Marketplace_V2_Current_Nft_Marketplace_Auctions_Select_Column || {});\nvar Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column = /* @__PURE__ */ ((Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2) => {\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"Buyer\"] = \"buyer\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"CoinType\"] = \"coin_type\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"CollectionId\"] = \"collection_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"CollectionOfferId\"] = \"collection_offer_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"ContractAddress\"] = \"contract_address\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"EntryFunctionIdStr\"] = \"entry_function_id_str\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"ExpirationTime\"] = \"expiration_time\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"FeeScheduleId\"] = \"fee_schedule_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"IsDeleted\"] = \"is_deleted\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"ItemPrice\"] = \"item_price\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"Marketplace\"] = \"marketplace\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"RemainingTokenAmount\"] = \"remaining_token_amount\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  return Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column2;\n})(Nft_Marketplace_V2_Current_Nft_Marketplace_Collection_Offers_Select_Column || {});\nvar Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column = /* @__PURE__ */ ((Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2) => {\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"CoinType\"] = \"coin_type\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"CollectionId\"] = \"collection_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"ContractAddress\"] = \"contract_address\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"EntryFunctionIdStr\"] = \"entry_function_id_str\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"FeeScheduleId\"] = \"fee_schedule_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"IsDeleted\"] = \"is_deleted\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"ListingId\"] = \"listing_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"Marketplace\"] = \"marketplace\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"Price\"] = \"price\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"Seller\"] = \"seller\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"TokenAmount\"] = \"token_amount\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"TokenDataId\"] = \"token_data_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  return Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column2;\n})(Nft_Marketplace_V2_Current_Nft_Marketplace_Listings_Select_Column || {});\nvar Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column = /* @__PURE__ */ ((Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2) => {\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"Buyer\"] = \"buyer\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"CoinType\"] = \"coin_type\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"CollectionId\"] = \"collection_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"ContractAddress\"] = \"contract_address\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"EntryFunctionIdStr\"] = \"entry_function_id_str\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"ExpirationTime\"] = \"expiration_time\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"FeeScheduleId\"] = \"fee_schedule_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"IsDeleted\"] = \"is_deleted\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"LastTransactionTimestamp\"] = \"last_transaction_timestamp\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"LastTransactionVersion\"] = \"last_transaction_version\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"Marketplace\"] = \"marketplace\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"OfferId\"] = \"offer_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"Price\"] = \"price\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"TokenAmount\"] = \"token_amount\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"TokenDataId\"] = \"token_data_id\";\n  Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  return Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column2;\n})(Nft_Marketplace_V2_Current_Nft_Marketplace_Token_Offers_Select_Column || {});\nvar Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column = /* @__PURE__ */ ((Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2) => {\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"Buyer\"] = \"buyer\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"CoinType\"] = \"coin_type\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"CollectionId\"] = \"collection_id\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"ContractAddress\"] = \"contract_address\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"EntryFunctionIdStr\"] = \"entry_function_id_str\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"EventIndex\"] = \"event_index\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"EventType\"] = \"event_type\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"FeeScheduleId\"] = \"fee_schedule_id\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"Marketplace\"] = \"marketplace\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"OfferOrListingId\"] = \"offer_or_listing_id\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"Price\"] = \"price\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"PropertyVersion\"] = \"property_version\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"Seller\"] = \"seller\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"TokenAmount\"] = \"token_amount\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"TokenDataId\"] = \"token_data_id\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"TokenName\"] = \"token_name\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  return Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column2;\n})(Nft_Marketplace_V2_Nft_Marketplace_Activities_Select_Column || {});\nvar Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column = /* @__PURE__ */ ((Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column2) => {\n  Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column2[\"AnimationOptimizerRetryCount\"] = \"animation_optimizer_retry_count\";\n  Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column2[\"AssetUri\"] = \"asset_uri\";\n  Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column2[\"CdnAnimationUri\"] = \"cdn_animation_uri\";\n  Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column2[\"CdnImageUri\"] = \"cdn_image_uri\";\n  Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column2[\"CdnJsonUri\"] = \"cdn_json_uri\";\n  Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column2[\"ImageOptimizerRetryCount\"] = \"image_optimizer_retry_count\";\n  Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column2[\"JsonParserRetryCount\"] = \"json_parser_retry_count\";\n  Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column2[\"RawAnimationUri\"] = \"raw_animation_uri\";\n  Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column2[\"RawImageUri\"] = \"raw_image_uri\";\n  return Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column2;\n})(Nft_Metadata_Crawler_Parsed_Asset_Uris_Select_Column || {});\nvar Num_Active_Delegator_Per_Pool_Select_Column = /* @__PURE__ */ ((Num_Active_Delegator_Per_Pool_Select_Column2) => {\n  Num_Active_Delegator_Per_Pool_Select_Column2[\"NumActiveDelegator\"] = \"num_active_delegator\";\n  Num_Active_Delegator_Per_Pool_Select_Column2[\"PoolAddress\"] = \"pool_address\";\n  return Num_Active_Delegator_Per_Pool_Select_Column2;\n})(Num_Active_Delegator_Per_Pool_Select_Column || {});\nvar Order_By = /* @__PURE__ */ ((Order_By2) => {\n  Order_By2[\"Asc\"] = \"asc\";\n  Order_By2[\"AscNullsFirst\"] = \"asc_nulls_first\";\n  Order_By2[\"AscNullsLast\"] = \"asc_nulls_last\";\n  Order_By2[\"Desc\"] = \"desc\";\n  Order_By2[\"DescNullsFirst\"] = \"desc_nulls_first\";\n  Order_By2[\"DescNullsLast\"] = \"desc_nulls_last\";\n  return Order_By2;\n})(Order_By || {});\nvar Processor_Status_Select_Column = /* @__PURE__ */ ((Processor_Status_Select_Column2) => {\n  Processor_Status_Select_Column2[\"LastSuccessVersion\"] = \"last_success_version\";\n  Processor_Status_Select_Column2[\"LastUpdated\"] = \"last_updated\";\n  Processor_Status_Select_Column2[\"Processor\"] = \"processor\";\n  return Processor_Status_Select_Column2;\n})(Processor_Status_Select_Column || {});\nvar Proposal_Votes_Select_Column = /* @__PURE__ */ ((Proposal_Votes_Select_Column2) => {\n  Proposal_Votes_Select_Column2[\"NumVotes\"] = \"num_votes\";\n  Proposal_Votes_Select_Column2[\"ProposalId\"] = \"proposal_id\";\n  Proposal_Votes_Select_Column2[\"ShouldPass\"] = \"should_pass\";\n  Proposal_Votes_Select_Column2[\"StakingPoolAddress\"] = \"staking_pool_address\";\n  Proposal_Votes_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Proposal_Votes_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  Proposal_Votes_Select_Column2[\"VoterAddress\"] = \"voter_address\";\n  return Proposal_Votes_Select_Column2;\n})(Proposal_Votes_Select_Column || {});\nvar Table_Items_Select_Column = /* @__PURE__ */ ((Table_Items_Select_Column2) => {\n  Table_Items_Select_Column2[\"DecodedKey\"] = \"decoded_key\";\n  Table_Items_Select_Column2[\"DecodedValue\"] = \"decoded_value\";\n  Table_Items_Select_Column2[\"Key\"] = \"key\";\n  Table_Items_Select_Column2[\"TableHandle\"] = \"table_handle\";\n  Table_Items_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  Table_Items_Select_Column2[\"WriteSetChangeIndex\"] = \"write_set_change_index\";\n  return Table_Items_Select_Column2;\n})(Table_Items_Select_Column || {});\nvar Table_Metadatas_Select_Column = /* @__PURE__ */ ((Table_Metadatas_Select_Column2) => {\n  Table_Metadatas_Select_Column2[\"Handle\"] = \"handle\";\n  Table_Metadatas_Select_Column2[\"KeyType\"] = \"key_type\";\n  Table_Metadatas_Select_Column2[\"ValueType\"] = \"value_type\";\n  return Table_Metadatas_Select_Column2;\n})(Table_Metadatas_Select_Column || {});\nvar Token_Activities_Select_Column = /* @__PURE__ */ ((Token_Activities_Select_Column2) => {\n  Token_Activities_Select_Column2[\"CoinAmount\"] = \"coin_amount\";\n  Token_Activities_Select_Column2[\"CoinType\"] = \"coin_type\";\n  Token_Activities_Select_Column2[\"CollectionDataIdHash\"] = \"collection_data_id_hash\";\n  Token_Activities_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Token_Activities_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Token_Activities_Select_Column2[\"EventAccountAddress\"] = \"event_account_address\";\n  Token_Activities_Select_Column2[\"EventCreationNumber\"] = \"event_creation_number\";\n  Token_Activities_Select_Column2[\"EventIndex\"] = \"event_index\";\n  Token_Activities_Select_Column2[\"EventSequenceNumber\"] = \"event_sequence_number\";\n  Token_Activities_Select_Column2[\"FromAddress\"] = \"from_address\";\n  Token_Activities_Select_Column2[\"Name\"] = \"name\";\n  Token_Activities_Select_Column2[\"PropertyVersion\"] = \"property_version\";\n  Token_Activities_Select_Column2[\"ToAddress\"] = \"to_address\";\n  Token_Activities_Select_Column2[\"TokenAmount\"] = \"token_amount\";\n  Token_Activities_Select_Column2[\"TokenDataIdHash\"] = \"token_data_id_hash\";\n  Token_Activities_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Token_Activities_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  Token_Activities_Select_Column2[\"TransferType\"] = \"transfer_type\";\n  return Token_Activities_Select_Column2;\n})(Token_Activities_Select_Column || {});\nvar Token_Activities_V2_Select_Column = /* @__PURE__ */ ((Token_Activities_V2_Select_Column2) => {\n  Token_Activities_V2_Select_Column2[\"AfterValue\"] = \"after_value\";\n  Token_Activities_V2_Select_Column2[\"BeforeValue\"] = \"before_value\";\n  Token_Activities_V2_Select_Column2[\"EntryFunctionIdStr\"] = \"entry_function_id_str\";\n  Token_Activities_V2_Select_Column2[\"EventAccountAddress\"] = \"event_account_address\";\n  Token_Activities_V2_Select_Column2[\"EventIndex\"] = \"event_index\";\n  Token_Activities_V2_Select_Column2[\"FromAddress\"] = \"from_address\";\n  Token_Activities_V2_Select_Column2[\"IsFungibleV2\"] = \"is_fungible_v2\";\n  Token_Activities_V2_Select_Column2[\"PropertyVersionV1\"] = \"property_version_v1\";\n  Token_Activities_V2_Select_Column2[\"ToAddress\"] = \"to_address\";\n  Token_Activities_V2_Select_Column2[\"TokenAmount\"] = \"token_amount\";\n  Token_Activities_V2_Select_Column2[\"TokenDataId\"] = \"token_data_id\";\n  Token_Activities_V2_Select_Column2[\"TokenStandard\"] = \"token_standard\";\n  Token_Activities_V2_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Token_Activities_V2_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  Token_Activities_V2_Select_Column2[\"Type\"] = \"type\";\n  return Token_Activities_V2_Select_Column2;\n})(Token_Activities_V2_Select_Column || {});\nvar Token_Datas_Select_Column = /* @__PURE__ */ ((Token_Datas_Select_Column2) => {\n  Token_Datas_Select_Column2[\"CollectionDataIdHash\"] = \"collection_data_id_hash\";\n  Token_Datas_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Token_Datas_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Token_Datas_Select_Column2[\"DefaultProperties\"] = \"default_properties\";\n  Token_Datas_Select_Column2[\"Description\"] = \"description\";\n  Token_Datas_Select_Column2[\"DescriptionMutable\"] = \"description_mutable\";\n  Token_Datas_Select_Column2[\"LargestPropertyVersion\"] = \"largest_property_version\";\n  Token_Datas_Select_Column2[\"Maximum\"] = \"maximum\";\n  Token_Datas_Select_Column2[\"MaximumMutable\"] = \"maximum_mutable\";\n  Token_Datas_Select_Column2[\"MetadataUri\"] = \"metadata_uri\";\n  Token_Datas_Select_Column2[\"Name\"] = \"name\";\n  Token_Datas_Select_Column2[\"PayeeAddress\"] = \"payee_address\";\n  Token_Datas_Select_Column2[\"PropertiesMutable\"] = \"properties_mutable\";\n  Token_Datas_Select_Column2[\"RoyaltyMutable\"] = \"royalty_mutable\";\n  Token_Datas_Select_Column2[\"RoyaltyPointsDenominator\"] = \"royalty_points_denominator\";\n  Token_Datas_Select_Column2[\"RoyaltyPointsNumerator\"] = \"royalty_points_numerator\";\n  Token_Datas_Select_Column2[\"Supply\"] = \"supply\";\n  Token_Datas_Select_Column2[\"TokenDataIdHash\"] = \"token_data_id_hash\";\n  Token_Datas_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Token_Datas_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  Token_Datas_Select_Column2[\"UriMutable\"] = \"uri_mutable\";\n  return Token_Datas_Select_Column2;\n})(Token_Datas_Select_Column || {});\nvar Token_Ownerships_Select_Column = /* @__PURE__ */ ((Token_Ownerships_Select_Column2) => {\n  Token_Ownerships_Select_Column2[\"Amount\"] = \"amount\";\n  Token_Ownerships_Select_Column2[\"CollectionDataIdHash\"] = \"collection_data_id_hash\";\n  Token_Ownerships_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Token_Ownerships_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Token_Ownerships_Select_Column2[\"Name\"] = \"name\";\n  Token_Ownerships_Select_Column2[\"OwnerAddress\"] = \"owner_address\";\n  Token_Ownerships_Select_Column2[\"PropertyVersion\"] = \"property_version\";\n  Token_Ownerships_Select_Column2[\"TableHandle\"] = \"table_handle\";\n  Token_Ownerships_Select_Column2[\"TableType\"] = \"table_type\";\n  Token_Ownerships_Select_Column2[\"TokenDataIdHash\"] = \"token_data_id_hash\";\n  Token_Ownerships_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Token_Ownerships_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  return Token_Ownerships_Select_Column2;\n})(Token_Ownerships_Select_Column || {});\nvar Tokens_Select_Column = /* @__PURE__ */ ((Tokens_Select_Column2) => {\n  Tokens_Select_Column2[\"CollectionDataIdHash\"] = \"collection_data_id_hash\";\n  Tokens_Select_Column2[\"CollectionName\"] = \"collection_name\";\n  Tokens_Select_Column2[\"CreatorAddress\"] = \"creator_address\";\n  Tokens_Select_Column2[\"Name\"] = \"name\";\n  Tokens_Select_Column2[\"PropertyVersion\"] = \"property_version\";\n  Tokens_Select_Column2[\"TokenDataIdHash\"] = \"token_data_id_hash\";\n  Tokens_Select_Column2[\"TokenProperties\"] = \"token_properties\";\n  Tokens_Select_Column2[\"TransactionTimestamp\"] = \"transaction_timestamp\";\n  Tokens_Select_Column2[\"TransactionVersion\"] = \"transaction_version\";\n  return Tokens_Select_Column2;\n})(Tokens_Select_Column || {});\nvar User_Transactions_Select_Column = /* @__PURE__ */ ((User_Transactions_Select_Column2) => {\n  User_Transactions_Select_Column2[\"BlockHeight\"] = \"block_height\";\n  User_Transactions_Select_Column2[\"EntryFunctionIdStr\"] = \"entry_function_id_str\";\n  User_Transactions_Select_Column2[\"Epoch\"] = \"epoch\";\n  User_Transactions_Select_Column2[\"ExpirationTimestampSecs\"] = \"expiration_timestamp_secs\";\n  User_Transactions_Select_Column2[\"GasUnitPrice\"] = \"gas_unit_price\";\n  User_Transactions_Select_Column2[\"MaxGasAmount\"] = \"max_gas_amount\";\n  User_Transactions_Select_Column2[\"ParentSignatureType\"] = \"parent_signature_type\";\n  User_Transactions_Select_Column2[\"Sender\"] = \"sender\";\n  User_Transactions_Select_Column2[\"SequenceNumber\"] = \"sequence_number\";\n  User_Transactions_Select_Column2[\"Timestamp\"] = \"timestamp\";\n  User_Transactions_Select_Column2[\"Version\"] = \"version\";\n  return User_Transactions_Select_Column2;\n})(User_Transactions_Select_Column || {});\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtDQUFrQztBQUNoRTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsUUFBUTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDOEI7QUFDUTtBQUMwQjtBQUNsQjtBQUNhOztBQUUzRDtBQUM2QjtBQUNhO0FBQ0k7QUFDRztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvREFBSSxRQUFRLHdEQUFNO0FBQzlCLHFCQUFxQiwrREFBVTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixnQkFBZ0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0RBQUksUUFBUSx3REFBTTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJDQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGlCQUFpQjtBQUMzQjtBQUNBLDJGQUEyRixnQkFBZ0I7QUFDM0c7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLElBQUksRUFBRSwwQkFBMEI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsa0NBQWtDLFFBQVE7O0FBRXhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLDhCQUE4QixRQUFRO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ21EOztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxRQUFRO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyw2Q0FBNkM7QUFDbkY7QUFDQSx5QkFBeUIsb0VBQVcsR0FBRywrQ0FBK0M7QUFDdEY7QUFDQTtBQUNBO0FBQ0EsVUFBVSw4REFBOEQ7QUFDeEUsMEJBQTBCLElBQUksR0FBRyxpQ0FBaUM7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx3Q0FBd0MsMkJBQTJCO0FBQ25FO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHdDQUF3Qyw0QkFBNEI7QUFDcEU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGVBQWU7O0FBRWhCO0FBQzRFO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwrREFBVTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlEO0FBQ2pELHVDQUF1QztBQUN2QyxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sNEJBQTRCLFVBQVU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRCw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwrREFBVztBQUN0QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixZQUFZO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDMEQ7O0FBRTFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG1CQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG1CQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELHlCQUF5QjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELHlCQUF5QjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQseUJBQXlCO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzQkFBc0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsa0NBQWtDO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLElBQUk7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQ0FBa0M7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0VBQStFLE1BQU07QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyRUFBMkUsTUFBTTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxNQUFNO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxzQkFBc0IsbUJBQW1CO0FBQ3pDO0FBQ0E7QUFDQSxpQkFBaUIsSUFBSSxFQUFFLEtBQUs7QUFDNUIsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0Esc0JBQXNCLG1CQUFtQjtBQUN6QztBQUNBO0FBQ0EsaUJBQWlCLElBQUksRUFBRSxLQUFLO0FBQzVCLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsTUFBTTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsTUFBTTtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEVBQTBFLE1BQU07QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix3REFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsTUFBTTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsd0RBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLE1BQU07QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUMyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHdEQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsd0RBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksTUFBTSxtQkFBbUIsK0RBQVcsQ0FBQyw0REFBd0I7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJDQUFVO0FBQ2xDLE1BQU07QUFDTix3QkFBd0IsMkNBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix3REFBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsZUFBZSxJQUFJLGVBQWU7QUFDL0UsaUJBQWlCLHdEQUFNO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMkNBQVU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDJDQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0JBQWdCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGdCQUFnQixjQUFjLFdBQVc7QUFDckQsZ0JBQWdCLCtCQUErQixHQUFHLHFCQUFxQixHQUFHLHFCQUFxQixHQUFHLFVBQVU7QUFDNUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixFQUFFLGdDQUFnQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsa0JBQWtCLGVBQWU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxpQ0FBaUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvQkFBb0IsdUJBQXVCLGlCQUFpQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxlQUFlLGtCQUFrQix5QkFBeUI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx1Q0FBdUM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sdUNBQXVDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLGlDQUFpQztBQUN2QztBQUNBO0FBQ0Esd0NBQXdDLGdCQUFnQixnQkFBZ0I7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sdUNBQXVDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sdUNBQXVDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHVDQUF1QztBQUM3QztBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDMkQ7O0FBRTNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLEtBQUssaUJBQWlCLG9EQUFvRDtBQUMzRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSw4REFBOEQ7QUFDeEUsd0JBQXdCLDBEQUEwRCxJQUFJLGlCQUFpQixJQUFJLFdBQVc7QUFDdEg7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsdUVBQXVFLGdCQUFnQjtBQUN2RjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFFBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix3REFBUztBQUMxQjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isa0NBQWtDO0FBQ2xELGVBQWUsdURBQXVELElBQUksaUJBQWlCLElBQUksYUFBYTtBQUM1RyxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLEtBQUs7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2RUFBNkU7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsWUFBWSxJQUFJLFNBQVMsSUFBSSxRQUFRO0FBQzVEO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixNQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLEVBQUU7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLEtBQUssSUFBSSxPQUFPO0FBQzFDO0FBQ0E7QUFDQSx1RUFBdUUsRUFBRTtBQUN6RTtBQUNBO0FBQ0EsWUFBWSxrQkFBa0I7QUFDOUI7QUFDQSxhQUFhLGlDQUFpQyxhQUFhLDRCQUE0QjtBQUN2Rix3RUFBd0UsOERBQThEO0FBQ3RJO0FBQ0Esc0VBQXNFLHlEQUF5RDtBQUMvSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSw0REFBNEQsSUFBSTtBQUNoRTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0EsNEJBQTRCLHVDQUF1QztBQUNuRTtBQUNBLG1CQUFtQjtBQUNuQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0EsNEJBQTRCLHVDQUF1QztBQUNuRTtBQUNBLGdCQUFnQiwwRkFBMEY7QUFDMUcsbUJBQW1CO0FBQ25CLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGVBQWU7QUFDM0MsZ0JBQWdCLDBFQUEwRTtBQUMxRjtBQUNBLG1CQUFtQjtBQUNuQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0EsNEJBQTRCLHVDQUF1QyxVQUFVLFdBQVc7QUFDeEY7QUFDQSxnQkFBZ0IsOERBQThEO0FBQzlFLG1CQUFtQjtBQUNuQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixlQUFlO0FBQzNDLGdCQUFnQiwyRUFBMkU7QUFDM0Y7QUFDQSxtQkFBbUI7QUFDbkIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBLDRCQUE0Qix1Q0FBdUMsWUFBWSxhQUFhO0FBQzVGO0FBQ0EsZ0JBQWdCLDhEQUE4RDtBQUM5RSxtQkFBbUI7QUFDbkIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQSw0QkFBNEIsZ0NBQWdDLFVBQVUsZUFBZTtBQUNyRjtBQUNBLGdCQUFnQiwwRkFBMEY7QUFDMUcsbUJBQW1CO0FBQ25CLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQSw0QkFBNEIsZ0NBQWdDLFVBQVUsa0JBQWtCLEdBQUcsVUFBVTtBQUNyRztBQUNBLGdCQUFnQiwwRkFBMEY7QUFDMUcsbUJBQW1CO0FBQ25CLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsZ0JBQWdCLFlBQVk7QUFDNUI7QUFDQTtBQUNBLHdCQUF3QixlQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGtJQUFrSTtBQUNsSixtQkFBbUI7QUFDbkIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBLHdDQUF3QyxRQUFRO0FBQ2hEO0FBQ0EsbUJBQW1CO0FBQ25CLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQSwyQ0FBMkMsV0FBVztBQUN0RDtBQUNBLG1CQUFtQjtBQUNuQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxTQUFTO0FBQzFEO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxTQUFTLGtCQUFrQixhQUFhO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsU0FBUyx3QkFBd0Isa0JBQWtCO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixPQUFPO0FBQ2pDO0FBQ0EsZ0JBQWdCLHNHQUFzRztBQUN0SCxtQkFBbUI7QUFDbkIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpQ0FBaUMsYUFBYSwyQkFBMkI7QUFDdEYsMEZBQTBGLG1EQUFtRDtBQUM3STtBQUNBLGdGQUFnRixzQ0FBc0M7QUFDdEg7QUFDQSxZQUFZLDhDQUE4QztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsV0FBVztBQUN2RCxhQUFhLDRCQUE0QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrREFBK0Q7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0Esb0NBQW9DLFlBQVk7QUFDaEQ7QUFDQSxnQkFBZ0IscUNBQXFDO0FBQ3JELG1CQUFtQjtBQUNuQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0EscUNBQXFDLFFBQVE7QUFDN0M7QUFDQSxnQkFBZ0IscUNBQXFDO0FBQ3JELG1CQUFtQjtBQUNuQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdCQUFnQjtBQUNoQyxtQkFBbUI7QUFDbkIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwrQkFBK0I7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFNBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsbUJBQW1CO0FBQzFDLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixtQkFBbUI7QUFDMUMsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixtQkFBbUI7QUFDMUMsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixjQUFjO0FBQ3JDLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsY0FBYztBQUNyQyxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNCQUFzQjtBQUM3Qyw0QkFBNEIsaUJBQWlCLDZCQUE2QjtBQUMxRSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHFCQUFxQjtBQUM5Qyx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBLDRDQUE0QyxrQkFBa0I7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksTUFBTTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UseUNBQXlDO0FBQ2pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UseUNBQXlDO0FBQ2pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UseUNBQXlDO0FBQ2pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSx5Q0FBeUM7QUFDakg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLHlDQUF5QztBQUNqSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UseUNBQXlDO0FBQ2pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0Usd0NBQXdDO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSx3Q0FBd0M7QUFDaEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSx3Q0FBd0M7QUFDaEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSx3Q0FBd0M7QUFDaEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLHlDQUF5QztBQUNqSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UsdUNBQXVDO0FBQy9HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UseUNBQXlDO0FBQ2pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxTQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksU0FBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxTQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsNERBQTRELFNBQVM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLHNDQUFzQztBQUM5RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxTQUFTO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLG1CQUFtQixnQkFBZ0I7QUFDbkM7QUFDQSxLQUFLO0FBQ0w7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0EsdURBQXVELGFBQWE7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLEtBQUs7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHFCQUFxQjtBQUM5QjtBQUNBO0FBQ0EsWUFBWSxTQUFTO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUIscUJBQXFCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLDJCQUEyQixHQUFHLGlCQUFpQjtBQUM1RixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9CQUFvQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsWUFBWTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLFlBQVk7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCwwQ0FBMEMscUJBQXFCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxZQUFZO0FBQ3pEO0FBQ0E7QUFDQSxnREFBZ0QsZUFBZTtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLGNBQWMsR0FBRyxZQUFZO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLFlBQVk7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLFlBQVk7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELGNBQWMsR0FBRyxZQUFZO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsU0FBUyxxQkFBcUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxZQUFZO0FBQ2xEO0FBQ0E7QUFDQSxzQ0FBc0MsZUFBZTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFNBQVMscUJBQXFCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMENBQTBDLHFCQUFxQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHFCQUFxQjtBQUM5QjtBQUNBO0FBQ0EsWUFBWSxTQUFTO0FBQ3JCO0FBQ0EsbUJBQW1CLHFCQUFxQjtBQUN4QyxxQkFBcUIscUJBQXFCO0FBQzFDO0FBQ0EsMEJBQTBCLFNBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMscUJBQXFCO0FBQzlCO0FBQ0E7QUFDQSxZQUFZLFNBQVM7QUFDckI7QUFDQSxtQkFBbUIscUJBQXFCO0FBQ3hDLHFCQUFxQixxQkFBcUI7QUFDMUM7QUFDQSwwQkFBMEIsa0JBQWtCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEZBQTBGLHVCQUF1QjtBQUNqSDtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0NBQWtDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0NBQWtDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdGQUF3Rix1QkFBdUI7QUFDL0c7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDeUM7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsaUJBQWlCO0FBQ2xELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxRQUFRO0FBQ2pEO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLCtCQUErQjtBQUNoQyxzQ0FBc0MscURBQVk7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMkRBQTJEO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEZBQTBGLG9CQUFvQjtBQUM5RztBQUNBLG9CQUFvQiw2QkFBNkI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQkFBc0I7O0FBRXZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOEJBQThCOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQkFBZ0I7O0FBRWpCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBDQUEwQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0Q0FBNEM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGlEQUFpRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMseURBQXlEO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGlEQUFpRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxxQ0FBcUM7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsbUNBQW1DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGlDQUFpQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNDQUFzQztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMkNBQTJDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx5Q0FBeUM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMkNBQTJDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwREFBMEQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRDQUE0QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDZEQUE2RDtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDZDQUE2QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdEQUFnRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxxREFBcUQ7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxxQ0FBcUM7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnREFBZ0Q7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx5Q0FBeUM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMseUNBQXlDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhDQUE4QztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxpREFBaUQ7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtEQUFrRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsdUJBQXVCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtEQUFrRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNkNBQTZDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw2Q0FBNkM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNEJBQTRCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsK0NBQStDO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDZDQUE2QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0NBQW9DO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0NBQWtDO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQ0FBb0M7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx5RUFBeUU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0ZBQWtGO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHlFQUF5RTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDZFQUE2RTtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxtRUFBbUU7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNERBQTREO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxtREFBbUQ7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0JBQWdCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNDQUFzQztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9DQUFvQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxpQ0FBaUM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMscUNBQXFDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNDQUFzQztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx5Q0FBeUM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsaUNBQWlDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNDQUFzQztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0QkFBNEI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHVDQUF1QztBQXNIdEM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXB0b3MvZGlzdC9pbmRleC5tanM/N2Q0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XG4gIGZvciAodmFyIG5hbWUgaW4gYWxsKVxuICAgIF9fZGVmUHJvcCh0YXJnZXQsIG5hbWUsIHsgZ2V0OiBhbGxbbmFtZV0sIGVudW1lcmFibGU6IHRydWUgfSk7XG59O1xudmFyIF9fZGVjb3JhdGVDbGFzcyA9IChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwga2luZCkgPT4ge1xuICB2YXIgcmVzdWx0ID0ga2luZCA+IDEgPyB2b2lkIDAgOiBraW5kID8gX19nZXRPd25Qcm9wRGVzYyh0YXJnZXQsIGtleSkgOiB0YXJnZXQ7XG4gIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDEsIGRlY29yYXRvcjsgaSA+PSAwOyBpLS0pXG4gICAgaWYgKGRlY29yYXRvciA9IGRlY29yYXRvcnNbaV0pXG4gICAgICByZXN1bHQgPSAoa2luZCA/IGRlY29yYXRvcih0YXJnZXQsIGtleSwgcmVzdWx0KSA6IGRlY29yYXRvcihyZXN1bHQpKSB8fCByZXN1bHQ7XG4gIGlmIChraW5kICYmIHJlc3VsdClcbiAgICBfX2RlZlByb3AodGFyZ2V0LCBrZXksIHJlc3VsdCk7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG4vLyBzcmMvYWNjb3VudC9hcHRvc19hY2NvdW50LnRzXG5pbXBvcnQgbmFjbDIgZnJvbSBcInR3ZWV0bmFjbFwiO1xuaW1wb3J0ICogYXMgYmlwMzkgZnJvbSBcIkBzY3VyZS9iaXAzOVwiO1xuaW1wb3J0IHsgYnl0ZXNUb0hleCBhcyBieXRlc1RvSGV4MiB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3V0aWxzXCI7XG5pbXBvcnQgeyBzaGEyNTYgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy9zaGEyNTZcIjtcbmltcG9ydCB7IHNoYTNfMjU2IGFzIHNoYTNIYXNoMyB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3NoYTNcIjtcblxuLy8gc3JjL3V0aWxzL2hkLWtleS50c1xuaW1wb3J0IG5hY2wgZnJvbSBcInR3ZWV0bmFjbFwiO1xuaW1wb3J0IHsgaG1hYyB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL2htYWNcIjtcbmltcG9ydCB7IHNoYTUxMiB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3NoYTUxMlwiO1xuaW1wb3J0IHsgaGV4VG9CeXRlcyB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3V0aWxzXCI7XG52YXIgcGF0aFJlZ2V4ID0gL15tKFxcL1swLTldKycpKyQvO1xudmFyIHJlcGxhY2VEZXJpdmUgPSAodmFsKSA9PiB2YWwucmVwbGFjZShcIidcIiwgXCJcIik7XG52YXIgSE1BQ19LRVkgPSBcImVkMjU1MTkgc2VlZFwiO1xudmFyIEhBUkRFTkVEX09GRlNFVCA9IDIxNDc0ODM2NDg7XG52YXIgZ2V0TWFzdGVyS2V5RnJvbVNlZWQgPSAoc2VlZCkgPT4ge1xuICBjb25zdCBoID0gaG1hYy5jcmVhdGUoc2hhNTEyLCBITUFDX0tFWSk7XG4gIGNvbnN0IEkgPSBoLnVwZGF0ZShoZXhUb0J5dGVzKHNlZWQpKS5kaWdlc3QoKTtcbiAgY29uc3QgSUwgPSBJLnNsaWNlKDAsIDMyKTtcbiAgY29uc3QgSVIgPSBJLnNsaWNlKDMyKTtcbiAgcmV0dXJuIHtcbiAgICBrZXk6IElMLFxuICAgIGNoYWluQ29kZTogSVJcbiAgfTtcbn07XG52YXIgQ0tEUHJpdiA9ICh7IGtleSwgY2hhaW5Db2RlIH0sIGluZGV4KSA9PiB7XG4gIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcig0KTtcbiAgbmV3IERhdGFWaWV3KGJ1ZmZlcikuc2V0VWludDMyKDAsIGluZGV4KTtcbiAgY29uc3QgaW5kZXhCeXRlcyA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlcik7XG4gIGNvbnN0IHplcm8gPSBuZXcgVWludDhBcnJheShbMF0pO1xuICBjb25zdCBkYXRhID0gbmV3IFVpbnQ4QXJyYXkoWy4uLnplcm8sIC4uLmtleSwgLi4uaW5kZXhCeXRlc10pO1xuICBjb25zdCBJID0gaG1hYy5jcmVhdGUoc2hhNTEyLCBjaGFpbkNvZGUpLnVwZGF0ZShkYXRhKS5kaWdlc3QoKTtcbiAgY29uc3QgSUwgPSBJLnNsaWNlKDAsIDMyKTtcbiAgY29uc3QgSVIgPSBJLnNsaWNlKDMyKTtcbiAgcmV0dXJuIHtcbiAgICBrZXk6IElMLFxuICAgIGNoYWluQ29kZTogSVJcbiAgfTtcbn07XG52YXIgZ2V0UHVibGljS2V5ID0gKHByaXZhdGVLZXksIHdpdGhaZXJvQnl0ZSA9IHRydWUpID0+IHtcbiAgY29uc3Qga2V5UGFpciA9IG5hY2wuc2lnbi5rZXlQYWlyLmZyb21TZWVkKHByaXZhdGVLZXkpO1xuICBjb25zdCBzaWduUGsgPSBrZXlQYWlyLnNlY3JldEtleS5zdWJhcnJheSgzMik7XG4gIGNvbnN0IHplcm8gPSBuZXcgVWludDhBcnJheShbMF0pO1xuICByZXR1cm4gd2l0aFplcm9CeXRlID8gbmV3IFVpbnQ4QXJyYXkoWy4uLnplcm8sIC4uLnNpZ25Qa10pIDogc2lnblBrO1xufTtcbnZhciBpc1ZhbGlkUGF0aCA9IChwYXRoKSA9PiB7XG4gIGlmICghcGF0aFJlZ2V4LnRlc3QocGF0aCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuICFwYXRoLnNwbGl0KFwiL1wiKS5zbGljZSgxKS5tYXAocmVwbGFjZURlcml2ZSkuc29tZShOdW1iZXIuaXNOYU4pO1xufTtcbnZhciBkZXJpdmVQYXRoID0gKHBhdGgsIHNlZWQsIG9mZnNldCA9IEhBUkRFTkVEX09GRlNFVCkgPT4ge1xuICBpZiAoIWlzVmFsaWRQYXRoKHBhdGgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBkZXJpdmF0aW9uIHBhdGhcIik7XG4gIH1cbiAgY29uc3QgeyBrZXksIGNoYWluQ29kZSB9ID0gZ2V0TWFzdGVyS2V5RnJvbVNlZWQoc2VlZCk7XG4gIGNvbnN0IHNlZ21lbnRzID0gcGF0aC5zcGxpdChcIi9cIikuc2xpY2UoMSkubWFwKHJlcGxhY2VEZXJpdmUpLm1hcCgoZWwpID0+IHBhcnNlSW50KGVsLCAxMCkpO1xuICByZXR1cm4gc2VnbWVudHMucmVkdWNlKChwYXJlbnRLZXlzLCBzZWdtZW50KSA9PiBDS0RQcml2KHBhcmVudEtleXMsIHNlZ21lbnQgKyBvZmZzZXQpLCB7IGtleSwgY2hhaW5Db2RlIH0pO1xufTtcblxuLy8gc3JjL3ZlcnNpb24udHNcbnZhciBWRVJTSU9OID0gXCIxLjIxLjBcIjtcblxuLy8gc3JjL3V0aWxzL21pc2MudHNcbmFzeW5jIGZ1bmN0aW9uIHNsZWVwKHRpbWVNcykge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICBzZXRUaW1lb3V0KHJlc29sdmUsIHRpbWVNcyk7XG4gIH0pO1xufVxudmFyIERFRkFVTFRfVkVSU0lPTl9QQVRIX0JBU0UgPSBcIi92MVwiO1xuZnVuY3Rpb24gZml4Tm9kZVVybChub2RlVXJsKSB7XG4gIGxldCBvdXQgPSBgJHtub2RlVXJsfWA7XG4gIGlmIChvdXQuZW5kc1dpdGgoXCIvXCIpKSB7XG4gICAgb3V0ID0gb3V0LnN1YnN0cmluZygwLCBvdXQubGVuZ3RoIC0gMSk7XG4gIH1cbiAgaWYgKCFvdXQuZW5kc1dpdGgoREVGQVVMVF9WRVJTSU9OX1BBVEhfQkFTRSkpIHtcbiAgICBvdXQgPSBgJHtvdXR9JHtERUZBVUxUX1ZFUlNJT05fUEFUSF9CQVNFfWA7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbnZhciBERUZBVUxUX01BWF9HQVNfQU1PVU5UID0gMmU1O1xudmFyIERFRkFVTFRfVFhOX0VYUF9TRUNfRlJPTV9OT1cgPSAyMDtcbnZhciBERUZBVUxUX1RYTl9USU1FT1VUX1NFQyA9IDIwO1xudmFyIEFQVE9TX0NPSU4gPSBcIjB4MTo6YXB0b3NfY29pbjo6QXB0b3NDb2luXCI7XG52YXIgQ1VTVE9NX1JFUVVFU1RfSEVBREVSID0geyBcIngtYXB0b3MtY2xpZW50XCI6IGBhcHRvcy10cy1zZGsvJHtWRVJTSU9OfWAgfTtcblxuLy8gc3JjL3V0aWxzL21lbW9pemUtZGVjb3JhdG9yLnRzXG5mdW5jdGlvbiBNZW1vaXplKGFyZ3MpIHtcbiAgbGV0IGhhc2hGdW5jdGlvbjtcbiAgbGV0IHR0bE1zO1xuICBsZXQgdGFncztcbiAgaWYgKHR5cGVvZiBhcmdzID09PSBcIm9iamVjdFwiKSB7XG4gICAgaGFzaEZ1bmN0aW9uID0gYXJncy5oYXNoRnVuY3Rpb247XG4gICAgdHRsTXMgPSBhcmdzLnR0bE1zO1xuICAgIHRhZ3MgPSBhcmdzLnRhZ3M7XG4gIH0gZWxzZSB7XG4gICAgaGFzaEZ1bmN0aW9uID0gYXJncztcbiAgfVxuICByZXR1cm4gKHRhcmdldCwgcHJvcGVydHlLZXksIGRlc2NyaXB0b3IpID0+IHtcbiAgICBpZiAoZGVzY3JpcHRvci52YWx1ZSAhPSBudWxsKSB7XG4gICAgICBkZXNjcmlwdG9yLnZhbHVlID0gZ2V0TmV3RnVuY3Rpb24oZGVzY3JpcHRvci52YWx1ZSwgaGFzaEZ1bmN0aW9uLCB0dGxNcywgdGFncyk7XG4gICAgfSBlbHNlIGlmIChkZXNjcmlwdG9yLmdldCAhPSBudWxsKSB7XG4gICAgICBkZXNjcmlwdG9yLmdldCA9IGdldE5ld0Z1bmN0aW9uKGRlc2NyaXB0b3IuZ2V0LCBoYXNoRnVuY3Rpb24sIHR0bE1zLCB0YWdzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiT25seSBwdXQgYSBNZW1vaXplKCkgZGVjb3JhdG9yIG9uIGEgbWV0aG9kIG9yIGdldCBhY2Nlc3Nvci5cIik7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gTWVtb2l6ZUV4cGlyaW5nKHR0bE1zLCBoYXNoRnVuY3Rpb24pIHtcbiAgcmV0dXJuIE1lbW9pemUoe1xuICAgIHR0bE1zLFxuICAgIGhhc2hGdW5jdGlvblxuICB9KTtcbn1cbnZhciBjbGVhckNhY2hlVGFnc01hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG5mdW5jdGlvbiBjbGVhcih0YWdzKSB7XG4gIGNvbnN0IGNsZWFyZWQgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICBmb3IgKGNvbnN0IHRhZyBvZiB0YWdzKSB7XG4gICAgY29uc3QgbWFwcyA9IGNsZWFyQ2FjaGVUYWdzTWFwLmdldCh0YWcpO1xuICAgIGlmIChtYXBzKSB7XG4gICAgICBmb3IgKGNvbnN0IG1wIG9mIG1hcHMpIHtcbiAgICAgICAgaWYgKCFjbGVhcmVkLmhhcyhtcCkpIHtcbiAgICAgICAgICBtcC5jbGVhcigpO1xuICAgICAgICAgIGNsZWFyZWQuYWRkKG1wKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gY2xlYXJlZC5zaXplO1xufVxuZnVuY3Rpb24gZ2V0TmV3RnVuY3Rpb24ob3JpZ2luYWxNZXRob2QsIGhhc2hGdW5jdGlvbiwgdHRsTXMgPSAwLCB0YWdzKSB7XG4gIGNvbnN0IHByb3BNYXBOYW1lID0gU3ltYm9sKFwiX19tZW1vaXplZF9tYXBfX1wiKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKC4uLmFyZ3MpIHtcbiAgICBsZXQgcmV0dXJuZWRWYWx1ZTtcbiAgICBjb25zdCB0aGF0ID0gdGhpcztcbiAgICBpZiAoIXRoYXQuaGFzT3duUHJvcGVydHkocHJvcE1hcE5hbWUpKSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhhdCwgcHJvcE1hcE5hbWUsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgdmFsdWU6IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKClcbiAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBteU1hcCA9IHRoYXRbcHJvcE1hcE5hbWVdO1xuICAgIGlmIChBcnJheS5pc0FycmF5KHRhZ3MpKSB7XG4gICAgICBmb3IgKGNvbnN0IHRhZyBvZiB0YWdzKSB7XG4gICAgICAgIGlmIChjbGVhckNhY2hlVGFnc01hcC5oYXModGFnKSkge1xuICAgICAgICAgIGNsZWFyQ2FjaGVUYWdzTWFwLmdldCh0YWcpLnB1c2gobXlNYXApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNsZWFyQ2FjaGVUYWdzTWFwLnNldCh0YWcsIFtteU1hcF0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChoYXNoRnVuY3Rpb24gfHwgYXJncy5sZW5ndGggPiAwIHx8IHR0bE1zID4gMCkge1xuICAgICAgbGV0IGhhc2hLZXk7XG4gICAgICBpZiAoaGFzaEZ1bmN0aW9uID09PSB0cnVlKSB7XG4gICAgICAgIGhhc2hLZXkgPSBhcmdzLm1hcCgoYSkgPT4gYS50b1N0cmluZygpKS5qb2luKFwiIVwiKTtcbiAgICAgIH0gZWxzZSBpZiAoaGFzaEZ1bmN0aW9uKSB7XG4gICAgICAgIGhhc2hLZXkgPSBoYXNoRnVuY3Rpb24uYXBwbHkodGhhdCwgYXJncyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBoYXNoS2V5ID0gYXJnc1swXTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHRpbWVzdGFtcEtleSA9IGAke2hhc2hLZXl9X190aW1lc3RhbXBgO1xuICAgICAgbGV0IGlzRXhwaXJlZCA9IGZhbHNlO1xuICAgICAgaWYgKHR0bE1zID4gMCkge1xuICAgICAgICBpZiAoIW15TWFwLmhhcyh0aW1lc3RhbXBLZXkpKSB7XG4gICAgICAgICAgaXNFeHBpcmVkID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zdCB0aW1lc3RhbXAgPSBteU1hcC5nZXQodGltZXN0YW1wS2V5KTtcbiAgICAgICAgICBpc0V4cGlyZWQgPSBEYXRlLm5vdygpIC0gdGltZXN0YW1wID4gdHRsTXM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChteU1hcC5oYXMoaGFzaEtleSkgJiYgIWlzRXhwaXJlZCkge1xuICAgICAgICByZXR1cm5lZFZhbHVlID0gbXlNYXAuZ2V0KGhhc2hLZXkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuZWRWYWx1ZSA9IG9yaWdpbmFsTWV0aG9kLmFwcGx5KHRoYXQsIGFyZ3MpO1xuICAgICAgICBteU1hcC5zZXQoaGFzaEtleSwgcmV0dXJuZWRWYWx1ZSk7XG4gICAgICAgIGlmICh0dGxNcyA+IDApIHtcbiAgICAgICAgICBteU1hcC5zZXQodGltZXN0YW1wS2V5LCBEYXRlLm5vdygpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBoYXNoS2V5ID0gdGhhdDtcbiAgICAgIGlmIChteU1hcC5oYXMoaGFzaEtleSkpIHtcbiAgICAgICAgcmV0dXJuZWRWYWx1ZSA9IG15TWFwLmdldChoYXNoS2V5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybmVkVmFsdWUgPSBvcmlnaW5hbE1ldGhvZC5hcHBseSh0aGF0LCBhcmdzKTtcbiAgICAgICAgbXlNYXAuc2V0KGhhc2hLZXksIHJldHVybmVkVmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmV0dXJuZWRWYWx1ZTtcbiAgfTtcbn1cblxuLy8gc3JjL2NsaWVudC9jb3JlLnRzXG5pbXBvcnQgYXB0b3NDbGllbnQgZnJvbSBcIkBhcHRvcy1sYWJzL2FwdG9zLWNsaWVudFwiO1xuXG4vLyBzcmMvY2xpZW50L3R5cGVzLnRzXG52YXIgQXB0b3NBcGlFcnJvciA9IGNsYXNzIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihyZXF1ZXN0MiwgcmVzcG9uc2UsIG1lc3NhZ2UpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSBcIkFwdG9zQXBpRXJyb3JcIjtcbiAgICB0aGlzLnVybCA9IHJlc3BvbnNlLnVybDtcbiAgICB0aGlzLnN0YXR1cyA9IHJlc3BvbnNlLnN0YXR1cztcbiAgICB0aGlzLnN0YXR1c1RleHQgPSByZXNwb25zZS5zdGF0dXNUZXh0O1xuICAgIHRoaXMuZGF0YSA9IHJlc3BvbnNlLmRhdGE7XG4gICAgdGhpcy5yZXF1ZXN0ID0gcmVxdWVzdDI7XG4gIH1cbn07XG5cbi8vIHNyYy9jbGllbnQvY29yZS50c1xudmFyIGVycm9ycyA9IHtcbiAgNDAwOiBcIkJhZCBSZXF1ZXN0XCIsXG4gIDQwMTogXCJVbmF1dGhvcml6ZWRcIixcbiAgNDAzOiBcIkZvcmJpZGRlblwiLFxuICA0MDQ6IFwiTm90IEZvdW5kXCIsXG4gIDQyOTogXCJUb28gTWFueSBSZXF1ZXN0c1wiLFxuICA1MDA6IFwiSW50ZXJuYWwgU2VydmVyIEVycm9yXCIsXG4gIDUwMjogXCJCYWQgR2F0ZXdheVwiLFxuICA1MDM6IFwiU2VydmljZSBVbmF2YWlsYWJsZVwiXG59O1xuYXN5bmMgZnVuY3Rpb24gcmVxdWVzdCh1cmwsIG1ldGhvZCwgYm9keSwgY29udGVudFR5cGUsIHBhcmFtcywgb3ZlcnJpZGVzKSB7XG4gIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgLi4ub3ZlcnJpZGVzID09IG51bGwgPyB2b2lkIDAgOiBvdmVycmlkZXMuSEVBREVSUyxcbiAgICBcIngtYXB0b3MtY2xpZW50XCI6IGBhcHRvcy10cy1zZGsvJHtWRVJTSU9OfWAsXG4gICAgXCJjb250ZW50LXR5cGVcIjogY29udGVudFR5cGUgIT0gbnVsbCA/IGNvbnRlbnRUeXBlIDogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgfTtcbiAgaWYgKG92ZXJyaWRlcyA9PSBudWxsID8gdm9pZCAwIDogb3ZlcnJpZGVzLlRPS0VOKSB7XG4gICAgaGVhZGVycy5BdXRob3JpemF0aW9uID0gYEJlYXJlciAke292ZXJyaWRlcyA9PSBudWxsID8gdm9pZCAwIDogb3ZlcnJpZGVzLlRPS0VOfWA7XG4gIH1cbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcHRvc0NsaWVudCh7IHVybCwgbWV0aG9kLCBib2R5LCBwYXJhbXMsIGhlYWRlcnMsIG92ZXJyaWRlcyB9KTtcbiAgcmV0dXJuIHJlc3BvbnNlO1xufVxuYXN5bmMgZnVuY3Rpb24gYXB0b3NSZXF1ZXN0KG9wdGlvbnMpIHtcbiAgY29uc3QgeyB1cmwsIGVuZHBvaW50LCBtZXRob2QsIGJvZHksIGNvbnRlbnRUeXBlLCBwYXJhbXMsIG92ZXJyaWRlcyB9ID0gb3B0aW9ucztcbiAgY29uc3QgZnVsbEVuZHBvaW50ID0gYCR7dXJsfS8ke2VuZHBvaW50ICE9IG51bGwgPyBlbmRwb2ludCA6IFwiXCJ9YDtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0KGZ1bGxFbmRwb2ludCwgbWV0aG9kLCBib2R5LCBjb250ZW50VHlwZSwgcGFyYW1zLCBvdmVycmlkZXMpO1xuICBjb25zdCByZXN1bHQgPSB7XG4gICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsXG4gICAgc3RhdHVzVGV4dDogcmVzcG9uc2Uuc3RhdHVzVGV4dCxcbiAgICBkYXRhOiByZXNwb25zZS5kYXRhLFxuICAgIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgY29uZmlnOiByZXNwb25zZS5jb25maWcsXG4gICAgdXJsOiBmdWxsRW5kcG9pbnRcbiAgfTtcbiAgaWYgKHJlc3VsdC5zdGF0dXMgPj0gMjAwICYmIHJlc3VsdC5zdGF0dXMgPCAzMDApIHtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVycm9yc1tyZXN1bHQuc3RhdHVzXTtcbiAgdGhyb3cgbmV3IEFwdG9zQXBpRXJyb3Iob3B0aW9ucywgcmVzdWx0LCBlcnJvck1lc3NhZ2UgIT0gbnVsbCA/IGVycm9yTWVzc2FnZSA6IFwiR2VuZXJpYyBFcnJvclwiKTtcbn1cblxuLy8gc3JjL2NsaWVudC9nZXQudHNcbmFzeW5jIGZ1bmN0aW9uIGdldChvcHRpb25zKSB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXB0b3NSZXF1ZXN0KHsgLi4ub3B0aW9ucywgbWV0aG9kOiBcIkdFVFwiIH0pO1xuICByZXR1cm4gcmVzcG9uc2U7XG59XG5cbi8vIHNyYy9jbGllbnQvcG9zdC50c1xuYXN5bmMgZnVuY3Rpb24gcG9zdChvcHRpb25zKSB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXB0b3NSZXF1ZXN0KHsgLi4ub3B0aW9ucywgbWV0aG9kOiBcIlBPU1RcIiB9KTtcbiAgcmV0dXJuIHJlc3BvbnNlO1xufVxuXG4vLyBzcmMvdXRpbHMvcGFnaW5hdGlvbl9oZWxwZXJzLnRzXG5hc3luYyBmdW5jdGlvbiBwYWdpbmF0ZVdpdGhDdXJzb3Iob3B0aW9ucykge1xuICBjb25zdCBvdXQgPSBbXTtcbiAgbGV0IGN1cnNvcjtcbiAgY29uc3QgcmVxdWVzdFBhcmFtcyA9IG9wdGlvbnMucGFyYW1zO1xuICB3aGlsZSAodHJ1ZSkge1xuICAgIHJlcXVlc3RQYXJhbXMuc3RhcnQgPSBjdXJzb3I7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBnZXQoe1xuICAgICAgdXJsOiBvcHRpb25zLnVybCxcbiAgICAgIGVuZHBvaW50OiBvcHRpb25zLmVuZHBvaW50LFxuICAgICAgcGFyYW1zOiByZXF1ZXN0UGFyYW1zLFxuICAgICAgb3JpZ2luTWV0aG9kOiBvcHRpb25zLm9yaWdpbk1ldGhvZCxcbiAgICAgIG92ZXJyaWRlczogb3B0aW9ucy5vdmVycmlkZXNcbiAgICB9KTtcbiAgICBjdXJzb3IgPSByZXNwb25zZS5oZWFkZXJzW1wieC1hcHRvcy1jdXJzb3JcIl07XG4gICAgZGVsZXRlIHJlc3BvbnNlLmhlYWRlcnM7XG4gICAgb3V0LnB1c2goLi4ucmVzcG9uc2UuZGF0YSk7XG4gICAgaWYgKGN1cnNvciA9PT0gbnVsbCB8fCBjdXJzb3IgPT09IHZvaWQgMCkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiBvdXQ7XG59XG5cbi8vIHNyYy91dGlscy9hcGktZW5kcG9pbnRzLnRzXG52YXIgTmV0d29ya1RvSW5kZXhlckFQSSA9IHtcbiAgbWFpbm5ldDogXCJodHRwczovL2luZGV4ZXIubWFpbm5ldC5hcHRvc2xhYnMuY29tL3YxL2dyYXBocWxcIixcbiAgdGVzdG5ldDogXCJodHRwczovL2luZGV4ZXItdGVzdG5ldC5zdGFnaW5nLmdjcC5hcHRvc2Rldi5jb20vdjEvZ3JhcGhxbFwiLFxuICBkZXZuZXQ6IFwiaHR0cHM6Ly9pbmRleGVyLWRldm5ldC5zdGFnaW5nLmdjcC5hcHRvc2Rldi5jb20vdjEvZ3JhcGhxbFwiLFxuICBsb2NhbDogXCJodHRwOi8vMTI3LjAuMC4xOjgwOTAvdjEvZ3JhcGhxbFwiXG59O1xudmFyIE5ldHdvcmtUb05vZGVBUEkgPSB7XG4gIG1haW5uZXQ6IFwiaHR0cHM6Ly9mdWxsbm9kZS5tYWlubmV0LmFwdG9zbGFicy5jb20vdjFcIixcbiAgdGVzdG5ldDogXCJodHRwczovL2Z1bGxub2RlLnRlc3RuZXQuYXB0b3NsYWJzLmNvbS92MVwiLFxuICBkZXZuZXQ6IFwiaHR0cHM6Ly9mdWxsbm9kZS5kZXZuZXQuYXB0b3NsYWJzLmNvbS92MVwiLFxuICBsb2NhbDogXCJodHRwOi8vMTI3LjAuMC4xOjgwODAvdjFcIlxufTtcbnZhciBOb2RlQVBJVG9OZXR3b3JrID0ge1xuICBcImh0dHBzOi8vZnVsbG5vZGUubWFpbm5ldC5hcHRvc2xhYnMuY29tL3YxXCI6IFwibWFpbm5ldFwiLFxuICBcImh0dHBzOi8vZnVsbG5vZGUudGVzdG5ldC5hcHRvc2xhYnMuY29tL3YxXCI6IFwidGVzdG5ldFwiLFxuICBcImh0dHBzOi8vZnVsbG5vZGUuZGV2bmV0LmFwdG9zbGFicy5jb20vdjFcIjogXCJkZXZuZXRcIixcbiAgXCJodHRwOi8vMTI3LjAuMC4xOjgwODAvdjFcIjogXCJsb2NhbFwiXG59O1xudmFyIE5ldHdvcmsgPSAvKiBAX19QVVJFX18gKi8gKChOZXR3b3JrMykgPT4ge1xuICBOZXR3b3JrM1tcIk1BSU5ORVRcIl0gPSBcIm1haW5uZXRcIjtcbiAgTmV0d29yazNbXCJURVNUTkVUXCJdID0gXCJ0ZXN0bmV0XCI7XG4gIE5ldHdvcmszW1wiREVWTkVUXCJdID0gXCJkZXZuZXRcIjtcbiAgTmV0d29yazNbXCJMT0NBTFwiXSA9IFwibG9jYWxcIjtcbiAgcmV0dXJuIE5ldHdvcmszO1xufSkoTmV0d29yayB8fCB7fSk7XG5cbi8vIHNyYy91dGlscy9oZXhfc3RyaW5nLnRzXG5pbXBvcnQgeyBieXRlc1RvSGV4LCBoZXhUb0J5dGVzIGFzIGhleFRvQnl0ZXMyIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvdXRpbHNcIjtcbnZhciBIZXhTdHJpbmcgPSBjbGFzcyBfSGV4U3RyaW5nIHtcbiAgLyoqXG4gICAqIENyZWF0ZXMgbmV3IGhleCBzdHJpbmcgZnJvbSBCdWZmZXJcbiAgICogQHBhcmFtIGJ1ZmZlciBBIGJ1ZmZlciB0byBjb252ZXJ0XG4gICAqIEByZXR1cm5zIE5ldyBIZXhTdHJpbmdcbiAgICovXG4gIHN0YXRpYyBmcm9tQnVmZmVyKGJ1ZmZlcikge1xuICAgIHJldHVybiBfSGV4U3RyaW5nLmZyb21VaW50OEFycmF5KGJ1ZmZlcik7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZXMgbmV3IGhleCBzdHJpbmcgZnJvbSBVaW50OEFycmF5XG4gICAqIEBwYXJhbSBhcnIgVWludDhBcnJheSB0byBjb252ZXJ0XG4gICAqIEByZXR1cm5zIE5ldyBIZXhTdHJpbmdcbiAgICovXG4gIHN0YXRpYyBmcm9tVWludDhBcnJheShhcnIpIHtcbiAgICByZXR1cm4gbmV3IF9IZXhTdHJpbmcoYnl0ZXNUb0hleChhcnIpKTtcbiAgfVxuICAvKipcbiAgICogRW5zdXJlcyBgaGV4U3RyaW5nYCBpcyBpbnN0YW5jZSBvZiBgSGV4U3RyaW5nYCBjbGFzc1xuICAgKiBAcGFyYW0gaGV4U3RyaW5nIFN0cmluZyB0byBjaGVja1xuICAgKiBAcmV0dXJucyBOZXcgSGV4U3RyaW5nIGlmIGBoZXhTdHJpbmdgIGlzIHJlZ3VsYXIgc3RyaW5nIG9yIGBoZXhTdHJpbmdgIGlmIGl0IGlzIEhleFN0cmluZyBpbnN0YW5jZVxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBcbiAgICogIGNvbnN0IHJlZ3VsYXJTdHJpbmcgPSBcInN0cmluZ1wiO1xuICAgKiAgY29uc3QgaGV4U3RyaW5nID0gbmV3IEhleFN0cmluZyhcInN0cmluZ1wiKTsgLy8gXCIweHN0cmluZ1wiXG4gICAqICBIZXhTdHJpbmcuZW5zdXJlKHJlZ3VsYXJTdHJpbmcpOyAvLyBcIjB4c3RyaW5nXCJcbiAgICogIEhleFN0cmluZy5lbnN1cmUoaGV4U3RyaW5nKTsgLy8gXCIweHN0cmluZ1wiXG4gICAqIGBgYFxuICAgKi9cbiAgc3RhdGljIGVuc3VyZShoZXhTdHJpbmcpIHtcbiAgICBpZiAodHlwZW9mIGhleFN0cmluZyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgcmV0dXJuIG5ldyBfSGV4U3RyaW5nKGhleFN0cmluZyk7XG4gICAgfVxuICAgIHJldHVybiBoZXhTdHJpbmc7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZXMgbmV3IEhleFN0cmluZyBpbnN0YW5jZSBmcm9tIHJlZ3VsYXIgc3RyaW5nLiBJZiBzcGVjaWZpZWQgc3RyaW5nIGFscmVhZHkgc3RhcnRzIHdpdGggXCIweFwiIHByZWZpeCxcbiAgICogaXQgd2lsbCBub3QgYWRkIGFub3RoZXIgb25lXG4gICAqIEBwYXJhbSBoZXhTdHJpbmcgU3RyaW5nIHRvIGNvbnZlcnRcbiAgICogQGV4YW1wbGVcbiAgICogYGBgXG4gICAqICBjb25zdCBzdHJpbmcgPSBcInN0cmluZ1wiO1xuICAgKiAgbmV3IEhleFN0cmluZyhzdHJpbmcpOyAvLyBcIjB4c3RyaW5nXCJcbiAgICogYGBgXG4gICAqL1xuICBjb25zdHJ1Y3RvcihoZXhTdHJpbmcpIHtcbiAgICBpZiAoaGV4U3RyaW5nLnN0YXJ0c1dpdGgoXCIweFwiKSkge1xuICAgICAgdGhpcy5oZXhTdHJpbmcgPSBoZXhTdHJpbmc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaGV4U3RyaW5nID0gYDB4JHtoZXhTdHJpbmd9YDtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIEdldHRlciBmb3IgaW5uZXIgaGV4U3RyaW5nXG4gICAqIEByZXR1cm5zIElubmVyIGhleCBzdHJpbmdcbiAgICovXG4gIGhleCgpIHtcbiAgICByZXR1cm4gdGhpcy5oZXhTdHJpbmc7XG4gIH1cbiAgLyoqXG4gICAqIEdldHRlciBmb3IgaW5uZXIgaGV4U3RyaW5nIHdpdGhvdXQgcHJlZml4XG4gICAqIEByZXR1cm5zIElubmVyIGhleCBzdHJpbmcgd2l0aG91dCBwcmVmaXhcbiAgICogQGV4YW1wbGVcbiAgICogYGBgXG4gICAqICBjb25zdCBoZXhTdHJpbmcgPSBuZXcgSGV4U3RyaW5nKFwic3RyaW5nXCIpOyAvLyBcIjB4c3RyaW5nXCJcbiAgICogIGhleFN0cmluZy5ub1ByZWZpeCgpOyAvLyBcInN0cmluZ1wiXG4gICAqIGBgYFxuICAgKi9cbiAgbm9QcmVmaXgoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGV4U3RyaW5nLnNsaWNlKDIpO1xuICB9XG4gIC8qKlxuICAgKiBPdmVycmlkZXMgZGVmYXVsdCBgdG9TdHJpbmdgIG1ldGhvZFxuICAgKiBAcmV0dXJucyBJbm5lciBoZXggc3RyaW5nXG4gICAqL1xuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5oZXgoKTtcbiAgfVxuICAvKipcbiAgICogVHJpbW1lcyBleHRyYSB6ZXJvZXMgaW4gdGhlIGJlZ2luaW5nIG9mIGEgc3RyaW5nXG4gICAqIEByZXR1cm5zIElubmVyIGhleFN0cmluZyB3aXRob3V0IGxlYWRpbmcgemVyb2VzXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYFxuICAgKiAgbmV3IEhleFN0cmluZyhcIjB4MDAwMDAwc3RyaW5nXCIpLnRvU2hvcnRTdHJpbmcoKTsgLy8gcmVzdWx0ID0gXCIweHN0cmluZ1wiXG4gICAqIGBgYFxuICAgKi9cbiAgdG9TaG9ydFN0cmluZygpIHtcbiAgICBjb25zdCB0cmltbWVkID0gdGhpcy5oZXhTdHJpbmcucmVwbGFjZSgvXjB4MCovLCBcIlwiKTtcbiAgICByZXR1cm4gYDB4JHt0cmltbWVkfWA7XG4gIH1cbiAgLyoqXG4gICAqIENvbnZlcnRzIGhleCBzdHJpbmcgdG8gYSBVaW50OEFycmF5XG4gICAqIEByZXR1cm5zIFVpbnQ4QXJyYXkgZnJvbSBpbm5lciBoZXhTdHJpbmcgd2l0aG91dCBwcmVmaXhcbiAgICovXG4gIHRvVWludDhBcnJheSgpIHtcbiAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKGhleFRvQnl0ZXMyKHRoaXMubm9QcmVmaXgoKSkpO1xuICB9XG59O1xuXG4vLyBzcmMvYXB0b3NfdHlwZXMvaW5kZXgudHNcbnZhciBhcHRvc190eXBlc19leHBvcnRzID0ge307XG5fX2V4cG9ydChhcHRvc190eXBlc19leHBvcnRzLCB7XG4gIEFjY291bnRBZGRyZXNzOiAoKSA9PiBBY2NvdW50QWRkcmVzcyxcbiAgQWNjb3VudEF1dGhlbnRpY2F0b3I6ICgpID0+IEFjY291bnRBdXRoZW50aWNhdG9yLFxuICBBY2NvdW50QXV0aGVudGljYXRvckVkMjU1MTk6ICgpID0+IEFjY291bnRBdXRoZW50aWNhdG9yRWQyNTUxOSxcbiAgQWNjb3VudEF1dGhlbnRpY2F0b3JNdWx0aUVkMjU1MTk6ICgpID0+IEFjY291bnRBdXRoZW50aWNhdG9yTXVsdGlFZDI1NTE5LFxuICBBcmd1bWVudEFCSTogKCkgPT4gQXJndW1lbnRBQkksXG4gIEF1dGhlbnRpY2F0aW9uS2V5OiAoKSA9PiBBdXRoZW50aWNhdGlvbktleSxcbiAgQ2hhaW5JZDogKCkgPT4gQ2hhaW5JZCxcbiAgQ2hhbmdlU2V0OiAoKSA9PiBDaGFuZ2VTZXQsXG4gIEVkMjU1MTlQdWJsaWNLZXk6ICgpID0+IEVkMjU1MTlQdWJsaWNLZXksXG4gIEVkMjU1MTlTaWduYXR1cmU6ICgpID0+IEVkMjU1MTlTaWduYXR1cmUsXG4gIEVudHJ5RnVuY3Rpb246ICgpID0+IEVudHJ5RnVuY3Rpb24sXG4gIEVudHJ5RnVuY3Rpb25BQkk6ICgpID0+IEVudHJ5RnVuY3Rpb25BQkksXG4gIEZlZVBheWVyUmF3VHJhbnNhY3Rpb246ICgpID0+IEZlZVBheWVyUmF3VHJhbnNhY3Rpb24sXG4gIElkZW50aWZpZXI6ICgpID0+IElkZW50aWZpZXIsXG4gIE1vZHVsZTogKCkgPT4gTW9kdWxlLFxuICBNb2R1bGVJZDogKCkgPT4gTW9kdWxlSWQsXG4gIE11bHRpQWdlbnRSYXdUcmFuc2FjdGlvbjogKCkgPT4gTXVsdGlBZ2VudFJhd1RyYW5zYWN0aW9uLFxuICBNdWx0aUVkMjU1MTlQdWJsaWNLZXk6ICgpID0+IE11bHRpRWQyNTUxOVB1YmxpY0tleSxcbiAgTXVsdGlFZDI1NTE5U2lnbmF0dXJlOiAoKSA9PiBNdWx0aUVkMjU1MTlTaWduYXR1cmUsXG4gIE11bHRpU2lnOiAoKSA9PiBNdWx0aVNpZyxcbiAgTXVsdGlTaWdUcmFuc2FjdGlvblBheWxvYWQ6ICgpID0+IE11bHRpU2lnVHJhbnNhY3Rpb25QYXlsb2FkLFxuICBSYXdUcmFuc2FjdGlvbjogKCkgPT4gUmF3VHJhbnNhY3Rpb24sXG4gIFJhd1RyYW5zYWN0aW9uV2l0aERhdGE6ICgpID0+IFJhd1RyYW5zYWN0aW9uV2l0aERhdGEsXG4gIFJvdGF0aW9uUHJvb2ZDaGFsbGVuZ2U6ICgpID0+IFJvdGF0aW9uUHJvb2ZDaGFsbGVuZ2UsXG4gIFNjcmlwdDogKCkgPT4gU2NyaXB0LFxuICBTY3JpcHRBQkk6ICgpID0+IFNjcmlwdEFCSSxcbiAgU2lnbmVkVHJhbnNhY3Rpb246ICgpID0+IFNpZ25lZFRyYW5zYWN0aW9uLFxuICBTdHJ1Y3RUYWc6ICgpID0+IFN0cnVjdFRhZyxcbiAgVHJhbnNhY3Rpb246ICgpID0+IFRyYW5zYWN0aW9uLFxuICBUcmFuc2FjdGlvbkFyZ3VtZW50OiAoKSA9PiBUcmFuc2FjdGlvbkFyZ3VtZW50LFxuICBUcmFuc2FjdGlvbkFyZ3VtZW50QWRkcmVzczogKCkgPT4gVHJhbnNhY3Rpb25Bcmd1bWVudEFkZHJlc3MsXG4gIFRyYW5zYWN0aW9uQXJndW1lbnRCb29sOiAoKSA9PiBUcmFuc2FjdGlvbkFyZ3VtZW50Qm9vbCxcbiAgVHJhbnNhY3Rpb25Bcmd1bWVudFUxMjg6ICgpID0+IFRyYW5zYWN0aW9uQXJndW1lbnRVMTI4LFxuICBUcmFuc2FjdGlvbkFyZ3VtZW50VTE2OiAoKSA9PiBUcmFuc2FjdGlvbkFyZ3VtZW50VTE2LFxuICBUcmFuc2FjdGlvbkFyZ3VtZW50VTI1NjogKCkgPT4gVHJhbnNhY3Rpb25Bcmd1bWVudFUyNTYsXG4gIFRyYW5zYWN0aW9uQXJndW1lbnRVMzI6ICgpID0+IFRyYW5zYWN0aW9uQXJndW1lbnRVMzIsXG4gIFRyYW5zYWN0aW9uQXJndW1lbnRVNjQ6ICgpID0+IFRyYW5zYWN0aW9uQXJndW1lbnRVNjQsXG4gIFRyYW5zYWN0aW9uQXJndW1lbnRVODogKCkgPT4gVHJhbnNhY3Rpb25Bcmd1bWVudFU4LFxuICBUcmFuc2FjdGlvbkFyZ3VtZW50VThWZWN0b3I6ICgpID0+IFRyYW5zYWN0aW9uQXJndW1lbnRVOFZlY3RvcixcbiAgVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yOiAoKSA9PiBUcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3IsXG4gIFRyYW5zYWN0aW9uQXV0aGVudGljYXRvckVkMjU1MTk6ICgpID0+IFRyYW5zYWN0aW9uQXV0aGVudGljYXRvckVkMjU1MTksXG4gIFRyYW5zYWN0aW9uQXV0aGVudGljYXRvckZlZVBheWVyOiAoKSA9PiBUcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3JGZWVQYXllcixcbiAgVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yTXVsdGlBZ2VudDogKCkgPT4gVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yTXVsdGlBZ2VudCxcbiAgVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yTXVsdGlFZDI1NTE5OiAoKSA9PiBUcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3JNdWx0aUVkMjU1MTksXG4gIFRyYW5zYWN0aW9uUGF5bG9hZDogKCkgPT4gVHJhbnNhY3Rpb25QYXlsb2FkLFxuICBUcmFuc2FjdGlvblBheWxvYWRFbnRyeUZ1bmN0aW9uOiAoKSA9PiBUcmFuc2FjdGlvblBheWxvYWRFbnRyeUZ1bmN0aW9uLFxuICBUcmFuc2FjdGlvblBheWxvYWRNdWx0aXNpZzogKCkgPT4gVHJhbnNhY3Rpb25QYXlsb2FkTXVsdGlzaWcsXG4gIFRyYW5zYWN0aW9uUGF5bG9hZFNjcmlwdDogKCkgPT4gVHJhbnNhY3Rpb25QYXlsb2FkU2NyaXB0LFxuICBUcmFuc2FjdGlvblNjcmlwdEFCSTogKCkgPT4gVHJhbnNhY3Rpb25TY3JpcHRBQkksXG4gIFR5cGVBcmd1bWVudEFCSTogKCkgPT4gVHlwZUFyZ3VtZW50QUJJLFxuICBUeXBlVGFnOiAoKSA9PiBUeXBlVGFnLFxuICBUeXBlVGFnQWRkcmVzczogKCkgPT4gVHlwZVRhZ0FkZHJlc3MsXG4gIFR5cGVUYWdCb29sOiAoKSA9PiBUeXBlVGFnQm9vbCxcbiAgVHlwZVRhZ1BhcnNlcjogKCkgPT4gVHlwZVRhZ1BhcnNlcixcbiAgVHlwZVRhZ1BhcnNlckVycm9yOiAoKSA9PiBUeXBlVGFnUGFyc2VyRXJyb3IsXG4gIFR5cGVUYWdTaWduZXI6ICgpID0+IFR5cGVUYWdTaWduZXIsXG4gIFR5cGVUYWdTdHJ1Y3Q6ICgpID0+IFR5cGVUYWdTdHJ1Y3QsXG4gIFR5cGVUYWdVMTI4OiAoKSA9PiBUeXBlVGFnVTEyOCxcbiAgVHlwZVRhZ1UxNjogKCkgPT4gVHlwZVRhZ1UxNixcbiAgVHlwZVRhZ1UyNTY6ICgpID0+IFR5cGVUYWdVMjU2LFxuICBUeXBlVGFnVTMyOiAoKSA9PiBUeXBlVGFnVTMyLFxuICBUeXBlVGFnVTY0OiAoKSA9PiBUeXBlVGFnVTY0LFxuICBUeXBlVGFnVTg6ICgpID0+IFR5cGVUYWdVOCxcbiAgVHlwZVRhZ1ZlY3RvcjogKCkgPT4gVHlwZVRhZ1ZlY3RvcixcbiAgVXNlclRyYW5zYWN0aW9uOiAoKSA9PiBVc2VyVHJhbnNhY3Rpb24sXG4gIFdyaXRlU2V0OiAoKSA9PiBXcml0ZVNldCxcbiAgb2JqZWN0U3RydWN0VGFnOiAoKSA9PiBvYmplY3RTdHJ1Y3RUYWcsXG4gIG9wdGlvblN0cnVjdFRhZzogKCkgPT4gb3B0aW9uU3RydWN0VGFnLFxuICBzdHJpbmdTdHJ1Y3RUYWc6ICgpID0+IHN0cmluZ1N0cnVjdFRhZ1xufSk7XG5cbi8vIHNyYy9iY3MvaW5kZXgudHNcbnZhciBiY3NfZXhwb3J0cyA9IHt9O1xuX19leHBvcnQoYmNzX2V4cG9ydHMsIHtcbiAgRGVzZXJpYWxpemVyOiAoKSA9PiBEZXNlcmlhbGl6ZXIsXG4gIFNlcmlhbGl6ZXI6ICgpID0+IFNlcmlhbGl6ZXIsXG4gIGJjc1NlcmlhbGl6ZUJvb2w6ICgpID0+IGJjc1NlcmlhbGl6ZUJvb2wsXG4gIGJjc1NlcmlhbGl6ZUJ5dGVzOiAoKSA9PiBiY3NTZXJpYWxpemVCeXRlcyxcbiAgYmNzU2VyaWFsaXplRml4ZWRCeXRlczogKCkgPT4gYmNzU2VyaWFsaXplRml4ZWRCeXRlcyxcbiAgYmNzU2VyaWFsaXplU3RyOiAoKSA9PiBiY3NTZXJpYWxpemVTdHIsXG4gIGJjc1NlcmlhbGl6ZVUxMjg6ICgpID0+IGJjc1NlcmlhbGl6ZVUxMjgsXG4gIGJjc1NlcmlhbGl6ZVUxNjogKCkgPT4gYmNzU2VyaWFsaXplVTE2LFxuICBiY3NTZXJpYWxpemVVMjU2OiAoKSA9PiBiY3NTZXJpYWxpemVVMjU2LFxuICBiY3NTZXJpYWxpemVVMzI6ICgpID0+IGJjc1NlcmlhbGl6ZVUzMixcbiAgYmNzU2VyaWFsaXplVTg6ICgpID0+IGJjc1NlcmlhbGl6ZVU4LFxuICBiY3NTZXJpYWxpemVVaW50NjQ6ICgpID0+IGJjc1NlcmlhbGl6ZVVpbnQ2NCxcbiAgYmNzVG9CeXRlczogKCkgPT4gYmNzVG9CeXRlcyxcbiAgZGVzZXJpYWxpemVWZWN0b3I6ICgpID0+IGRlc2VyaWFsaXplVmVjdG9yLFxuICBzZXJpYWxpemVWZWN0b3I6ICgpID0+IHNlcmlhbGl6ZVZlY3RvcixcbiAgc2VyaWFsaXplVmVjdG9yV2l0aEZ1bmM6ICgpID0+IHNlcmlhbGl6ZVZlY3RvcldpdGhGdW5jXG59KTtcblxuLy8gc3JjL2Jjcy9jb25zdHMudHNcbnZhciBNQVhfVThfTlVNQkVSID0gMiAqKiA4IC0gMTtcbnZhciBNQVhfVTE2X05VTUJFUiA9IDIgKiogMTYgLSAxO1xudmFyIE1BWF9VMzJfTlVNQkVSID0gMiAqKiAzMiAtIDE7XG52YXIgTUFYX1U2NF9CSUdfSU5UID0gQmlnSW50KDIgKiogNjQpIC0gQmlnSW50KDEpO1xudmFyIE1BWF9VMTI4X0JJR19JTlQgPSBCaWdJbnQoMiAqKiAxMjgpIC0gQmlnSW50KDEpO1xudmFyIE1BWF9VMjU2X0JJR19JTlQgPSBCaWdJbnQoMiAqKiAyNTYpIC0gQmlnSW50KDEpO1xuXG4vLyBzcmMvYmNzL3NlcmlhbGl6ZXIudHNcbnZhciBTZXJpYWxpemVyID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcig2NCk7XG4gICAgdGhpcy5vZmZzZXQgPSAwO1xuICB9XG4gIGVuc3VyZUJ1ZmZlcldpbGxIYW5kbGVTaXplKGJ5dGVzKSB7XG4gICAgd2hpbGUgKHRoaXMuYnVmZmVyLmJ5dGVMZW5ndGggPCB0aGlzLm9mZnNldCArIGJ5dGVzKSB7XG4gICAgICBjb25zdCBuZXdCdWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIodGhpcy5idWZmZXIuYnl0ZUxlbmd0aCAqIDIpO1xuICAgICAgbmV3IFVpbnQ4QXJyYXkobmV3QnVmZmVyKS5zZXQobmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXIpKTtcbiAgICAgIHRoaXMuYnVmZmVyID0gbmV3QnVmZmVyO1xuICAgIH1cbiAgfVxuICBzZXJpYWxpemUodmFsdWVzKSB7XG4gICAgdGhpcy5lbnN1cmVCdWZmZXJXaWxsSGFuZGxlU2l6ZSh2YWx1ZXMubGVuZ3RoKTtcbiAgICBuZXcgVWludDhBcnJheSh0aGlzLmJ1ZmZlciwgdGhpcy5vZmZzZXQpLnNldCh2YWx1ZXMpO1xuICAgIHRoaXMub2Zmc2V0ICs9IHZhbHVlcy5sZW5ndGg7XG4gIH1cbiAgc2VyaWFsaXplV2l0aEZ1bmN0aW9uKGZuLCBieXRlc0xlbmd0aCwgdmFsdWUpIHtcbiAgICB0aGlzLmVuc3VyZUJ1ZmZlcldpbGxIYW5kbGVTaXplKGJ5dGVzTGVuZ3RoKTtcbiAgICBjb25zdCBkdiA9IG5ldyBEYXRhVmlldyh0aGlzLmJ1ZmZlciwgdGhpcy5vZmZzZXQpO1xuICAgIGZuLmFwcGx5KGR2LCBbMCwgdmFsdWUsIHRydWVdKTtcbiAgICB0aGlzLm9mZnNldCArPSBieXRlc0xlbmd0aDtcbiAgfVxuICAvKipcbiAgICogU2VyaWFsaXplcyBhIHN0cmluZy4gVVRGOCBzdHJpbmcgaXMgc3VwcG9ydGVkLiBTZXJpYWxpemVzIHRoZSBzdHJpbmcncyBieXRlcyBsZW5ndGggXCJsXCIgZmlyc3QsXG4gICAqIGFuZCB0aGVuIHNlcmlhbGl6ZXMgXCJsXCIgYnl0ZXMgb2YgdGhlIHN0cmluZyBjb250ZW50LlxuICAgKlxuICAgKiBCQ1MgbGF5b3V0IGZvciBcInN0cmluZ1wiOiBzdHJpbmdfbGVuZ3RoIHwgc3RyaW5nX2NvbnRlbnQuIHN0cmluZ19sZW5ndGggaXMgdGhlIGJ5dGVzIGxlbmd0aCBvZlxuICAgKiB0aGUgc3RyaW5nIHRoYXQgaXMgdWxlYjEyOCBlbmNvZGVkLiBzdHJpbmdfbGVuZ3RoIGlzIGEgdTMyIGludGVnZXIuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYHRzXG4gICAqIGNvbnN0IHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICAgKiBzZXJpYWxpemVyLnNlcmlhbGl6ZVN0cihcIsOnw6XiiJ7iiaDCosO1w5/iiILGkuKIq1wiKTtcbiAgICogYXNzZXJ0KHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKSA9PT0gbmV3IFVpbnQ4QXJyYXkoWzI0LCAweGMzLCAweGE3LCAweGMzLCAweGE1LCAweGUyLCAweDg4LCAweDllLFxuICAgKiAweGUyLCAweDg5LCAweGEwLCAweGMyLCAweGEyLCAweGMzLCAweGI1LCAweGMzLCAweDlmLCAweGUyLCAweDg4LCAweDgyLCAweGM2LCAweDkyLCAweGUyLCAweDg4LCAweGFiXSkpO1xuICAgKiBgYGBcbiAgICovXG4gIHNlcmlhbGl6ZVN0cih2YWx1ZSkge1xuICAgIGNvbnN0IHRleHRFbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG4gICAgdGhpcy5zZXJpYWxpemVCeXRlcyh0ZXh0RW5jb2Rlci5lbmNvZGUodmFsdWUpKTtcbiAgfVxuICAvKipcbiAgICogU2VyaWFsaXplcyBhbiBhcnJheSBvZiBieXRlcy5cbiAgICpcbiAgICogQkNTIGxheW91dCBmb3IgXCJieXRlc1wiOiBieXRlc19sZW5ndGggfCBieXRlcy4gYnl0ZXNfbGVuZ3RoIGlzIHRoZSBsZW5ndGggb2YgdGhlIGJ5dGVzIGFycmF5IHRoYXQgaXNcbiAgICogdWxlYjEyOCBlbmNvZGVkLiBieXRlc19sZW5ndGggaXMgYSB1MzIgaW50ZWdlci5cbiAgICovXG4gIHNlcmlhbGl6ZUJ5dGVzKHZhbHVlKSB7XG4gICAgdGhpcy5zZXJpYWxpemVVMzJBc1VsZWIxMjgodmFsdWUubGVuZ3RoKTtcbiAgICB0aGlzLnNlcmlhbGl6ZSh2YWx1ZSk7XG4gIH1cbiAgLyoqXG4gICAqIFNlcmlhbGl6ZXMgYW4gYXJyYXkgb2YgYnl0ZXMgd2l0aCBrbm93biBsZW5ndGguIFRoZXJlZm9yZSBsZW5ndGggZG9lc24ndCBuZWVkIHRvIGJlXG4gICAqIHNlcmlhbGl6ZWQgdG8gaGVscCBkZXNlcmlhbGl6YXRpb24uICBXaGVuIGRlc2VyaWFsaXppbmcsIHRoZSBudW1iZXIgb2ZcbiAgICogYnl0ZXMgdG8gZGVzZXJpYWxpemUgbmVlZHMgdG8gYmUgcGFzc2VkIGluLlxuICAgKi9cbiAgc2VyaWFsaXplRml4ZWRCeXRlcyh2YWx1ZSkge1xuICAgIHRoaXMuc2VyaWFsaXplKHZhbHVlKTtcbiAgfVxuICAvKipcbiAgICogU2VyaWFsaXplcyBhIGJvb2xlYW4gdmFsdWUuXG4gICAqXG4gICAqIEJDUyBsYXlvdXQgZm9yIFwiYm9vbGVhblwiOiBPbmUgYnl0ZS4gXCIweDAxXCIgZm9yIFRydWUgYW5kIFwiMHgwMFwiIGZvciBGYWxzZS5cbiAgICovXG4gIHNlcmlhbGl6ZUJvb2wodmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImJvb2xlYW5cIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVmFsdWUgbmVlZHMgdG8gYmUgYSBib29sZWFuXCIpO1xuICAgIH1cbiAgICBjb25zdCBieXRlVmFsdWUgPSB2YWx1ZSA/IDEgOiAwO1xuICAgIHRoaXMuc2VyaWFsaXplKG5ldyBVaW50OEFycmF5KFtieXRlVmFsdWVdKSk7XG4gIH1cbiAgc2VyaWFsaXplVTgodmFsdWUpIHtcbiAgICB0aGlzLnNlcmlhbGl6ZShuZXcgVWludDhBcnJheShbdmFsdWVdKSk7XG4gIH1cbiAgc2VyaWFsaXplVTE2KHZhbHVlKSB7XG4gICAgdGhpcy5zZXJpYWxpemVXaXRoRnVuY3Rpb24oRGF0YVZpZXcucHJvdG90eXBlLnNldFVpbnQxNiwgMiwgdmFsdWUpO1xuICB9XG4gIHNlcmlhbGl6ZVUzMih2YWx1ZSkge1xuICAgIHRoaXMuc2VyaWFsaXplV2l0aEZ1bmN0aW9uKERhdGFWaWV3LnByb3RvdHlwZS5zZXRVaW50MzIsIDQsIHZhbHVlKTtcbiAgfVxuICBzZXJpYWxpemVVNjQodmFsdWUpIHtcbiAgICBjb25zdCBsb3cgPSBCaWdJbnQodmFsdWUudG9TdHJpbmcoKSkgJiBCaWdJbnQoTUFYX1UzMl9OVU1CRVIpO1xuICAgIGNvbnN0IGhpZ2ggPSBCaWdJbnQodmFsdWUudG9TdHJpbmcoKSkgPj4gQmlnSW50KDMyKTtcbiAgICB0aGlzLnNlcmlhbGl6ZVUzMihOdW1iZXIobG93KSk7XG4gICAgdGhpcy5zZXJpYWxpemVVMzIoTnVtYmVyKGhpZ2gpKTtcbiAgfVxuICBzZXJpYWxpemVVMTI4KHZhbHVlKSB7XG4gICAgY29uc3QgbG93ID0gQmlnSW50KHZhbHVlLnRvU3RyaW5nKCkpICYgTUFYX1U2NF9CSUdfSU5UO1xuICAgIGNvbnN0IGhpZ2ggPSBCaWdJbnQodmFsdWUudG9TdHJpbmcoKSkgPj4gQmlnSW50KDY0KTtcbiAgICB0aGlzLnNlcmlhbGl6ZVU2NChsb3cpO1xuICAgIHRoaXMuc2VyaWFsaXplVTY0KGhpZ2gpO1xuICB9XG4gIHNlcmlhbGl6ZVUyNTYodmFsdWUpIHtcbiAgICBjb25zdCBsb3cgPSBCaWdJbnQodmFsdWUudG9TdHJpbmcoKSkgJiBNQVhfVTEyOF9CSUdfSU5UO1xuICAgIGNvbnN0IGhpZ2ggPSBCaWdJbnQodmFsdWUudG9TdHJpbmcoKSkgPj4gQmlnSW50KDEyOCk7XG4gICAgdGhpcy5zZXJpYWxpemVVMTI4KGxvdyk7XG4gICAgdGhpcy5zZXJpYWxpemVVMTI4KGhpZ2gpO1xuICB9XG4gIHNlcmlhbGl6ZVUzMkFzVWxlYjEyOCh2YWwpIHtcbiAgICBsZXQgdmFsdWUgPSB2YWw7XG4gICAgY29uc3QgdmFsdWVBcnJheSA9IFtdO1xuICAgIHdoaWxlICh2YWx1ZSA+Pj4gNyAhPT0gMCkge1xuICAgICAgdmFsdWVBcnJheS5wdXNoKHZhbHVlICYgMTI3IHwgMTI4KTtcbiAgICAgIHZhbHVlID4+Pj0gNztcbiAgICB9XG4gICAgdmFsdWVBcnJheS5wdXNoKHZhbHVlKTtcbiAgICB0aGlzLnNlcmlhbGl6ZShuZXcgVWludDhBcnJheSh2YWx1ZUFycmF5KSk7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGJ1ZmZlcmVkIGJ5dGVzXG4gICAqL1xuICBnZXRCeXRlcygpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXIpLnNsaWNlKDAsIHRoaXMub2Zmc2V0KTtcbiAgfVxufTtcbl9fZGVjb3JhdGVDbGFzcyhbXG4gIGNoZWNrTnVtYmVyUmFuZ2UoMCwgTUFYX1U4X05VTUJFUilcbl0sIFNlcmlhbGl6ZXIucHJvdG90eXBlLCBcInNlcmlhbGl6ZVU4XCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgY2hlY2tOdW1iZXJSYW5nZSgwLCBNQVhfVTE2X05VTUJFUilcbl0sIFNlcmlhbGl6ZXIucHJvdG90eXBlLCBcInNlcmlhbGl6ZVUxNlwiLCAxKTtcbl9fZGVjb3JhdGVDbGFzcyhbXG4gIGNoZWNrTnVtYmVyUmFuZ2UoMCwgTUFYX1UzMl9OVU1CRVIpXG5dLCBTZXJpYWxpemVyLnByb3RvdHlwZSwgXCJzZXJpYWxpemVVMzJcIiwgMSk7XG5fX2RlY29yYXRlQ2xhc3MoW1xuICBjaGVja051bWJlclJhbmdlKEJpZ0ludCgwKSwgTUFYX1U2NF9CSUdfSU5UKVxuXSwgU2VyaWFsaXplci5wcm90b3R5cGUsIFwic2VyaWFsaXplVTY0XCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgY2hlY2tOdW1iZXJSYW5nZShCaWdJbnQoMCksIE1BWF9VMTI4X0JJR19JTlQpXG5dLCBTZXJpYWxpemVyLnByb3RvdHlwZSwgXCJzZXJpYWxpemVVMTI4XCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgY2hlY2tOdW1iZXJSYW5nZShCaWdJbnQoMCksIE1BWF9VMjU2X0JJR19JTlQpXG5dLCBTZXJpYWxpemVyLnByb3RvdHlwZSwgXCJzZXJpYWxpemVVMjU2XCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgY2hlY2tOdW1iZXJSYW5nZSgwLCBNQVhfVTMyX05VTUJFUilcbl0sIFNlcmlhbGl6ZXIucHJvdG90eXBlLCBcInNlcmlhbGl6ZVUzMkFzVWxlYjEyOFwiLCAxKTtcbmZ1bmN0aW9uIGNoZWNrTnVtYmVyUmFuZ2UobWluVmFsdWUsIG1heFZhbHVlLCBtZXNzYWdlKSB7XG4gIHJldHVybiAodGFyZ2V0LCBwcm9wZXJ0eUtleSwgZGVzY3JpcHRvcikgPT4ge1xuICAgIGNvbnN0IGNoaWxkRnVuY3Rpb24gPSBkZXNjcmlwdG9yLnZhbHVlO1xuICAgIGRlc2NyaXB0b3IudmFsdWUgPSBmdW5jdGlvbiBkZWNvKHZhbHVlKSB7XG4gICAgICBjb25zdCB2YWx1ZUJpZ0ludCA9IEJpZ0ludCh2YWx1ZS50b1N0cmluZygpKTtcbiAgICAgIGlmICh2YWx1ZUJpZ0ludCA+IEJpZ0ludChtYXhWYWx1ZS50b1N0cmluZygpKSB8fCB2YWx1ZUJpZ0ludCA8IEJpZ0ludChtaW5WYWx1ZS50b1N0cmluZygpKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSB8fCBcIlZhbHVlIGlzIG91dCBvZiByYW5nZVwiKTtcbiAgICAgIH1cbiAgICAgIGNoaWxkRnVuY3Rpb24uYXBwbHkodGhpcywgW3ZhbHVlXSk7XG4gICAgfTtcbiAgICByZXR1cm4gZGVzY3JpcHRvcjtcbiAgfTtcbn1cblxuLy8gc3JjL2Jjcy9kZXNlcmlhbGl6ZXIudHNcbnZhciBEZXNlcmlhbGl6ZXIgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICB0aGlzLmJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihkYXRhLmxlbmd0aCk7XG4gICAgbmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXIpLnNldChkYXRhLCAwKTtcbiAgICB0aGlzLm9mZnNldCA9IDA7XG4gIH1cbiAgcmVhZChsZW5ndGgpIHtcbiAgICBpZiAodGhpcy5vZmZzZXQgKyBsZW5ndGggPiB0aGlzLmJ1ZmZlci5ieXRlTGVuZ3RoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWFjaGVkIHRvIHRoZSBlbmQgb2YgYnVmZmVyXCIpO1xuICAgIH1cbiAgICBjb25zdCBieXRlcyA9IHRoaXMuYnVmZmVyLnNsaWNlKHRoaXMub2Zmc2V0LCB0aGlzLm9mZnNldCArIGxlbmd0aCk7XG4gICAgdGhpcy5vZmZzZXQgKz0gbGVuZ3RoO1xuICAgIHJldHVybiBieXRlcztcbiAgfVxuICAvKipcbiAgICogRGVzZXJpYWxpemVzIGEgc3RyaW5nLiBVVEY4IHN0cmluZyBpcyBzdXBwb3J0ZWQuIFJlYWRzIHRoZSBzdHJpbmcncyBieXRlcyBsZW5ndGggXCJsXCIgZmlyc3QsXG4gICAqIGFuZCB0aGVuIHJlYWRzIFwibFwiIGJ5dGVzIG9mIGNvbnRlbnQuIERlY29kZXMgdGhlIGJ5dGUgYXJyYXkgaW50byBhIHN0cmluZy5cbiAgICpcbiAgICogQkNTIGxheW91dCBmb3IgXCJzdHJpbmdcIjogc3RyaW5nX2xlbmd0aCB8IHN0cmluZ19jb250ZW50LiBzdHJpbmdfbGVuZ3RoIGlzIHRoZSBieXRlcyBsZW5ndGggb2ZcbiAgICogdGhlIHN0cmluZyB0aGF0IGlzIHVsZWIxMjggZW5jb2RlZC4gc3RyaW5nX2xlbmd0aCBpcyBhIHUzMiBpbnRlZ2VyLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGB0c1xuICAgKiBjb25zdCBkZXNlcmlhbGl6ZXIgPSBuZXcgRGVzZXJpYWxpemVyKG5ldyBVaW50OEFycmF5KFsyNCwgMHhjMywgMHhhNywgMHhjMywgMHhhNSwgMHhlMiwgMHg4OCwgMHg5ZSxcbiAgICogMHhlMiwgMHg4OSwgMHhhMCwgMHhjMiwgMHhhMiwgMHhjMywgMHhiNSwgMHhjMywgMHg5ZiwgMHhlMiwgMHg4OCwgMHg4MiwgMHhjNiwgMHg5MiwgMHhlMiwgMHg4OCwgMHhhYl0pKTtcbiAgICogYXNzZXJ0KGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVN0cigpID09PSBcIsOnw6XiiJ7iiaDCosO1w5/iiILGkuKIq1wiKTtcbiAgICogYGBgXG4gICAqL1xuICBkZXNlcmlhbGl6ZVN0cigpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZGVzZXJpYWxpemVCeXRlcygpO1xuICAgIGNvbnN0IHRleHREZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XG4gICAgcmV0dXJuIHRleHREZWNvZGVyLmRlY29kZSh2YWx1ZSk7XG4gIH1cbiAgLyoqXG4gICAqIERlc2VyaWFsaXplcyBhbiBhcnJheSBvZiBieXRlcy5cbiAgICpcbiAgICogQkNTIGxheW91dCBmb3IgXCJieXRlc1wiOiBieXRlc19sZW5ndGggfCBieXRlcy4gYnl0ZXNfbGVuZ3RoIGlzIHRoZSBsZW5ndGggb2YgdGhlIGJ5dGVzIGFycmF5IHRoYXQgaXNcbiAgICogdWxlYjEyOCBlbmNvZGVkLiBieXRlc19sZW5ndGggaXMgYSB1MzIgaW50ZWdlci5cbiAgICovXG4gIGRlc2VyaWFsaXplQnl0ZXMoKSB7XG4gICAgY29uc3QgbGVuID0gdGhpcy5kZXNlcmlhbGl6ZVVsZWIxMjhBc1UzMigpO1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheSh0aGlzLnJlYWQobGVuKSk7XG4gIH1cbiAgLyoqXG4gICAqIERlc2VyaWFsaXplcyBhbiBhcnJheSBvZiBieXRlcy4gVGhlIG51bWJlciBvZiBieXRlcyB0byByZWFkIGlzIGFscmVhZHkga25vd24uXG4gICAqXG4gICAqL1xuICBkZXNlcmlhbGl6ZUZpeGVkQnl0ZXMobGVuKSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KHRoaXMucmVhZChsZW4pKTtcbiAgfVxuICAvKipcbiAgICogRGVzZXJpYWxpemVzIGEgYm9vbGVhbiB2YWx1ZS5cbiAgICpcbiAgICogQkNTIGxheW91dCBmb3IgXCJib29sZWFuXCI6IE9uZSBieXRlLiBcIjB4MDFcIiBmb3IgVHJ1ZSBhbmQgXCIweDAwXCIgZm9yIEZhbHNlLlxuICAgKi9cbiAgZGVzZXJpYWxpemVCb29sKCkge1xuICAgIGNvbnN0IGJvb2wgPSBuZXcgVWludDhBcnJheSh0aGlzLnJlYWQoMSkpWzBdO1xuICAgIGlmIChib29sICE9PSAxICYmIGJvb2wgIT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYm9vbGVhbiB2YWx1ZVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIGJvb2wgPT09IDE7XG4gIH1cbiAgLyoqXG4gICAqIERlc2VyaWFsaXplcyBhIHVpbnQ4IG51bWJlci5cbiAgICpcbiAgICogQkNTIGxheW91dCBmb3IgXCJ1aW50OFwiOiBPbmUgYnl0ZS4gQmluYXJ5IGZvcm1hdCBpbiBsaXR0bGUtZW5kaWFuIHJlcHJlc2VudGF0aW9uLlxuICAgKi9cbiAgZGVzZXJpYWxpemVVOCgpIHtcbiAgICByZXR1cm4gbmV3IERhdGFWaWV3KHRoaXMucmVhZCgxKSkuZ2V0VWludDgoMCk7XG4gIH1cbiAgLyoqXG4gICAqIERlc2VyaWFsaXplcyBhIHVpbnQxNiBudW1iZXIuXG4gICAqXG4gICAqIEJDUyBsYXlvdXQgZm9yIFwidWludDE2XCI6IFR3byBieXRlcy4gQmluYXJ5IGZvcm1hdCBpbiBsaXR0bGUtZW5kaWFuIHJlcHJlc2VudGF0aW9uLlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGB0c1xuICAgKiBjb25zdCBkZXNlcmlhbGl6ZXIgPSBuZXcgRGVzZXJpYWxpemVyKG5ldyBVaW50OEFycmF5KFsweDM0LCAweDEyXSkpO1xuICAgKiBhc3NlcnQoZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVTE2KCkgPT09IDQ2NjApO1xuICAgKiBgYGBcbiAgICovXG4gIGRlc2VyaWFsaXplVTE2KCkge1xuICAgIHJldHVybiBuZXcgRGF0YVZpZXcodGhpcy5yZWFkKDIpKS5nZXRVaW50MTYoMCwgdHJ1ZSk7XG4gIH1cbiAgLyoqXG4gICAqIERlc2VyaWFsaXplcyBhIHVpbnQzMiBudW1iZXIuXG4gICAqXG4gICAqIEJDUyBsYXlvdXQgZm9yIFwidWludDMyXCI6IEZvdXIgYnl0ZXMuIEJpbmFyeSBmb3JtYXQgaW4gbGl0dGxlLWVuZGlhbiByZXByZXNlbnRhdGlvbi5cbiAgICogQGV4YW1wbGVcbiAgICogYGBgdHNcbiAgICogY29uc3QgZGVzZXJpYWxpemVyID0gbmV3IERlc2VyaWFsaXplcihuZXcgVWludDhBcnJheShbMHg3OCwgMHg1NiwgMHgzNCwgMHgxMl0pKTtcbiAgICogYXNzZXJ0KGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVUzMigpID09PSAzMDU0MTk4OTYpO1xuICAgKiBgYGBcbiAgICovXG4gIGRlc2VyaWFsaXplVTMyKCkge1xuICAgIHJldHVybiBuZXcgRGF0YVZpZXcodGhpcy5yZWFkKDQpKS5nZXRVaW50MzIoMCwgdHJ1ZSk7XG4gIH1cbiAgLyoqXG4gICAqIERlc2VyaWFsaXplcyBhIHVpbnQ2NCBudW1iZXIuXG4gICAqXG4gICAqIEJDUyBsYXlvdXQgZm9yIFwidWludDY0XCI6IEVpZ2h0IGJ5dGVzLiBCaW5hcnkgZm9ybWF0IGluIGxpdHRsZS1lbmRpYW4gcmVwcmVzZW50YXRpb24uXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYHRzXG4gICAqIGNvbnN0IGRlc2VyaWFsaXplciA9IG5ldyBEZXNlcmlhbGl6ZXIobmV3IFVpbnQ4QXJyYXkoWzB4MDAsIDB4RUYsIDB4Q0QsIDB4QUIsIDB4NzgsIDB4NTYsIDB4MzQsIDB4MTJdKSk7XG4gICAqIGFzc2VydChkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVVNjQoKSA9PT0gMTMxMTc2ODQ2Nzc1MDEyMTIxNik7XG4gICAqIGBgYFxuICAgKi9cbiAgZGVzZXJpYWxpemVVNjQoKSB7XG4gICAgY29uc3QgbG93ID0gdGhpcy5kZXNlcmlhbGl6ZVUzMigpO1xuICAgIGNvbnN0IGhpZ2ggPSB0aGlzLmRlc2VyaWFsaXplVTMyKCk7XG4gICAgcmV0dXJuIEJpZ0ludChCaWdJbnQoaGlnaCkgPDwgQmlnSW50KDMyKSB8IEJpZ0ludChsb3cpKTtcbiAgfVxuICAvKipcbiAgICogRGVzZXJpYWxpemVzIGEgdWludDEyOCBudW1iZXIuXG4gICAqXG4gICAqIEJDUyBsYXlvdXQgZm9yIFwidWludDEyOFwiOiBTaXh0ZWVuIGJ5dGVzLiBCaW5hcnkgZm9ybWF0IGluIGxpdHRsZS1lbmRpYW4gcmVwcmVzZW50YXRpb24uXG4gICAqL1xuICBkZXNlcmlhbGl6ZVUxMjgoKSB7XG4gICAgY29uc3QgbG93ID0gdGhpcy5kZXNlcmlhbGl6ZVU2NCgpO1xuICAgIGNvbnN0IGhpZ2ggPSB0aGlzLmRlc2VyaWFsaXplVTY0KCk7XG4gICAgcmV0dXJuIEJpZ0ludChoaWdoIDw8IEJpZ0ludCg2NCkgfCBsb3cpO1xuICB9XG4gIC8qKlxuICAgKiBEZXNlcmlhbGl6ZXMgYSB1aW50MjU2IG51bWJlci5cbiAgICpcbiAgICogQkNTIGxheW91dCBmb3IgXCJ1aW50MjU2XCI6IFRoaXJ0eS10d28gYnl0ZXMuIEJpbmFyeSBmb3JtYXQgaW4gbGl0dGxlLWVuZGlhbiByZXByZXNlbnRhdGlvbi5cbiAgICovXG4gIGRlc2VyaWFsaXplVTI1NigpIHtcbiAgICBjb25zdCBsb3cgPSB0aGlzLmRlc2VyaWFsaXplVTEyOCgpO1xuICAgIGNvbnN0IGhpZ2ggPSB0aGlzLmRlc2VyaWFsaXplVTEyOCgpO1xuICAgIHJldHVybiBCaWdJbnQoaGlnaCA8PCBCaWdJbnQoMTI4KSB8IGxvdyk7XG4gIH1cbiAgLyoqXG4gICAqIERlc2VyaWFsaXplcyBhIHVsZWIxMjggZW5jb2RlZCB1aW50MzIgbnVtYmVyLlxuICAgKlxuICAgKiBCQ1MgdXNlIHVsZWIxMjggZW5jb2RpbmcgaW4gdHdvIGNhc2VzOiAoMSkgbGVuZ3RocyBvZiB2YXJpYWJsZS1sZW5ndGggc2VxdWVuY2VzIGFuZCAoMikgdGFncyBvZiBlbnVtIHZhbHVlc1xuICAgKi9cbiAgZGVzZXJpYWxpemVVbGViMTI4QXNVMzIoKSB7XG4gICAgbGV0IHZhbHVlID0gQmlnSW50KDApO1xuICAgIGxldCBzaGlmdCA9IDA7XG4gICAgd2hpbGUgKHZhbHVlIDwgTUFYX1UzMl9OVU1CRVIpIHtcbiAgICAgIGNvbnN0IGJ5dGUgPSB0aGlzLmRlc2VyaWFsaXplVTgoKTtcbiAgICAgIHZhbHVlIHw9IEJpZ0ludChieXRlICYgMTI3KSA8PCBCaWdJbnQoc2hpZnQpO1xuICAgICAgaWYgKChieXRlICYgMTI4KSA9PT0gMCkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHNoaWZ0ICs9IDc7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA+IE1BWF9VMzJfTlVNQkVSKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJPdmVyZmxvdyB3aGlsZSBwYXJzaW5nIHVsZWIxMjgtZW5jb2RlZCB1aW50MzIgdmFsdWVcIik7XG4gICAgfVxuICAgIHJldHVybiBOdW1iZXIodmFsdWUpO1xuICB9XG59O1xuXG4vLyBzcmMvYmNzL2hlbHBlci50c1xuZnVuY3Rpb24gc2VyaWFsaXplVmVjdG9yKHZhbHVlLCBzZXJpYWxpemVyKSB7XG4gIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KHZhbHVlLmxlbmd0aCk7XG4gIHZhbHVlLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICBpdGVtLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgfSk7XG59XG5mdW5jdGlvbiBzZXJpYWxpemVWZWN0b3JXaXRoRnVuYyh2YWx1ZSwgZnVuYykge1xuICBjb25zdCBzZXJpYWxpemVyID0gbmV3IFNlcmlhbGl6ZXIoKTtcbiAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgodmFsdWUubGVuZ3RoKTtcbiAgY29uc3QgZiA9IHNlcmlhbGl6ZXJbZnVuY107XG4gIHZhbHVlLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICBmLmNhbGwoc2VyaWFsaXplciwgaXRlbSk7XG4gIH0pO1xuICByZXR1cm4gc2VyaWFsaXplci5nZXRCeXRlcygpO1xufVxuZnVuY3Rpb24gZGVzZXJpYWxpemVWZWN0b3IoZGVzZXJpYWxpemVyLCBjbHMpIHtcbiAgY29uc3QgbGVuZ3RoID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVWxlYjEyOEFzVTMyKCk7XG4gIGNvbnN0IGxpc3QgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMSkge1xuICAgIGxpc3QucHVzaChjbHMuZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKSk7XG4gIH1cbiAgcmV0dXJuIGxpc3Q7XG59XG5mdW5jdGlvbiBiY3NUb0J5dGVzKHZhbHVlKSB7XG4gIGNvbnN0IHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICB2YWx1ZS5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gIHJldHVybiBzZXJpYWxpemVyLmdldEJ5dGVzKCk7XG59XG5mdW5jdGlvbiBiY3NTZXJpYWxpemVVaW50NjQodmFsdWUpIHtcbiAgY29uc3Qgc2VyaWFsaXplciA9IG5ldyBTZXJpYWxpemVyKCk7XG4gIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTY0KHZhbHVlKTtcbiAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbn1cbmZ1bmN0aW9uIGJjc1NlcmlhbGl6ZVU4KHZhbHVlKSB7XG4gIGNvbnN0IHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICBzZXJpYWxpemVyLnNlcmlhbGl6ZVU4KHZhbHVlKTtcbiAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbn1cbmZ1bmN0aW9uIGJjc1NlcmlhbGl6ZVUxNih2YWx1ZSkge1xuICBjb25zdCBzZXJpYWxpemVyID0gbmV3IFNlcmlhbGl6ZXIoKTtcbiAgc2VyaWFsaXplci5zZXJpYWxpemVVMTYodmFsdWUpO1xuICByZXR1cm4gc2VyaWFsaXplci5nZXRCeXRlcygpO1xufVxuZnVuY3Rpb24gYmNzU2VyaWFsaXplVTMyKHZhbHVlKSB7XG4gIGNvbnN0IHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMih2YWx1ZSk7XG4gIHJldHVybiBzZXJpYWxpemVyLmdldEJ5dGVzKCk7XG59XG5mdW5jdGlvbiBiY3NTZXJpYWxpemVVMTI4KHZhbHVlKSB7XG4gIGNvbnN0IHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUxMjgodmFsdWUpO1xuICByZXR1cm4gc2VyaWFsaXplci5nZXRCeXRlcygpO1xufVxuZnVuY3Rpb24gYmNzU2VyaWFsaXplVTI1Nih2YWx1ZSkge1xuICBjb25zdCBzZXJpYWxpemVyID0gbmV3IFNlcmlhbGl6ZXIoKTtcbiAgc2VyaWFsaXplci5zZXJpYWxpemVVMjU2KHZhbHVlKTtcbiAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbn1cbmZ1bmN0aW9uIGJjc1NlcmlhbGl6ZUJvb2wodmFsdWUpIHtcbiAgY29uc3Qgc2VyaWFsaXplciA9IG5ldyBTZXJpYWxpemVyKCk7XG4gIHNlcmlhbGl6ZXIuc2VyaWFsaXplQm9vbCh2YWx1ZSk7XG4gIHJldHVybiBzZXJpYWxpemVyLmdldEJ5dGVzKCk7XG59XG5mdW5jdGlvbiBiY3NTZXJpYWxpemVTdHIodmFsdWUpIHtcbiAgY29uc3Qgc2VyaWFsaXplciA9IG5ldyBTZXJpYWxpemVyKCk7XG4gIHNlcmlhbGl6ZXIuc2VyaWFsaXplU3RyKHZhbHVlKTtcbiAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbn1cbmZ1bmN0aW9uIGJjc1NlcmlhbGl6ZUJ5dGVzKHZhbHVlKSB7XG4gIGNvbnN0IHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICBzZXJpYWxpemVyLnNlcmlhbGl6ZUJ5dGVzKHZhbHVlKTtcbiAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbn1cbmZ1bmN0aW9uIGJjc1NlcmlhbGl6ZUZpeGVkQnl0ZXModmFsdWUpIHtcbiAgY29uc3Qgc2VyaWFsaXplciA9IG5ldyBTZXJpYWxpemVyKCk7XG4gIHNlcmlhbGl6ZXIuc2VyaWFsaXplRml4ZWRCeXRlcyh2YWx1ZSk7XG4gIHJldHVybiBzZXJpYWxpemVyLmdldEJ5dGVzKCk7XG59XG5cbi8vIHNyYy9hcHRvc190eXBlcy90cmFuc2FjdGlvbi50c1xuaW1wb3J0IHsgc2hhM18yNTYgYXMgc2hhM0hhc2ggfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy9zaGEzXCI7XG5cbi8vIHNyYy9hcHRvc190eXBlcy9hY2NvdW50X2FkZHJlc3MudHNcbnZhciBfQWNjb3VudEFkZHJlc3MgPSBjbGFzcyBfQWNjb3VudEFkZHJlc3Mge1xuICBjb25zdHJ1Y3RvcihhZGRyZXNzKSB7XG4gICAgaWYgKGFkZHJlc3MubGVuZ3RoICE9PSBfQWNjb3VudEFkZHJlc3MuTEVOR1RIKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCBhZGRyZXNzIG9mIGxlbmd0aCAzMlwiKTtcbiAgICB9XG4gICAgdGhpcy5hZGRyZXNzID0gYWRkcmVzcztcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlcyBBY2NvdW50QWRkcmVzcyBmcm9tIGEgaGV4IHN0cmluZy5cbiAgICogQHBhcmFtIGFkZHIgSGV4IHN0cmluZyBjYW4gYmUgd2l0aCBhIHByZWZpeCBvciB3aXRob3V0IGEgcHJlZml4LFxuICAgKiAgIGUuZy4gJzB4MWFhJyBvciAnMWFhJy4gSGV4IHN0cmluZyB3aWxsIGJlIGxlZnQgcGFkZGVkIHdpdGggMHMgaWYgdG9vIHNob3J0LlxuICAgKi9cbiAgc3RhdGljIGZyb21IZXgoYWRkcikge1xuICAgIGxldCBhZGRyZXNzID0gSGV4U3RyaW5nLmVuc3VyZShhZGRyKTtcbiAgICBpZiAoYWRkcmVzcy5ub1ByZWZpeCgpLmxlbmd0aCAlIDIgIT09IDApIHtcbiAgICAgIGFkZHJlc3MgPSBuZXcgSGV4U3RyaW5nKGAwJHthZGRyZXNzLm5vUHJlZml4KCl9YCk7XG4gICAgfVxuICAgIGNvbnN0IGFkZHJlc3NCeXRlcyA9IGFkZHJlc3MudG9VaW50OEFycmF5KCk7XG4gICAgaWYgKGFkZHJlc3NCeXRlcy5sZW5ndGggPiBfQWNjb3VudEFkZHJlc3MuTEVOR1RIKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJIZXggc3RyaW5nIGlzIHRvbyBsb25nLiBBZGRyZXNzJ3MgbGVuZ3RoIGlzIDMyIGJ5dGVzLlwiKTtcbiAgICB9IGVsc2UgaWYgKGFkZHJlc3NCeXRlcy5sZW5ndGggPT09IF9BY2NvdW50QWRkcmVzcy5MRU5HVEgpIHtcbiAgICAgIHJldHVybiBuZXcgX0FjY291bnRBZGRyZXNzKGFkZHJlc3NCeXRlcyk7XG4gICAgfVxuICAgIGNvbnN0IHJlcyA9IG5ldyBVaW50OEFycmF5KF9BY2NvdW50QWRkcmVzcy5MRU5HVEgpO1xuICAgIHJlcy5zZXQoYWRkcmVzc0J5dGVzLCBfQWNjb3VudEFkZHJlc3MuTEVOR1RIIC0gYWRkcmVzc0J5dGVzLmxlbmd0aCk7XG4gICAgcmV0dXJuIG5ldyBfQWNjb3VudEFkZHJlc3MocmVzKTtcbiAgfVxuICAvKipcbiAgICogQ2hlY2tzIGlmIHRoZSBzdHJpbmcgaXMgYSB2YWxpZCBBY2NvdW50QWRkcmVzc1xuICAgKiBAcGFyYW0gYWRkciBIZXggc3RyaW5nIGNhbiBiZSB3aXRoIGEgcHJlZml4IG9yIHdpdGhvdXQgYSBwcmVmaXgsXG4gICAqICAgZS5nLiAnMHgxYWEnIG9yICcxYWEnLiBIZXggc3RyaW5nIHdpbGwgYmUgbGVmdCBwYWRkZWQgd2l0aCAwcyBpZiB0b28gc2hvcnQuXG4gICAqL1xuICBzdGF0aWMgaXNWYWxpZChhZGRyKSB7XG4gICAgaWYgKGFkZHIgPT09IFwiXCIpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IGFkZHJlc3MgPSBIZXhTdHJpbmcuZW5zdXJlKGFkZHIpO1xuICAgIGlmIChhZGRyZXNzLm5vUHJlZml4KCkubGVuZ3RoICUgMiAhPT0gMCkge1xuICAgICAgYWRkcmVzcyA9IG5ldyBIZXhTdHJpbmcoYDAke2FkZHJlc3Mubm9QcmVmaXgoKX1gKTtcbiAgICB9XG4gICAgY29uc3QgYWRkcmVzc0J5dGVzID0gYWRkcmVzcy50b1VpbnQ4QXJyYXkoKTtcbiAgICByZXR1cm4gYWRkcmVzc0J5dGVzLmxlbmd0aCA8PSBfQWNjb3VudEFkZHJlc3MuTEVOR1RIO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm4gYSBoZXggc3RyaW5nIGZyb20gYWNjb3VudCBBZGRyZXNzLlxuICAgKi9cbiAgdG9IZXhTdHJpbmcoKSB7XG4gICAgcmV0dXJuIEhleFN0cmluZy5mcm9tVWludDhBcnJheSh0aGlzLmFkZHJlc3MpLmhleCgpO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVGaXhlZEJ5dGVzKHRoaXMuYWRkcmVzcyk7XG4gIH1cbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIHJldHVybiBuZXcgX0FjY291bnRBZGRyZXNzKGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZUZpeGVkQnl0ZXMoX0FjY291bnRBZGRyZXNzLkxFTkdUSCkpO1xuICB9XG4gIC8qKlxuICAgKiBTdGFuZGFyZGl6ZXMgYW4gYWRkcmVzcyB0byB0aGUgZm9ybWF0IFwiMHhcIiBmb2xsb3dlZCBieSA2NCBsb3dlcmNhc2UgaGV4YWRlY2ltYWwgZGlnaXRzLlxuICAgKi9cbiAgc3RhdGljIHN0YW5kYXJkaXplQWRkcmVzcyhhZGRyZXNzKSB7XG4gICAgY29uc3QgbG93ZXJjYXNlQWRkcmVzcyA9IGFkZHJlc3MudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zdCBhZGRyZXNzV2l0aG91dFByZWZpeCA9IGxvd2VyY2FzZUFkZHJlc3Muc3RhcnRzV2l0aChcIjB4XCIpID8gbG93ZXJjYXNlQWRkcmVzcy5zbGljZSgyKSA6IGxvd2VyY2FzZUFkZHJlc3M7XG4gICAgY29uc3QgYWRkcmVzc1dpdGhQYWRkaW5nID0gYWRkcmVzc1dpdGhvdXRQcmVmaXgucGFkU3RhcnQoNjQsIFwiMFwiKTtcbiAgICByZXR1cm4gYDB4JHthZGRyZXNzV2l0aFBhZGRpbmd9YDtcbiAgfVxufTtcbl9BY2NvdW50QWRkcmVzcy5MRU5HVEggPSAzMjtcbl9BY2NvdW50QWRkcmVzcy5DT1JFX0NPREVfQUREUkVTUyA9IF9BY2NvdW50QWRkcmVzcy5mcm9tSGV4KFwiMHgxXCIpO1xudmFyIEFjY291bnRBZGRyZXNzID0gX0FjY291bnRBZGRyZXNzO1xuXG4vLyBzcmMvYXB0b3NfdHlwZXMvZWQyNTUxOS50c1xudmFyIF9FZDI1NTE5UHVibGljS2V5ID0gY2xhc3MgX0VkMjU1MTlQdWJsaWNLZXkge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZS5sZW5ndGggIT09IF9FZDI1NTE5UHVibGljS2V5LkxFTkdUSCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBFZDI1NTE5UHVibGljS2V5IGxlbmd0aCBzaG91bGQgYmUgJHtfRWQyNTUxOVB1YmxpY0tleS5MRU5HVEh9YCk7XG4gICAgfVxuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgfVxuICB0b0J5dGVzKCkge1xuICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVCeXRlcyh0aGlzLnZhbHVlKTtcbiAgfVxuICBzdGF0aWMgZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKSB7XG4gICAgY29uc3QgdmFsdWUgPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVCeXRlcygpO1xuICAgIHJldHVybiBuZXcgX0VkMjU1MTlQdWJsaWNLZXkodmFsdWUpO1xuICB9XG59O1xuX0VkMjU1MTlQdWJsaWNLZXkuTEVOR1RIID0gMzI7XG52YXIgRWQyNTUxOVB1YmxpY0tleSA9IF9FZDI1NTE5UHVibGljS2V5O1xudmFyIF9FZDI1NTE5U2lnbmF0dXJlID0gY2xhc3MgX0VkMjU1MTlTaWduYXR1cmUge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICBpZiAodmFsdWUubGVuZ3RoICE9PSBfRWQyNTUxOVNpZ25hdHVyZS5MRU5HVEgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRWQyNTUxOVNpZ25hdHVyZSBsZW5ndGggc2hvdWxkIGJlICR7X0VkMjU1MTlTaWduYXR1cmUuTEVOR1RIfWApO1xuICAgIH1cbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplQnl0ZXModGhpcy52YWx1ZSk7XG4gIH1cbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHZhbHVlID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplQnl0ZXMoKTtcbiAgICByZXR1cm4gbmV3IF9FZDI1NTE5U2lnbmF0dXJlKHZhbHVlKTtcbiAgfVxufTtcbl9FZDI1NTE5U2lnbmF0dXJlLkxFTkdUSCA9IDY0O1xudmFyIEVkMjU1MTlTaWduYXR1cmUgPSBfRWQyNTUxOVNpZ25hdHVyZTtcblxuLy8gc3JjL2FwdG9zX3R5cGVzL211bHRpX2VkMjU1MTkudHNcbnZhciBNQVhfU0lHTkFUVVJFU19TVVBQT1JURUQgPSAzMjtcbnZhciBNdWx0aUVkMjU1MTlQdWJsaWNLZXkgPSBjbGFzcyBfTXVsdGlFZDI1NTE5UHVibGljS2V5IHtcbiAgLyoqXG4gICAqIFB1YmxpYyBrZXkgZm9yIGEgSy1vZi1OIG11bHRpc2lnIHRyYW5zYWN0aW9uLiBBIEstb2YtTiBtdWx0aXNpZyB0cmFuc2FjdGlvbiBtZWFucyB0aGF0IGZvciBzdWNoIGFcbiAgICogdHJhbnNhY3Rpb24gdG8gYmUgZXhlY3V0ZWQsIGF0IGxlYXN0IEsgb3V0IG9mIHRoZSBOIGF1dGhvcml6ZWQgc2lnbmVycyBoYXZlIHNpZ25lZCB0aGUgdHJhbnNhY3Rpb25cbiAgICogYW5kIHBhc3NlZCB0aGUgY2hlY2sgY29uZHVjdGVkIGJ5IHRoZSBjaGFpbi5cbiAgICpcbiAgICogQHNlZSB7QGxpbmtcbiAgICogaHR0cHM6Ly9hcHRvcy5kZXYvZ3VpZGVzL2NyZWF0aW5nLWEtc2lnbmVkLXRyYW5zYWN0aW9uI211bHRpc2lnbmF0dXJlLXRyYW5zYWN0aW9ucyB8IENyZWF0aW5nIGEgU2lnbmVkIFRyYW5zYWN0aW9ufVxuICAgKlxuICAgKiBAcGFyYW0gcHVibGljX2tleXMgQSBsaXN0IG9mIHB1YmxpYyBrZXlzXG4gICAqIEBwYXJhbSB0aHJlc2hvbGQgQXQgbGVhc3QgXCJ0aHJlc2hvbGRcIiBzaWduYXR1cmVzIG11c3QgYmUgdmFsaWRcbiAgICovXG4gIGNvbnN0cnVjdG9yKHB1YmxpY19rZXlzLCB0aHJlc2hvbGQpIHtcbiAgICB0aGlzLnB1YmxpY19rZXlzID0gcHVibGljX2tleXM7XG4gICAgdGhpcy50aHJlc2hvbGQgPSB0aHJlc2hvbGQ7XG4gICAgaWYgKHRocmVzaG9sZCA+IE1BWF9TSUdOQVRVUkVTX1NVUFBPUlRFRCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBcInRocmVzaG9sZFwiIGNhbm5vdCBiZSBsYXJnZXIgdGhhbiAke01BWF9TSUdOQVRVUkVTX1NVUFBPUlRFRH1gKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIENvbnZlcnRzIGEgTXVsdGlFZDI1NTE5UHVibGljS2V5IGludG8gYnl0ZXMgd2l0aDogYnl0ZXMgPSBwMV9ieXRlcyB8IC4uLiB8IHBuX2J5dGVzIHwgdGhyZXNob2xkXG4gICAqL1xuICB0b0J5dGVzKCkge1xuICAgIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5wdWJsaWNfa2V5cy5sZW5ndGggKiBFZDI1NTE5UHVibGljS2V5LkxFTkdUSCArIDEpO1xuICAgIHRoaXMucHVibGljX2tleXMuZm9yRWFjaCgoaywgaSkgPT4ge1xuICAgICAgYnl0ZXMuc2V0KGsudmFsdWUsIGkgKiBFZDI1NTE5UHVibGljS2V5LkxFTkdUSCk7XG4gICAgfSk7XG4gICAgYnl0ZXNbdGhpcy5wdWJsaWNfa2V5cy5sZW5ndGggKiBFZDI1NTE5UHVibGljS2V5LkxFTkdUSF0gPSB0aGlzLnRocmVzaG9sZDtcbiAgICByZXR1cm4gYnl0ZXM7XG4gIH1cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZUJ5dGVzKHRoaXMudG9CeXRlcygpKTtcbiAgfVxuICBzdGF0aWMgZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKSB7XG4gICAgY29uc3QgYnl0ZXMgPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVCeXRlcygpO1xuICAgIGNvbnN0IHRocmVzaG9sZCA9IGJ5dGVzW2J5dGVzLmxlbmd0aCAtIDFdO1xuICAgIGNvbnN0IGtleXMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aCAtIDE7IGkgKz0gRWQyNTUxOVB1YmxpY0tleS5MRU5HVEgpIHtcbiAgICAgIGNvbnN0IGJlZ2luID0gaTtcbiAgICAgIGtleXMucHVzaChuZXcgRWQyNTUxOVB1YmxpY0tleShieXRlcy5zdWJhcnJheShiZWdpbiwgYmVnaW4gKyBFZDI1NTE5UHVibGljS2V5LkxFTkdUSCkpKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBfTXVsdGlFZDI1NTE5UHVibGljS2V5KGtleXMsIHRocmVzaG9sZCk7XG4gIH1cbn07XG52YXIgX011bHRpRWQyNTUxOVNpZ25hdHVyZSA9IGNsYXNzIF9NdWx0aUVkMjU1MTlTaWduYXR1cmUge1xuICAvKipcbiAgICogU2lnbmF0dXJlIGZvciBhIEstb2YtTiBtdWx0aXNpZyB0cmFuc2FjdGlvbi5cbiAgICpcbiAgICogQHNlZSB7QGxpbmtcbiAgICogaHR0cHM6Ly9hcHRvcy5kZXYvZ3VpZGVzL2NyZWF0aW5nLWEtc2lnbmVkLXRyYW5zYWN0aW9uI211bHRpc2lnbmF0dXJlLXRyYW5zYWN0aW9ucyB8IENyZWF0aW5nIGEgU2lnbmVkIFRyYW5zYWN0aW9ufVxuICAgKlxuICAgKiBAcGFyYW0gc2lnbmF0dXJlcyBBIGxpc3Qgb2YgZWQyNTUxOSBzaWduYXR1cmVzXG4gICAqIEBwYXJhbSBiaXRtYXAgNCBieXRlcywgYXQgbW9zdCAzMiBzaWduYXR1cmVzIGFyZSBzdXBwb3J0ZWQuIElmIE50aCBiaXQgdmFsdWUgaXMgYDFgLCB0aGUgTnRoXG4gICAqIHNpZ25hdHVyZSBzaG91bGQgYmUgcHJvdmlkZWQgaW4gYHNpZ25hdHVyZXNgLiBCaXRzIGFyZSByZWFkIGZyb20gbGVmdCB0byByaWdodFxuICAgKi9cbiAgY29uc3RydWN0b3Ioc2lnbmF0dXJlcywgYml0bWFwKSB7XG4gICAgdGhpcy5zaWduYXR1cmVzID0gc2lnbmF0dXJlcztcbiAgICB0aGlzLmJpdG1hcCA9IGJpdG1hcDtcbiAgICBpZiAoYml0bWFwLmxlbmd0aCAhPT0gX011bHRpRWQyNTUxOVNpZ25hdHVyZS5CSVRNQVBfTEVOKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFwiYml0bWFwXCIgbGVuZ3RoIHNob3VsZCBiZSAke19NdWx0aUVkMjU1MTlTaWduYXR1cmUuQklUTUFQX0xFTn1gKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIENvbnZlcnRzIGEgTXVsdGlFZDI1NTE5U2lnbmF0dXJlIGludG8gYnl0ZXMgd2l0aCBgYnl0ZXMgPSBzMV9ieXRlcyB8IC4uLiB8IHNuX2J5dGVzIHwgYml0bWFwYFxuICAgKi9cbiAgdG9CeXRlcygpIHtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KHRoaXMuc2lnbmF0dXJlcy5sZW5ndGggKiBFZDI1NTE5U2lnbmF0dXJlLkxFTkdUSCArIF9NdWx0aUVkMjU1MTlTaWduYXR1cmUuQklUTUFQX0xFTik7XG4gICAgdGhpcy5zaWduYXR1cmVzLmZvckVhY2goKGssIGkpID0+IHtcbiAgICAgIGJ5dGVzLnNldChrLnZhbHVlLCBpICogRWQyNTUxOVNpZ25hdHVyZS5MRU5HVEgpO1xuICAgIH0pO1xuICAgIGJ5dGVzLnNldCh0aGlzLmJpdG1hcCwgdGhpcy5zaWduYXR1cmVzLmxlbmd0aCAqIEVkMjU1MTlTaWduYXR1cmUuTEVOR1RIKTtcbiAgICByZXR1cm4gYnl0ZXM7XG4gIH1cbiAgLyoqXG4gICAqIEhlbHBlciBtZXRob2QgdG8gY3JlYXRlIGEgYml0bWFwIG91dCBvZiB0aGUgc3BlY2lmaWVkIGJpdCBwb3NpdGlvbnNcbiAgICogQHBhcmFtIGJpdHMgVGhlIGJpdG1hcCBwb3NpdGlvbnMgdGhhdCBzaG91bGQgYmUgc2V0LiBBIHBvc2l0aW9uIHN0YXJ0cyBhdCBpbmRleCAwLlxuICAgKiBWYWxpZCBwb3NpdGlvbiBzaG91bGQgcmFuZ2UgYmV0d2VlbiAwIGFuZCAzMS5cbiAgICogQGV4YW1wbGVcbiAgICogSGVyZSdzIGFuIGV4YW1wbGUgb2YgdmFsaWQgYGJpdHNgXG4gICAqIGBgYFxuICAgKiBbMCwgMiwgMzFdXG4gICAqIGBgYFxuICAgKiBgWzAsIDIsIDMxXWAgbWVhbnMgdGhlIDFzdCwgM3JkIGFuZCAzMm5kIGJpdHMgc2hvdWxkIGJlIHNldCBpbiB0aGUgYml0bWFwLlxuICAgKiBUaGUgcmVzdWx0IGJpdG1hcCBzaG91bGQgYmUgMGIxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxXG4gICAqXG4gICAqIEByZXR1cm5zIGJpdG1hcCB0aGF0IGlzIDMyYml0IGxvbmdcbiAgICovXG4gIHN0YXRpYyBjcmVhdGVCaXRtYXAoYml0cykge1xuICAgIGNvbnN0IGZpcnN0Qml0SW5CeXRlID0gMTI4O1xuICAgIGNvbnN0IGJpdG1hcCA9IG5ldyBVaW50OEFycmF5KFswLCAwLCAwLCAwXSk7XG4gICAgY29uc3QgZHVwQ2hlY2tTZXQgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICAgIGJpdHMuZm9yRWFjaCgoYml0KSA9PiB7XG4gICAgICBpZiAoYml0ID49IE1BWF9TSUdOQVRVUkVTX1NVUFBPUlRFRCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgYml0IHZhbHVlICR7Yml0fS5gKTtcbiAgICAgIH1cbiAgICAgIGlmIChkdXBDaGVja1NldC5oYXMoYml0KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEdXBsaWNhdGVkIGJpdHMgZGV0ZWN0ZWQuXCIpO1xuICAgICAgfVxuICAgICAgZHVwQ2hlY2tTZXQuYWRkKGJpdCk7XG4gICAgICBjb25zdCBieXRlT2Zmc2V0ID0gTWF0aC5mbG9vcihiaXQgLyA4KTtcbiAgICAgIGxldCBieXRlID0gYml0bWFwW2J5dGVPZmZzZXRdO1xuICAgICAgYnl0ZSB8PSBmaXJzdEJpdEluQnl0ZSA+PiBiaXQgJSA4O1xuICAgICAgYml0bWFwW2J5dGVPZmZzZXRdID0gYnl0ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gYml0bWFwO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVCeXRlcyh0aGlzLnRvQnl0ZXMoKSk7XG4gIH1cbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IGJ5dGVzID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplQnl0ZXMoKTtcbiAgICBjb25zdCBiaXRtYXAgPSBieXRlcy5zdWJhcnJheShieXRlcy5sZW5ndGggLSA0KTtcbiAgICBjb25zdCBzaWdzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBieXRlcy5sZW5ndGggLSBiaXRtYXAubGVuZ3RoOyBpICs9IEVkMjU1MTlTaWduYXR1cmUuTEVOR1RIKSB7XG4gICAgICBjb25zdCBiZWdpbiA9IGk7XG4gICAgICBzaWdzLnB1c2gobmV3IEVkMjU1MTlTaWduYXR1cmUoYnl0ZXMuc3ViYXJyYXkoYmVnaW4sIGJlZ2luICsgRWQyNTUxOVNpZ25hdHVyZS5MRU5HVEgpKSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgX011bHRpRWQyNTUxOVNpZ25hdHVyZShzaWdzLCBiaXRtYXApO1xuICB9XG59O1xuX011bHRpRWQyNTUxOVNpZ25hdHVyZS5CSVRNQVBfTEVOID0gNDtcbnZhciBNdWx0aUVkMjU1MTlTaWduYXR1cmUgPSBfTXVsdGlFZDI1NTE5U2lnbmF0dXJlO1xuXG4vLyBzcmMvYXB0b3NfdHlwZXMvYXV0aGVudGljYXRvci50c1xudmFyIFRyYW5zYWN0aW9uQXV0aGVudGljYXRvciA9IGNsYXNzIHtcbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IGluZGV4ID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVWxlYjEyOEFzVTMyKCk7XG4gICAgc3dpdGNoIChpbmRleCkge1xuICAgICAgY2FzZSAwOlxuICAgICAgICByZXR1cm4gVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yRWQyNTUxOS5sb2FkKGRlc2VyaWFsaXplcik7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHJldHVybiBUcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3JNdWx0aUVkMjU1MTkubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSAyOlxuICAgICAgICByZXR1cm4gVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yTXVsdGlBZ2VudC5sb2FkKGRlc2VyaWFsaXplcik7XG4gICAgICBjYXNlIDM6XG4gICAgICAgIHJldHVybiBUcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3JGZWVQYXllci5sb2FkKGRlc2VyaWFsaXplcik7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gdmFyaWFudCBpbmRleCBmb3IgVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yOiAke2luZGV4fWApO1xuICAgIH1cbiAgfVxufTtcbnZhciBUcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3JFZDI1NTE5ID0gY2xhc3MgX1RyYW5zYWN0aW9uQXV0aGVudGljYXRvckVkMjU1MTkgZXh0ZW5kcyBUcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3Ige1xuICAvKipcbiAgICogQW4gYXV0aGVudGljYXRvciBmb3Igc2luZ2xlIHNpZ25hdHVyZS5cbiAgICpcbiAgICogQHBhcmFtIHB1YmxpY19rZXkgQ2xpZW50J3MgcHVibGljIGtleS5cbiAgICogQHBhcmFtIHNpZ25hdHVyZSBTaWduYXR1cmUgb2YgYSByYXcgdHJhbnNhY3Rpb24uXG4gICAqIEBzZWUge0BsaW5rIGh0dHBzOi8vYXB0b3MuZGV2L2d1aWRlcy9jcmVhdGluZy1hLXNpZ25lZC10cmFuc2FjdGlvbi8gfCBDcmVhdGluZyBhIFNpZ25lZCBUcmFuc2FjdGlvbn1cbiAgICogZm9yIGRldGFpbHMgYWJvdXQgZ2VuZXJhdGluZyBhIHNpZ25hdHVyZS5cbiAgICovXG4gIGNvbnN0cnVjdG9yKHB1YmxpY19rZXksIHNpZ25hdHVyZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5wdWJsaWNfa2V5ID0gcHVibGljX2tleTtcbiAgICB0aGlzLnNpZ25hdHVyZSA9IHNpZ25hdHVyZTtcbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KDApO1xuICAgIHRoaXMucHVibGljX2tleS5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gICAgdGhpcy5zaWduYXR1cmUuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHB1YmxpY19rZXkgPSBFZDI1NTE5UHVibGljS2V5LmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcik7XG4gICAgY29uc3Qgc2lnbmF0dXJlID0gRWQyNTUxOVNpZ25hdHVyZS5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIHJldHVybiBuZXcgX1RyYW5zYWN0aW9uQXV0aGVudGljYXRvckVkMjU1MTkocHVibGljX2tleSwgc2lnbmF0dXJlKTtcbiAgfVxufTtcbnZhciBUcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3JNdWx0aUVkMjU1MTkgPSBjbGFzcyBfVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yTXVsdGlFZDI1NTE5IGV4dGVuZHMgVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yIHtcbiAgLyoqXG4gICAqIEFuIGF1dGhlbnRpY2F0b3IgZm9yIG11bHRpcGxlIHNpZ25hdHVyZXMuXG4gICAqXG4gICAqIEBwYXJhbSBwdWJsaWNfa2V5XG4gICAqIEBwYXJhbSBzaWduYXR1cmVcbiAgICpcbiAgICovXG4gIGNvbnN0cnVjdG9yKHB1YmxpY19rZXksIHNpZ25hdHVyZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5wdWJsaWNfa2V5ID0gcHVibGljX2tleTtcbiAgICB0aGlzLnNpZ25hdHVyZSA9IHNpZ25hdHVyZTtcbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KDEpO1xuICAgIHRoaXMucHVibGljX2tleS5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gICAgdGhpcy5zaWduYXR1cmUuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHB1YmxpY19rZXkgPSBNdWx0aUVkMjU1MTlQdWJsaWNLZXkuZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKTtcbiAgICBjb25zdCBzaWduYXR1cmUgPSBNdWx0aUVkMjU1MTlTaWduYXR1cmUuZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKTtcbiAgICByZXR1cm4gbmV3IF9UcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3JNdWx0aUVkMjU1MTkocHVibGljX2tleSwgc2lnbmF0dXJlKTtcbiAgfVxufTtcbnZhciBUcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3JNdWx0aUFnZW50ID0gY2xhc3MgX1RyYW5zYWN0aW9uQXV0aGVudGljYXRvck11bHRpQWdlbnQgZXh0ZW5kcyBUcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3Ige1xuICBjb25zdHJ1Y3RvcihzZW5kZXIsIHNlY29uZGFyeV9zaWduZXJfYWRkcmVzc2VzLCBzZWNvbmRhcnlfc2lnbmVycykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5zZW5kZXIgPSBzZW5kZXI7XG4gICAgdGhpcy5zZWNvbmRhcnlfc2lnbmVyX2FkZHJlc3NlcyA9IHNlY29uZGFyeV9zaWduZXJfYWRkcmVzc2VzO1xuICAgIHRoaXMuc2Vjb25kYXJ5X3NpZ25lcnMgPSBzZWNvbmRhcnlfc2lnbmVycztcbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KDIpO1xuICAgIHRoaXMuc2VuZGVyLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgICBzZXJpYWxpemVWZWN0b3IodGhpcy5zZWNvbmRhcnlfc2lnbmVyX2FkZHJlc3Nlcywgc2VyaWFsaXplcik7XG4gICAgc2VyaWFsaXplVmVjdG9yKHRoaXMuc2Vjb25kYXJ5X3NpZ25lcnMsIHNlcmlhbGl6ZXIpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHNlbmRlciA9IEFjY291bnRBdXRoZW50aWNhdG9yLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcik7XG4gICAgY29uc3Qgc2Vjb25kYXJ5X3NpZ25lcl9hZGRyZXNzZXMgPSBkZXNlcmlhbGl6ZVZlY3RvcihkZXNlcmlhbGl6ZXIsIEFjY291bnRBZGRyZXNzKTtcbiAgICBjb25zdCBzZWNvbmRhcnlfc2lnbmVycyA9IGRlc2VyaWFsaXplVmVjdG9yKGRlc2VyaWFsaXplciwgQWNjb3VudEF1dGhlbnRpY2F0b3IpO1xuICAgIHJldHVybiBuZXcgX1RyYW5zYWN0aW9uQXV0aGVudGljYXRvck11bHRpQWdlbnQoc2VuZGVyLCBzZWNvbmRhcnlfc2lnbmVyX2FkZHJlc3Nlcywgc2Vjb25kYXJ5X3NpZ25lcnMpO1xuICB9XG59O1xudmFyIFRyYW5zYWN0aW9uQXV0aGVudGljYXRvckZlZVBheWVyID0gY2xhc3MgX1RyYW5zYWN0aW9uQXV0aGVudGljYXRvckZlZVBheWVyIGV4dGVuZHMgVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yIHtcbiAgY29uc3RydWN0b3Ioc2VuZGVyLCBzZWNvbmRhcnlfc2lnbmVyX2FkZHJlc3Nlcywgc2Vjb25kYXJ5X3NpZ25lcnMsIGZlZV9wYXllcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5zZW5kZXIgPSBzZW5kZXI7XG4gICAgdGhpcy5zZWNvbmRhcnlfc2lnbmVyX2FkZHJlc3NlcyA9IHNlY29uZGFyeV9zaWduZXJfYWRkcmVzc2VzO1xuICAgIHRoaXMuc2Vjb25kYXJ5X3NpZ25lcnMgPSBzZWNvbmRhcnlfc2lnbmVycztcbiAgICB0aGlzLmZlZV9wYXllciA9IGZlZV9wYXllcjtcbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KDMpO1xuICAgIHRoaXMuc2VuZGVyLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgICBzZXJpYWxpemVWZWN0b3IodGhpcy5zZWNvbmRhcnlfc2lnbmVyX2FkZHJlc3Nlcywgc2VyaWFsaXplcik7XG4gICAgc2VyaWFsaXplVmVjdG9yKHRoaXMuc2Vjb25kYXJ5X3NpZ25lcnMsIHNlcmlhbGl6ZXIpO1xuICAgIHRoaXMuZmVlX3BheWVyLmFkZHJlc3Muc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICAgIHRoaXMuZmVlX3BheWVyLmF1dGhlbnRpY2F0b3Iuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHNlbmRlciA9IEFjY291bnRBdXRoZW50aWNhdG9yLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcik7XG4gICAgY29uc3Qgc2Vjb25kYXJ5X3NpZ25lcl9hZGRyZXNzZXMgPSBkZXNlcmlhbGl6ZVZlY3RvcihkZXNlcmlhbGl6ZXIsIEFjY291bnRBZGRyZXNzKTtcbiAgICBjb25zdCBzZWNvbmRhcnlfc2lnbmVycyA9IGRlc2VyaWFsaXplVmVjdG9yKGRlc2VyaWFsaXplciwgQWNjb3VudEF1dGhlbnRpY2F0b3IpO1xuICAgIGNvbnN0IGFkZHJlc3MgPSBBY2NvdW50QWRkcmVzcy5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIGNvbnN0IGF1dGhlbnRpY2F0b3IgPSBBY2NvdW50QXV0aGVudGljYXRvci5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIGNvbnN0IGZlZV9wYXllciA9IHsgYWRkcmVzcywgYXV0aGVudGljYXRvciB9O1xuICAgIHJldHVybiBuZXcgX1RyYW5zYWN0aW9uQXV0aGVudGljYXRvckZlZVBheWVyKHNlbmRlciwgc2Vjb25kYXJ5X3NpZ25lcl9hZGRyZXNzZXMsIHNlY29uZGFyeV9zaWduZXJzLCBmZWVfcGF5ZXIpO1xuICB9XG59O1xudmFyIEFjY291bnRBdXRoZW50aWNhdG9yID0gY2xhc3Mge1xuICBzdGF0aWMgZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKSB7XG4gICAgY29uc3QgaW5kZXggPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVVbGViMTI4QXNVMzIoKTtcbiAgICBzd2l0Y2ggKGluZGV4KSB7XG4gICAgICBjYXNlIDA6XG4gICAgICAgIHJldHVybiBBY2NvdW50QXV0aGVudGljYXRvckVkMjU1MTkubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSAxOlxuICAgICAgICByZXR1cm4gQWNjb3VudEF1dGhlbnRpY2F0b3JNdWx0aUVkMjU1MTkubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHZhcmlhbnQgaW5kZXggZm9yIEFjY291bnRBdXRoZW50aWNhdG9yOiAke2luZGV4fWApO1xuICAgIH1cbiAgfVxufTtcbnZhciBBY2NvdW50QXV0aGVudGljYXRvckVkMjU1MTkgPSBjbGFzcyBfQWNjb3VudEF1dGhlbnRpY2F0b3JFZDI1NTE5IGV4dGVuZHMgQWNjb3VudEF1dGhlbnRpY2F0b3Ige1xuICBjb25zdHJ1Y3RvcihwdWJsaWNfa2V5LCBzaWduYXR1cmUpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMucHVibGljX2tleSA9IHB1YmxpY19rZXk7XG4gICAgdGhpcy5zaWduYXR1cmUgPSBzaWduYXR1cmU7XG4gIH1cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCgwKTtcbiAgICB0aGlzLnB1YmxpY19rZXkuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICAgIHRoaXMuc2lnbmF0dXJlLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgfVxuICBzdGF0aWMgbG9hZChkZXNlcmlhbGl6ZXIpIHtcbiAgICBjb25zdCBwdWJsaWNfa2V5ID0gRWQyNTUxOVB1YmxpY0tleS5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIGNvbnN0IHNpZ25hdHVyZSA9IEVkMjU1MTlTaWduYXR1cmUuZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKTtcbiAgICByZXR1cm4gbmV3IF9BY2NvdW50QXV0aGVudGljYXRvckVkMjU1MTkocHVibGljX2tleSwgc2lnbmF0dXJlKTtcbiAgfVxufTtcbnZhciBBY2NvdW50QXV0aGVudGljYXRvck11bHRpRWQyNTUxOSA9IGNsYXNzIF9BY2NvdW50QXV0aGVudGljYXRvck11bHRpRWQyNTUxOSBleHRlbmRzIEFjY291bnRBdXRoZW50aWNhdG9yIHtcbiAgY29uc3RydWN0b3IocHVibGljX2tleSwgc2lnbmF0dXJlKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnB1YmxpY19rZXkgPSBwdWJsaWNfa2V5O1xuICAgIHRoaXMuc2lnbmF0dXJlID0gc2lnbmF0dXJlO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMSk7XG4gICAgdGhpcy5wdWJsaWNfa2V5LnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgICB0aGlzLnNpZ25hdHVyZS5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gIH1cbiAgc3RhdGljIGxvYWQoZGVzZXJpYWxpemVyKSB7XG4gICAgY29uc3QgcHVibGljX2tleSA9IE11bHRpRWQyNTUxOVB1YmxpY0tleS5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIGNvbnN0IHNpZ25hdHVyZSA9IE11bHRpRWQyNTUxOVNpZ25hdHVyZS5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIHJldHVybiBuZXcgX0FjY291bnRBdXRoZW50aWNhdG9yTXVsdGlFZDI1NTE5KHB1YmxpY19rZXksIHNpZ25hdHVyZSk7XG4gIH1cbn07XG5cbi8vIHNyYy9hcHRvc190eXBlcy9pZGVudGlmaWVyLnRzXG52YXIgSWRlbnRpZmllciA9IGNsYXNzIF9JZGVudGlmaWVyIHtcbiAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIH1cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVN0cih0aGlzLnZhbHVlKTtcbiAgfVxuICBzdGF0aWMgZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKSB7XG4gICAgY29uc3QgdmFsdWUgPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVTdHIoKTtcbiAgICByZXR1cm4gbmV3IF9JZGVudGlmaWVyKHZhbHVlKTtcbiAgfVxufTtcblxuLy8gc3JjL2FwdG9zX3R5cGVzL3R5cGVfdGFnLnRzXG52YXIgVHlwZVRhZyA9IGNsYXNzIHtcbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IGluZGV4ID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVWxlYjEyOEFzVTMyKCk7XG4gICAgc3dpdGNoIChpbmRleCkge1xuICAgICAgY2FzZSAwOlxuICAgICAgICByZXR1cm4gVHlwZVRhZ0Jvb2wubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSAxOlxuICAgICAgICByZXR1cm4gVHlwZVRhZ1U4LmxvYWQoZGVzZXJpYWxpemVyKTtcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgcmV0dXJuIFR5cGVUYWdVNjQubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSAzOlxuICAgICAgICByZXR1cm4gVHlwZVRhZ1UxMjgubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSA0OlxuICAgICAgICByZXR1cm4gVHlwZVRhZ0FkZHJlc3MubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSA1OlxuICAgICAgICByZXR1cm4gVHlwZVRhZ1NpZ25lci5sb2FkKGRlc2VyaWFsaXplcik7XG4gICAgICBjYXNlIDY6XG4gICAgICAgIHJldHVybiBUeXBlVGFnVmVjdG9yLmxvYWQoZGVzZXJpYWxpemVyKTtcbiAgICAgIGNhc2UgNzpcbiAgICAgICAgcmV0dXJuIFR5cGVUYWdTdHJ1Y3QubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSA4OlxuICAgICAgICByZXR1cm4gVHlwZVRhZ1UxNi5sb2FkKGRlc2VyaWFsaXplcik7XG4gICAgICBjYXNlIDk6XG4gICAgICAgIHJldHVybiBUeXBlVGFnVTMyLmxvYWQoZGVzZXJpYWxpemVyKTtcbiAgICAgIGNhc2UgMTA6XG4gICAgICAgIHJldHVybiBUeXBlVGFnVTI1Ni5sb2FkKGRlc2VyaWFsaXplcik7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gdmFyaWFudCBpbmRleCBmb3IgVHlwZVRhZzogJHtpbmRleH1gKTtcbiAgICB9XG4gIH1cbn07XG52YXIgVHlwZVRhZ0Jvb2wgPSBjbGFzcyBfVHlwZVRhZ0Jvb2wgZXh0ZW5kcyBUeXBlVGFnIHtcbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCgwKTtcbiAgfVxuICBzdGF0aWMgbG9hZChfZGVzZXJpYWxpemVyKSB7XG4gICAgcmV0dXJuIG5ldyBfVHlwZVRhZ0Jvb2woKTtcbiAgfVxufTtcbnZhciBUeXBlVGFnVTggPSBjbGFzcyBfVHlwZVRhZ1U4IGV4dGVuZHMgVHlwZVRhZyB7XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMSk7XG4gIH1cbiAgc3RhdGljIGxvYWQoX2Rlc2VyaWFsaXplcikge1xuICAgIHJldHVybiBuZXcgX1R5cGVUYWdVOCgpO1xuICB9XG59O1xudmFyIFR5cGVUYWdVMTYgPSBjbGFzcyBfVHlwZVRhZ1UxNiBleHRlbmRzIFR5cGVUYWcge1xuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KDgpO1xuICB9XG4gIHN0YXRpYyBsb2FkKF9kZXNlcmlhbGl6ZXIpIHtcbiAgICByZXR1cm4gbmV3IF9UeXBlVGFnVTE2KCk7XG4gIH1cbn07XG52YXIgVHlwZVRhZ1UzMiA9IGNsYXNzIF9UeXBlVGFnVTMyIGV4dGVuZHMgVHlwZVRhZyB7XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoOSk7XG4gIH1cbiAgc3RhdGljIGxvYWQoX2Rlc2VyaWFsaXplcikge1xuICAgIHJldHVybiBuZXcgX1R5cGVUYWdVMzIoKTtcbiAgfVxufTtcbnZhciBUeXBlVGFnVTY0ID0gY2xhc3MgX1R5cGVUYWdVNjQgZXh0ZW5kcyBUeXBlVGFnIHtcbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCgyKTtcbiAgfVxuICBzdGF0aWMgbG9hZChfZGVzZXJpYWxpemVyKSB7XG4gICAgcmV0dXJuIG5ldyBfVHlwZVRhZ1U2NCgpO1xuICB9XG59O1xudmFyIFR5cGVUYWdVMTI4ID0gY2xhc3MgX1R5cGVUYWdVMTI4IGV4dGVuZHMgVHlwZVRhZyB7XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMyk7XG4gIH1cbiAgc3RhdGljIGxvYWQoX2Rlc2VyaWFsaXplcikge1xuICAgIHJldHVybiBuZXcgX1R5cGVUYWdVMTI4KCk7XG4gIH1cbn07XG52YXIgVHlwZVRhZ1UyNTYgPSBjbGFzcyBfVHlwZVRhZ1UyNTYgZXh0ZW5kcyBUeXBlVGFnIHtcbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCgxMCk7XG4gIH1cbiAgc3RhdGljIGxvYWQoX2Rlc2VyaWFsaXplcikge1xuICAgIHJldHVybiBuZXcgX1R5cGVUYWdVMjU2KCk7XG4gIH1cbn07XG52YXIgVHlwZVRhZ0FkZHJlc3MgPSBjbGFzcyBfVHlwZVRhZ0FkZHJlc3MgZXh0ZW5kcyBUeXBlVGFnIHtcbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCg0KTtcbiAgfVxuICBzdGF0aWMgbG9hZChfZGVzZXJpYWxpemVyKSB7XG4gICAgcmV0dXJuIG5ldyBfVHlwZVRhZ0FkZHJlc3MoKTtcbiAgfVxufTtcbnZhciBUeXBlVGFnU2lnbmVyID0gY2xhc3MgX1R5cGVUYWdTaWduZXIgZXh0ZW5kcyBUeXBlVGFnIHtcbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCg1KTtcbiAgfVxuICBzdGF0aWMgbG9hZChfZGVzZXJpYWxpemVyKSB7XG4gICAgcmV0dXJuIG5ldyBfVHlwZVRhZ1NpZ25lcigpO1xuICB9XG59O1xudmFyIFR5cGVUYWdWZWN0b3IgPSBjbGFzcyBfVHlwZVRhZ1ZlY3RvciBleHRlbmRzIFR5cGVUYWcge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoNik7XG4gICAgdGhpcy52YWx1ZS5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gIH1cbiAgc3RhdGljIGxvYWQoZGVzZXJpYWxpemVyKSB7XG4gICAgY29uc3QgdmFsdWUgPSBUeXBlVGFnLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcik7XG4gICAgcmV0dXJuIG5ldyBfVHlwZVRhZ1ZlY3Rvcih2YWx1ZSk7XG4gIH1cbn07XG52YXIgVHlwZVRhZ1N0cnVjdCA9IGNsYXNzIF9UeXBlVGFnU3RydWN0IGV4dGVuZHMgVHlwZVRhZyB7XG4gIGNvbnN0cnVjdG9yKHZhbHVlKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIH1cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCg3KTtcbiAgICB0aGlzLnZhbHVlLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgfVxuICBzdGF0aWMgbG9hZChkZXNlcmlhbGl6ZXIpIHtcbiAgICBjb25zdCB2YWx1ZSA9IFN0cnVjdFRhZy5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIHJldHVybiBuZXcgX1R5cGVUYWdTdHJ1Y3QodmFsdWUpO1xuICB9XG4gIGlzU3RyaW5nVHlwZVRhZygpIHtcbiAgICBpZiAodGhpcy52YWx1ZS5tb2R1bGVfbmFtZS52YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJiB0aGlzLnZhbHVlLm5hbWUudmFsdWUgPT09IFwiU3RyaW5nXCIgJiYgdGhpcy52YWx1ZS5hZGRyZXNzLnRvSGV4U3RyaW5nKCkgPT09IEFjY291bnRBZGRyZXNzLkNPUkVfQ09ERV9BRERSRVNTLnRvSGV4U3RyaW5nKCkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG52YXIgU3RydWN0VGFnID0gY2xhc3MgX1N0cnVjdFRhZyB7XG4gIGNvbnN0cnVjdG9yKGFkZHJlc3MsIG1vZHVsZV9uYW1lLCBuYW1lLCB0eXBlX2FyZ3MpIHtcbiAgICB0aGlzLmFkZHJlc3MgPSBhZGRyZXNzO1xuICAgIHRoaXMubW9kdWxlX25hbWUgPSBtb2R1bGVfbmFtZTtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMudHlwZV9hcmdzID0gdHlwZV9hcmdzO1xuICB9XG4gIC8qKlxuICAgKiBDb252ZXJ0cyBhIHN0cmluZyBsaXRlcmFsIHRvIGEgU3RydWN0VGFnXG4gICAqIEBwYXJhbSBzdHJ1Y3RUYWcgU3RyaW5nIGxpdGVyYWwgaW4gZm9ybWF0IFwiQWNvdW50QWRkcmVzczo6bW9kdWxlX25hbWU6OlJlc291cmNlTmFtZVwiLFxuICAgKiAgIGUuZy4gXCIweDE6OmFwdG9zX2NvaW46OkFwdG9zQ29pblwiXG4gICAqIEByZXR1cm5zXG4gICAqL1xuICBzdGF0aWMgZnJvbVN0cmluZyhzdHJ1Y3RUYWcpIHtcbiAgICBjb25zdCB0eXBlVGFnU3RydWN0ID0gbmV3IFR5cGVUYWdQYXJzZXIoc3RydWN0VGFnKS5wYXJzZVR5cGVUYWcoKTtcbiAgICByZXR1cm4gbmV3IF9TdHJ1Y3RUYWcoXG4gICAgICB0eXBlVGFnU3RydWN0LnZhbHVlLmFkZHJlc3MsXG4gICAgICB0eXBlVGFnU3RydWN0LnZhbHVlLm1vZHVsZV9uYW1lLFxuICAgICAgdHlwZVRhZ1N0cnVjdC52YWx1ZS5uYW1lLFxuICAgICAgdHlwZVRhZ1N0cnVjdC52YWx1ZS50eXBlX2FyZ3NcbiAgICApO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgdGhpcy5hZGRyZXNzLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgICB0aGlzLm1vZHVsZV9uYW1lLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgICB0aGlzLm5hbWUuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICAgIHNlcmlhbGl6ZVZlY3Rvcih0aGlzLnR5cGVfYXJncywgc2VyaWFsaXplcik7XG4gIH1cbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IGFkZHJlc3MgPSBBY2NvdW50QWRkcmVzcy5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIGNvbnN0IG1vZHVsZU5hbWUgPSBJZGVudGlmaWVyLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcik7XG4gICAgY29uc3QgbmFtZSA9IElkZW50aWZpZXIuZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKTtcbiAgICBjb25zdCB0eXBlQXJncyA9IGRlc2VyaWFsaXplVmVjdG9yKGRlc2VyaWFsaXplciwgVHlwZVRhZyk7XG4gICAgcmV0dXJuIG5ldyBfU3RydWN0VGFnKGFkZHJlc3MsIG1vZHVsZU5hbWUsIG5hbWUsIHR5cGVBcmdzKTtcbiAgfVxufTtcbnZhciBzdHJpbmdTdHJ1Y3RUYWcgPSBuZXcgU3RydWN0VGFnKFxuICBBY2NvdW50QWRkcmVzcy5mcm9tSGV4KFwiMHgxXCIpLFxuICBuZXcgSWRlbnRpZmllcihcInN0cmluZ1wiKSxcbiAgbmV3IElkZW50aWZpZXIoXCJTdHJpbmdcIiksXG4gIFtdXG4pO1xuZnVuY3Rpb24gb3B0aW9uU3RydWN0VGFnKHR5cGVBcmcpIHtcbiAgcmV0dXJuIG5ldyBTdHJ1Y3RUYWcoQWNjb3VudEFkZHJlc3MuZnJvbUhleChcIjB4MVwiKSwgbmV3IElkZW50aWZpZXIoXCJvcHRpb25cIiksIG5ldyBJZGVudGlmaWVyKFwiT3B0aW9uXCIpLCBbdHlwZUFyZ10pO1xufVxuZnVuY3Rpb24gb2JqZWN0U3RydWN0VGFnKHR5cGVBcmcpIHtcbiAgcmV0dXJuIG5ldyBTdHJ1Y3RUYWcoQWNjb3VudEFkZHJlc3MuZnJvbUhleChcIjB4MVwiKSwgbmV3IElkZW50aWZpZXIoXCJvYmplY3RcIiksIG5ldyBJZGVudGlmaWVyKFwiT2JqZWN0XCIpLCBbdHlwZUFyZ10pO1xufVxuZnVuY3Rpb24gYmFpbChtZXNzYWdlKSB7XG4gIHRocm93IG5ldyBUeXBlVGFnUGFyc2VyRXJyb3IobWVzc2FnZSk7XG59XG5mdW5jdGlvbiBpc1doaXRlU3BhY2UoYykge1xuICBpZiAoYy5tYXRjaCgvXFxzLykpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBpc1ZhbGlkQWxwaGFiZXRpYyhjKSB7XG4gIGlmIChjLm1hdGNoKC9bX0EtWmEtejAtOV0vZykpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBpc0dlbmVyaWMoYykge1xuICBpZiAoYy5tYXRjaCgvVFxcZCsvZykpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBuZXh0VG9rZW4odGFnU3RyLCBwb3MpIHtcbiAgY29uc3QgYyA9IHRhZ1N0cltwb3NdO1xuICBpZiAoYyA9PT0gXCI6XCIpIHtcbiAgICBpZiAodGFnU3RyLnNsaWNlKHBvcywgcG9zICsgMikgPT09IFwiOjpcIikge1xuICAgICAgcmV0dXJuIFtbXCJDT0xPTlwiLCBcIjo6XCJdLCAyXTtcbiAgICB9XG4gICAgYmFpbChcIlVucmVjb2duaXplZCB0b2tlbi5cIik7XG4gIH0gZWxzZSBpZiAoYyA9PT0gXCI8XCIpIHtcbiAgICByZXR1cm4gW1tcIkxUXCIsIFwiPFwiXSwgMV07XG4gIH0gZWxzZSBpZiAoYyA9PT0gXCI+XCIpIHtcbiAgICByZXR1cm4gW1tcIkdUXCIsIFwiPlwiXSwgMV07XG4gIH0gZWxzZSBpZiAoYyA9PT0gXCIsXCIpIHtcbiAgICByZXR1cm4gW1tcIkNPTU1BXCIsIFwiLFwiXSwgMV07XG4gIH0gZWxzZSBpZiAoaXNXaGl0ZVNwYWNlKGMpKSB7XG4gICAgbGV0IHJlcyA9IFwiXCI7XG4gICAgZm9yIChsZXQgaSA9IHBvczsgaSA8IHRhZ1N0ci5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY29uc3QgY2hhciA9IHRhZ1N0cltpXTtcbiAgICAgIGlmIChpc1doaXRlU3BhY2UoY2hhcikpIHtcbiAgICAgICAgcmVzID0gYCR7cmVzfSR7Y2hhcn1gO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBbW1wiU1BBQ0VcIiwgcmVzXSwgcmVzLmxlbmd0aF07XG4gIH0gZWxzZSBpZiAoaXNWYWxpZEFscGhhYmV0aWMoYykpIHtcbiAgICBsZXQgcmVzID0gXCJcIjtcbiAgICBmb3IgKGxldCBpID0gcG9zOyBpIDwgdGFnU3RyLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjb25zdCBjaGFyID0gdGFnU3RyW2ldO1xuICAgICAgaWYgKGlzVmFsaWRBbHBoYWJldGljKGNoYXIpKSB7XG4gICAgICAgIHJlcyA9IGAke3Jlc30ke2NoYXJ9YDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoaXNHZW5lcmljKHJlcykpIHtcbiAgICAgIHJldHVybiBbW1wiR0VORVJJQ1wiLCByZXNdLCByZXMubGVuZ3RoXTtcbiAgICB9XG4gICAgcmV0dXJuIFtbXCJJREVOVFwiLCByZXNdLCByZXMubGVuZ3RoXTtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoXCJVbnJlY29nbml6ZWQgdG9rZW4uXCIpO1xufVxuZnVuY3Rpb24gdG9rZW5pemUodGFnU3RyKSB7XG4gIGxldCBwb3MgPSAwO1xuICBjb25zdCB0b2tlbnMgPSBbXTtcbiAgd2hpbGUgKHBvcyA8IHRhZ1N0ci5sZW5ndGgpIHtcbiAgICBjb25zdCBbdG9rZW4sIHNpemVdID0gbmV4dFRva2VuKHRhZ1N0ciwgcG9zKTtcbiAgICBpZiAodG9rZW5bMF0gIT09IFwiU1BBQ0VcIikge1xuICAgICAgdG9rZW5zLnB1c2godG9rZW4pO1xuICAgIH1cbiAgICBwb3MgKz0gc2l6ZTtcbiAgfVxuICByZXR1cm4gdG9rZW5zO1xufVxudmFyIFR5cGVUYWdQYXJzZXIgPSBjbGFzcyBfVHlwZVRhZ1BhcnNlciB7XG4gIGNvbnN0cnVjdG9yKHRhZ1N0ciwgdHlwZVRhZ3MpIHtcbiAgICB0aGlzLnR5cGVUYWdzID0gW107XG4gICAgdGhpcy50b2tlbnMgPSB0b2tlbml6ZSh0YWdTdHIpO1xuICAgIHRoaXMudHlwZVRhZ3MgPSB0eXBlVGFncyB8fCBbXTtcbiAgfVxuICBjb25zdW1lKHRhcmdldFRva2VuKSB7XG4gICAgY29uc3QgdG9rZW4gPSB0aGlzLnRva2Vucy5zaGlmdCgpO1xuICAgIGlmICghdG9rZW4gfHwgdG9rZW5bMV0gIT09IHRhcmdldFRva2VuKSB7XG4gICAgICBiYWlsKFwiSW52YWxpZCB0eXBlIHRhZy5cIik7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBDb25zdW1lcyBhbGwgb2YgYW4gdW51c2VkIGdlbmVyaWMgZmllbGQsIG1vc3RseSBhcHBsaWNhYmxlIHRvIG9iamVjdFxuICAgKlxuICAgKiBOb3RlOiBUaGlzIGlzIHJlY3Vyc2l2ZS4gIGl0IGNhbiBiZSBwcm9ibGVtYXRpYyBpZiB0aGVyZSdzIGJhZCBpbnB1dFxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgY29uc3VtZVdob2xlR2VuZXJpYygpIHtcbiAgICB0aGlzLmNvbnN1bWUoXCI8XCIpO1xuICAgIHdoaWxlICh0aGlzLnRva2Vuc1swXVsxXSAhPT0gXCI+XCIpIHtcbiAgICAgIGlmICh0aGlzLnRva2Vuc1swXVsxXSA9PT0gXCI8XCIpIHtcbiAgICAgICAgdGhpcy5jb25zdW1lV2hvbGVHZW5lcmljKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRva2Vucy5zaGlmdCgpO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLmNvbnN1bWUoXCI+XCIpO1xuICB9XG4gIHBhcnNlQ29tbWFMaXN0KGVuZFRva2VuLCBhbGxvd1RyYWlsbGluZ0NvbW1hKSB7XG4gICAgY29uc3QgcmVzID0gW107XG4gICAgaWYgKHRoaXMudG9rZW5zLmxlbmd0aCA8PSAwKSB7XG4gICAgICBiYWlsKFwiSW52YWxpZCB0eXBlIHRhZy5cIik7XG4gICAgfVxuICAgIHdoaWxlICh0aGlzLnRva2Vuc1swXVsxXSAhPT0gZW5kVG9rZW4pIHtcbiAgICAgIHJlcy5wdXNoKHRoaXMucGFyc2VUeXBlVGFnKCkpO1xuICAgICAgaWYgKHRoaXMudG9rZW5zLmxlbmd0aCA+IDAgJiYgdGhpcy50b2tlbnNbMF1bMV0gPT09IGVuZFRva2VuKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgdGhpcy5jb25zdW1lKFwiLFwiKTtcbiAgICAgIGlmICh0aGlzLnRva2Vucy5sZW5ndGggPiAwICYmIHRoaXMudG9rZW5zWzBdWzFdID09PSBlbmRUb2tlbiAmJiBhbGxvd1RyYWlsbGluZ0NvbW1hKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMudG9rZW5zLmxlbmd0aCA8PSAwKSB7XG4gICAgICAgIGJhaWwoXCJJbnZhbGlkIHR5cGUgdGFnLlwiKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbiAgfVxuICBwYXJzZVR5cGVUYWcoKSB7XG4gICAgaWYgKHRoaXMudG9rZW5zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgYmFpbChcIkludmFsaWQgdHlwZSB0YWcuXCIpO1xuICAgIH1cbiAgICBjb25zdCBbdG9rZW5UeSwgdG9rZW5WYWxdID0gdGhpcy50b2tlbnMuc2hpZnQoKTtcbiAgICBpZiAodG9rZW5WYWwgPT09IFwidThcIikge1xuICAgICAgcmV0dXJuIG5ldyBUeXBlVGFnVTgoKTtcbiAgICB9XG4gICAgaWYgKHRva2VuVmFsID09PSBcInUxNlwiKSB7XG4gICAgICByZXR1cm4gbmV3IFR5cGVUYWdVMTYoKTtcbiAgICB9XG4gICAgaWYgKHRva2VuVmFsID09PSBcInUzMlwiKSB7XG4gICAgICByZXR1cm4gbmV3IFR5cGVUYWdVMzIoKTtcbiAgICB9XG4gICAgaWYgKHRva2VuVmFsID09PSBcInU2NFwiKSB7XG4gICAgICByZXR1cm4gbmV3IFR5cGVUYWdVNjQoKTtcbiAgICB9XG4gICAgaWYgKHRva2VuVmFsID09PSBcInUxMjhcIikge1xuICAgICAgcmV0dXJuIG5ldyBUeXBlVGFnVTEyOCgpO1xuICAgIH1cbiAgICBpZiAodG9rZW5WYWwgPT09IFwidTI1NlwiKSB7XG4gICAgICByZXR1cm4gbmV3IFR5cGVUYWdVMjU2KCk7XG4gICAgfVxuICAgIGlmICh0b2tlblZhbCA9PT0gXCJib29sXCIpIHtcbiAgICAgIHJldHVybiBuZXcgVHlwZVRhZ0Jvb2woKTtcbiAgICB9XG4gICAgaWYgKHRva2VuVmFsID09PSBcImFkZHJlc3NcIikge1xuICAgICAgcmV0dXJuIG5ldyBUeXBlVGFnQWRkcmVzcygpO1xuICAgIH1cbiAgICBpZiAodG9rZW5WYWwgPT09IFwidmVjdG9yXCIpIHtcbiAgICAgIHRoaXMuY29uc3VtZShcIjxcIik7XG4gICAgICBjb25zdCByZXMgPSB0aGlzLnBhcnNlVHlwZVRhZygpO1xuICAgICAgdGhpcy5jb25zdW1lKFwiPlwiKTtcbiAgICAgIHJldHVybiBuZXcgVHlwZVRhZ1ZlY3RvcihyZXMpO1xuICAgIH1cbiAgICBpZiAodG9rZW5WYWwgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHJldHVybiBuZXcgVHlwZVRhZ1N0cnVjdChzdHJpbmdTdHJ1Y3RUYWcpO1xuICAgIH1cbiAgICBpZiAodG9rZW5UeSA9PT0gXCJJREVOVFwiICYmICh0b2tlblZhbC5zdGFydHNXaXRoKFwiMHhcIikgfHwgdG9rZW5WYWwuc3RhcnRzV2l0aChcIjBYXCIpKSkge1xuICAgICAgY29uc3QgYWRkcmVzcyA9IEFjY291bnRBZGRyZXNzLmZyb21IZXgodG9rZW5WYWwpO1xuICAgICAgdGhpcy5jb25zdW1lKFwiOjpcIik7XG4gICAgICBjb25zdCBbbW9kdWxlVG9rZW5UeSwgbW9kdWxlXSA9IHRoaXMudG9rZW5zLnNoaWZ0KCk7XG4gICAgICBpZiAobW9kdWxlVG9rZW5UeSAhPT0gXCJJREVOVFwiKSB7XG4gICAgICAgIGJhaWwoXCJJbnZhbGlkIHR5cGUgdGFnLlwiKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuY29uc3VtZShcIjo6XCIpO1xuICAgICAgY29uc3QgW25hbWVUb2tlblR5LCBuYW1lXSA9IHRoaXMudG9rZW5zLnNoaWZ0KCk7XG4gICAgICBpZiAobmFtZVRva2VuVHkgIT09IFwiSURFTlRcIikge1xuICAgICAgICBiYWlsKFwiSW52YWxpZCB0eXBlIHRhZy5cIik7XG4gICAgICB9XG4gICAgICBpZiAoQWNjb3VudEFkZHJlc3MuQ09SRV9DT0RFX0FERFJFU1MudG9IZXhTdHJpbmcoKSA9PT0gYWRkcmVzcy50b0hleFN0cmluZygpICYmIG1vZHVsZSA9PT0gXCJvYmplY3RcIiAmJiBuYW1lID09PSBcIk9iamVjdFwiKSB7XG4gICAgICAgIHRoaXMuY29uc3VtZVdob2xlR2VuZXJpYygpO1xuICAgICAgICByZXR1cm4gbmV3IFR5cGVUYWdBZGRyZXNzKCk7XG4gICAgICB9XG4gICAgICBsZXQgdHlUYWdzID0gW107XG4gICAgICBpZiAodGhpcy50b2tlbnMubGVuZ3RoID4gMCAmJiB0aGlzLnRva2Vuc1swXVsxXSA9PT0gXCI8XCIpIHtcbiAgICAgICAgdGhpcy5jb25zdW1lKFwiPFwiKTtcbiAgICAgICAgdHlUYWdzID0gdGhpcy5wYXJzZUNvbW1hTGlzdChcIj5cIiwgdHJ1ZSk7XG4gICAgICAgIHRoaXMuY29uc3VtZShcIj5cIik7XG4gICAgICB9XG4gICAgICBjb25zdCBzdHJ1Y3RUYWcgPSBuZXcgU3RydWN0VGFnKGFkZHJlc3MsIG5ldyBJZGVudGlmaWVyKG1vZHVsZSksIG5ldyBJZGVudGlmaWVyKG5hbWUpLCB0eVRhZ3MpO1xuICAgICAgcmV0dXJuIG5ldyBUeXBlVGFnU3RydWN0KHN0cnVjdFRhZyk7XG4gICAgfVxuICAgIGlmICh0b2tlblR5ID09PSBcIkdFTkVSSUNcIikge1xuICAgICAgaWYgKHRoaXMudHlwZVRhZ3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGJhaWwoXCJDYW4ndCBjb252ZXJ0IGdlbmVyaWMgdHlwZSBzaW5jZSBubyB0eXBlVGFncyB3ZXJlIHNwZWNpZmllZC5cIik7XG4gICAgICB9XG4gICAgICBjb25zdCBpZHggPSBwYXJzZUludCh0b2tlblZhbC5zdWJzdHJpbmcoMSksIDEwKTtcbiAgICAgIHJldHVybiBuZXcgX1R5cGVUYWdQYXJzZXIodGhpcy50eXBlVGFnc1tpZHhdKS5wYXJzZVR5cGVUYWcoKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB0eXBlIHRhZy5cIik7XG4gIH1cbn07XG52YXIgVHlwZVRhZ1BhcnNlckVycm9yID0gY2xhc3MgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSBcIlR5cGVUYWdQYXJzZXJFcnJvclwiO1xuICB9XG59O1xuXG4vLyBzcmMvYXB0b3NfdHlwZXMvdHJhbnNhY3Rpb24udHNcbnZhciBSYXdUcmFuc2FjdGlvbiA9IGNsYXNzIF9SYXdUcmFuc2FjdGlvbiB7XG4gIC8qKlxuICAgKiBSYXdUcmFuc2FjdGlvbnMgY29udGFpbiB0aGUgbWV0YWRhdGEgYW5kIHBheWxvYWRzIHRoYXQgY2FuIGJlIHN1Ym1pdHRlZCB0byBBcHRvcyBjaGFpbiBmb3IgZXhlY3V0aW9uLlxuICAgKiBSYXdUcmFuc2FjdGlvbnMgbXVzdCBiZSBzaWduZWQgYmVmb3JlIEFwdG9zIGNoYWluIGNhbiBleGVjdXRlIHRoZW0uXG4gICAqXG4gICAqIEBwYXJhbSBzZW5kZXIgQWNjb3VudCBhZGRyZXNzIG9mIHRoZSBzZW5kZXIuXG4gICAqIEBwYXJhbSBzZXF1ZW5jZV9udW1iZXIgU2VxdWVuY2UgbnVtYmVyIG9mIHRoaXMgdHJhbnNhY3Rpb24uIFRoaXMgbXVzdCBtYXRjaCB0aGUgc2VxdWVuY2UgbnVtYmVyIHN0b3JlZCBpblxuICAgKiAgIHRoZSBzZW5kZXIncyBhY2NvdW50IGF0IHRoZSB0aW1lIHRoZSB0cmFuc2FjdGlvbiBleGVjdXRlcy5cbiAgICogQHBhcmFtIHBheWxvYWQgSW5zdHJ1Y3Rpb25zIGZvciB0aGUgQXB0b3MgQmxvY2tjaGFpbiwgaW5jbHVkaW5nIHB1Ymxpc2hpbmcgYSBtb2R1bGUsXG4gICAqICAgZXhlY3V0ZSBhIGVudHJ5IGZ1bmN0aW9uIG9yIGV4ZWN1dGUgYSBzY3JpcHQgcGF5bG9hZC5cbiAgICogQHBhcmFtIG1heF9nYXNfYW1vdW50IE1heGltdW0gdG90YWwgZ2FzIHRvIHNwZW5kIGZvciB0aGlzIHRyYW5zYWN0aW9uLiBUaGUgYWNjb3VudCBtdXN0IGhhdmUgbW9yZVxuICAgKiAgIHRoYW4gdGhpcyBnYXMgb3IgdGhlIHRyYW5zYWN0aW9uIHdpbGwgYmUgZGlzY2FyZGVkIGR1cmluZyB2YWxpZGF0aW9uLlxuICAgKiBAcGFyYW0gZ2FzX3VuaXRfcHJpY2UgUHJpY2UgdG8gYmUgcGFpZCBwZXIgZ2FzIHVuaXQuXG4gICAqIEBwYXJhbSBleHBpcmF0aW9uX3RpbWVzdGFtcF9zZWNzIFRoZSBibG9ja2NoYWluIHRpbWVzdGFtcCBhdCB3aGljaCB0aGUgYmxvY2tjaGFpbiB3b3VsZCBkaXNjYXJkIHRoaXMgdHJhbnNhY3Rpb24uXG4gICAqIEBwYXJhbSBjaGFpbl9pZCBUaGUgY2hhaW4gSUQgb2YgdGhlIGJsb2NrY2hhaW4gdGhhdCB0aGlzIHRyYW5zYWN0aW9uIGlzIGludGVuZGVkIHRvIGJlIHJ1biBvbi5cbiAgICovXG4gIGNvbnN0cnVjdG9yKHNlbmRlciwgc2VxdWVuY2VfbnVtYmVyLCBwYXlsb2FkLCBtYXhfZ2FzX2Ftb3VudCwgZ2FzX3VuaXRfcHJpY2UsIGV4cGlyYXRpb25fdGltZXN0YW1wX3NlY3MsIGNoYWluX2lkKSB7XG4gICAgdGhpcy5zZW5kZXIgPSBzZW5kZXI7XG4gICAgdGhpcy5zZXF1ZW5jZV9udW1iZXIgPSBzZXF1ZW5jZV9udW1iZXI7XG4gICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcbiAgICB0aGlzLm1heF9nYXNfYW1vdW50ID0gbWF4X2dhc19hbW91bnQ7XG4gICAgdGhpcy5nYXNfdW5pdF9wcmljZSA9IGdhc191bml0X3ByaWNlO1xuICAgIHRoaXMuZXhwaXJhdGlvbl90aW1lc3RhbXBfc2VjcyA9IGV4cGlyYXRpb25fdGltZXN0YW1wX3NlY3M7XG4gICAgdGhpcy5jaGFpbl9pZCA9IGNoYWluX2lkO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgdGhpcy5zZW5kZXIuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTY0KHRoaXMuc2VxdWVuY2VfbnVtYmVyKTtcbiAgICB0aGlzLnBheWxvYWQuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTY0KHRoaXMubWF4X2dhc19hbW91bnQpO1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTY0KHRoaXMuZ2FzX3VuaXRfcHJpY2UpO1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTY0KHRoaXMuZXhwaXJhdGlvbl90aW1lc3RhbXBfc2Vjcyk7XG4gICAgdGhpcy5jaGFpbl9pZC5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gIH1cbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHNlbmRlciA9IEFjY291bnRBZGRyZXNzLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcik7XG4gICAgY29uc3Qgc2VxdWVuY2VfbnVtYmVyID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVTY0KCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IFRyYW5zYWN0aW9uUGF5bG9hZC5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIGNvbnN0IG1heF9nYXNfYW1vdW50ID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVTY0KCk7XG4gICAgY29uc3QgZ2FzX3VuaXRfcHJpY2UgPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVVNjQoKTtcbiAgICBjb25zdCBleHBpcmF0aW9uX3RpbWVzdGFtcF9zZWNzID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVTY0KCk7XG4gICAgY29uc3QgY2hhaW5faWQgPSBDaGFpbklkLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcik7XG4gICAgcmV0dXJuIG5ldyBfUmF3VHJhbnNhY3Rpb24oXG4gICAgICBzZW5kZXIsXG4gICAgICBzZXF1ZW5jZV9udW1iZXIsXG4gICAgICBwYXlsb2FkLFxuICAgICAgbWF4X2dhc19hbW91bnQsXG4gICAgICBnYXNfdW5pdF9wcmljZSxcbiAgICAgIGV4cGlyYXRpb25fdGltZXN0YW1wX3NlY3MsXG4gICAgICBjaGFpbl9pZFxuICAgICk7XG4gIH1cbn07XG52YXIgU2NyaXB0ID0gY2xhc3MgX1NjcmlwdCB7XG4gIC8qKlxuICAgKiBTY3JpcHRzIGNvbnRhaW4gdGhlIE1vdmUgYnl0ZWNvZGVzIHBheWxvYWQgdGhhdCBjYW4gYmUgc3VibWl0dGVkIHRvIEFwdG9zIGNoYWluIGZvciBleGVjdXRpb24uXG4gICAqIEBwYXJhbSBjb2RlIE1vdmUgYnl0ZWNvZGVcbiAgICogQHBhcmFtIHR5X2FyZ3MgVHlwZSBhcmd1bWVudHMgdGhhdCBieXRlY29kZSByZXF1aXJlcy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogQSBjb2luIHRyYW5zZmVyIGZ1bmN0aW9uIGhhcyBvbmUgdHlwZSBhcmd1bWVudCBcIkNvaW5UeXBlXCIuXG4gICAqIGBgYFxuICAgKiBwdWJsaWMoc2NyaXB0KSBmdW4gdHJhbnNmZXI8Q29pblR5cGU+KGZyb206ICZzaWduZXIsIHRvOiBhZGRyZXNzLCBhbW91bnQ6IHU2NCwpXG4gICAqIGBgYFxuICAgKiBAcGFyYW0gYXJncyBBcnVnbWVudHMgdG8gYnl0ZWNvZGUgZnVuY3Rpb24uXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIEEgY29pbiB0cmFuc2ZlciBmdW5jdGlvbiBoYXMgdGhyZWUgYXJ1Z21lbnRzIFwiZnJvbVwiLCBcInRvXCIgYW5kIFwiYW1vdW50XCIuXG4gICAqIGBgYFxuICAgKiBwdWJsaWMoc2NyaXB0KSBmdW4gdHJhbnNmZXI8Q29pblR5cGU+KGZyb206ICZzaWduZXIsIHRvOiBhZGRyZXNzLCBhbW91bnQ6IHU2NCwpXG4gICAqIGBgYFxuICAgKi9cbiAgY29uc3RydWN0b3IoY29kZSwgdHlfYXJncywgYXJncykge1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgdGhpcy50eV9hcmdzID0gdHlfYXJncztcbiAgICB0aGlzLmFyZ3MgPSBhcmdzO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVCeXRlcyh0aGlzLmNvZGUpO1xuICAgIHNlcmlhbGl6ZVZlY3Rvcih0aGlzLnR5X2FyZ3MsIHNlcmlhbGl6ZXIpO1xuICAgIHNlcmlhbGl6ZVZlY3Rvcih0aGlzLmFyZ3MsIHNlcmlhbGl6ZXIpO1xuICB9XG4gIHN0YXRpYyBkZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpIHtcbiAgICBjb25zdCBjb2RlID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplQnl0ZXMoKTtcbiAgICBjb25zdCB0eV9hcmdzID0gZGVzZXJpYWxpemVWZWN0b3IoZGVzZXJpYWxpemVyLCBUeXBlVGFnKTtcbiAgICBjb25zdCBhcmdzID0gZGVzZXJpYWxpemVWZWN0b3IoZGVzZXJpYWxpemVyLCBUcmFuc2FjdGlvbkFyZ3VtZW50KTtcbiAgICByZXR1cm4gbmV3IF9TY3JpcHQoY29kZSwgdHlfYXJncywgYXJncyk7XG4gIH1cbn07XG52YXIgRW50cnlGdW5jdGlvbiA9IGNsYXNzIF9FbnRyeUZ1bmN0aW9uIHtcbiAgLyoqXG4gICAqIENvbnRhaW5zIHRoZSBwYXlsb2FkIHRvIHJ1biBhIGZ1bmN0aW9uIHdpdGhpbiBhIG1vZHVsZS5cbiAgICogQHBhcmFtIG1vZHVsZV9uYW1lIEZ1bGx5IHF1YWxpZmllZCBtb2R1bGUgbmFtZS4gTW9kdWxlSWQgY29uc2lzdHMgb2YgYWNjb3VudCBhZGRyZXNzIGFuZCBtb2R1bGUgbmFtZS5cbiAgICogQHBhcmFtIGZ1bmN0aW9uX25hbWUgVGhlIGZ1bmN0aW9uIHRvIHJ1bi5cbiAgICogQHBhcmFtIHR5X2FyZ3MgVHlwZSBhcmd1bWVudHMgdGhhdCBtb3ZlIGZ1bmN0aW9uIHJlcXVpcmVzLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBBIGNvaW4gdHJhbnNmZXIgZnVuY3Rpb24gaGFzIG9uZSB0eXBlIGFyZ3VtZW50IFwiQ29pblR5cGVcIi5cbiAgICogYGBgXG4gICAqIHB1YmxpYyhzY3JpcHQpIGZ1biB0cmFuc2ZlcjxDb2luVHlwZT4oZnJvbTogJnNpZ25lciwgdG86IGFkZHJlc3MsIGFtb3VudDogdTY0LClcbiAgICogYGBgXG4gICAqIEBwYXJhbSBhcmdzIEFydWdtZW50cyB0byB0aGUgbW92ZSBmdW5jdGlvbi5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogQSBjb2luIHRyYW5zZmVyIGZ1bmN0aW9uIGhhcyB0aHJlZSBhcnVnbWVudHMgXCJmcm9tXCIsIFwidG9cIiBhbmQgXCJhbW91bnRcIi5cbiAgICogYGBgXG4gICAqIHB1YmxpYyhzY3JpcHQpIGZ1biB0cmFuc2ZlcjxDb2luVHlwZT4oZnJvbTogJnNpZ25lciwgdG86IGFkZHJlc3MsIGFtb3VudDogdTY0LClcbiAgICogYGBgXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihtb2R1bGVfbmFtZSwgZnVuY3Rpb25fbmFtZSwgdHlfYXJncywgYXJncykge1xuICAgIHRoaXMubW9kdWxlX25hbWUgPSBtb2R1bGVfbmFtZTtcbiAgICB0aGlzLmZ1bmN0aW9uX25hbWUgPSBmdW5jdGlvbl9uYW1lO1xuICAgIHRoaXMudHlfYXJncyA9IHR5X2FyZ3M7XG4gICAgdGhpcy5hcmdzID0gYXJncztcbiAgfVxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIG1vZHVsZSBGdWxseSBxdWFsaWZpZWQgbW9kdWxlIG5hbWUgaW4gZm9ybWF0IFwiQWNjb3VudEFkZHJlc3M6Om1vZHVsZV9uYW1lXCIgZS5nLiBcIjB4MTo6Y29pblwiXG4gICAqIEBwYXJhbSBmdW5jIEZ1bmN0aW9uIG5hbWVcbiAgICogQHBhcmFtIHR5X2FyZ3MgVHlwZSBhcmd1bWVudHMgdGhhdCBtb3ZlIGZ1bmN0aW9uIHJlcXVpcmVzLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBBIGNvaW4gdHJhbnNmZXIgZnVuY3Rpb24gaGFzIG9uZSB0eXBlIGFyZ3VtZW50IFwiQ29pblR5cGVcIi5cbiAgICogYGBgXG4gICAqIHB1YmxpYyhzY3JpcHQpIGZ1biB0cmFuc2ZlcjxDb2luVHlwZT4oZnJvbTogJnNpZ25lciwgdG86IGFkZHJlc3MsIGFtb3VudDogdTY0LClcbiAgICogYGBgXG4gICAqIEBwYXJhbSBhcmdzIEFydWdtZW50cyB0byB0aGUgbW92ZSBmdW5jdGlvbi5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogQSBjb2luIHRyYW5zZmVyIGZ1bmN0aW9uIGhhcyB0aHJlZSBhcnVnbWVudHMgXCJmcm9tXCIsIFwidG9cIiBhbmQgXCJhbW91bnRcIi5cbiAgICogYGBgXG4gICAqIHB1YmxpYyhzY3JpcHQpIGZ1biB0cmFuc2ZlcjxDb2luVHlwZT4oZnJvbTogJnNpZ25lciwgdG86IGFkZHJlc3MsIGFtb3VudDogdTY0LClcbiAgICogYGBgXG4gICAqIEByZXR1cm5zXG4gICAqL1xuICBzdGF0aWMgbmF0dXJhbChtb2R1bGUsIGZ1bmMsIHR5X2FyZ3MsIGFyZ3MpIHtcbiAgICByZXR1cm4gbmV3IF9FbnRyeUZ1bmN0aW9uKE1vZHVsZUlkLmZyb21TdHIobW9kdWxlKSwgbmV3IElkZW50aWZpZXIoZnVuYyksIHR5X2FyZ3MsIGFyZ3MpO1xuICB9XG4gIC8qKlxuICAgKiBgbmF0dWFsYCBpcyBkZXByZWNhdGVkLCBwbGVhc2UgdXNlIGBuYXR1cmFsYFxuICAgKlxuICAgKiBAZGVwcmVjYXRlZC5cbiAgICovXG4gIHN0YXRpYyBuYXR1YWwobW9kdWxlLCBmdW5jLCB0eV9hcmdzLCBhcmdzKSB7XG4gICAgcmV0dXJuIF9FbnRyeUZ1bmN0aW9uLm5hdHVyYWwobW9kdWxlLCBmdW5jLCB0eV9hcmdzLCBhcmdzKTtcbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHRoaXMubW9kdWxlX25hbWUuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICAgIHRoaXMuZnVuY3Rpb25fbmFtZS5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gICAgc2VyaWFsaXplVmVjdG9yKHRoaXMudHlfYXJncywgc2VyaWFsaXplcik7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgodGhpcy5hcmdzLmxlbmd0aCk7XG4gICAgdGhpcy5hcmdzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplQnl0ZXMoaXRlbSk7XG4gICAgfSk7XG4gIH1cbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IG1vZHVsZV9uYW1lID0gTW9kdWxlSWQuZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKTtcbiAgICBjb25zdCBmdW5jdGlvbl9uYW1lID0gSWRlbnRpZmllci5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIGNvbnN0IHR5X2FyZ3MgPSBkZXNlcmlhbGl6ZVZlY3RvcihkZXNlcmlhbGl6ZXIsIFR5cGVUYWcpO1xuICAgIGNvbnN0IGxlbmd0aCA9IGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVVsZWIxMjhBc1UzMigpO1xuICAgIGNvbnN0IGxpc3QgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBsaXN0LnB1c2goZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplQnl0ZXMoKSk7XG4gICAgfVxuICAgIGNvbnN0IGFyZ3MgPSBsaXN0O1xuICAgIHJldHVybiBuZXcgX0VudHJ5RnVuY3Rpb24obW9kdWxlX25hbWUsIGZ1bmN0aW9uX25hbWUsIHR5X2FyZ3MsIGFyZ3MpO1xuICB9XG59O1xudmFyIE11bHRpU2lnVHJhbnNhY3Rpb25QYXlsb2FkID0gY2xhc3MgX011bHRpU2lnVHJhbnNhY3Rpb25QYXlsb2FkIHtcbiAgLyoqXG4gICAqIENvbnRhaW5zIHRoZSBwYXlsb2FkIHRvIHJ1biBhIG11bHRpc2lnIGFjY291bnQgdHJhbnNhY3Rpb24uXG4gICAqIEBwYXJhbSB0cmFuc2FjdGlvbl9wYXlsb2FkIFRoZSBwYXlsb2FkIG9mIHRoZSBtdWx0aXNpZyB0cmFuc2FjdGlvbi4gVGhpcyBjYW4gb25seSBiZSBFbnRyeUZ1bmN0aW9uIGZvciBub3cgYnV0XG4gICAqIFNjcmlwdCBtaWdodCBiZSBzdXBwb3J0ZWQgaW4gdGhlIGZ1dHVyZS5cbiAgICovXG4gIGNvbnN0cnVjdG9yKHRyYW5zYWN0aW9uX3BheWxvYWQpIHtcbiAgICB0aGlzLnRyYW5zYWN0aW9uX3BheWxvYWQgPSB0cmFuc2FjdGlvbl9wYXlsb2FkO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMCk7XG4gICAgdGhpcy50cmFuc2FjdGlvbl9wYXlsb2FkLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgfVxuICBzdGF0aWMgZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKSB7XG4gICAgZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVWxlYjEyOEFzVTMyKCk7XG4gICAgcmV0dXJuIG5ldyBfTXVsdGlTaWdUcmFuc2FjdGlvblBheWxvYWQoRW50cnlGdW5jdGlvbi5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpKTtcbiAgfVxufTtcbnZhciBNdWx0aVNpZyA9IGNsYXNzIF9NdWx0aVNpZyB7XG4gIC8qKlxuICAgKiBDb250YWlucyB0aGUgcGF5bG9hZCB0byBydW4gYSBtdWx0aXNpZyBhY2NvdW50IHRyYW5zYWN0aW9uLlxuICAgKiBAcGFyYW0gbXVsdGlzaWdfYWRkcmVzcyBUaGUgbXVsdGlzaWcgYWNjb3VudCBhZGRyZXNzIHRoZSB0cmFuc2FjdGlvbiB3aWxsIGJlIGV4ZWN1dGVkIGFzLlxuICAgKiBAcGFyYW0gdHJhbnNhY3Rpb25fcGF5bG9hZCBUaGUgcGF5bG9hZCBvZiB0aGUgbXVsdGlzaWcgdHJhbnNhY3Rpb24uIFRoaXMgaXMgb3B0aW9uYWwgd2hlbiBleGVjdXRpbmcgYSBtdWx0aXNpZ1xuICAgKiAgdHJhbnNhY3Rpb24gd2hvc2UgcGF5bG9hZCBpcyBhbHJlYWR5IHN0b3JlZCBvbiBjaGFpbi5cbiAgICovXG4gIGNvbnN0cnVjdG9yKG11bHRpc2lnX2FkZHJlc3MsIHRyYW5zYWN0aW9uX3BheWxvYWQpIHtcbiAgICB0aGlzLm11bHRpc2lnX2FkZHJlc3MgPSBtdWx0aXNpZ19hZGRyZXNzO1xuICAgIHRoaXMudHJhbnNhY3Rpb25fcGF5bG9hZCA9IHRyYW5zYWN0aW9uX3BheWxvYWQ7XG4gIH1cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICB0aGlzLm11bHRpc2lnX2FkZHJlc3Muc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICAgIGlmICh0aGlzLnRyYW5zYWN0aW9uX3BheWxvYWQgPT09IHZvaWQgMCkge1xuICAgICAgc2VyaWFsaXplci5zZXJpYWxpemVCb29sKGZhbHNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2VyaWFsaXplci5zZXJpYWxpemVCb29sKHRydWUpO1xuICAgICAgdGhpcy50cmFuc2FjdGlvbl9wYXlsb2FkLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgICB9XG4gIH1cbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IG11bHRpc2lnX2FkZHJlc3MgPSBBY2NvdW50QWRkcmVzcy5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIGNvbnN0IHBheWxvYWRQcmVzZW50ID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplQm9vbCgpO1xuICAgIGxldCB0cmFuc2FjdGlvbl9wYXlsb2FkO1xuICAgIGlmIChwYXlsb2FkUHJlc2VudCkge1xuICAgICAgdHJhbnNhY3Rpb25fcGF5bG9hZCA9IE11bHRpU2lnVHJhbnNhY3Rpb25QYXlsb2FkLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcik7XG4gICAgfVxuICAgIHJldHVybiBuZXcgX011bHRpU2lnKG11bHRpc2lnX2FkZHJlc3MsIHRyYW5zYWN0aW9uX3BheWxvYWQpO1xuICB9XG59O1xudmFyIE1vZHVsZSA9IGNsYXNzIF9Nb2R1bGUge1xuICAvKipcbiAgICogQ29udGFpbnMgdGhlIGJ5dGVjb2RlIG9mIGEgTW92ZSBtb2R1bGUgdGhhdCBjYW4gYmUgcHVibGlzaGVkIHRvIHRoZSBBcHRvcyBjaGFpbi5cbiAgICogQHBhcmFtIGNvZGUgTW92ZSBieXRlY29kZSBvZiBhIG1vZHVsZS5cbiAgICovXG4gIGNvbnN0cnVjdG9yKGNvZGUpIHtcbiAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVCeXRlcyh0aGlzLmNvZGUpO1xuICB9XG4gIHN0YXRpYyBkZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpIHtcbiAgICBjb25zdCBjb2RlID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplQnl0ZXMoKTtcbiAgICByZXR1cm4gbmV3IF9Nb2R1bGUoY29kZSk7XG4gIH1cbn07XG52YXIgTW9kdWxlSWQgPSBjbGFzcyBfTW9kdWxlSWQge1xuICAvKipcbiAgICogRnVsbCBuYW1lIG9mIGEgbW9kdWxlLlxuICAgKiBAcGFyYW0gYWRkcmVzcyBUaGUgYWNjb3VudCBhZGRyZXNzLlxuICAgKiBAcGFyYW0gbmFtZSBUaGUgbmFtZSBvZiB0aGUgbW9kdWxlIHVuZGVyIHRoZSBhY2NvdW50IGF0IFwiYWRkcmVzc1wiLlxuICAgKi9cbiAgY29uc3RydWN0b3IoYWRkcmVzcywgbmFtZSkge1xuICAgIHRoaXMuYWRkcmVzcyA9IGFkZHJlc3M7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgfVxuICAvKipcbiAgICogQ29udmVydHMgYSBzdHJpbmcgbGl0ZXJhbCB0byBhIE1vZHVsZUlkXG4gICAqIEBwYXJhbSBtb2R1bGVJZCBTdHJpbmcgbGl0ZXJhbCBpbiBmb3JtYXQgXCJBY2NvdW50QWRkcmVzczo6bW9kdWxlX25hbWVcIiwgZS5nLiBcIjB4MTo6Y29pblwiXG4gICAqIEByZXR1cm5zXG4gICAqL1xuICBzdGF0aWMgZnJvbVN0cihtb2R1bGVJZCkge1xuICAgIGNvbnN0IHBhcnRzID0gbW9kdWxlSWQuc3BsaXQoXCI6OlwiKTtcbiAgICBpZiAocGFydHMubGVuZ3RoICE9PSAyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIG1vZHVsZSBpZC5cIik7XG4gICAgfVxuICAgIHJldHVybiBuZXcgX01vZHVsZUlkKEFjY291bnRBZGRyZXNzLmZyb21IZXgobmV3IEhleFN0cmluZyhwYXJ0c1swXSkpLCBuZXcgSWRlbnRpZmllcihwYXJ0c1sxXSkpO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgdGhpcy5hZGRyZXNzLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgICB0aGlzLm5hbWUuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICB9XG4gIHN0YXRpYyBkZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpIHtcbiAgICBjb25zdCBhZGRyZXNzID0gQWNjb3VudEFkZHJlc3MuZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKTtcbiAgICBjb25zdCBuYW1lID0gSWRlbnRpZmllci5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIHJldHVybiBuZXcgX01vZHVsZUlkKGFkZHJlc3MsIG5hbWUpO1xuICB9XG59O1xudmFyIENoYW5nZVNldCA9IGNsYXNzIHtcbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQuXCIpO1xuICB9XG4gIHN0YXRpYyBkZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQuXCIpO1xuICB9XG59O1xudmFyIFdyaXRlU2V0ID0gY2xhc3Mge1xuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsbWVudGVkLlwiKTtcbiAgfVxuICBzdGF0aWMgZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxtZW50ZWQuXCIpO1xuICB9XG59O1xudmFyIFNpZ25lZFRyYW5zYWN0aW9uID0gY2xhc3MgX1NpZ25lZFRyYW5zYWN0aW9uIHtcbiAgLyoqXG4gICAqIEEgU2lnbmVkVHJhbnNhY3Rpb24gY29uc2lzdHMgb2YgYSByYXcgdHJhbnNhY3Rpb24gYW5kIGFuIGF1dGhlbnRpY2F0b3IuIFRoZSBhdXRoZW50aWNhdG9yXG4gICAqIGNvbnRhaW5zIGEgY2xpZW50J3MgcHVibGljIGtleSBhbmQgdGhlIHNpZ25hdHVyZSBvZiB0aGUgcmF3IHRyYW5zYWN0aW9uLlxuICAgKlxuICAgKiBAc2VlIHtAbGluayBodHRwczovL2FwdG9zLmRldi9ndWlkZXMvY3JlYXRpbmctYS1zaWduZWQtdHJhbnNhY3Rpb24vIHwgQ3JlYXRpbmcgYSBTaWduZWQgVHJhbnNhY3Rpb259XG4gICAqXG4gICAqIEBwYXJhbSByYXdfdHhuXG4gICAqIEBwYXJhbSBhdXRoZW50aWNhdG9yIENvbnRhaW5zIGEgY2xpZW50J3MgcHVibGljIGtleSBhbmQgdGhlIHNpZ25hdHVyZSBvZiB0aGUgcmF3IHRyYW5zYWN0aW9uLlxuICAgKiAgIEF1dGhlbnRpY2F0b3IgaGFzIDMgZmxhdm9yczogc2luZ2xlIHNpZ25hdHVyZSwgbXVsdGktc2lnbmF0dXJlIGFuZCBtdWx0aS1hZ2VudC5cbiAgICogICBAc2VlIGF1dGhlbnRpY2F0b3IudHMgZm9yIGRldGFpbHMuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihyYXdfdHhuLCBhdXRoZW50aWNhdG9yKSB7XG4gICAgdGhpcy5yYXdfdHhuID0gcmF3X3R4bjtcbiAgICB0aGlzLmF1dGhlbnRpY2F0b3IgPSBhdXRoZW50aWNhdG9yO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgdGhpcy5yYXdfdHhuLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgICB0aGlzLmF1dGhlbnRpY2F0b3Iuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICB9XG4gIHN0YXRpYyBkZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpIHtcbiAgICBjb25zdCByYXdfdHhuID0gUmF3VHJhbnNhY3Rpb24uZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKTtcbiAgICBjb25zdCBhdXRoZW50aWNhdG9yID0gVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcik7XG4gICAgcmV0dXJuIG5ldyBfU2lnbmVkVHJhbnNhY3Rpb24ocmF3X3R4biwgYXV0aGVudGljYXRvcik7XG4gIH1cbn07XG52YXIgUmF3VHJhbnNhY3Rpb25XaXRoRGF0YSA9IGNsYXNzIHtcbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IGluZGV4ID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVWxlYjEyOEFzVTMyKCk7XG4gICAgc3dpdGNoIChpbmRleCkge1xuICAgICAgY2FzZSAwOlxuICAgICAgICByZXR1cm4gTXVsdGlBZ2VudFJhd1RyYW5zYWN0aW9uLmxvYWQoZGVzZXJpYWxpemVyKTtcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgcmV0dXJuIEZlZVBheWVyUmF3VHJhbnNhY3Rpb24ubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHZhcmlhbnQgaW5kZXggZm9yIFJhd1RyYW5zYWN0aW9uV2l0aERhdGE6ICR7aW5kZXh9YCk7XG4gICAgfVxuICB9XG59O1xudmFyIE11bHRpQWdlbnRSYXdUcmFuc2FjdGlvbiA9IGNsYXNzIF9NdWx0aUFnZW50UmF3VHJhbnNhY3Rpb24gZXh0ZW5kcyBSYXdUcmFuc2FjdGlvbldpdGhEYXRhIHtcbiAgY29uc3RydWN0b3IocmF3X3R4biwgc2Vjb25kYXJ5X3NpZ25lcl9hZGRyZXNzZXMpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMucmF3X3R4biA9IHJhd190eG47XG4gICAgdGhpcy5zZWNvbmRhcnlfc2lnbmVyX2FkZHJlc3NlcyA9IHNlY29uZGFyeV9zaWduZXJfYWRkcmVzc2VzO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMCk7XG4gICAgdGhpcy5yYXdfdHhuLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgICBzZXJpYWxpemVWZWN0b3IodGhpcy5zZWNvbmRhcnlfc2lnbmVyX2FkZHJlc3Nlcywgc2VyaWFsaXplcik7XG4gIH1cbiAgc3RhdGljIGxvYWQoZGVzZXJpYWxpemVyKSB7XG4gICAgY29uc3QgcmF3VHhuID0gUmF3VHJhbnNhY3Rpb24uZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKTtcbiAgICBjb25zdCBzZWNvbmRhcnlTaWduZXJBZGRyZXNzZXMgPSBkZXNlcmlhbGl6ZVZlY3RvcihkZXNlcmlhbGl6ZXIsIEFjY291bnRBZGRyZXNzKTtcbiAgICByZXR1cm4gbmV3IF9NdWx0aUFnZW50UmF3VHJhbnNhY3Rpb24ocmF3VHhuLCBzZWNvbmRhcnlTaWduZXJBZGRyZXNzZXMpO1xuICB9XG59O1xudmFyIEZlZVBheWVyUmF3VHJhbnNhY3Rpb24gPSBjbGFzcyBfRmVlUGF5ZXJSYXdUcmFuc2FjdGlvbiBleHRlbmRzIFJhd1RyYW5zYWN0aW9uV2l0aERhdGEge1xuICBjb25zdHJ1Y3RvcihyYXdfdHhuLCBzZWNvbmRhcnlfc2lnbmVyX2FkZHJlc3NlcywgZmVlX3BheWVyX2FkZHJlc3MpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMucmF3X3R4biA9IHJhd190eG47XG4gICAgdGhpcy5zZWNvbmRhcnlfc2lnbmVyX2FkZHJlc3NlcyA9IHNlY29uZGFyeV9zaWduZXJfYWRkcmVzc2VzO1xuICAgIHRoaXMuZmVlX3BheWVyX2FkZHJlc3MgPSBmZWVfcGF5ZXJfYWRkcmVzcztcbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KDEpO1xuICAgIHRoaXMucmF3X3R4bi5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gICAgc2VyaWFsaXplVmVjdG9yKHRoaXMuc2Vjb25kYXJ5X3NpZ25lcl9hZGRyZXNzZXMsIHNlcmlhbGl6ZXIpO1xuICAgIHRoaXMuZmVlX3BheWVyX2FkZHJlc3Muc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHJhd1R4biA9IFJhd1RyYW5zYWN0aW9uLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcik7XG4gICAgY29uc3Qgc2Vjb25kYXJ5U2lnbmVyQWRkcmVzc2VzID0gZGVzZXJpYWxpemVWZWN0b3IoZGVzZXJpYWxpemVyLCBBY2NvdW50QWRkcmVzcyk7XG4gICAgY29uc3QgZmVlUGF5ZXJBZGRyZXNzID0gQWNjb3VudEFkZHJlc3MuZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKTtcbiAgICByZXR1cm4gbmV3IF9GZWVQYXllclJhd1RyYW5zYWN0aW9uKHJhd1R4biwgc2Vjb25kYXJ5U2lnbmVyQWRkcmVzc2VzLCBmZWVQYXllckFkZHJlc3MpO1xuICB9XG59O1xudmFyIFRyYW5zYWN0aW9uUGF5bG9hZCA9IGNsYXNzIHtcbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IGluZGV4ID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVWxlYjEyOEFzVTMyKCk7XG4gICAgc3dpdGNoIChpbmRleCkge1xuICAgICAgY2FzZSAwOlxuICAgICAgICByZXR1cm4gVHJhbnNhY3Rpb25QYXlsb2FkU2NyaXB0LmxvYWQoZGVzZXJpYWxpemVyKTtcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgcmV0dXJuIFRyYW5zYWN0aW9uUGF5bG9hZEVudHJ5RnVuY3Rpb24ubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSAzOlxuICAgICAgICByZXR1cm4gVHJhbnNhY3Rpb25QYXlsb2FkTXVsdGlzaWcubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHZhcmlhbnQgaW5kZXggZm9yIFRyYW5zYWN0aW9uUGF5bG9hZDogJHtpbmRleH1gKTtcbiAgICB9XG4gIH1cbn07XG52YXIgVHJhbnNhY3Rpb25QYXlsb2FkU2NyaXB0ID0gY2xhc3MgX1RyYW5zYWN0aW9uUGF5bG9hZFNjcmlwdCBleHRlbmRzIFRyYW5zYWN0aW9uUGF5bG9hZCB7XG4gIGNvbnN0cnVjdG9yKHZhbHVlKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIH1cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCgwKTtcbiAgICB0aGlzLnZhbHVlLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgfVxuICBzdGF0aWMgbG9hZChkZXNlcmlhbGl6ZXIpIHtcbiAgICBjb25zdCB2YWx1ZSA9IFNjcmlwdC5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIHJldHVybiBuZXcgX1RyYW5zYWN0aW9uUGF5bG9hZFNjcmlwdCh2YWx1ZSk7XG4gIH1cbn07XG52YXIgVHJhbnNhY3Rpb25QYXlsb2FkRW50cnlGdW5jdGlvbiA9IGNsYXNzIF9UcmFuc2FjdGlvblBheWxvYWRFbnRyeUZ1bmN0aW9uIGV4dGVuZHMgVHJhbnNhY3Rpb25QYXlsb2FkIHtcbiAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KDIpO1xuICAgIHRoaXMudmFsdWUuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHZhbHVlID0gRW50cnlGdW5jdGlvbi5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIHJldHVybiBuZXcgX1RyYW5zYWN0aW9uUGF5bG9hZEVudHJ5RnVuY3Rpb24odmFsdWUpO1xuICB9XG59O1xudmFyIFRyYW5zYWN0aW9uUGF5bG9hZE11bHRpc2lnID0gY2xhc3MgX1RyYW5zYWN0aW9uUGF5bG9hZE11bHRpc2lnIGV4dGVuZHMgVHJhbnNhY3Rpb25QYXlsb2FkIHtcbiAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KDMpO1xuICAgIHRoaXMudmFsdWUuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHZhbHVlID0gTXVsdGlTaWcuZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyKTtcbiAgICByZXR1cm4gbmV3IF9UcmFuc2FjdGlvblBheWxvYWRNdWx0aXNpZyh2YWx1ZSk7XG4gIH1cbn07XG52YXIgQ2hhaW5JZCA9IGNsYXNzIF9DaGFpbklkIHtcbiAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIH1cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVU4KHRoaXMudmFsdWUpO1xuICB9XG4gIHN0YXRpYyBkZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpIHtcbiAgICBjb25zdCB2YWx1ZSA9IGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVU4KCk7XG4gICAgcmV0dXJuIG5ldyBfQ2hhaW5JZCh2YWx1ZSk7XG4gIH1cbn07XG52YXIgVHJhbnNhY3Rpb25Bcmd1bWVudCA9IGNsYXNzIHtcbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IGluZGV4ID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVWxlYjEyOEFzVTMyKCk7XG4gICAgc3dpdGNoIChpbmRleCkge1xuICAgICAgY2FzZSAwOlxuICAgICAgICByZXR1cm4gVHJhbnNhY3Rpb25Bcmd1bWVudFU4LmxvYWQoZGVzZXJpYWxpemVyKTtcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgcmV0dXJuIFRyYW5zYWN0aW9uQXJndW1lbnRVNjQubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSAyOlxuICAgICAgICByZXR1cm4gVHJhbnNhY3Rpb25Bcmd1bWVudFUxMjgubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSAzOlxuICAgICAgICByZXR1cm4gVHJhbnNhY3Rpb25Bcmd1bWVudEFkZHJlc3MubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSA0OlxuICAgICAgICByZXR1cm4gVHJhbnNhY3Rpb25Bcmd1bWVudFU4VmVjdG9yLmxvYWQoZGVzZXJpYWxpemVyKTtcbiAgICAgIGNhc2UgNTpcbiAgICAgICAgcmV0dXJuIFRyYW5zYWN0aW9uQXJndW1lbnRCb29sLmxvYWQoZGVzZXJpYWxpemVyKTtcbiAgICAgIGNhc2UgNjpcbiAgICAgICAgcmV0dXJuIFRyYW5zYWN0aW9uQXJndW1lbnRVMTYubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSA3OlxuICAgICAgICByZXR1cm4gVHJhbnNhY3Rpb25Bcmd1bWVudFUzMi5sb2FkKGRlc2VyaWFsaXplcik7XG4gICAgICBjYXNlIDg6XG4gICAgICAgIHJldHVybiBUcmFuc2FjdGlvbkFyZ3VtZW50VTI1Ni5sb2FkKGRlc2VyaWFsaXplcik7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gdmFyaWFudCBpbmRleCBmb3IgVHJhbnNhY3Rpb25Bcmd1bWVudDogJHtpbmRleH1gKTtcbiAgICB9XG4gIH1cbn07XG52YXIgVHJhbnNhY3Rpb25Bcmd1bWVudFU4ID0gY2xhc3MgX1RyYW5zYWN0aW9uQXJndW1lbnRVOCBleHRlbmRzIFRyYW5zYWN0aW9uQXJndW1lbnQge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMCk7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVOCh0aGlzLnZhbHVlKTtcbiAgfVxuICBzdGF0aWMgbG9hZChkZXNlcmlhbGl6ZXIpIHtcbiAgICBjb25zdCB2YWx1ZSA9IGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVU4KCk7XG4gICAgcmV0dXJuIG5ldyBfVHJhbnNhY3Rpb25Bcmd1bWVudFU4KHZhbHVlKTtcbiAgfVxufTtcbnZhciBUcmFuc2FjdGlvbkFyZ3VtZW50VTE2ID0gY2xhc3MgX1RyYW5zYWN0aW9uQXJndW1lbnRVMTYgZXh0ZW5kcyBUcmFuc2FjdGlvbkFyZ3VtZW50IHtcbiAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KDYpO1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTE2KHRoaXMudmFsdWUpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHZhbHVlID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVTE2KCk7XG4gICAgcmV0dXJuIG5ldyBfVHJhbnNhY3Rpb25Bcmd1bWVudFUxNih2YWx1ZSk7XG4gIH1cbn07XG52YXIgVHJhbnNhY3Rpb25Bcmd1bWVudFUzMiA9IGNsYXNzIF9UcmFuc2FjdGlvbkFyZ3VtZW50VTMyIGV4dGVuZHMgVHJhbnNhY3Rpb25Bcmd1bWVudCB7XG4gIGNvbnN0cnVjdG9yKHZhbHVlKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIH1cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCg3KTtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMih0aGlzLnZhbHVlKTtcbiAgfVxuICBzdGF0aWMgbG9hZChkZXNlcmlhbGl6ZXIpIHtcbiAgICBjb25zdCB2YWx1ZSA9IGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVUzMigpO1xuICAgIHJldHVybiBuZXcgX1RyYW5zYWN0aW9uQXJndW1lbnRVMzIodmFsdWUpO1xuICB9XG59O1xudmFyIFRyYW5zYWN0aW9uQXJndW1lbnRVNjQgPSBjbGFzcyBfVHJhbnNhY3Rpb25Bcmd1bWVudFU2NCBleHRlbmRzIFRyYW5zYWN0aW9uQXJndW1lbnQge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMSk7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVNjQodGhpcy52YWx1ZSk7XG4gIH1cbiAgc3RhdGljIGxvYWQoZGVzZXJpYWxpemVyKSB7XG4gICAgY29uc3QgdmFsdWUgPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVVNjQoKTtcbiAgICByZXR1cm4gbmV3IF9UcmFuc2FjdGlvbkFyZ3VtZW50VTY0KHZhbHVlKTtcbiAgfVxufTtcbnZhciBUcmFuc2FjdGlvbkFyZ3VtZW50VTEyOCA9IGNsYXNzIF9UcmFuc2FjdGlvbkFyZ3VtZW50VTEyOCBleHRlbmRzIFRyYW5zYWN0aW9uQXJndW1lbnQge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMik7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMTI4KHRoaXMudmFsdWUpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHZhbHVlID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVTEyOCgpO1xuICAgIHJldHVybiBuZXcgX1RyYW5zYWN0aW9uQXJndW1lbnRVMTI4KHZhbHVlKTtcbiAgfVxufTtcbnZhciBUcmFuc2FjdGlvbkFyZ3VtZW50VTI1NiA9IGNsYXNzIF9UcmFuc2FjdGlvbkFyZ3VtZW50VTI1NiBleHRlbmRzIFRyYW5zYWN0aW9uQXJndW1lbnQge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoOCk7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMjU2KHRoaXMudmFsdWUpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHZhbHVlID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVTI1NigpO1xuICAgIHJldHVybiBuZXcgX1RyYW5zYWN0aW9uQXJndW1lbnRVMjU2KHZhbHVlKTtcbiAgfVxufTtcbnZhciBUcmFuc2FjdGlvbkFyZ3VtZW50QWRkcmVzcyA9IGNsYXNzIF9UcmFuc2FjdGlvbkFyZ3VtZW50QWRkcmVzcyBleHRlbmRzIFRyYW5zYWN0aW9uQXJndW1lbnQge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMyk7XG4gICAgdGhpcy52YWx1ZS5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gIH1cbiAgc3RhdGljIGxvYWQoZGVzZXJpYWxpemVyKSB7XG4gICAgY29uc3QgdmFsdWUgPSBBY2NvdW50QWRkcmVzcy5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIHJldHVybiBuZXcgX1RyYW5zYWN0aW9uQXJndW1lbnRBZGRyZXNzKHZhbHVlKTtcbiAgfVxufTtcbnZhciBUcmFuc2FjdGlvbkFyZ3VtZW50VThWZWN0b3IgPSBjbGFzcyBfVHJhbnNhY3Rpb25Bcmd1bWVudFU4VmVjdG9yIGV4dGVuZHMgVHJhbnNhY3Rpb25Bcmd1bWVudCB7XG4gIGNvbnN0cnVjdG9yKHZhbHVlKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIH1cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCg0KTtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZUJ5dGVzKHRoaXMudmFsdWUpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IHZhbHVlID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplQnl0ZXMoKTtcbiAgICByZXR1cm4gbmV3IF9UcmFuc2FjdGlvbkFyZ3VtZW50VThWZWN0b3IodmFsdWUpO1xuICB9XG59O1xudmFyIFRyYW5zYWN0aW9uQXJndW1lbnRCb29sID0gY2xhc3MgX1RyYW5zYWN0aW9uQXJndW1lbnRCb29sIGV4dGVuZHMgVHJhbnNhY3Rpb25Bcmd1bWVudCB7XG4gIGNvbnN0cnVjdG9yKHZhbHVlKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIH1cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCg1KTtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZUJvb2wodGhpcy52YWx1ZSk7XG4gIH1cbiAgc3RhdGljIGxvYWQoZGVzZXJpYWxpemVyKSB7XG4gICAgY29uc3QgdmFsdWUgPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVCb29sKCk7XG4gICAgcmV0dXJuIG5ldyBfVHJhbnNhY3Rpb25Bcmd1bWVudEJvb2wodmFsdWUpO1xuICB9XG59O1xudmFyIFRyYW5zYWN0aW9uID0gY2xhc3Mge1xuICBnZXRIYXNoU2FsdCgpIHtcbiAgICBjb25zdCBoYXNoID0gc2hhM0hhc2guY3JlYXRlKCk7XG4gICAgaGFzaC51cGRhdGUoXCJBUFRPUzo6VHJhbnNhY3Rpb25cIik7XG4gICAgcmV0dXJuIGhhc2guZGlnZXN0KCk7XG4gIH1cbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IGluZGV4ID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVWxlYjEyOEFzVTMyKCk7XG4gICAgc3dpdGNoIChpbmRleCkge1xuICAgICAgY2FzZSAwOlxuICAgICAgICByZXR1cm4gVXNlclRyYW5zYWN0aW9uLmxvYWQoZGVzZXJpYWxpemVyKTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biB2YXJpYW50IGluZGV4IGZvciBUcmFuc2FjdGlvbjogJHtpbmRleH1gKTtcbiAgICB9XG4gIH1cbn07XG52YXIgVXNlclRyYW5zYWN0aW9uID0gY2xhc3MgX1VzZXJUcmFuc2FjdGlvbiBleHRlbmRzIFRyYW5zYWN0aW9uIHtcbiAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgfVxuICBoYXNoKCkge1xuICAgIGNvbnN0IGhhc2ggPSBzaGEzSGFzaC5jcmVhdGUoKTtcbiAgICBoYXNoLnVwZGF0ZSh0aGlzLmdldEhhc2hTYWx0KCkpO1xuICAgIGhhc2gudXBkYXRlKGJjc1RvQnl0ZXModGhpcykpO1xuICAgIHJldHVybiBoYXNoLmRpZ2VzdCgpO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMCk7XG4gICAgdGhpcy52YWx1ZS5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gIH1cbiAgc3RhdGljIGxvYWQoZGVzZXJpYWxpemVyKSB7XG4gICAgcmV0dXJuIG5ldyBfVXNlclRyYW5zYWN0aW9uKFNpZ25lZFRyYW5zYWN0aW9uLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikpO1xuICB9XG59O1xuXG4vLyBzcmMvYXB0b3NfdHlwZXMvYWJpLnRzXG52YXIgVHlwZUFyZ3VtZW50QUJJID0gY2xhc3MgX1R5cGVBcmd1bWVudEFCSSB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3RzIGEgVHlwZUFyZ3VtZW50QUJJIGluc3RhbmNlLlxuICAgKiBAcGFyYW0gbmFtZVxuICAgKi9cbiAgY29uc3RydWN0b3IobmFtZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gIH1cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVN0cih0aGlzLm5hbWUpO1xuICB9XG4gIHN0YXRpYyBkZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpIHtcbiAgICBjb25zdCBuYW1lID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplU3RyKCk7XG4gICAgcmV0dXJuIG5ldyBfVHlwZUFyZ3VtZW50QUJJKG5hbWUpO1xuICB9XG59O1xudmFyIEFyZ3VtZW50QUJJID0gY2xhc3MgX0FyZ3VtZW50QUJJIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdHMgYW4gQXJndW1lbnRBQkkgaW5zdGFuY2UuXG4gICAqIEBwYXJhbSBuYW1lXG4gICAqIEBwYXJhbSB0eXBlX3RhZ1xuICAgKi9cbiAgY29uc3RydWN0b3IobmFtZSwgdHlwZV90YWcpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMudHlwZV90YWcgPSB0eXBlX3RhZztcbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplU3RyKHRoaXMubmFtZSk7XG4gICAgdGhpcy50eXBlX3RhZy5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gIH1cbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IG5hbWUgPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVTdHIoKTtcbiAgICBjb25zdCB0eXBlVGFnID0gVHlwZVRhZy5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIHJldHVybiBuZXcgX0FyZ3VtZW50QUJJKG5hbWUsIHR5cGVUYWcpO1xuICB9XG59O1xudmFyIFNjcmlwdEFCSSA9IGNsYXNzIHtcbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IGluZGV4ID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplVWxlYjEyOEFzVTMyKCk7XG4gICAgc3dpdGNoIChpbmRleCkge1xuICAgICAgY2FzZSAwOlxuICAgICAgICByZXR1cm4gVHJhbnNhY3Rpb25TY3JpcHRBQkkubG9hZChkZXNlcmlhbGl6ZXIpO1xuICAgICAgY2FzZSAxOlxuICAgICAgICByZXR1cm4gRW50cnlGdW5jdGlvbkFCSS5sb2FkKGRlc2VyaWFsaXplcik7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gdmFyaWFudCBpbmRleCBmb3IgVHJhbnNhY3Rpb25QYXlsb2FkOiAke2luZGV4fWApO1xuICAgIH1cbiAgfVxufTtcbnZhciBUcmFuc2FjdGlvblNjcmlwdEFCSSA9IGNsYXNzIF9UcmFuc2FjdGlvblNjcmlwdEFCSSBleHRlbmRzIFNjcmlwdEFCSSB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3RzIGEgVHJhbnNhY3Rpb25TY3JpcHRBQkkgaW5zdGFuY2UuXG4gICAqIEBwYXJhbSBuYW1lIEVudHJ5IGZ1bmN0aW9uIG5hbWVcbiAgICogQHBhcmFtIGRvY1xuICAgKiBAcGFyYW0gY29kZVxuICAgKiBAcGFyYW0gdHlfYXJnc1xuICAgKiBAcGFyYW0gYXJnc1xuICAgKi9cbiAgY29uc3RydWN0b3IobmFtZSwgZG9jLCBjb2RlLCB0eV9hcmdzLCBhcmdzKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMuZG9jID0gZG9jO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgdGhpcy50eV9hcmdzID0gdHlfYXJncztcbiAgICB0aGlzLmFyZ3MgPSBhcmdzO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMCk7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVTdHIodGhpcy5uYW1lKTtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVN0cih0aGlzLmRvYyk7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVCeXRlcyh0aGlzLmNvZGUpO1xuICAgIHNlcmlhbGl6ZVZlY3Rvcih0aGlzLnR5X2FyZ3MsIHNlcmlhbGl6ZXIpO1xuICAgIHNlcmlhbGl6ZVZlY3Rvcih0aGlzLmFyZ3MsIHNlcmlhbGl6ZXIpO1xuICB9XG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcikge1xuICAgIGNvbnN0IG5hbWUgPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVTdHIoKTtcbiAgICBjb25zdCBkb2MgPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVTdHIoKTtcbiAgICBjb25zdCBjb2RlID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplQnl0ZXMoKTtcbiAgICBjb25zdCB0eUFyZ3MgPSBkZXNlcmlhbGl6ZVZlY3RvcihkZXNlcmlhbGl6ZXIsIFR5cGVBcmd1bWVudEFCSSk7XG4gICAgY29uc3QgYXJncyA9IGRlc2VyaWFsaXplVmVjdG9yKGRlc2VyaWFsaXplciwgQXJndW1lbnRBQkkpO1xuICAgIHJldHVybiBuZXcgX1RyYW5zYWN0aW9uU2NyaXB0QUJJKG5hbWUsIGRvYywgY29kZSwgdHlBcmdzLCBhcmdzKTtcbiAgfVxufTtcbnZhciBFbnRyeUZ1bmN0aW9uQUJJID0gY2xhc3MgX0VudHJ5RnVuY3Rpb25BQkkgZXh0ZW5kcyBTY3JpcHRBQkkge1xuICAvKipcbiAgICogQ29uc3RydWN0cyBhIEVudHJ5RnVuY3Rpb25BQkkgaW5zdGFuY2VcbiAgICogQHBhcmFtIG5hbWVcbiAgICogQHBhcmFtIG1vZHVsZV9uYW1lIEZ1bGx5IHF1YWxpZmllZCBtb2R1bGUgaWRcbiAgICogQHBhcmFtIGRvY1xuICAgKiBAcGFyYW0gdHlfYXJnc1xuICAgKiBAcGFyYW0gYXJnc1xuICAgKi9cbiAgY29uc3RydWN0b3IobmFtZSwgbW9kdWxlX25hbWUsIGRvYywgdHlfYXJncywgYXJncykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLm1vZHVsZV9uYW1lID0gbW9kdWxlX25hbWU7XG4gICAgdGhpcy5kb2MgPSBkb2M7XG4gICAgdGhpcy50eV9hcmdzID0gdHlfYXJncztcbiAgICB0aGlzLmFyZ3MgPSBhcmdzO1xuICB9XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgoMSk7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVTdHIodGhpcy5uYW1lKTtcbiAgICB0aGlzLm1vZHVsZV9uYW1lLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVN0cih0aGlzLmRvYyk7XG4gICAgc2VyaWFsaXplVmVjdG9yKHRoaXMudHlfYXJncywgc2VyaWFsaXplcik7XG4gICAgc2VyaWFsaXplVmVjdG9yKHRoaXMuYXJncywgc2VyaWFsaXplcik7XG4gIH1cbiAgc3RhdGljIGxvYWQoZGVzZXJpYWxpemVyKSB7XG4gICAgY29uc3QgbmFtZSA9IGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVN0cigpO1xuICAgIGNvbnN0IG1vZHVsZU5hbWUgPSBNb2R1bGVJZC5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIGNvbnN0IGRvYyA9IGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVN0cigpO1xuICAgIGNvbnN0IHR5QXJncyA9IGRlc2VyaWFsaXplVmVjdG9yKGRlc2VyaWFsaXplciwgVHlwZUFyZ3VtZW50QUJJKTtcbiAgICBjb25zdCBhcmdzID0gZGVzZXJpYWxpemVWZWN0b3IoZGVzZXJpYWxpemVyLCBBcmd1bWVudEFCSSk7XG4gICAgcmV0dXJuIG5ldyBfRW50cnlGdW5jdGlvbkFCSShuYW1lLCBtb2R1bGVOYW1lLCBkb2MsIHR5QXJncywgYXJncyk7XG4gIH1cbn07XG5cbi8vIHNyYy9hcHRvc190eXBlcy9hdXRoZW50aWNhdGlvbl9rZXkudHNcbmltcG9ydCB7IHNoYTNfMjU2IGFzIHNoYTNIYXNoMiB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3NoYTNcIjtcbnZhciBfQXV0aGVudGljYXRpb25LZXkgPSBjbGFzcyBfQXV0aGVudGljYXRpb25LZXkge1xuICBjb25zdHJ1Y3RvcihieXRlcykge1xuICAgIGlmIChieXRlcy5sZW5ndGggIT09IF9BdXRoZW50aWNhdGlvbktleS5MRU5HVEgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIGEgYnl0ZSBhcnJheSBvZiBsZW5ndGggMzJcIik7XG4gICAgfVxuICAgIHRoaXMuYnl0ZXMgPSBieXRlcztcbiAgfVxuICAvKipcbiAgICogQ29udmVydHMgYSBLLW9mLU4gTXVsdGlFZDI1NTE5UHVibGljS2V5IHRvIEF1dGhlbnRpY2F0aW9uS2V5IHdpdGg6XG4gICAqIGBhdXRoX2tleSA9IHNoYTMtMjU2KHBfMSB8IOKApiB8IHBfbiB8IEsgfCAweDAxKWAuIGBLYCByZXByZXNlbnRzIHRoZSBLLW9mLU4gcmVxdWlyZWQgZm9yXG4gICAqIGF1dGhlbnRpY2F0aW5nIHRoZSB0cmFuc2FjdGlvbi4gYDB4MDFgIGlzIHRoZSAxLWJ5dGUgc2NoZW1lIGZvciBtdWx0aXNpZy5cbiAgICovXG4gIHN0YXRpYyBmcm9tTXVsdGlFZDI1NTE5UHVibGljS2V5KHB1YmxpY0tleSkge1xuICAgIGNvbnN0IHB1YktleUJ5dGVzID0gcHVibGljS2V5LnRvQnl0ZXMoKTtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KHB1YktleUJ5dGVzLmxlbmd0aCArIDEpO1xuICAgIGJ5dGVzLnNldChwdWJLZXlCeXRlcyk7XG4gICAgYnl0ZXMuc2V0KFtfQXV0aGVudGljYXRpb25LZXkuTVVMVElfRUQyNTUxOV9TQ0hFTUVdLCBwdWJLZXlCeXRlcy5sZW5ndGgpO1xuICAgIGNvbnN0IGhhc2ggPSBzaGEzSGFzaDIuY3JlYXRlKCk7XG4gICAgaGFzaC51cGRhdGUoYnl0ZXMpO1xuICAgIHJldHVybiBuZXcgX0F1dGhlbnRpY2F0aW9uS2V5KGhhc2guZGlnZXN0KCkpO1xuICB9XG4gIHN0YXRpYyBmcm9tRWQyNTUxOVB1YmxpY0tleShwdWJsaWNLZXkpIHtcbiAgICBjb25zdCBwdWJLZXlCeXRlcyA9IHB1YmxpY0tleS52YWx1ZTtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KHB1YktleUJ5dGVzLmxlbmd0aCArIDEpO1xuICAgIGJ5dGVzLnNldChwdWJLZXlCeXRlcyk7XG4gICAgYnl0ZXMuc2V0KFtfQXV0aGVudGljYXRpb25LZXkuRUQyNTUxOV9TQ0hFTUVdLCBwdWJLZXlCeXRlcy5sZW5ndGgpO1xuICAgIGNvbnN0IGhhc2ggPSBzaGEzSGFzaDIuY3JlYXRlKCk7XG4gICAgaGFzaC51cGRhdGUoYnl0ZXMpO1xuICAgIHJldHVybiBuZXcgX0F1dGhlbnRpY2F0aW9uS2V5KGhhc2guZGlnZXN0KCkpO1xuICB9XG4gIC8qKlxuICAgKiBEZXJpdmVzIGFuIGFjY291bnQgYWRkcmVzcyBmcm9tIEF1dGhlbnRpY2F0aW9uS2V5LiBTaW5jZSBjdXJyZW50IEFjY291bnRBZGRyZXNzIGlzIDMyIGJ5dGVzLFxuICAgKiBBdXRoZW50aWNhdGlvbktleSBieXRlcyBhcmUgZGlyZWN0bHkgdHJhbnNsYXRlZCB0byBBY2NvdW50QWRkcmVzcy5cbiAgICovXG4gIGRlcml2ZWRBZGRyZXNzKCkge1xuICAgIHJldHVybiBIZXhTdHJpbmcuZnJvbVVpbnQ4QXJyYXkodGhpcy5ieXRlcyk7XG4gIH1cbn07XG5fQXV0aGVudGljYXRpb25LZXkuTEVOR1RIID0gMzI7XG5fQXV0aGVudGljYXRpb25LZXkuTVVMVElfRUQyNTUxOV9TQ0hFTUUgPSAxO1xuX0F1dGhlbnRpY2F0aW9uS2V5LkVEMjU1MTlfU0NIRU1FID0gMDtcbl9BdXRoZW50aWNhdGlvbktleS5ERVJJVkVfUkVTT1VSQ0VfQUNDT1VOVF9TQ0hFTUUgPSAyNTU7XG52YXIgQXV0aGVudGljYXRpb25LZXkgPSBfQXV0aGVudGljYXRpb25LZXk7XG5cbi8vIHNyYy9hcHRvc190eXBlcy9yb3RhdGlvbl9wcm9vZl9jaGFsbGVuZ2UudHNcbnZhciBSb3RhdGlvblByb29mQ2hhbGxlbmdlID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcihhY2NvdW50QWRkcmVzcywgbW9kdWxlTmFtZSwgc3RydWN0TmFtZSwgc2VxdWVuY2VOdW1iZXIsIG9yaWdpbmF0b3IsIGN1cnJlbnRBdXRoS2V5LCBuZXdQdWJsaWNLZXkpIHtcbiAgICB0aGlzLmFjY291bnRBZGRyZXNzID0gYWNjb3VudEFkZHJlc3M7XG4gICAgdGhpcy5tb2R1bGVOYW1lID0gbW9kdWxlTmFtZTtcbiAgICB0aGlzLnN0cnVjdE5hbWUgPSBzdHJ1Y3ROYW1lO1xuICAgIHRoaXMuc2VxdWVuY2VOdW1iZXIgPSBzZXF1ZW5jZU51bWJlcjtcbiAgICB0aGlzLm9yaWdpbmF0b3IgPSBvcmlnaW5hdG9yO1xuICAgIHRoaXMuY3VycmVudEF1dGhLZXkgPSBjdXJyZW50QXV0aEtleTtcbiAgICB0aGlzLm5ld1B1YmxpY0tleSA9IG5ld1B1YmxpY0tleTtcbiAgfVxuICBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgIHRoaXMuYWNjb3VudEFkZHJlc3Muc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplU3RyKHRoaXMubW9kdWxlTmFtZSk7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVTdHIodGhpcy5zdHJ1Y3ROYW1lKTtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVU2NCh0aGlzLnNlcXVlbmNlTnVtYmVyKTtcbiAgICB0aGlzLm9yaWdpbmF0b3Iuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICAgIHRoaXMuY3VycmVudEF1dGhLZXkuc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplQnl0ZXModGhpcy5uZXdQdWJsaWNLZXkpO1xuICB9XG59O1xuXG4vLyBzcmMvYWNjb3VudC9hcHRvc19hY2NvdW50LnRzXG52YXIgX0FwdG9zQWNjb3VudCA9IGNsYXNzIF9BcHRvc0FjY291bnQge1xuICBzdGF0aWMgZnJvbUFwdG9zQWNjb3VudE9iamVjdChvYmopIHtcbiAgICByZXR1cm4gbmV3IF9BcHRvc0FjY291bnQoSGV4U3RyaW5nLmVuc3VyZShvYmoucHJpdmF0ZUtleUhleCkudG9VaW50OEFycmF5KCksIG9iai5hZGRyZXNzKTtcbiAgfVxuICAvKipcbiAgICogQ2hlY2sncyBpZiB0aGUgZGVyaXZlIHBhdGggaXMgdmFsaWRcbiAgICovXG4gIHN0YXRpYyBpc1ZhbGlkUGF0aChwYXRoKSB7XG4gICAgcmV0dXJuIC9ebVxcLzQ0J1xcLzYzNydcXC9bMC05XSsnXFwvWzAtOV0rJ1xcL1swLTldKycrJC8udGVzdChwYXRoKTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlcyBuZXcgYWNjb3VudCB3aXRoIGJpcDQ0IHBhdGggYW5kIG1uZW1vbmljcyxcbiAgICogQHBhcmFtIHBhdGguIChlLmcuIG0vNDQnLzYzNycvMCcvMCcvMCcpXG4gICAqIERldGFpbGVkIGRlc2NyaXB0aW9uOiB7QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2JpdGNvaW4vYmlwcy9ibG9iL21hc3Rlci9iaXAtMDA0NC5tZWRpYXdpa2l9XG4gICAqIEBwYXJhbSBtbmVtb25pY3MuXG4gICAqIEByZXR1cm5zIEFwdG9zQWNjb3VudFxuICAgKi9cbiAgc3RhdGljIGZyb21EZXJpdmVQYXRoKHBhdGgsIG1uZW1vbmljcykge1xuICAgIGlmICghX0FwdG9zQWNjb3VudC5pc1ZhbGlkUGF0aChwYXRoKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBkZXJpdmF0aW9uIHBhdGhcIik7XG4gICAgfVxuICAgIGNvbnN0IG5vcm1hbGl6ZU1uZW1vbmljcyA9IG1uZW1vbmljcy50cmltKCkuc3BsaXQoL1xccysvKS5tYXAoKHBhcnQpID0+IHBhcnQudG9Mb3dlckNhc2UoKSkuam9pbihcIiBcIik7XG4gICAgY29uc3QgeyBrZXkgfSA9IGRlcml2ZVBhdGgocGF0aCwgYnl0ZXNUb0hleDIoYmlwMzkubW5lbW9uaWNUb1NlZWRTeW5jKG5vcm1hbGl6ZU1uZW1vbmljcykpKTtcbiAgICByZXR1cm4gbmV3IF9BcHRvc0FjY291bnQoa2V5KTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlcyBuZXcgYWNjb3VudCBpbnN0YW5jZS4gQ29uc3RydWN0b3IgYWxsb3dzIHBhc3NpbmcgaW4gYW4gYWRkcmVzcyxcbiAgICogdG8gaGFuZGxlIGFjY291bnQga2V5IHJvdGF0aW9uLCB3aGVyZSBhdXRoX2tleSAhPSBwdWJsaWNfa2V5XG4gICAqIEBwYXJhbSBwcml2YXRlS2V5Qnl0ZXMgIFByaXZhdGUga2V5IGZyb20gd2hpY2ggYWNjb3VudCBrZXkgcGFpciB3aWxsIGJlIGdlbmVyYXRlZC5cbiAgICogSWYgbm90IHNwZWNpZmllZCwgbmV3IGtleSBwYWlyIGlzIGdvaW5nIHRvIGJlIGNyZWF0ZWQuXG4gICAqIEBwYXJhbSBhZGRyZXNzIEFjY291bnQgYWRkcmVzcyAoZS5nLiAweGU4MDEyNzE0Y2QxNzYwNmNlZTcxODhhMmEzNjVlZWYzZmU3NjBiZTU5ODc1MDY3OGM4YzU5NTRlYjU0OGE1OTEpLlxuICAgKiBJZiBub3Qgc3BlY2lmaWVkLCBhIG5ldyBvbmUgd2lsbCBiZSBnZW5lcmF0ZWQgZnJvbSBwdWJsaWMga2V5XG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlS2V5Qnl0ZXMsIGFkZHJlc3MpIHtcbiAgICBpZiAocHJpdmF0ZUtleUJ5dGVzKSB7XG4gICAgICB0aGlzLnNpZ25pbmdLZXkgPSBuYWNsMi5zaWduLmtleVBhaXIuZnJvbVNlZWQocHJpdmF0ZUtleUJ5dGVzLnNsaWNlKDAsIDMyKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2lnbmluZ0tleSA9IG5hY2wyLnNpZ24ua2V5UGFpcigpO1xuICAgIH1cbiAgICB0aGlzLmFjY291bnRBZGRyZXNzID0gSGV4U3RyaW5nLmVuc3VyZShhZGRyZXNzIHx8IHRoaXMuYXV0aEtleSgpLmhleCgpKTtcbiAgfVxuICAvKipcbiAgICogVGhpcyBpcyB0aGUga2V5IGJ5IHdoaWNoIEFwdG9zIGFjY291bnQgaXMgcmVmZXJlbmNlZC5cbiAgICogSXQgaXMgdGhlIDMyLWJ5dGUgb2YgdGhlIFNIQS0zIDI1NiBjcnlwdG9ncmFwaGljIGhhc2hcbiAgICogb2YgdGhlIHB1YmxpYyBrZXkocykgY29uY2F0ZW5hdGVkIHdpdGggYSBzaWduYXR1cmUgc2NoZW1lIGlkZW50aWZpZXIgYnl0ZVxuICAgKiBAcmV0dXJucyBBZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCB0aGUgZ2l2ZW4gYWNjb3VudFxuICAgKi9cbiAgYWRkcmVzcygpIHtcbiAgICByZXR1cm4gdGhpcy5hY2NvdW50QWRkcmVzcztcbiAgfVxuICBhdXRoS2V5KCkge1xuICAgIGNvbnN0IHB1YktleSA9IG5ldyBFZDI1NTE5UHVibGljS2V5KHRoaXMuc2lnbmluZ0tleS5wdWJsaWNLZXkpO1xuICAgIGNvbnN0IGF1dGhLZXkgPSBBdXRoZW50aWNhdGlvbktleS5mcm9tRWQyNTUxOVB1YmxpY0tleShwdWJLZXkpO1xuICAgIHJldHVybiBhdXRoS2V5LmRlcml2ZWRBZGRyZXNzKCk7XG4gIH1cbiAgLyoqXG4gICAqIFRha2VzIHNvdXJjZSBhZGRyZXNzIGFuZCBzZWVkcyBhbmQgcmV0dXJucyB0aGUgcmVzb3VyY2UgYWNjb3VudCBhZGRyZXNzXG4gICAqIEBwYXJhbSBzb3VyY2VBZGRyZXNzIEFkZHJlc3MgdXNlZCB0byBkZXJpdmUgdGhlIHJlc291cmNlIGFjY291bnRcbiAgICogQHBhcmFtIHNlZWQgVGhlIHNlZWQgYnl0ZXNcbiAgICogQHJldHVybnMgVGhlIHJlc291cmNlIGFjY291bnQgYWRkcmVzc1xuICAgKi9cbiAgc3RhdGljIGdldFJlc291cmNlQWNjb3VudEFkZHJlc3Moc291cmNlQWRkcmVzcywgc2VlZCkge1xuICAgIGNvbnN0IHNvdXJjZSA9IGJjc1RvQnl0ZXMoQWNjb3VudEFkZHJlc3MuZnJvbUhleChzb3VyY2VBZGRyZXNzKSk7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShbLi4uc291cmNlLCAuLi5zZWVkLCBBdXRoZW50aWNhdGlvbktleS5ERVJJVkVfUkVTT1VSQ0VfQUNDT1VOVF9TQ0hFTUVdKTtcbiAgICBjb25zdCBoYXNoID0gc2hhM0hhc2gzLmNyZWF0ZSgpO1xuICAgIGhhc2gudXBkYXRlKGJ5dGVzKTtcbiAgICByZXR1cm4gSGV4U3RyaW5nLmZyb21VaW50OEFycmF5KGhhc2guZGlnZXN0KCkpO1xuICB9XG4gIC8qKlxuICAgKiBUYWtlcyBjcmVhdG9yIGFkZHJlc3MgYW5kIGNvbGxlY3Rpb24gbmFtZSBhbmQgcmV0dXJucyB0aGUgY29sbGVjdGlvbiBpZCBoYXNoLlxuICAgKiBDb2xsZWN0aW9uIGlkIGhhc2ggYXJlIGdlbmVyYXRlZCBhcyBzaGEyNTYgaGFzaCBvZiAoYGNyZWF0b3JfYWRkcmVzczo6Y29sbGVjdGlvbl9uYW1lYClcbiAgICpcbiAgICogQHBhcmFtIGNyZWF0b3JBZGRyZXNzIENvbGxlY3Rpb24gY3JlYXRvciBhZGRyZXNzXG4gICAqIEBwYXJhbSBjb2xsZWN0aW9uTmFtZSBUaGUgY29sbGVjdGlvbiBuYW1lXG4gICAqIEByZXR1cm5zIFRoZSBjb2xsZWN0aW9uIGlkIGhhc2hcbiAgICovXG4gIHN0YXRpYyBnZXRDb2xsZWN0aW9uSUQoY3JlYXRvckFkZHJlc3MsIGNvbGxlY3Rpb25OYW1lKSB7XG4gICAgY29uc3Qgc2VlZCA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShgJHtjcmVhdG9yQWRkcmVzc306OiR7Y29sbGVjdGlvbk5hbWV9YCk7XG4gICAgY29uc3QgaGFzaCA9IHNoYTI1Ni5jcmVhdGUoKTtcbiAgICBoYXNoLnVwZGF0ZShzZWVkKTtcbiAgICByZXR1cm4gSGV4U3RyaW5nLmZyb21VaW50OEFycmF5KGhhc2guZGlnZXN0KCkpO1xuICB9XG4gIC8qKlxuICAgKiBUaGlzIGtleSBpcyBnZW5lcmF0ZWQgd2l0aCBFZDI1NTE5IHNjaGVtZS5cbiAgICogUHVibGljIGtleSBpcyB1c2VkIHRvIGNoZWNrIGEgc2lnbmF0dXJlIG9mIHRyYW5zYWN0aW9uLCBzaWduZWQgYnkgZ2l2ZW4gYWNjb3VudFxuICAgKiBAcmV0dXJucyBUaGUgcHVibGljIGtleSBmb3IgdGhlIGFzc29jaWF0ZWQgYWNjb3VudFxuICAgKi9cbiAgcHViS2V5KCkge1xuICAgIHJldHVybiBIZXhTdHJpbmcuZnJvbVVpbnQ4QXJyYXkodGhpcy5zaWduaW5nS2V5LnB1YmxpY0tleSk7XG4gIH1cbiAgLyoqXG4gICAqIFNpZ25zIHNwZWNpZmllZCBgYnVmZmVyYCB3aXRoIGFjY291bnQncyBwcml2YXRlIGtleVxuICAgKiBAcGFyYW0gYnVmZmVyIEEgYnVmZmVyIHRvIHNpZ25cbiAgICogQHJldHVybnMgQSBzaWduYXR1cmUgSGV4U3RyaW5nXG4gICAqL1xuICBzaWduQnVmZmVyKGJ1ZmZlcikge1xuICAgIGNvbnN0IHNpZ25hdHVyZSA9IG5hY2wyLnNpZ24uZGV0YWNoZWQoYnVmZmVyLCB0aGlzLnNpZ25pbmdLZXkuc2VjcmV0S2V5KTtcbiAgICByZXR1cm4gSGV4U3RyaW5nLmZyb21VaW50OEFycmF5KHNpZ25hdHVyZSk7XG4gIH1cbiAgLyoqXG4gICAqIFNpZ25zIHNwZWNpZmllZCBgaGV4U3RyaW5nYCB3aXRoIGFjY291bnQncyBwcml2YXRlIGtleVxuICAgKiBAcGFyYW0gaGV4U3RyaW5nIEEgcmVndWxhciBzdHJpbmcgb3IgSGV4U3RyaW5nIHRvIHNpZ25cbiAgICogQHJldHVybnMgQSBzaWduYXR1cmUgSGV4U3RyaW5nXG4gICAqL1xuICBzaWduSGV4U3RyaW5nKGhleFN0cmluZykge1xuICAgIGNvbnN0IHRvU2lnbiA9IEhleFN0cmluZy5lbnN1cmUoaGV4U3RyaW5nKS50b1VpbnQ4QXJyYXkoKTtcbiAgICByZXR1cm4gdGhpcy5zaWduQnVmZmVyKHRvU2lnbik7XG4gIH1cbiAgLyoqXG4gICAqIFZlcmlmaWVzIHRoZSBzaWduYXR1cmUgb2YgdGhlIG1lc3NhZ2Ugd2l0aCB0aGUgcHVibGljIGtleSBvZiB0aGUgYWNjb3VudFxuICAgKiBAcGFyYW0gbWVzc2FnZSBhIHNpZ25lZCBtZXNzYWdlXG4gICAqIEBwYXJhbSBzaWduYXR1cmUgdGhlIHNpZ25hdHVyZSBvZiB0aGUgbWVzc2FnZVxuICAgKi9cbiAgdmVyaWZ5U2lnbmF0dXJlKG1lc3NhZ2UsIHNpZ25hdHVyZSkge1xuICAgIGNvbnN0IHJhd01lc3NhZ2UgPSBIZXhTdHJpbmcuZW5zdXJlKG1lc3NhZ2UpLnRvVWludDhBcnJheSgpO1xuICAgIGNvbnN0IHJhd1NpZ25hdHVyZSA9IEhleFN0cmluZy5lbnN1cmUoc2lnbmF0dXJlKS50b1VpbnQ4QXJyYXkoKTtcbiAgICByZXR1cm4gbmFjbDIuc2lnbi5kZXRhY2hlZC52ZXJpZnkocmF3TWVzc2FnZSwgcmF3U2lnbmF0dXJlLCB0aGlzLnNpZ25pbmdLZXkucHVibGljS2V5KTtcbiAgfVxuICAvKipcbiAgICogRGVyaXZlcyBhY2NvdW50IGFkZHJlc3MsIHB1YmxpYyBrZXkgYW5kIHByaXZhdGUga2V5XG4gICAqIEByZXR1cm5zIEFwdG9zQWNjb3VudE9iamVjdCBpbnN0YW5jZS5cbiAgICogQGV4YW1wbGUgQW4gZXhhbXBsZSBvZiB0aGUgcmV0dXJuZWQgQXB0b3NBY2NvdW50T2JqZWN0IG9iamVjdFxuICAgKiBgYGBcbiAgICoge1xuICAgKiAgICBhZGRyZXNzOiBcIjB4ZTgwMTI3MTRjZDE3NjA2Y2VlNzE4OGEyYTM2NWVlZjNmZTc2MGJlNTk4NzUwNjc4YzhjNTk1NGViNTQ4YTU5MVwiLFxuICAgKiAgICBwdWJsaWNLZXlIZXg6IFwiMHhmNTZkODUyNGZhZjc5ZmJjMGY0OGMxM2FlZWQzYjBjZTVkZDM3NmI0ZGI5M2I4MTMwYTEwN2MwYTVlMDRiYTA0XCIsXG4gICAqICAgIHByaXZhdGVLZXlIZXg6IGAweDAwOWM5ZjdjOTkyYTA2Y2ZhZmU5MTZmMTI1ZDhhZGI3YTM5NWZjYTI0M2UyNjRhOGU1NmE0YjNlNmFjY2Y5NDBcbiAgICogICAgICBkMmIxMWU5ZWNlMzA0OWNlNjBlM2M3YjRhMWM1OGFlYmZhOTI5OGUyOWEzMGE1OGE2N2YxOTk4NjQ2MTM1MjA0YFxuICAgKiB9XG4gICAqIGBgYFxuICAgKi9cbiAgdG9Qcml2YXRlS2V5T2JqZWN0KCkge1xuICAgIHJldHVybiB7XG4gICAgICBhZGRyZXNzOiB0aGlzLmFkZHJlc3MoKS5oZXgoKSxcbiAgICAgIHB1YmxpY0tleUhleDogdGhpcy5wdWJLZXkoKS5oZXgoKSxcbiAgICAgIHByaXZhdGVLZXlIZXg6IEhleFN0cmluZy5mcm9tVWludDhBcnJheSh0aGlzLnNpZ25pbmdLZXkuc2VjcmV0S2V5LnNsaWNlKDAsIDMyKSkuaGV4KClcbiAgICB9O1xuICB9XG59O1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgTWVtb2l6ZSgpXG5dLCBfQXB0b3NBY2NvdW50LnByb3RvdHlwZSwgXCJhdXRoS2V5XCIsIDEpO1xudmFyIEFwdG9zQWNjb3VudCA9IF9BcHRvc0FjY291bnQ7XG5mdW5jdGlvbiBnZXRBZGRyZXNzRnJvbUFjY291bnRPckFkZHJlc3MoYWNjb3VudE9yQWRkcmVzcykge1xuICByZXR1cm4gYWNjb3VudE9yQWRkcmVzcyBpbnN0YW5jZW9mIEFwdG9zQWNjb3VudCA/IGFjY291bnRPckFkZHJlc3MuYWRkcmVzcygpIDogSGV4U3RyaW5nLmVuc3VyZShhY2NvdW50T3JBZGRyZXNzKTtcbn1cblxuLy8gc3JjL2luZGV4ZXIvZ2VuZXJhdGVkL3F1ZXJpZXMudHNcbnZhciBDdXJyZW50VG9rZW5Pd25lcnNoaXBGaWVsZHNGcmFnbWVudERvYyA9IGBcbiAgICBmcmFnbWVudCBDdXJyZW50VG9rZW5Pd25lcnNoaXBGaWVsZHMgb24gY3VycmVudF90b2tlbl9vd25lcnNoaXBzX3YyIHtcbiAgdG9rZW5fc3RhbmRhcmRcbiAgdG9rZW5fcHJvcGVydGllc19tdXRhdGVkX3YxXG4gIHRva2VuX2RhdGFfaWRcbiAgdGFibGVfdHlwZV92MVxuICBzdG9yYWdlX2lkXG4gIHByb3BlcnR5X3ZlcnNpb25fdjFcbiAgb3duZXJfYWRkcmVzc1xuICBsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cbiAgbGFzdF90cmFuc2FjdGlvbl90aW1lc3RhbXBcbiAgaXNfc291bGJvdW5kX3YyXG4gIGlzX2Z1bmdpYmxlX3YyXG4gIGFtb3VudFxuICBjdXJyZW50X3Rva2VuX2RhdGEge1xuICAgIGNvbGxlY3Rpb25faWRcbiAgICBkZXNjcmlwdGlvblxuICAgIGlzX2Z1bmdpYmxlX3YyXG4gICAgbGFyZ2VzdF9wcm9wZXJ0eV92ZXJzaW9uX3YxXG4gICAgbGFzdF90cmFuc2FjdGlvbl90aW1lc3RhbXBcbiAgICBsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cbiAgICBtYXhpbXVtXG4gICAgc3VwcGx5XG4gICAgdG9rZW5fZGF0YV9pZFxuICAgIHRva2VuX25hbWVcbiAgICB0b2tlbl9wcm9wZXJ0aWVzXG4gICAgdG9rZW5fc3RhbmRhcmRcbiAgICB0b2tlbl91cmlcbiAgICBjdXJyZW50X2NvbGxlY3Rpb24ge1xuICAgICAgY29sbGVjdGlvbl9pZFxuICAgICAgY29sbGVjdGlvbl9uYW1lXG4gICAgICBjcmVhdG9yX2FkZHJlc3NcbiAgICAgIGN1cnJlbnRfc3VwcGx5XG4gICAgICBkZXNjcmlwdGlvblxuICAgICAgbGFzdF90cmFuc2FjdGlvbl90aW1lc3RhbXBcbiAgICAgIGxhc3RfdHJhbnNhY3Rpb25fdmVyc2lvblxuICAgICAgbWF4X3N1cHBseVxuICAgICAgbXV0YWJsZV9kZXNjcmlwdGlvblxuICAgICAgbXV0YWJsZV91cmlcbiAgICAgIHRhYmxlX2hhbmRsZV92MVxuICAgICAgdG9rZW5fc3RhbmRhcmRcbiAgICAgIHRvdGFsX21pbnRlZF92MlxuICAgICAgdXJpXG4gICAgfVxuICB9XG59XG4gICAgYDtcbnZhciBUb2tlbkRhdGFGaWVsZHNGcmFnbWVudERvYyA9IGBcbiAgICBmcmFnbWVudCBUb2tlbkRhdGFGaWVsZHMgb24gY3VycmVudF90b2tlbl9kYXRhcyB7XG4gIGNyZWF0b3JfYWRkcmVzc1xuICBjb2xsZWN0aW9uX25hbWVcbiAgZGVzY3JpcHRpb25cbiAgbWV0YWRhdGFfdXJpXG4gIG5hbWVcbiAgdG9rZW5fZGF0YV9pZF9oYXNoXG4gIGNvbGxlY3Rpb25fZGF0YV9pZF9oYXNoXG59XG4gICAgYDtcbnZhciBDb2xsZWN0aW9uRGF0YUZpZWxkc0ZyYWdtZW50RG9jID0gYFxuICAgIGZyYWdtZW50IENvbGxlY3Rpb25EYXRhRmllbGRzIG9uIGN1cnJlbnRfY29sbGVjdGlvbl9kYXRhcyB7XG4gIG1ldGFkYXRhX3VyaVxuICBzdXBwbHlcbiAgZGVzY3JpcHRpb25cbiAgY29sbGVjdGlvbl9uYW1lXG4gIGNvbGxlY3Rpb25fZGF0YV9pZF9oYXNoXG4gIHRhYmxlX2hhbmRsZVxuICBjcmVhdG9yX2FkZHJlc3Ncbn1cbiAgICBgO1xudmFyIFRva2VuQWN0aXZpdGllc0ZpZWxkc0ZyYWdtZW50RG9jID0gYFxuICAgIGZyYWdtZW50IFRva2VuQWN0aXZpdGllc0ZpZWxkcyBvbiB0b2tlbl9hY3Rpdml0aWVzX3YyIHtcbiAgYWZ0ZXJfdmFsdWVcbiAgYmVmb3JlX3ZhbHVlXG4gIGVudHJ5X2Z1bmN0aW9uX2lkX3N0clxuICBldmVudF9hY2NvdW50X2FkZHJlc3NcbiAgZXZlbnRfaW5kZXhcbiAgZnJvbV9hZGRyZXNzXG4gIGlzX2Z1bmdpYmxlX3YyXG4gIHByb3BlcnR5X3ZlcnNpb25fdjFcbiAgdG9fYWRkcmVzc1xuICB0b2tlbl9hbW91bnRcbiAgdG9rZW5fZGF0YV9pZFxuICB0b2tlbl9zdGFuZGFyZFxuICB0cmFuc2FjdGlvbl90aW1lc3RhbXBcbiAgdHJhbnNhY3Rpb25fdmVyc2lvblxuICB0eXBlXG59XG4gICAgYDtcbnZhciBHZXRBY2NvdW50Q29pbnNEYXRhQ291bnQgPSBgXG4gICAgcXVlcnkgZ2V0QWNjb3VudENvaW5zRGF0YUNvdW50KCRhZGRyZXNzOiBTdHJpbmcpIHtcbiAgY3VycmVudF9mdW5naWJsZV9hc3NldF9iYWxhbmNlc19hZ2dyZWdhdGUoXG4gICAgd2hlcmU6IHtvd25lcl9hZGRyZXNzOiB7X2VxOiAkYWRkcmVzc319XG4gICkge1xuICAgIGFnZ3JlZ2F0ZSB7XG4gICAgICBjb3VudFxuICAgIH1cbiAgfVxufVxuICAgIGA7XG52YXIgR2V0QWNjb3VudENvaW5zRGF0YSA9IGBcbiAgICBxdWVyeSBnZXRBY2NvdW50Q29pbnNEYXRhKCR3aGVyZV9jb25kaXRpb246IGN1cnJlbnRfZnVuZ2libGVfYXNzZXRfYmFsYW5jZXNfYm9vbF9leHAhLCAkb2Zmc2V0OiBJbnQsICRsaW1pdDogSW50LCAkb3JkZXJfYnk6IFtjdXJyZW50X2Z1bmdpYmxlX2Fzc2V0X2JhbGFuY2VzX29yZGVyX2J5IV0pIHtcbiAgY3VycmVudF9mdW5naWJsZV9hc3NldF9iYWxhbmNlcyhcbiAgICB3aGVyZTogJHdoZXJlX2NvbmRpdGlvblxuICAgIG9mZnNldDogJG9mZnNldFxuICAgIGxpbWl0OiAkbGltaXRcbiAgICBvcmRlcl9ieTogJG9yZGVyX2J5XG4gICkge1xuICAgIGFtb3VudFxuICAgIGFzc2V0X3R5cGVcbiAgICBpc19mcm96ZW5cbiAgICBpc19wcmltYXJ5XG4gICAgbGFzdF90cmFuc2FjdGlvbl90aW1lc3RhbXBcbiAgICBsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cbiAgICBvd25lcl9hZGRyZXNzXG4gICAgc3RvcmFnZV9pZFxuICAgIHRva2VuX3N0YW5kYXJkXG4gICAgbWV0YWRhdGEge1xuICAgICAgdG9rZW5fc3RhbmRhcmRcbiAgICAgIHN5bWJvbFxuICAgICAgc3VwcGx5X2FnZ3JlZ2F0b3JfdGFibGVfa2V5X3YxXG4gICAgICBzdXBwbHlfYWdncmVnYXRvcl90YWJsZV9oYW5kbGVfdjFcbiAgICAgIHByb2plY3RfdXJpXG4gICAgICBuYW1lXG4gICAgICBsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cbiAgICAgIGxhc3RfdHJhbnNhY3Rpb25fdGltZXN0YW1wXG4gICAgICBpY29uX3VyaVxuICAgICAgZGVjaW1hbHNcbiAgICAgIGNyZWF0b3JfYWRkcmVzc1xuICAgICAgYXNzZXRfdHlwZVxuICAgIH1cbiAgfVxufVxuICAgIGA7XG52YXIgR2V0QWNjb3VudEN1cnJlbnRUb2tlbnMgPSBgXG4gICAgcXVlcnkgZ2V0QWNjb3VudEN1cnJlbnRUb2tlbnMoJGFkZHJlc3M6IFN0cmluZyEsICRvZmZzZXQ6IEludCwgJGxpbWl0OiBJbnQpIHtcbiAgY3VycmVudF90b2tlbl9vd25lcnNoaXBzKFxuICAgIHdoZXJlOiB7b3duZXJfYWRkcmVzczoge19lcTogJGFkZHJlc3N9LCBhbW91bnQ6IHtfZ3Q6IDB9fVxuICAgIG9yZGVyX2J5OiBbe2xhc3RfdHJhbnNhY3Rpb25fdmVyc2lvbjogZGVzY30sIHtjcmVhdG9yX2FkZHJlc3M6IGFzY30sIHtjb2xsZWN0aW9uX25hbWU6IGFzY30sIHtuYW1lOiBhc2N9XVxuICAgIG9mZnNldDogJG9mZnNldFxuICAgIGxpbWl0OiAkbGltaXRcbiAgKSB7XG4gICAgYW1vdW50XG4gICAgY3VycmVudF90b2tlbl9kYXRhIHtcbiAgICAgIC4uLlRva2VuRGF0YUZpZWxkc1xuICAgIH1cbiAgICBjdXJyZW50X2NvbGxlY3Rpb25fZGF0YSB7XG4gICAgICAuLi5Db2xsZWN0aW9uRGF0YUZpZWxkc1xuICAgIH1cbiAgICBsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cbiAgICBwcm9wZXJ0eV92ZXJzaW9uXG4gIH1cbn1cbiAgICAke1Rva2VuRGF0YUZpZWxkc0ZyYWdtZW50RG9jfVxuJHtDb2xsZWN0aW9uRGF0YUZpZWxkc0ZyYWdtZW50RG9jfWA7XG52YXIgR2V0QWNjb3VudFRva2Vuc0NvdW50ID0gYFxuICAgIHF1ZXJ5IGdldEFjY291bnRUb2tlbnNDb3VudCgkd2hlcmVfY29uZGl0aW9uOiBjdXJyZW50X3Rva2VuX293bmVyc2hpcHNfdjJfYm9vbF9leHAsICRvZmZzZXQ6IEludCwgJGxpbWl0OiBJbnQpIHtcbiAgY3VycmVudF90b2tlbl9vd25lcnNoaXBzX3YyX2FnZ3JlZ2F0ZShcbiAgICB3aGVyZTogJHdoZXJlX2NvbmRpdGlvblxuICAgIG9mZnNldDogJG9mZnNldFxuICAgIGxpbWl0OiAkbGltaXRcbiAgKSB7XG4gICAgYWdncmVnYXRlIHtcbiAgICAgIGNvdW50XG4gICAgfVxuICB9XG59XG4gICAgYDtcbnZhciBHZXRBY2NvdW50VHJhbnNhY3Rpb25zQ291bnQgPSBgXG4gICAgcXVlcnkgZ2V0QWNjb3VudFRyYW5zYWN0aW9uc0NvdW50KCRhZGRyZXNzOiBTdHJpbmcpIHtcbiAgYWNjb3VudF90cmFuc2FjdGlvbnNfYWdncmVnYXRlKHdoZXJlOiB7YWNjb3VudF9hZGRyZXNzOiB7X2VxOiAkYWRkcmVzc319KSB7XG4gICAgYWdncmVnYXRlIHtcbiAgICAgIGNvdW50XG4gICAgfVxuICB9XG59XG4gICAgYDtcbnZhciBHZXRBY2NvdW50VHJhbnNhY3Rpb25zRGF0YSA9IGBcbiAgICBxdWVyeSBnZXRBY2NvdW50VHJhbnNhY3Rpb25zRGF0YSgkd2hlcmVfY29uZGl0aW9uOiBhY2NvdW50X3RyYW5zYWN0aW9uc19ib29sX2V4cCEsICRvZmZzZXQ6IEludCwgJGxpbWl0OiBJbnQsICRvcmRlcl9ieTogW2FjY291bnRfdHJhbnNhY3Rpb25zX29yZGVyX2J5IV0pIHtcbiAgYWNjb3VudF90cmFuc2FjdGlvbnMoXG4gICAgd2hlcmU6ICR3aGVyZV9jb25kaXRpb25cbiAgICBvcmRlcl9ieTogJG9yZGVyX2J5XG4gICAgbGltaXQ6ICRsaW1pdFxuICAgIG9mZnNldDogJG9mZnNldFxuICApIHtcbiAgICB0b2tlbl9hY3Rpdml0aWVzX3YyIHtcbiAgICAgIC4uLlRva2VuQWN0aXZpdGllc0ZpZWxkc1xuICAgIH1cbiAgICB0cmFuc2FjdGlvbl92ZXJzaW9uXG4gICAgYWNjb3VudF9hZGRyZXNzXG4gIH1cbn1cbiAgICAke1Rva2VuQWN0aXZpdGllc0ZpZWxkc0ZyYWdtZW50RG9jfWA7XG52YXIgR2V0Q29sbGVjdGlvbkRhdGEgPSBgXG4gICAgcXVlcnkgZ2V0Q29sbGVjdGlvbkRhdGEoJHdoZXJlX2NvbmRpdGlvbjogY3VycmVudF9jb2xsZWN0aW9uc192Ml9ib29sX2V4cCEsICRvZmZzZXQ6IEludCwgJGxpbWl0OiBJbnQsICRvcmRlcl9ieTogW2N1cnJlbnRfY29sbGVjdGlvbnNfdjJfb3JkZXJfYnkhXSkge1xuICBjdXJyZW50X2NvbGxlY3Rpb25zX3YyKFxuICAgIHdoZXJlOiAkd2hlcmVfY29uZGl0aW9uXG4gICAgb2Zmc2V0OiAkb2Zmc2V0XG4gICAgbGltaXQ6ICRsaW1pdFxuICAgIG9yZGVyX2J5OiAkb3JkZXJfYnlcbiAgKSB7XG4gICAgY29sbGVjdGlvbl9pZFxuICAgIGNvbGxlY3Rpb25fbmFtZVxuICAgIGNyZWF0b3JfYWRkcmVzc1xuICAgIGN1cnJlbnRfc3VwcGx5XG4gICAgZGVzY3JpcHRpb25cbiAgICBsYXN0X3RyYW5zYWN0aW9uX3RpbWVzdGFtcFxuICAgIGxhc3RfdHJhbnNhY3Rpb25fdmVyc2lvblxuICAgIG1heF9zdXBwbHlcbiAgICBtdXRhYmxlX2Rlc2NyaXB0aW9uXG4gICAgbXV0YWJsZV91cmlcbiAgICB0YWJsZV9oYW5kbGVfdjFcbiAgICB0b2tlbl9zdGFuZGFyZFxuICAgIHRvdGFsX21pbnRlZF92MlxuICAgIHVyaVxuICB9XG59XG4gICAgYDtcbnZhciBHZXRDb2xsZWN0aW9uc1dpdGhPd25lZFRva2VucyA9IGBcbiAgICBxdWVyeSBnZXRDb2xsZWN0aW9uc1dpdGhPd25lZFRva2Vucygkd2hlcmVfY29uZGl0aW9uOiBjdXJyZW50X2NvbGxlY3Rpb25fb3duZXJzaGlwX3YyX3ZpZXdfYm9vbF9leHAhLCAkb2Zmc2V0OiBJbnQsICRsaW1pdDogSW50LCAkb3JkZXJfYnk6IFtjdXJyZW50X2NvbGxlY3Rpb25fb3duZXJzaGlwX3YyX3ZpZXdfb3JkZXJfYnkhXSkge1xuICBjdXJyZW50X2NvbGxlY3Rpb25fb3duZXJzaGlwX3YyX3ZpZXcoXG4gICAgd2hlcmU6ICR3aGVyZV9jb25kaXRpb25cbiAgICBvZmZzZXQ6ICRvZmZzZXRcbiAgICBsaW1pdDogJGxpbWl0XG4gICAgb3JkZXJfYnk6ICRvcmRlcl9ieVxuICApIHtcbiAgICBjdXJyZW50X2NvbGxlY3Rpb24ge1xuICAgICAgY29sbGVjdGlvbl9pZFxuICAgICAgY29sbGVjdGlvbl9uYW1lXG4gICAgICBjcmVhdG9yX2FkZHJlc3NcbiAgICAgIGN1cnJlbnRfc3VwcGx5XG4gICAgICBkZXNjcmlwdGlvblxuICAgICAgbGFzdF90cmFuc2FjdGlvbl90aW1lc3RhbXBcbiAgICAgIGxhc3RfdHJhbnNhY3Rpb25fdmVyc2lvblxuICAgICAgbXV0YWJsZV9kZXNjcmlwdGlvblxuICAgICAgbWF4X3N1cHBseVxuICAgICAgbXV0YWJsZV91cmlcbiAgICAgIHRhYmxlX2hhbmRsZV92MVxuICAgICAgdG9rZW5fc3RhbmRhcmRcbiAgICAgIHRvdGFsX21pbnRlZF92MlxuICAgICAgdXJpXG4gICAgfVxuICAgIGNvbGxlY3Rpb25faWRcbiAgICBjb2xsZWN0aW9uX25hbWVcbiAgICBjb2xsZWN0aW9uX3VyaVxuICAgIGNyZWF0b3JfYWRkcmVzc1xuICAgIGRpc3RpbmN0X3Rva2Vuc1xuICAgIGxhc3RfdHJhbnNhY3Rpb25fdmVyc2lvblxuICAgIG93bmVyX2FkZHJlc3NcbiAgICBzaW5nbGVfdG9rZW5fdXJpXG4gIH1cbn1cbiAgICBgO1xudmFyIEdldEN1cnJlbnRPYmplY3RzID0gYFxuICAgIHF1ZXJ5IGdldEN1cnJlbnRPYmplY3RzKCR3aGVyZV9jb25kaXRpb246IGN1cnJlbnRfb2JqZWN0c19ib29sX2V4cCwgJG9mZnNldDogSW50LCAkbGltaXQ6IEludCwgJG9yZGVyX2J5OiBbY3VycmVudF9vYmplY3RzX29yZGVyX2J5IV0pIHtcbiAgY3VycmVudF9vYmplY3RzKFxuICAgIHdoZXJlOiAkd2hlcmVfY29uZGl0aW9uXG4gICAgb2Zmc2V0OiAkb2Zmc2V0XG4gICAgbGltaXQ6ICRsaW1pdFxuICAgIG9yZGVyX2J5OiAkb3JkZXJfYnlcbiAgKSB7XG4gICAgYWxsb3dfdW5nYXRlZF90cmFuc2ZlclxuICAgIHN0YXRlX2tleV9oYXNoXG4gICAgb3duZXJfYWRkcmVzc1xuICAgIG9iamVjdF9hZGRyZXNzXG4gICAgbGFzdF90cmFuc2FjdGlvbl92ZXJzaW9uXG4gICAgbGFzdF9ndWlkX2NyZWF0aW9uX251bVxuICAgIGlzX2RlbGV0ZWRcbiAgfVxufVxuICAgIGA7XG52YXIgR2V0RGVsZWdhdGVkU3Rha2luZ0FjdGl2aXRpZXMgPSBgXG4gICAgcXVlcnkgZ2V0RGVsZWdhdGVkU3Rha2luZ0FjdGl2aXRpZXMoJGRlbGVnYXRvckFkZHJlc3M6IFN0cmluZywgJHBvb2xBZGRyZXNzOiBTdHJpbmcpIHtcbiAgZGVsZWdhdGVkX3N0YWtpbmdfYWN0aXZpdGllcyhcbiAgICB3aGVyZToge2RlbGVnYXRvcl9hZGRyZXNzOiB7X2VxOiAkZGVsZWdhdG9yQWRkcmVzc30sIHBvb2xfYWRkcmVzczoge19lcTogJHBvb2xBZGRyZXNzfX1cbiAgKSB7XG4gICAgYW1vdW50XG4gICAgZGVsZWdhdG9yX2FkZHJlc3NcbiAgICBldmVudF9pbmRleFxuICAgIGV2ZW50X3R5cGVcbiAgICBwb29sX2FkZHJlc3NcbiAgICB0cmFuc2FjdGlvbl92ZXJzaW9uXG4gIH1cbn1cbiAgICBgO1xudmFyIEdldEluZGV4ZXJMZWRnZXJJbmZvID0gYFxuICAgIHF1ZXJ5IGdldEluZGV4ZXJMZWRnZXJJbmZvIHtcbiAgbGVkZ2VyX2luZm9zIHtcbiAgICBjaGFpbl9pZFxuICB9XG59XG4gICAgYDtcbnZhciBHZXROdW1iZXJPZkRlbGVnYXRvcnMgPSBgXG4gICAgcXVlcnkgZ2V0TnVtYmVyT2ZEZWxlZ2F0b3JzKCRwb29sQWRkcmVzczogU3RyaW5nKSB7XG4gIG51bV9hY3RpdmVfZGVsZWdhdG9yX3Blcl9wb29sKFxuICAgIHdoZXJlOiB7cG9vbF9hZGRyZXNzOiB7X2VxOiAkcG9vbEFkZHJlc3N9LCBudW1fYWN0aXZlX2RlbGVnYXRvcjoge19ndDogXCIwXCJ9fVxuICAgIGRpc3RpbmN0X29uOiBwb29sX2FkZHJlc3NcbiAgKSB7XG4gICAgbnVtX2FjdGl2ZV9kZWxlZ2F0b3JcbiAgICBwb29sX2FkZHJlc3NcbiAgfVxufVxuICAgIGA7XG52YXIgR2V0T3duZWRUb2tlbnMgPSBgXG4gICAgcXVlcnkgZ2V0T3duZWRUb2tlbnMoJHdoZXJlX2NvbmRpdGlvbjogY3VycmVudF90b2tlbl9vd25lcnNoaXBzX3YyX2Jvb2xfZXhwISwgJG9mZnNldDogSW50LCAkbGltaXQ6IEludCwgJG9yZGVyX2J5OiBbY3VycmVudF90b2tlbl9vd25lcnNoaXBzX3YyX29yZGVyX2J5IV0pIHtcbiAgY3VycmVudF90b2tlbl9vd25lcnNoaXBzX3YyKFxuICAgIHdoZXJlOiAkd2hlcmVfY29uZGl0aW9uXG4gICAgb2Zmc2V0OiAkb2Zmc2V0XG4gICAgbGltaXQ6ICRsaW1pdFxuICAgIG9yZGVyX2J5OiAkb3JkZXJfYnlcbiAgKSB7XG4gICAgLi4uQ3VycmVudFRva2VuT3duZXJzaGlwRmllbGRzXG4gIH1cbn1cbiAgICAke0N1cnJlbnRUb2tlbk93bmVyc2hpcEZpZWxkc0ZyYWdtZW50RG9jfWA7XG52YXIgR2V0T3duZWRUb2tlbnNCeVRva2VuRGF0YSA9IGBcbiAgICBxdWVyeSBnZXRPd25lZFRva2Vuc0J5VG9rZW5EYXRhKCR3aGVyZV9jb25kaXRpb246IGN1cnJlbnRfdG9rZW5fb3duZXJzaGlwc192Ml9ib29sX2V4cCEsICRvZmZzZXQ6IEludCwgJGxpbWl0OiBJbnQsICRvcmRlcl9ieTogW2N1cnJlbnRfdG9rZW5fb3duZXJzaGlwc192Ml9vcmRlcl9ieSFdKSB7XG4gIGN1cnJlbnRfdG9rZW5fb3duZXJzaGlwc192MihcbiAgICB3aGVyZTogJHdoZXJlX2NvbmRpdGlvblxuICAgIG9mZnNldDogJG9mZnNldFxuICAgIGxpbWl0OiAkbGltaXRcbiAgICBvcmRlcl9ieTogJG9yZGVyX2J5XG4gICkge1xuICAgIC4uLkN1cnJlbnRUb2tlbk93bmVyc2hpcEZpZWxkc1xuICB9XG59XG4gICAgJHtDdXJyZW50VG9rZW5Pd25lcnNoaXBGaWVsZHNGcmFnbWVudERvY31gO1xudmFyIEdldFRva2VuQWN0aXZpdGllcyA9IGBcbiAgICBxdWVyeSBnZXRUb2tlbkFjdGl2aXRpZXMoJHdoZXJlX2NvbmRpdGlvbjogdG9rZW5fYWN0aXZpdGllc192Ml9ib29sX2V4cCEsICRvZmZzZXQ6IEludCwgJGxpbWl0OiBJbnQsICRvcmRlcl9ieTogW3Rva2VuX2FjdGl2aXRpZXNfdjJfb3JkZXJfYnkhXSkge1xuICB0b2tlbl9hY3Rpdml0aWVzX3YyKFxuICAgIHdoZXJlOiAkd2hlcmVfY29uZGl0aW9uXG4gICAgb3JkZXJfYnk6ICRvcmRlcl9ieVxuICAgIG9mZnNldDogJG9mZnNldFxuICAgIGxpbWl0OiAkbGltaXRcbiAgKSB7XG4gICAgLi4uVG9rZW5BY3Rpdml0aWVzRmllbGRzXG4gIH1cbn1cbiAgICAke1Rva2VuQWN0aXZpdGllc0ZpZWxkc0ZyYWdtZW50RG9jfWA7XG52YXIgR2V0VG9rZW5BY3Rpdml0aWVzQ291bnQgPSBgXG4gICAgcXVlcnkgZ2V0VG9rZW5BY3Rpdml0aWVzQ291bnQoJHRva2VuX2lkOiBTdHJpbmcpIHtcbiAgdG9rZW5fYWN0aXZpdGllc192Ml9hZ2dyZWdhdGUod2hlcmU6IHt0b2tlbl9kYXRhX2lkOiB7X2VxOiAkdG9rZW5faWR9fSkge1xuICAgIGFnZ3JlZ2F0ZSB7XG4gICAgICBjb3VudFxuICAgIH1cbiAgfVxufVxuICAgIGA7XG52YXIgR2V0VG9rZW5DdXJyZW50T3duZXJEYXRhID0gYFxuICAgIHF1ZXJ5IGdldFRva2VuQ3VycmVudE93bmVyRGF0YSgkd2hlcmVfY29uZGl0aW9uOiBjdXJyZW50X3Rva2VuX293bmVyc2hpcHNfdjJfYm9vbF9leHAhLCAkb2Zmc2V0OiBJbnQsICRsaW1pdDogSW50LCAkb3JkZXJfYnk6IFtjdXJyZW50X3Rva2VuX293bmVyc2hpcHNfdjJfb3JkZXJfYnkhXSkge1xuICBjdXJyZW50X3Rva2VuX293bmVyc2hpcHNfdjIoXG4gICAgd2hlcmU6ICR3aGVyZV9jb25kaXRpb25cbiAgICBvZmZzZXQ6ICRvZmZzZXRcbiAgICBsaW1pdDogJGxpbWl0XG4gICAgb3JkZXJfYnk6ICRvcmRlcl9ieVxuICApIHtcbiAgICAuLi5DdXJyZW50VG9rZW5Pd25lcnNoaXBGaWVsZHNcbiAgfVxufVxuICAgICR7Q3VycmVudFRva2VuT3duZXJzaGlwRmllbGRzRnJhZ21lbnREb2N9YDtcbnZhciBHZXRUb2tlbkRhdGEgPSBgXG4gICAgcXVlcnkgZ2V0VG9rZW5EYXRhKCR3aGVyZV9jb25kaXRpb246IGN1cnJlbnRfdG9rZW5fZGF0YXNfdjJfYm9vbF9leHAsICRvZmZzZXQ6IEludCwgJGxpbWl0OiBJbnQsICRvcmRlcl9ieTogW2N1cnJlbnRfdG9rZW5fZGF0YXNfdjJfb3JkZXJfYnkhXSkge1xuICBjdXJyZW50X3Rva2VuX2RhdGFzX3YyKFxuICAgIHdoZXJlOiAkd2hlcmVfY29uZGl0aW9uXG4gICAgb2Zmc2V0OiAkb2Zmc2V0XG4gICAgbGltaXQ6ICRsaW1pdFxuICAgIG9yZGVyX2J5OiAkb3JkZXJfYnlcbiAgKSB7XG4gICAgY29sbGVjdGlvbl9pZFxuICAgIGRlc2NyaXB0aW9uXG4gICAgaXNfZnVuZ2libGVfdjJcbiAgICBsYXJnZXN0X3Byb3BlcnR5X3ZlcnNpb25fdjFcbiAgICBsYXN0X3RyYW5zYWN0aW9uX3RpbWVzdGFtcFxuICAgIGxhc3RfdHJhbnNhY3Rpb25fdmVyc2lvblxuICAgIG1heGltdW1cbiAgICBzdXBwbHlcbiAgICB0b2tlbl9kYXRhX2lkXG4gICAgdG9rZW5fbmFtZVxuICAgIHRva2VuX3Byb3BlcnRpZXNcbiAgICB0b2tlbl9zdGFuZGFyZFxuICAgIHRva2VuX3VyaVxuICAgIGN1cnJlbnRfY29sbGVjdGlvbiB7XG4gICAgICBjb2xsZWN0aW9uX2lkXG4gICAgICBjb2xsZWN0aW9uX25hbWVcbiAgICAgIGNyZWF0b3JfYWRkcmVzc1xuICAgICAgY3VycmVudF9zdXBwbHlcbiAgICAgIGRlc2NyaXB0aW9uXG4gICAgICBsYXN0X3RyYW5zYWN0aW9uX3RpbWVzdGFtcFxuICAgICAgbGFzdF90cmFuc2FjdGlvbl92ZXJzaW9uXG4gICAgICBtYXhfc3VwcGx5XG4gICAgICBtdXRhYmxlX2Rlc2NyaXB0aW9uXG4gICAgICBtdXRhYmxlX3VyaVxuICAgICAgdGFibGVfaGFuZGxlX3YxXG4gICAgICB0b2tlbl9zdGFuZGFyZFxuICAgICAgdG90YWxfbWludGVkX3YyXG4gICAgICB1cmlcbiAgICB9XG4gIH1cbn1cbiAgICBgO1xudmFyIEdldFRva2VuT3duZWRGcm9tQ29sbGVjdGlvbiA9IGBcbiAgICBxdWVyeSBnZXRUb2tlbk93bmVkRnJvbUNvbGxlY3Rpb24oJHdoZXJlX2NvbmRpdGlvbjogY3VycmVudF90b2tlbl9vd25lcnNoaXBzX3YyX2Jvb2xfZXhwISwgJG9mZnNldDogSW50LCAkbGltaXQ6IEludCwgJG9yZGVyX2J5OiBbY3VycmVudF90b2tlbl9vd25lcnNoaXBzX3YyX29yZGVyX2J5IV0pIHtcbiAgY3VycmVudF90b2tlbl9vd25lcnNoaXBzX3YyKFxuICAgIHdoZXJlOiAkd2hlcmVfY29uZGl0aW9uXG4gICAgb2Zmc2V0OiAkb2Zmc2V0XG4gICAgbGltaXQ6ICRsaW1pdFxuICAgIG9yZGVyX2J5OiAkb3JkZXJfYnlcbiAgKSB7XG4gICAgLi4uQ3VycmVudFRva2VuT3duZXJzaGlwRmllbGRzXG4gIH1cbn1cbiAgICAke0N1cnJlbnRUb2tlbk93bmVyc2hpcEZpZWxkc0ZyYWdtZW50RG9jfWA7XG52YXIgR2V0VG9rZW5Pd25lcnNEYXRhID0gYFxuICAgIHF1ZXJ5IGdldFRva2VuT3duZXJzRGF0YSgkd2hlcmVfY29uZGl0aW9uOiBjdXJyZW50X3Rva2VuX293bmVyc2hpcHNfdjJfYm9vbF9leHAhLCAkb2Zmc2V0OiBJbnQsICRsaW1pdDogSW50LCAkb3JkZXJfYnk6IFtjdXJyZW50X3Rva2VuX293bmVyc2hpcHNfdjJfb3JkZXJfYnkhXSkge1xuICBjdXJyZW50X3Rva2VuX293bmVyc2hpcHNfdjIoXG4gICAgd2hlcmU6ICR3aGVyZV9jb25kaXRpb25cbiAgICBvZmZzZXQ6ICRvZmZzZXRcbiAgICBsaW1pdDogJGxpbWl0XG4gICAgb3JkZXJfYnk6ICRvcmRlcl9ieVxuICApIHtcbiAgICAuLi5DdXJyZW50VG9rZW5Pd25lcnNoaXBGaWVsZHNcbiAgfVxufVxuICAgICR7Q3VycmVudFRva2VuT3duZXJzaGlwRmllbGRzRnJhZ21lbnREb2N9YDtcbnZhciBHZXRUb3BVc2VyVHJhbnNhY3Rpb25zID0gYFxuICAgIHF1ZXJ5IGdldFRvcFVzZXJUcmFuc2FjdGlvbnMoJGxpbWl0OiBJbnQpIHtcbiAgdXNlcl90cmFuc2FjdGlvbnMobGltaXQ6ICRsaW1pdCwgb3JkZXJfYnk6IHt2ZXJzaW9uOiBkZXNjfSkge1xuICAgIHZlcnNpb25cbiAgfVxufVxuICAgIGA7XG52YXIgR2V0VXNlclRyYW5zYWN0aW9ucyA9IGBcbiAgICBxdWVyeSBnZXRVc2VyVHJhbnNhY3Rpb25zKCR3aGVyZV9jb25kaXRpb246IHVzZXJfdHJhbnNhY3Rpb25zX2Jvb2xfZXhwISwgJG9mZnNldDogSW50LCAkbGltaXQ6IEludCwgJG9yZGVyX2J5OiBbdXNlcl90cmFuc2FjdGlvbnNfb3JkZXJfYnkhXSkge1xuICB1c2VyX3RyYW5zYWN0aW9ucyhcbiAgICBvcmRlcl9ieTogJG9yZGVyX2J5XG4gICAgd2hlcmU6ICR3aGVyZV9jb25kaXRpb25cbiAgICBsaW1pdDogJGxpbWl0XG4gICAgb2Zmc2V0OiAkb2Zmc2V0XG4gICkge1xuICAgIHZlcnNpb25cbiAgfVxufVxuICAgIGA7XG5cbi8vIHNyYy90cmFuc2FjdGlvbl9idWlsZGVyL2J1aWxkZXIudHNcbmltcG9ydCB7IHNoYTNfMjU2IGFzIHNoYTNIYXNoNCB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3NoYTNcIjtcblxuLy8gc3JjL3RyYW5zYWN0aW9uX2J1aWxkZXIvYnVpbGRlcl91dGlscy50c1xuZnVuY3Rpb24gYXNzZXJ0VHlwZSh2YWwsIHR5cGVzLCBtZXNzYWdlKSB7XG4gIGlmICghKHR5cGVzID09IG51bGwgPyB2b2lkIDAgOiB0eXBlcy5pbmNsdWRlcyh0eXBlb2YgdmFsKSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBtZXNzYWdlIHx8IGBJbnZhbGlkIGFyZzogJHt2YWx9IHR5cGUgc2hvdWxkIGJlICR7dHlwZXMgaW5zdGFuY2VvZiBBcnJheSA/IHR5cGVzLmpvaW4oXCIgb3IgXCIpIDogdHlwZXN9YFxuICAgICk7XG4gIH1cbn1cbmZ1bmN0aW9uIGVuc3VyZUJvb2xlYW4odmFsKSB7XG4gIGFzc2VydFR5cGUodmFsLCBbXCJib29sZWFuXCIsIFwic3RyaW5nXCJdKTtcbiAgaWYgKHR5cGVvZiB2YWwgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgcmV0dXJuIHZhbDtcbiAgfVxuICBpZiAodmFsID09PSBcInRydWVcIikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmICh2YWwgPT09IFwiZmFsc2VcIikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGJvb2xlYW4gc3RyaW5nLlwiKTtcbn1cbmZ1bmN0aW9uIGVuc3VyZU51bWJlcih2YWwpIHtcbiAgYXNzZXJ0VHlwZSh2YWwsIFtcIm51bWJlclwiLCBcInN0cmluZ1wiXSk7XG4gIGlmICh0eXBlb2YgdmFsID09PSBcIm51bWJlclwiKSB7XG4gICAgcmV0dXJuIHZhbDtcbiAgfVxuICBjb25zdCByZXMgPSBOdW1iZXIucGFyc2VJbnQodmFsLCAxMCk7XG4gIGlmIChOdW1iZXIuaXNOYU4ocmVzKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgbnVtYmVyIHN0cmluZy5cIik7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cbmZ1bmN0aW9uIGVuc3VyZUJpZ0ludCh2YWwpIHtcbiAgYXNzZXJ0VHlwZSh2YWwsIFtcIm51bWJlclwiLCBcImJpZ2ludFwiLCBcInN0cmluZ1wiXSk7XG4gIHJldHVybiBCaWdJbnQodmFsKTtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZUFyZyhhcmdWYWwsIGFyZ1R5cGUsIHNlcmlhbGl6ZXIpIHtcbiAgc2VyaWFsaXplQXJnSW5uZXIoYXJnVmFsLCBhcmdUeXBlLCBzZXJpYWxpemVyLCAwKTtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZUFyZ0lubmVyKGFyZ1ZhbCwgYXJnVHlwZSwgc2VyaWFsaXplciwgZGVwdGgpIHtcbiAgaWYgKGFyZ1R5cGUgaW5zdGFuY2VvZiBUeXBlVGFnQm9vbCkge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplQm9vbChlbnN1cmVCb29sZWFuKGFyZ1ZhbCkpO1xuICB9IGVsc2UgaWYgKGFyZ1R5cGUgaW5zdGFuY2VvZiBUeXBlVGFnVTgpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVU4KGVuc3VyZU51bWJlcihhcmdWYWwpKTtcbiAgfSBlbHNlIGlmIChhcmdUeXBlIGluc3RhbmNlb2YgVHlwZVRhZ1UxNikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTE2KGVuc3VyZU51bWJlcihhcmdWYWwpKTtcbiAgfSBlbHNlIGlmIChhcmdUeXBlIGluc3RhbmNlb2YgVHlwZVRhZ1UzMikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyKGVuc3VyZU51bWJlcihhcmdWYWwpKTtcbiAgfSBlbHNlIGlmIChhcmdUeXBlIGluc3RhbmNlb2YgVHlwZVRhZ1U2NCkge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTY0KGVuc3VyZUJpZ0ludChhcmdWYWwpKTtcbiAgfSBlbHNlIGlmIChhcmdUeXBlIGluc3RhbmNlb2YgVHlwZVRhZ1UxMjgpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUxMjgoZW5zdXJlQmlnSW50KGFyZ1ZhbCkpO1xuICB9IGVsc2UgaWYgKGFyZ1R5cGUgaW5zdGFuY2VvZiBUeXBlVGFnVTI1Nikge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTI1NihlbnN1cmVCaWdJbnQoYXJnVmFsKSk7XG4gIH0gZWxzZSBpZiAoYXJnVHlwZSBpbnN0YW5jZW9mIFR5cGVUYWdBZGRyZXNzKSB7XG4gICAgc2VyaWFsaXplQWRkcmVzcyhhcmdWYWwsIHNlcmlhbGl6ZXIpO1xuICB9IGVsc2UgaWYgKGFyZ1R5cGUgaW5zdGFuY2VvZiBUeXBlVGFnVmVjdG9yKSB7XG4gICAgc2VyaWFsaXplVmVjdG9yMihhcmdWYWwsIGFyZ1R5cGUsIHNlcmlhbGl6ZXIsIGRlcHRoKTtcbiAgfSBlbHNlIGlmIChhcmdUeXBlIGluc3RhbmNlb2YgVHlwZVRhZ1N0cnVjdCkge1xuICAgIHNlcmlhbGl6ZVN0cnVjdChhcmdWYWwsIGFyZ1R5cGUsIHNlcmlhbGl6ZXIsIGRlcHRoKTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBhcmcgdHlwZS5cIik7XG4gIH1cbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZUFkZHJlc3MoYXJnVmFsLCBzZXJpYWxpemVyKSB7XG4gIGxldCBhZGRyO1xuICBpZiAodHlwZW9mIGFyZ1ZhbCA9PT0gXCJzdHJpbmdcIiB8fCBhcmdWYWwgaW5zdGFuY2VvZiBIZXhTdHJpbmcpIHtcbiAgICBhZGRyID0gQWNjb3VudEFkZHJlc3MuZnJvbUhleChhcmdWYWwpO1xuICB9IGVsc2UgaWYgKGFyZ1ZhbCBpbnN0YW5jZW9mIEFjY291bnRBZGRyZXNzKSB7XG4gICAgYWRkciA9IGFyZ1ZhbDtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFjY291bnQgYWRkcmVzcy5cIik7XG4gIH1cbiAgYWRkci5zZXJpYWxpemUoc2VyaWFsaXplcik7XG59XG5mdW5jdGlvbiBzZXJpYWxpemVWZWN0b3IyKGFyZ1ZhbCwgYXJnVHlwZSwgc2VyaWFsaXplciwgZGVwdGgpIHtcbiAgaWYgKGFyZ1R5cGUudmFsdWUgaW5zdGFuY2VvZiBUeXBlVGFnVTgpIHtcbiAgICBpZiAoYXJnVmFsIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgc2VyaWFsaXplci5zZXJpYWxpemVCeXRlcyhhcmdWYWwpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoYXJnVmFsIGluc3RhbmNlb2YgSGV4U3RyaW5nKSB7XG4gICAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZUJ5dGVzKGFyZ1ZhbC50b1VpbnQ4QXJyYXkoKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYXJnVmFsID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVN0cihhcmdWYWwpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuICBpZiAoIUFycmF5LmlzQXJyYXkoYXJnVmFsKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdmVjdG9yIGFyZ3MuXCIpO1xuICB9XG4gIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KGFyZ1ZhbC5sZW5ndGgpO1xuICBhcmdWYWwuZm9yRWFjaCgoYXJnKSA9PiBzZXJpYWxpemVBcmdJbm5lcihhcmcsIGFyZ1R5cGUudmFsdWUsIHNlcmlhbGl6ZXIsIGRlcHRoICsgMSkpO1xufVxuZnVuY3Rpb24gc2VyaWFsaXplU3RydWN0KGFyZ1ZhbCwgYXJnVHlwZSwgc2VyaWFsaXplciwgZGVwdGgpIHtcbiAgY29uc3QgeyBhZGRyZXNzLCBtb2R1bGVfbmFtZTogbW9kdWxlTmFtZSwgbmFtZSwgdHlwZV9hcmdzOiB0eXBlQXJncyB9ID0gYXJnVHlwZS52YWx1ZTtcbiAgY29uc3Qgc3RydWN0VHlwZSA9IGAke0hleFN0cmluZy5mcm9tVWludDhBcnJheShhZGRyZXNzLmFkZHJlc3MpLnRvU2hvcnRTdHJpbmcoKX06OiR7bW9kdWxlTmFtZS52YWx1ZX06OiR7bmFtZS52YWx1ZX1gO1xuICBpZiAoc3RydWN0VHlwZSA9PT0gXCIweDE6OnN0cmluZzo6U3RyaW5nXCIpIHtcbiAgICBhc3NlcnRUeXBlKGFyZ1ZhbCwgW1wic3RyaW5nXCJdKTtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVN0cihhcmdWYWwpO1xuICB9IGVsc2UgaWYgKHN0cnVjdFR5cGUgPT09IFwiMHgxOjpvYmplY3Q6Ok9iamVjdFwiKSB7XG4gICAgc2VyaWFsaXplQWRkcmVzcyhhcmdWYWwsIHNlcmlhbGl6ZXIpO1xuICB9IGVsc2UgaWYgKHN0cnVjdFR5cGUgPT09IFwiMHgxOjpvcHRpb246Ok9wdGlvblwiKSB7XG4gICAgaWYgKHR5cGVBcmdzLmxlbmd0aCAhPT0gMSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBPcHRpb24gaGFzIHRoZSB3cm9uZyBudW1iZXIgb2YgdHlwZSBhcmd1bWVudHMgJHt0eXBlQXJncy5sZW5ndGh9YCk7XG4gICAgfVxuICAgIHNlcmlhbGl6ZU9wdGlvbihhcmdWYWwsIHR5cGVBcmdzWzBdLCBzZXJpYWxpemVyLCBkZXB0aCk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgc3RydWN0IHR5cGUgaW4gZnVuY3Rpb24gYXJndW1lbnRcIik7XG4gIH1cbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZU9wdGlvbihhcmdWYWwsIGFyZ1R5cGUsIHNlcmlhbGl6ZXIsIGRlcHRoKSB7XG4gIGlmIChhcmdWYWwgPT09IHZvaWQgMCB8fCBhcmdWYWwgPT09IG51bGwpIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCgwKTtcbiAgfSBlbHNlIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVUzMkFzVWxlYjEyOCgxKTtcbiAgICBzZXJpYWxpemVBcmdJbm5lcihhcmdWYWwsIGFyZ1R5cGUsIHNlcmlhbGl6ZXIsIGRlcHRoICsgMSk7XG4gIH1cbn1cbmZ1bmN0aW9uIGFyZ1RvVHJhbnNhY3Rpb25Bcmd1bWVudChhcmdWYWwsIGFyZ1R5cGUpIHtcbiAgaWYgKGFyZ1R5cGUgaW5zdGFuY2VvZiBUeXBlVGFnQm9vbCkge1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25Bcmd1bWVudEJvb2woZW5zdXJlQm9vbGVhbihhcmdWYWwpKTtcbiAgfVxuICBpZiAoYXJnVHlwZSBpbnN0YW5jZW9mIFR5cGVUYWdVOCkge1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25Bcmd1bWVudFU4KGVuc3VyZU51bWJlcihhcmdWYWwpKTtcbiAgfVxuICBpZiAoYXJnVHlwZSBpbnN0YW5jZW9mIFR5cGVUYWdVMTYpIHtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uQXJndW1lbnRVMTYoZW5zdXJlTnVtYmVyKGFyZ1ZhbCkpO1xuICB9XG4gIGlmIChhcmdUeXBlIGluc3RhbmNlb2YgVHlwZVRhZ1UzMikge1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25Bcmd1bWVudFUzMihlbnN1cmVOdW1iZXIoYXJnVmFsKSk7XG4gIH1cbiAgaWYgKGFyZ1R5cGUgaW5zdGFuY2VvZiBUeXBlVGFnVTY0KSB7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkFyZ3VtZW50VTY0KGVuc3VyZUJpZ0ludChhcmdWYWwpKTtcbiAgfVxuICBpZiAoYXJnVHlwZSBpbnN0YW5jZW9mIFR5cGVUYWdVMTI4KSB7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkFyZ3VtZW50VTEyOChlbnN1cmVCaWdJbnQoYXJnVmFsKSk7XG4gIH1cbiAgaWYgKGFyZ1R5cGUgaW5zdGFuY2VvZiBUeXBlVGFnVTI1Nikge1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25Bcmd1bWVudFUyNTYoZW5zdXJlQmlnSW50KGFyZ1ZhbCkpO1xuICB9XG4gIGlmIChhcmdUeXBlIGluc3RhbmNlb2YgVHlwZVRhZ0FkZHJlc3MpIHtcbiAgICBsZXQgYWRkcjtcbiAgICBpZiAodHlwZW9mIGFyZ1ZhbCA9PT0gXCJzdHJpbmdcIiB8fCBhcmdWYWwgaW5zdGFuY2VvZiBIZXhTdHJpbmcpIHtcbiAgICAgIGFkZHIgPSBBY2NvdW50QWRkcmVzcy5mcm9tSGV4KGFyZ1ZhbCk7XG4gICAgfSBlbHNlIGlmIChhcmdWYWwgaW5zdGFuY2VvZiBBY2NvdW50QWRkcmVzcykge1xuICAgICAgYWRkciA9IGFyZ1ZhbDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhY2NvdW50IGFkZHJlc3MuXCIpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uQXJndW1lbnRBZGRyZXNzKGFkZHIpO1xuICB9XG4gIGlmIChhcmdUeXBlIGluc3RhbmNlb2YgVHlwZVRhZ1ZlY3RvciAmJiBhcmdUeXBlLnZhbHVlIGluc3RhbmNlb2YgVHlwZVRhZ1U4KSB7XG4gICAgaWYgKCEoYXJnVmFsIGluc3RhbmNlb2YgVWludDhBcnJheSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgJHthcmdWYWx9IHNob3VsZCBiZSBhbiBpbnN0YW5jZSBvZiBVaW50OEFycmF5YCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25Bcmd1bWVudFU4VmVjdG9yKGFyZ1ZhbCk7XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biB0eXBlIGZvciBUcmFuc2FjdGlvbkFyZ3VtZW50LlwiKTtcbn1cblxuLy8gc3JjL3RyYW5zYWN0aW9uX2J1aWxkZXIvYnVpbGRlci50c1xudmFyIFJBV19UUkFOU0FDVElPTl9TQUxUID0gXCJBUFRPUzo6UmF3VHJhbnNhY3Rpb25cIjtcbnZhciBSQVdfVFJBTlNBQ1RJT05fV0lUSF9EQVRBX1NBTFQgPSBcIkFQVE9TOjpSYXdUcmFuc2FjdGlvbldpdGhEYXRhXCI7XG52YXIgVHJhbnNhY3Rpb25CdWlsZGVyID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcihzaWduaW5nRnVuY3Rpb24sIHJhd1R4bkJ1aWxkZXIpIHtcbiAgICB0aGlzLnJhd1R4bkJ1aWxkZXIgPSByYXdUeG5CdWlsZGVyO1xuICAgIHRoaXMuc2lnbmluZ0Z1bmN0aW9uID0gc2lnbmluZ0Z1bmN0aW9uO1xuICB9XG4gIC8qKlxuICAgKiBCdWlsZHMgYSBSYXdUcmFuc2FjdGlvbi4gUmVsYXlzIHRoZSBjYWxsIHRvIFRyYW5zYWN0aW9uQnVpbGRlckFCSS5idWlsZFxuICAgKiBAcGFyYW0gZnVuY1xuICAgKiBAcGFyYW0gdHlfdGFnc1xuICAgKiBAcGFyYW0gYXJnc1xuICAgKi9cbiAgYnVpbGQoZnVuYywgdHlfdGFncywgYXJncykge1xuICAgIGlmICghdGhpcy5yYXdUeG5CdWlsZGVyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0aGlzLnJhd1R4bkJ1aWxkZXIgZG9lc24ndCBleGlzdC5cIik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnJhd1R4bkJ1aWxkZXIuYnVpbGQoZnVuYywgdHlfdGFncywgYXJncyk7XG4gIH1cbiAgLyoqIEdlbmVyYXRlcyBhIFNpZ25pbmcgTWVzc2FnZSBvdXQgb2YgYSByYXcgdHJhbnNhY3Rpb24uICovXG4gIHN0YXRpYyBnZXRTaWduaW5nTWVzc2FnZShyYXdUeG4pIHtcbiAgICBjb25zdCBoYXNoID0gc2hhM0hhc2g0LmNyZWF0ZSgpO1xuICAgIGlmIChyYXdUeG4gaW5zdGFuY2VvZiBSYXdUcmFuc2FjdGlvbikge1xuICAgICAgaGFzaC51cGRhdGUoUkFXX1RSQU5TQUNUSU9OX1NBTFQpO1xuICAgIH0gZWxzZSBpZiAocmF3VHhuIGluc3RhbmNlb2YgTXVsdGlBZ2VudFJhd1RyYW5zYWN0aW9uKSB7XG4gICAgICBoYXNoLnVwZGF0ZShSQVdfVFJBTlNBQ1RJT05fV0lUSF9EQVRBX1NBTFQpO1xuICAgIH0gZWxzZSBpZiAocmF3VHhuIGluc3RhbmNlb2YgRmVlUGF5ZXJSYXdUcmFuc2FjdGlvbikge1xuICAgICAgaGFzaC51cGRhdGUoUkFXX1RSQU5TQUNUSU9OX1dJVEhfREFUQV9TQUxUKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biB0cmFuc2FjdGlvbiB0eXBlLlwiKTtcbiAgICB9XG4gICAgY29uc3QgcHJlZml4ID0gaGFzaC5kaWdlc3QoKTtcbiAgICBjb25zdCBib2R5ID0gYmNzVG9CeXRlcyhyYXdUeG4pO1xuICAgIGNvbnN0IG1lcmdlZEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkocHJlZml4Lmxlbmd0aCArIGJvZHkubGVuZ3RoKTtcbiAgICBtZXJnZWRBcnJheS5zZXQocHJlZml4KTtcbiAgICBtZXJnZWRBcnJheS5zZXQoYm9keSwgcHJlZml4Lmxlbmd0aCk7XG4gICAgcmV0dXJuIG1lcmdlZEFycmF5O1xuICB9XG59O1xudmFyIFRyYW5zYWN0aW9uQnVpbGRlckVkMjU1MTkgPSBjbGFzcyBleHRlbmRzIFRyYW5zYWN0aW9uQnVpbGRlciB7XG4gIGNvbnN0cnVjdG9yKHNpZ25pbmdGdW5jdGlvbiwgcHVibGljS2V5LCByYXdUeG5CdWlsZGVyKSB7XG4gICAgc3VwZXIoc2lnbmluZ0Z1bmN0aW9uLCByYXdUeG5CdWlsZGVyKTtcbiAgICB0aGlzLnB1YmxpY0tleSA9IHB1YmxpY0tleTtcbiAgfVxuICByYXdUb1NpZ25lZChyYXdUeG4pIHtcbiAgICBjb25zdCBzaWduaW5nTWVzc2FnZSA9IFRyYW5zYWN0aW9uQnVpbGRlci5nZXRTaWduaW5nTWVzc2FnZShyYXdUeG4pO1xuICAgIGNvbnN0IHNpZ25hdHVyZSA9IHRoaXMuc2lnbmluZ0Z1bmN0aW9uKHNpZ25pbmdNZXNzYWdlKTtcbiAgICBjb25zdCBhdXRoZW50aWNhdG9yID0gbmV3IFRyYW5zYWN0aW9uQXV0aGVudGljYXRvckVkMjU1MTkoXG4gICAgICBuZXcgRWQyNTUxOVB1YmxpY0tleSh0aGlzLnB1YmxpY0tleSksXG4gICAgICBzaWduYXR1cmVcbiAgICApO1xuICAgIHJldHVybiBuZXcgU2lnbmVkVHJhbnNhY3Rpb24ocmF3VHhuLCBhdXRoZW50aWNhdG9yKTtcbiAgfVxuICAvKiogU2lnbnMgYSByYXcgdHJhbnNhY3Rpb24gYW5kIHJldHVybnMgYSBiY3Mgc2VyaWFsaXplZCB0cmFuc2FjdGlvbi4gKi9cbiAgc2lnbihyYXdUeG4pIHtcbiAgICByZXR1cm4gYmNzVG9CeXRlcyh0aGlzLnJhd1RvU2lnbmVkKHJhd1R4bikpO1xuICB9XG59O1xudmFyIFRyYW5zYWN0aW9uQnVpbGRlck11bHRpRWQyNTUxOSA9IGNsYXNzIGV4dGVuZHMgVHJhbnNhY3Rpb25CdWlsZGVyIHtcbiAgY29uc3RydWN0b3Ioc2lnbmluZ0Z1bmN0aW9uLCBwdWJsaWNLZXkpIHtcbiAgICBzdXBlcihzaWduaW5nRnVuY3Rpb24pO1xuICAgIHRoaXMucHVibGljS2V5ID0gcHVibGljS2V5O1xuICB9XG4gIHJhd1RvU2lnbmVkKHJhd1R4bikge1xuICAgIGNvbnN0IHNpZ25pbmdNZXNzYWdlID0gVHJhbnNhY3Rpb25CdWlsZGVyLmdldFNpZ25pbmdNZXNzYWdlKHJhd1R4bik7XG4gICAgY29uc3Qgc2lnbmF0dXJlID0gdGhpcy5zaWduaW5nRnVuY3Rpb24oc2lnbmluZ01lc3NhZ2UpO1xuICAgIGNvbnN0IGF1dGhlbnRpY2F0b3IgPSBuZXcgVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yTXVsdGlFZDI1NTE5KHRoaXMucHVibGljS2V5LCBzaWduYXR1cmUpO1xuICAgIHJldHVybiBuZXcgU2lnbmVkVHJhbnNhY3Rpb24ocmF3VHhuLCBhdXRoZW50aWNhdG9yKTtcbiAgfVxuICAvKiogU2lnbnMgYSByYXcgdHJhbnNhY3Rpb24gYW5kIHJldHVybnMgYSBiY3Mgc2VyaWFsaXplZCB0cmFuc2FjdGlvbi4gKi9cbiAgc2lnbihyYXdUeG4pIHtcbiAgICByZXR1cm4gYmNzVG9CeXRlcyh0aGlzLnJhd1RvU2lnbmVkKHJhd1R4bikpO1xuICB9XG59O1xudmFyIFRyYW5zYWN0aW9uQnVpbGRlckFCSSA9IGNsYXNzIF9UcmFuc2FjdGlvbkJ1aWxkZXJBQkkge1xuICAvKipcbiAgICogQ29uc3RydWN0cyBhIFRyYW5zYWN0aW9uQnVpbGRlckFCSSBpbnN0YW5jZVxuICAgKiBAcGFyYW0gYWJpcyBMaXN0IG9mIGJpbmFyeSBBQklzLlxuICAgKiBAcGFyYW0gYnVpbGRlckNvbmZpZyBDb25maWdzIGZvciBjcmVhdGluZyBhIHJhdyB0cmFuc2FjdGlvbi5cbiAgICovXG4gIGNvbnN0cnVjdG9yKGFiaXMsIGJ1aWxkZXJDb25maWcpIHtcbiAgICB0aGlzLmFiaU1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gICAgYWJpcy5mb3JFYWNoKChhYmkpID0+IHtcbiAgICAgIGNvbnN0IGRlc2VyaWFsaXplciA9IG5ldyBEZXNlcmlhbGl6ZXIoYWJpKTtcbiAgICAgIGNvbnN0IHNjcmlwdEFCSSA9IFNjcmlwdEFCSS5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgICAgbGV0IGs7XG4gICAgICBpZiAoc2NyaXB0QUJJIGluc3RhbmNlb2YgRW50cnlGdW5jdGlvbkFCSSkge1xuICAgICAgICBjb25zdCBmdW5jQUJJID0gc2NyaXB0QUJJO1xuICAgICAgICBjb25zdCB7IGFkZHJlc3M6IGFkZHIsIG5hbWU6IG1vZHVsZU5hbWUgfSA9IGZ1bmNBQkkubW9kdWxlX25hbWU7XG4gICAgICAgIGsgPSBgJHtIZXhTdHJpbmcuZnJvbVVpbnQ4QXJyYXkoYWRkci5hZGRyZXNzKS50b1Nob3J0U3RyaW5nKCl9Ojoke21vZHVsZU5hbWUudmFsdWV9Ojoke2Z1bmNBQkkubmFtZX1gO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgZnVuY0FCSSA9IHNjcmlwdEFCSTtcbiAgICAgICAgayA9IGZ1bmNBQkkubmFtZTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLmFiaU1hcC5oYXMoaykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRm91bmQgY29uZmxpY3RpbmcgQUJJIGludGVyZmFjZXNcIik7XG4gICAgICB9XG4gICAgICB0aGlzLmFiaU1hcC5zZXQoaywgc2NyaXB0QUJJKTtcbiAgICB9KTtcbiAgICB0aGlzLmJ1aWxkZXJDb25maWcgPSB7XG4gICAgICBtYXhHYXNBbW91bnQ6IEJpZ0ludChERUZBVUxUX01BWF9HQVNfQU1PVU5UKSxcbiAgICAgIGV4cFNlY0Zyb21Ob3c6IERFRkFVTFRfVFhOX0VYUF9TRUNfRlJPTV9OT1csXG4gICAgICAuLi5idWlsZGVyQ29uZmlnXG4gICAgfTtcbiAgfVxuICBzdGF0aWMgdG9CQ1NBcmdzKGFiaUFyZ3MsIGFyZ3MpIHtcbiAgICBpZiAoYWJpQXJncy5sZW5ndGggIT09IGFyZ3MubGVuZ3RoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJXcm9uZyBudW1iZXIgb2YgYXJncyBwcm92aWRlZC5cIik7XG4gICAgfVxuICAgIHJldHVybiBhcmdzLm1hcCgoYXJnLCBpKSA9PiB7XG4gICAgICBjb25zdCBzZXJpYWxpemVyID0gbmV3IFNlcmlhbGl6ZXIoKTtcbiAgICAgIHNlcmlhbGl6ZUFyZyhhcmcsIGFiaUFyZ3NbaV0udHlwZV90YWcsIHNlcmlhbGl6ZXIpO1xuICAgICAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbiAgICB9KTtcbiAgfVxuICBzdGF0aWMgdG9UcmFuc2FjdGlvbkFyZ3VtZW50cyhhYmlBcmdzLCBhcmdzKSB7XG4gICAgaWYgKGFiaUFyZ3MubGVuZ3RoICE9PSBhcmdzLmxlbmd0aCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV3JvbmcgbnVtYmVyIG9mIGFyZ3MgcHJvdmlkZWQuXCIpO1xuICAgIH1cbiAgICByZXR1cm4gYXJncy5tYXAoKGFyZywgaSkgPT4gYXJnVG9UcmFuc2FjdGlvbkFyZ3VtZW50KGFyZywgYWJpQXJnc1tpXS50eXBlX3RhZykpO1xuICB9XG4gIHNldFNlcXVlbmNlTnVtYmVyKHNlcU51bWJlcikge1xuICAgIHRoaXMuYnVpbGRlckNvbmZpZy5zZXF1ZW5jZU51bWJlciA9IEJpZ0ludChzZXFOdW1iZXIpO1xuICB9XG4gIC8qKlxuICAgKiBCdWlsZHMgYSBUcmFuc2FjdGlvblBheWxvYWQuIEZvciBkQXBwcywgY2hhaW4gSUQgYW5kIGFjY291bnQgc2VxdWVuY2UgbnVtYmVycyBhcmUgb25seSBrbm93biB0byB0aGUgd2FsbGV0LlxuICAgKiBJbnN0ZWFkIG9mIGJ1aWxkaW5nIGEgUmF3VHJhbnNhY3Rpb24gKHJlcXVpcmVzIGNoYWluSUQgYW5kIHNlcXVlbmNlTnVtYmVyKSwgZEFwcHMgY2FuIGJ1aWxkIGEgVHJhbnNhY3Rpb25QYXlsb2FkXG4gICAqIGFuZCBwYXNzIHRoZSBwYXlsb2FkIHRvIHRoZSB3YWxsZXQgZm9yIHNpZ25pbmcgYW5kIHNlbmRpbmcuXG4gICAqIEBwYXJhbSBmdW5jIEZ1bGx5IHF1YWxpZmllZCBmdW5jIG5hbWVzLCBlLmcuIDB4MTo6YXB0b3NfYWNjb3VudDo6dHJhbnNmZXJcbiAgICogQHBhcmFtIHR5X3RhZ3MgVHlwZVRhZyBzdHJpbmdzXG4gICAqIEBwYXJhbSBhcmdzIEZ1bmN0aW9uIGFyZ3VtZW50c1xuICAgKiBAcmV0dXJucyBUcmFuc2FjdGlvblBheWxvYWRcbiAgICovXG4gIGJ1aWxkVHJhbnNhY3Rpb25QYXlsb2FkKGZ1bmMsIHR5X3RhZ3MsIGFyZ3MpIHtcbiAgICBjb25zdCB0eXBlVGFncyA9IHR5X3RhZ3MubWFwKCh0eV9hcmcpID0+IG5ldyBUeXBlVGFnUGFyc2VyKHR5X2FyZykucGFyc2VUeXBlVGFnKCkpO1xuICAgIGxldCBwYXlsb2FkO1xuICAgIGlmICghdGhpcy5hYmlNYXAuaGFzKGZ1bmMpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBmaW5kIGZ1bmN0aW9uOiAke2Z1bmN9YCk7XG4gICAgfVxuICAgIGNvbnN0IHNjcmlwdEFCSSA9IHRoaXMuYWJpTWFwLmdldChmdW5jKTtcbiAgICBpZiAoc2NyaXB0QUJJIGluc3RhbmNlb2YgRW50cnlGdW5jdGlvbkFCSSkge1xuICAgICAgY29uc3QgZnVuY0FCSSA9IHNjcmlwdEFCSTtcbiAgICAgIGNvbnN0IGJjc0FyZ3MgPSBfVHJhbnNhY3Rpb25CdWlsZGVyQUJJLnRvQkNTQXJncyhmdW5jQUJJLmFyZ3MsIGFyZ3MpO1xuICAgICAgcGF5bG9hZCA9IG5ldyBUcmFuc2FjdGlvblBheWxvYWRFbnRyeUZ1bmN0aW9uKFxuICAgICAgICBuZXcgRW50cnlGdW5jdGlvbihmdW5jQUJJLm1vZHVsZV9uYW1lLCBuZXcgSWRlbnRpZmllcihmdW5jQUJJLm5hbWUpLCB0eXBlVGFncywgYmNzQXJncylcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChzY3JpcHRBQkkgaW5zdGFuY2VvZiBUcmFuc2FjdGlvblNjcmlwdEFCSSkge1xuICAgICAgY29uc3QgZnVuY0FCSSA9IHNjcmlwdEFCSTtcbiAgICAgIGNvbnN0IHNjcmlwdEFyZ3MgPSBfVHJhbnNhY3Rpb25CdWlsZGVyQUJJLnRvVHJhbnNhY3Rpb25Bcmd1bWVudHMoZnVuY0FCSS5hcmdzLCBhcmdzKTtcbiAgICAgIHBheWxvYWQgPSBuZXcgVHJhbnNhY3Rpb25QYXlsb2FkU2NyaXB0KG5ldyBTY3JpcHQoZnVuY0FCSS5jb2RlLCB0eXBlVGFncywgc2NyaXB0QXJncykpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIEFCSSBmb3JtYXQuXCIpO1xuICAgIH1cbiAgICByZXR1cm4gcGF5bG9hZDtcbiAgfVxuICAvKipcbiAgICogQnVpbGRzIGEgUmF3VHJhbnNhY3Rpb25cbiAgICogQHBhcmFtIGZ1bmMgRnVsbHkgcXVhbGlmaWVkIGZ1bmMgbmFtZXMsIGUuZy4gMHgxOjphcHRvc19hY2NvdW50Ojp0cmFuc2ZlclxuICAgKiBAcGFyYW0gdHlfdGFncyBUeXBlVGFnIHN0cmluZ3MuXG4gICAqIEBleGFtcGxlIEJlbG93IGFyZSB2YWxpZCB2YWx1ZSBleGFtcGxlc1xuICAgKiBgYGBcbiAgICogLy8gU3RydWN0cyBhcmUgaW4gZm9ybWF0IGBBY2NvdW50QWRkcmVzczo6TW9kdWxlTmFtZTo6U3RydWN0TmFtZWBcbiAgICogMHgxOjphcHRvc19jb2luOjpBcHRvc0NvaW5cbiAgICogLy8gVmVjdG9ycyBhcmUgaW4gZm9ybWF0IGB2ZWN0b3I8b3RoZXJfdGFnX3N0cmluZz5gXG4gICAqIHZlY3RvcjwweDE6OmFwdG9zX2NvaW46OkFwdG9zQ29pbj5cbiAgICogYm9vbFxuICAgKiB1OFxuICAgKiB1MTZcbiAgICogdTMyXG4gICAqIHU2NFxuICAgKiB1MTI4XG4gICAqIHUyNTZcbiAgICogYWRkcmVzc1xuICAgKiBgYGBcbiAgICogQHBhcmFtIGFyZ3MgRnVuY3Rpb24gYXJndW1lbnRzXG4gICAqIEByZXR1cm5zIFJhd1RyYW5zYWN0aW9uXG4gICAqL1xuICBidWlsZChmdW5jLCB0eV90YWdzLCBhcmdzKSB7XG4gICAgY29uc3QgeyBzZW5kZXIsIHNlcXVlbmNlTnVtYmVyLCBnYXNVbml0UHJpY2UsIG1heEdhc0Ftb3VudCwgZXhwU2VjRnJvbU5vdywgY2hhaW5JZCB9ID0gdGhpcy5idWlsZGVyQ29uZmlnO1xuICAgIGlmICghZ2FzVW5pdFByaWNlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBnYXNVbml0UHJpY2UgcHJvdmlkZWQuXCIpO1xuICAgIH1cbiAgICBjb25zdCBzZW5kZXJBY2NvdW50ID0gc2VuZGVyIGluc3RhbmNlb2YgQWNjb3VudEFkZHJlc3MgPyBzZW5kZXIgOiBBY2NvdW50QWRkcmVzcy5mcm9tSGV4KHNlbmRlcik7XG4gICAgY29uc3QgZXhwVGltZXN0YW1wU2VjID0gQmlnSW50KE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDFlMykgKyBOdW1iZXIoZXhwU2VjRnJvbU5vdykpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB0aGlzLmJ1aWxkVHJhbnNhY3Rpb25QYXlsb2FkKGZ1bmMsIHR5X3RhZ3MsIGFyZ3MpO1xuICAgIGlmIChwYXlsb2FkKSB7XG4gICAgICByZXR1cm4gbmV3IFJhd1RyYW5zYWN0aW9uKFxuICAgICAgICBzZW5kZXJBY2NvdW50LFxuICAgICAgICBCaWdJbnQoc2VxdWVuY2VOdW1iZXIpLFxuICAgICAgICBwYXlsb2FkLFxuICAgICAgICBCaWdJbnQobWF4R2FzQW1vdW50KSxcbiAgICAgICAgQmlnSW50KGdhc1VuaXRQcmljZSksXG4gICAgICAgIGV4cFRpbWVzdGFtcFNlYyxcbiAgICAgICAgbmV3IENoYWluSWQoTnVtYmVyKGNoYWluSWQpKVxuICAgICAgKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBBQkkuXCIpO1xuICB9XG59O1xudmFyIFRyYW5zYWN0aW9uQnVpbGRlclJlbW90ZUFCSSA9IGNsYXNzIHtcbiAgLy8gV2UgZG9uJ3Qgd2FudCB0aGUgYnVpbGRlciB0byBkZXBlbmQgb24gdGhlIGFjdHVhbCBBcHRvc0NsaWVudC4gVGhlcmUgbWlnaHQgYmUgY2lyY3VsYXIgZGVwZW5kZW5jaWVzLlxuICBjb25zdHJ1Y3RvcihhcHRvc0NsaWVudDIsIGJ1aWxkZXJDb25maWcpIHtcbiAgICB0aGlzLmFwdG9zQ2xpZW50ID0gYXB0b3NDbGllbnQyO1xuICAgIHRoaXMuYnVpbGRlckNvbmZpZyA9IGJ1aWxkZXJDb25maWc7XG4gIH1cbiAgYXN5bmMgZmV0Y2hBQkkoYWRkcikge1xuICAgIGNvbnN0IG1vZHVsZXMgPSBhd2FpdCB0aGlzLmFwdG9zQ2xpZW50LmdldEFjY291bnRNb2R1bGVzKGFkZHIpO1xuICAgIGNvbnN0IGFiaXMgPSBtb2R1bGVzLm1hcCgobW9kdWxlKSA9PiBtb2R1bGUuYWJpKS5mbGF0TWFwKFxuICAgICAgKGFiaSkgPT4gYWJpLmV4cG9zZWRfZnVuY3Rpb25zLmZpbHRlcigoZWYpID0+IGVmLmlzX2VudHJ5KS5tYXAoXG4gICAgICAgIChlZikgPT4gKHtcbiAgICAgICAgICBmdWxsTmFtZTogYCR7YWJpLmFkZHJlc3N9Ojoke2FiaS5uYW1lfTo6JHtlZi5uYW1lfWAsXG4gICAgICAgICAgLi4uZWZcbiAgICAgICAgfSlcbiAgICAgIClcbiAgICApO1xuICAgIGNvbnN0IGFiaU1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gICAgYWJpcy5mb3JFYWNoKChhYmkpID0+IHtcbiAgICAgIGFiaU1hcC5zZXQoYWJpLmZ1bGxOYW1lLCBhYmkpO1xuICAgIH0pO1xuICAgIHJldHVybiBhYmlNYXA7XG4gIH1cbiAgLyoqXG4gICAqIEJ1aWxkcyBhIHJhdyB0cmFuc2FjdGlvbi4gT25seSBzdXBwb3J0IHNjcmlwdCBmdW5jdGlvbiBhLmsuYSBlbnRyeSBmdW5jdGlvbiBwYXlsb2Fkc1xuICAgKlxuICAgKiBAcGFyYW0gZnVuYyBmdWxseSBxdWFsaWZpZWQgZnVuY3Rpb24gbmFtZSBpbiBmb3JtYXQgPGFkZHJlc3M+Ojo8bW9kdWxlPjo6PGZ1bmN0aW9uPiwgZS5nLiAweDE6OmNvaW46OnRyYW5zZmVyXG4gICAqIEBwYXJhbSB0eV90YWdzXG4gICAqIEBwYXJhbSBhcmdzXG4gICAqIEByZXR1cm5zIFJhd1RyYW5zYWN0aW9uXG4gICAqL1xuICBhc3luYyBidWlsZChmdW5jLCB0eV90YWdzLCBhcmdzKSB7XG4gICAgY29uc3Qgbm9ybWxpemUgPSAocykgPT4gcy5yZXBsYWNlKC9eMFt4WF0wKi9nLCBcIjB4XCIpO1xuICAgIGZ1bmMgPSBub3JtbGl6ZShmdW5jKTtcbiAgICBjb25zdCBmdW5jTmFtZVBhcnRzID0gZnVuYy5zcGxpdChcIjo6XCIpO1xuICAgIGlmIChmdW5jTmFtZVBhcnRzLmxlbmd0aCAhPT0gMykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LWxlblxuICAgICAgICBcIidmdW5jJyBuZWVkcyB0byBiZSBhIGZ1bGx5IHF1YWxpZmllZCBmdW5jdGlvbiBuYW1lIGluIGZvcm1hdCA8YWRkcmVzcz46Ojxtb2R1bGU+Ojo8ZnVuY3Rpb24+LCBlLmcuIDB4MTo6Y29pbjo6dHJhbnNmZXJcIlxuICAgICAgKTtcbiAgICB9XG4gICAgY29uc3QgW2FkZHIsIG1vZHVsZV0gPSBmdW5jLnNwbGl0KFwiOjpcIik7XG4gICAgY29uc3QgYWJpTWFwID0gYXdhaXQgdGhpcy5mZXRjaEFCSShhZGRyKTtcbiAgICBpZiAoIWFiaU1hcC5oYXMoZnVuYykpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgJHtmdW5jfSBkb2Vzbid0IGV4aXN0LmApO1xuICAgIH1cbiAgICBjb25zdCBmdW5jQWJpID0gYWJpTWFwLmdldChmdW5jKTtcbiAgICBjb25zdCBhYmlBcmdzID0gZnVuY0FiaS5wYXJhbXMuZmlsdGVyKChwYXJhbSkgPT4gcGFyYW0gIT09IFwic2lnbmVyXCIgJiYgcGFyYW0gIT09IFwiJnNpZ25lclwiKTtcbiAgICBjb25zdCB0eXBlQXJnQUJJcyA9IGFiaUFyZ3MubWFwKFxuICAgICAgKGFiaUFyZywgaSkgPT4gbmV3IEFyZ3VtZW50QUJJKGB2YXIke2l9YCwgbmV3IFR5cGVUYWdQYXJzZXIoYWJpQXJnLCB0eV90YWdzKS5wYXJzZVR5cGVUYWcoKSlcbiAgICApO1xuICAgIGNvbnN0IGVudHJ5RnVuY3Rpb25BQkkgPSBuZXcgRW50cnlGdW5jdGlvbkFCSShcbiAgICAgIGZ1bmNBYmkubmFtZSxcbiAgICAgIE1vZHVsZUlkLmZyb21TdHIoYCR7YWRkcn06OiR7bW9kdWxlfWApLFxuICAgICAgXCJcIixcbiAgICAgIC8vIERvYyBzdHJpbmdcbiAgICAgIGZ1bmNBYmkuZ2VuZXJpY190eXBlX3BhcmFtcy5tYXAoKF8sIGkpID0+IG5ldyBUeXBlQXJndW1lbnRBQkkoYCR7aX1gKSksXG4gICAgICB0eXBlQXJnQUJJc1xuICAgICk7XG4gICAgY29uc3QgeyBzZW5kZXIsIC4uLnJlc3QgfSA9IHRoaXMuYnVpbGRlckNvbmZpZztcbiAgICBjb25zdCBzZW5kZXJBZGRyZXNzID0gc2VuZGVyIGluc3RhbmNlb2YgQWNjb3VudEFkZHJlc3MgPyBIZXhTdHJpbmcuZnJvbVVpbnQ4QXJyYXkoc2VuZGVyLmFkZHJlc3MpIDogc2VuZGVyO1xuICAgIGNvbnN0IFt7IHNlcXVlbmNlX251bWJlcjogc2VxdWVuY2VOdW1iZXIgfSwgY2hhaW5JZCwgeyBnYXNfZXN0aW1hdGU6IGdhc1VuaXRQcmljZSB9XSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgIChyZXN0ID09IG51bGwgPyB2b2lkIDAgOiByZXN0LnNlcXVlbmNlTnVtYmVyKSA/IFByb21pc2UucmVzb2x2ZSh7IHNlcXVlbmNlX251bWJlcjogcmVzdCA9PSBudWxsID8gdm9pZCAwIDogcmVzdC5zZXF1ZW5jZU51bWJlciB9KSA6IHRoaXMuYXB0b3NDbGllbnQuZ2V0QWNjb3VudChzZW5kZXJBZGRyZXNzKSxcbiAgICAgIChyZXN0ID09IG51bGwgPyB2b2lkIDAgOiByZXN0LmNoYWluSWQpID8gUHJvbWlzZS5yZXNvbHZlKHJlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IHJlc3QuY2hhaW5JZCkgOiB0aGlzLmFwdG9zQ2xpZW50LmdldENoYWluSWQoKSxcbiAgICAgIChyZXN0ID09IG51bGwgPyB2b2lkIDAgOiByZXN0Lmdhc1VuaXRQcmljZSkgPyBQcm9taXNlLnJlc29sdmUoeyBnYXNfZXN0aW1hdGU6IHJlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IHJlc3QuZ2FzVW5pdFByaWNlIH0pIDogdGhpcy5hcHRvc0NsaWVudC5lc3RpbWF0ZUdhc1ByaWNlKClcbiAgICBdKTtcbiAgICBjb25zdCBidWlsZGVyQUJJID0gbmV3IFRyYW5zYWN0aW9uQnVpbGRlckFCSShbYmNzVG9CeXRlcyhlbnRyeUZ1bmN0aW9uQUJJKV0sIHtcbiAgICAgIHNlbmRlcixcbiAgICAgIHNlcXVlbmNlTnVtYmVyLFxuICAgICAgY2hhaW5JZCxcbiAgICAgIGdhc1VuaXRQcmljZTogQmlnSW50KGdhc1VuaXRQcmljZSksXG4gICAgICAuLi5yZXN0XG4gICAgfSk7XG4gICAgcmV0dXJuIGJ1aWxkZXJBQkkuYnVpbGQoZnVuYywgdHlfdGFncywgYXJncyk7XG4gIH1cbn07XG5fX2RlY29yYXRlQ2xhc3MoW1xuICBNZW1vaXplRXhwaXJpbmcoMTAgKiA2MCAqIDFlMylcbl0sIFRyYW5zYWN0aW9uQnVpbGRlclJlbW90ZUFCSS5wcm90b3R5cGUsIFwiZmV0Y2hBQklcIiwgMSk7XG5cbi8vIHNyYy9wcm92aWRlcnMvYXB0b3NfY2xpZW50LnRzXG52YXIgX0FwdG9zQ2xpZW50ID0gY2xhc3MgX0FwdG9zQ2xpZW50IHtcbiAgLyoqXG4gICAqIEJ1aWxkIGEgY2xpZW50IGNvbmZpZ3VyZWQgdG8gY29ubmVjdCB0byBhbiBBcHRvcyBub2RlIGF0IHRoZSBnaXZlbiBVUkwuXG4gICAqXG4gICAqIE5vdGU6IElmIHlvdSBmb3JnZXQgdG8gYXBwZW5kIGAvdjFgIHRvIHRoZSBVUkwsIHRoZSBjbGllbnQgY29uc3RydWN0b3JcbiAgICogd2lsbCBhdXRvbWF0aWNhbGx5IGFwcGVuZCBpdC4gSWYgeW91IGRvbid0IHdhbnQgdGhpcyBVUkwgcHJvY2Vzc2luZyB0b1xuICAgKiB0YWtlIHBsYWNlLCBzZXQgZG9Ob3RGaXhOb2RlVXJsIHRvIHRydWUuXG4gICAqXG4gICAqIEBwYXJhbSBub2RlVXJsIFVSTCBvZiB0aGUgQXB0b3MgTm9kZSBBUEkgZW5kcG9pbnQuXG4gICAqIEBwYXJhbSBjb25maWcgQWRkaXRpb25hbCBjb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHRoZSBnZW5lcmF0ZWQgQXhpb3MgY2xpZW50LlxuICAgKi9cbiAgY29uc3RydWN0b3Iobm9kZVVybCwgY29uZmlnLCBkb05vdEZpeE5vZGVVcmwgPSBmYWxzZSkge1xuICAgIGlmICghbm9kZVVybCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm9kZSBVUkwgY2Fubm90IGJlIGVtcHR5LlwiKTtcbiAgICB9XG4gICAgaWYgKGRvTm90Rml4Tm9kZVVybCkge1xuICAgICAgdGhpcy5ub2RlVXJsID0gbm9kZVVybDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5ub2RlVXJsID0gZml4Tm9kZVVybChub2RlVXJsKTtcbiAgICB9XG4gICAgdGhpcy5jb25maWcgPSBjb25maWcgPT09IHZvaWQgMCB8fCBjb25maWcgPT09IG51bGwgPyB7fSA6IHsgLi4uY29uZmlnIH07XG4gIH1cbiAgYXN5bmMgZ2V0QWNjb3VudChhY2NvdW50QWRkcmVzcykge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgZW5kcG9pbnQ6IGBhY2NvdW50cy8ke0hleFN0cmluZy5lbnN1cmUoYWNjb3VudEFkZHJlc3MpLmhleCgpfWAsXG4gICAgICBvcmlnaW5NZXRob2Q6IFwiZ2V0QWNjb3VudFwiLFxuICAgICAgb3ZlcnJpZGVzOiB7IC4uLnRoaXMuY29uZmlnIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuICBhc3luYyBnZXRBY2NvdW50VHJhbnNhY3Rpb25zKGFjY291bnRBZGRyZXNzLCBxdWVyeSkge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgZW5kcG9pbnQ6IGBhY2NvdW50cy8ke0hleFN0cmluZy5lbnN1cmUoYWNjb3VudEFkZHJlc3MpLmhleCgpfS90cmFuc2FjdGlvbnNgLFxuICAgICAgb3JpZ2luTWV0aG9kOiBcImdldEFjY291bnRUcmFuc2FjdGlvbnNcIixcbiAgICAgIHBhcmFtczogeyBzdGFydDogcXVlcnkgPT0gbnVsbCA/IHZvaWQgMCA6IHF1ZXJ5LnN0YXJ0LCBsaW1pdDogcXVlcnkgPT0gbnVsbCA/IHZvaWQgMCA6IHF1ZXJ5LmxpbWl0IH0sXG4gICAgICBvdmVycmlkZXM6IHsgLi4udGhpcy5jb25maWcgfVxuICAgIH0pO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG4gIGFzeW5jIGdldEFjY291bnRNb2R1bGVzKGFjY291bnRBZGRyZXNzLCBxdWVyeSkge1xuICAgIGNvbnN0IG91dCA9IGF3YWl0IHBhZ2luYXRlV2l0aEN1cnNvcih7XG4gICAgICB1cmw6IHRoaXMubm9kZVVybCxcbiAgICAgIGVuZHBvaW50OiBgYWNjb3VudHMvJHthY2NvdW50QWRkcmVzc30vbW9kdWxlc2AsXG4gICAgICBwYXJhbXM6IHsgbGVkZ2VyX3ZlcnNpb246IHF1ZXJ5ID09IG51bGwgPyB2b2lkIDAgOiBxdWVyeS5sZWRnZXJWZXJzaW9uLCBsaW1pdDogMWUzIH0sXG4gICAgICBvcmlnaW5NZXRob2Q6IFwiZ2V0QWNjb3VudE1vZHVsZXNcIixcbiAgICAgIG92ZXJyaWRlczogeyAuLi50aGlzLmNvbmZpZyB9XG4gICAgfSk7XG4gICAgcmV0dXJuIG91dDtcbiAgfVxuICBhc3luYyBnZXRBY2NvdW50TW9kdWxlKGFjY291bnRBZGRyZXNzLCBtb2R1bGVOYW1lLCBxdWVyeSkge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgZW5kcG9pbnQ6IGBhY2NvdW50cy8ke0hleFN0cmluZy5lbnN1cmUoYWNjb3VudEFkZHJlc3MpLmhleCgpfS9tb2R1bGUvJHttb2R1bGVOYW1lfWAsXG4gICAgICBvcmlnaW5NZXRob2Q6IFwiZ2V0QWNjb3VudE1vZHVsZVwiLFxuICAgICAgcGFyYW1zOiB7IGxlZGdlcl92ZXJzaW9uOiBxdWVyeSA9PSBudWxsID8gdm9pZCAwIDogcXVlcnkubGVkZ2VyVmVyc2lvbiB9LFxuICAgICAgb3ZlcnJpZGVzOiB7IC4uLnRoaXMuY29uZmlnIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuICBhc3luYyBnZXRBY2NvdW50UmVzb3VyY2VzKGFjY291bnRBZGRyZXNzLCBxdWVyeSkge1xuICAgIGNvbnN0IG91dCA9IGF3YWl0IHBhZ2luYXRlV2l0aEN1cnNvcih7XG4gICAgICB1cmw6IHRoaXMubm9kZVVybCxcbiAgICAgIGVuZHBvaW50OiBgYWNjb3VudHMvJHthY2NvdW50QWRkcmVzc30vcmVzb3VyY2VzYCxcbiAgICAgIHBhcmFtczogeyBsZWRnZXJfdmVyc2lvbjogcXVlcnkgPT0gbnVsbCA/IHZvaWQgMCA6IHF1ZXJ5LmxlZGdlclZlcnNpb24sIGxpbWl0OiA5OTk5IH0sXG4gICAgICBvcmlnaW5NZXRob2Q6IFwiZ2V0QWNjb3VudFJlc291cmNlc1wiLFxuICAgICAgb3ZlcnJpZGVzOiB7IC4uLnRoaXMuY29uZmlnIH1cbiAgICB9KTtcbiAgICByZXR1cm4gb3V0O1xuICB9XG4gIGFzeW5jIGdldEFjY291bnRSZXNvdXJjZShhY2NvdW50QWRkcmVzcywgcmVzb3VyY2VUeXBlLCBxdWVyeSkge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgZW5kcG9pbnQ6IGBhY2NvdW50cy8ke0hleFN0cmluZy5lbnN1cmUoYWNjb3VudEFkZHJlc3MpLmhleCgpfS9yZXNvdXJjZS8ke3Jlc291cmNlVHlwZX1gLFxuICAgICAgb3JpZ2luTWV0aG9kOiBcImdldEFjY291bnRSZXNvdXJjZVwiLFxuICAgICAgcGFyYW1zOiB7IGxlZGdlcl92ZXJzaW9uOiBxdWVyeSA9PSBudWxsID8gdm9pZCAwIDogcXVlcnkubGVkZ2VyVmVyc2lvbiB9LFxuICAgICAgb3ZlcnJpZGVzOiB7IC4uLnRoaXMuY29uZmlnIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuICAvKiogR2VuZXJhdGVzIGEgc2lnbmVkIHRyYW5zYWN0aW9uIHRoYXQgY2FuIGJlIHN1Ym1pdHRlZCB0byB0aGUgY2hhaW4gZm9yIGV4ZWN1dGlvbi4gKi9cbiAgc3RhdGljIGdlbmVyYXRlQkNTVHJhbnNhY3Rpb24oYWNjb3VudEZyb20sIHJhd1R4bikge1xuICAgIGNvbnN0IHR4bkJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyRWQyNTUxOSgoc2lnbmluZ01lc3NhZ2UpID0+IHtcbiAgICAgIGNvbnN0IHNpZ0hleFN0ciA9IGFjY291bnRGcm9tLnNpZ25CdWZmZXIoc2lnbmluZ01lc3NhZ2UpO1xuICAgICAgcmV0dXJuIG5ldyBhcHRvc190eXBlc19leHBvcnRzLkVkMjU1MTlTaWduYXR1cmUoc2lnSGV4U3RyLnRvVWludDhBcnJheSgpKTtcbiAgICB9LCBhY2NvdW50RnJvbS5wdWJLZXkoKS50b1VpbnQ4QXJyYXkoKSk7XG4gICAgcmV0dXJuIHR4bkJ1aWxkZXIuc2lnbihyYXdUeG4pO1xuICB9XG4gIC8qKlxuICAgKiBOb3RlOiBVbmxlc3MgeW91IGhhdmUgYSBzcGVjaWZpYyByZWFzb24gZm9yIHVzaW5nIHRoaXMsIGl0J2xsIHByb2JhYmx5IGJlIHNpbXBsZXJcbiAgICogdG8gdXNlIGBzaW11bGF0ZVRyYW5zYWN0aW9uYC5cbiAgICpcbiAgICogR2VuZXJhdGVzIGEgQkNTIHRyYW5zYWN0aW9uIHRoYXQgY2FuIGJlIHN1Ym1pdHRlZCB0byB0aGUgY2hhaW4gZm9yIHNpbXVsYXRpb24uXG4gICAqXG4gICAqIEBwYXJhbSBhY2NvdW50RnJvbSBUaGUgYWNjb3VudCB0aGF0IHdpbGwgYmUgdXNlZCB0byBzZW5kIHRoZSB0cmFuc2FjdGlvblxuICAgKiBmb3Igc2ltdWxhdGlvbi5cbiAgICogQHBhcmFtIHJhd1R4biBUaGUgcmF3IHRyYW5zYWN0aW9uIHRvIGJlIHNpbXVsYXRlZCwgbGlrZWx5IGNyZWF0ZWQgYnkgY2FsbGluZ1xuICAgKiB0aGUgYGdlbmVyYXRlVHJhbnNhY3Rpb25gIGZ1bmN0aW9uLlxuICAgKiBAcmV0dXJucyBUaGUgQkNTIGVuY29kZWQgc2lnbmVkIHRyYW5zYWN0aW9uLCB3aGljaCB5b3Ugc2hvdWxkIHRoZW4gcGFzcyBpbnRvXG4gICAqIHRoZSBgc3VibWl0QkNTU2ltdWxhdGlvbmAgZnVuY3Rpb24uXG4gICAqL1xuICBzdGF0aWMgZ2VuZXJhdGVCQ1NTaW11bGF0aW9uKGFjY291bnRGcm9tLCByYXdUeG4pIHtcbiAgICBjb25zdCB0eG5CdWlsZGVyID0gbmV3IFRyYW5zYWN0aW9uQnVpbGRlckVkMjU1MTkoKF9zaWduaW5nTWVzc2FnZSkgPT4ge1xuICAgICAgY29uc3QgaW52YWxpZFNpZ0J5dGVzID0gbmV3IFVpbnQ4QXJyYXkoNjQpO1xuICAgICAgcmV0dXJuIG5ldyBhcHRvc190eXBlc19leHBvcnRzLkVkMjU1MTlTaWduYXR1cmUoaW52YWxpZFNpZ0J5dGVzKTtcbiAgICB9LCBhY2NvdW50RnJvbS5wdWJLZXkoKS50b1VpbnQ4QXJyYXkoKSk7XG4gICAgcmV0dXJuIHR4bkJ1aWxkZXIuc2lnbihyYXdUeG4pO1xuICB9XG4gIC8qKiBHZW5lcmF0ZXMgYW4gZW50cnkgZnVuY3Rpb24gdHJhbnNhY3Rpb24gcmVxdWVzdCB0aGF0IGNhbiBiZSBzdWJtaXR0ZWQgdG8gcHJvZHVjZSBhIHJhdyB0cmFuc2FjdGlvbiB0aGF0XG4gICAqIGNhbiBiZSBzaWduZWQsIHdoaWNoIHVwb24gYmVpbmcgc2lnbmVkIGNhbiBiZSBzdWJtaXR0ZWQgdG8gdGhlIGJsb2NrY2hhaW5cbiAgICogVGhpcyBmdW5jdGlvbiBmZXRjaGVzIHRoZSByZW1vdGUgQUJJIGFuZCB1c2VzIGl0IHRvIHNlcmlhbGl6ZWQgdGhlIGRhdGEsIHRoZXJlZm9yZVxuICAgKiB1c2VycyBkb24ndCBuZWVkIHRvIGhhbmRsZSBzZXJpYWxpemF0aW9uIGJ5IHRoZW1zZWx2ZXMuXG4gICAqIEBwYXJhbSBzZW5kZXIgSGV4LWVuY29kZWQgMzIgYnl0ZSBBcHRvcyBhY2NvdW50IGFkZHJlc3Mgb2YgdHJhbnNhY3Rpb24gc2VuZGVyXG4gICAqIEBwYXJhbSBwYXlsb2FkIEVudHJ5IGZ1bmN0aW9uIHRyYW5zYWN0aW9uIHBheWxvYWQgdHlwZVxuICAgKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25zIGFsbG93IHRvIG92ZXJ3cml0ZSBkZWZhdWx0IHRyYW5zYWN0aW9uIG9wdGlvbnMuXG4gICAqIEByZXR1cm5zIEEgcmF3IHRyYW5zYWN0aW9uIG9iamVjdFxuICAgKi9cbiAgYXN5bmMgZ2VuZXJhdGVUcmFuc2FjdGlvbihzZW5kZXIsIHBheWxvYWQsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBjb25maWcgPSB7IHNlbmRlciB9O1xuICAgIGlmIChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnNlcXVlbmNlX251bWJlcikge1xuICAgICAgY29uZmlnLnNlcXVlbmNlTnVtYmVyID0gb3B0aW9ucy5zZXF1ZW5jZV9udW1iZXI7XG4gICAgfVxuICAgIGlmIChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmdhc191bml0X3ByaWNlKSB7XG4gICAgICBjb25maWcuZ2FzVW5pdFByaWNlID0gb3B0aW9ucy5nYXNfdW5pdF9wcmljZTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubWF4X2dhc19hbW91bnQpIHtcbiAgICAgIGNvbmZpZy5tYXhHYXNBbW91bnQgPSBvcHRpb25zLm1heF9nYXNfYW1vdW50O1xuICAgIH1cbiAgICBpZiAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5leHBpcmF0aW9uX3RpbWVzdGFtcF9zZWNzKSB7XG4gICAgICBjb25zdCB0aW1lc3RhbXAgPSBOdW1iZXIucGFyc2VJbnQob3B0aW9ucy5leHBpcmF0aW9uX3RpbWVzdGFtcF9zZWNzLCAxMCk7XG4gICAgICBjb25maWcuZXhwU2VjRnJvbU5vdyA9IHRpbWVzdGFtcCAtIE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDFlMyk7XG4gICAgfVxuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMsIGNvbmZpZyk7XG4gICAgcmV0dXJuIGJ1aWxkZXIuYnVpbGQocGF5bG9hZC5mdW5jdGlvbiwgcGF5bG9hZC50eXBlX2FyZ3VtZW50cywgcGF5bG9hZC5hcmd1bWVudHMpO1xuICB9XG4gIC8qKlxuICAgKiBHZW5lcmF0ZXMgYSBmZWUgcGF5ZXIgdHJhbnNhY3Rpb24gdGhhdCBjYW4gYmUgc2lnbmVkIGFuZCBzdWJtaXR0ZWQgdG8gY2hhaW5cbiAgICpcbiAgICogQHBhcmFtIHNlbmRlciB0aGUgc2VuZGVyJ3MgYWNjb3VudCBhZGRyZXNzXG4gICAqIEBwYXJhbSBwYXlsb2FkIHRoZSB0cmFuc2FjdGlvbiBwYXlsb2FkXG4gICAqIEBwYXJhbSBmZWVfcGF5ZXIgdGhlIGZlZSBwYXllciBhY2NvdW50XG4gICAqIEBwYXJhbSBzZWNvbmRhcnlTaWduZXJBY2NvdW50cyBhbiBvcHRpb25hbCBhcnJheSBvZiB0aGUgc2Vjb25kYXJ5IHNpZ25lcnMgYWNjb3VudHNcbiAgICogQHJldHVybnMgYSBmZWUgcGF5ZXIgcmF3IHRyYW5zYWN0aW9uIHRoYXQgY2FuIGJlIHNpZ25lZCBhbmQgc3VibWl0dGVkIHRvIGNoYWluXG4gICAqL1xuICBhc3luYyBnZW5lcmF0ZUZlZVBheWVyVHJhbnNhY3Rpb24oc2VuZGVyLCBwYXlsb2FkLCBmZWVQYXllciwgc2Vjb25kYXJ5U2lnbmVyQWNjb3VudHMgPSBbXSwgb3B0aW9ucykge1xuICAgIGNvbnN0IHJhd1R4biA9IGF3YWl0IHRoaXMuZ2VuZXJhdGVUcmFuc2FjdGlvbihzZW5kZXIsIHBheWxvYWQsIG9wdGlvbnMpO1xuICAgIGNvbnN0IHNpZ25lcnMgPSBzZWNvbmRhcnlTaWduZXJBY2NvdW50cy5tYXAoKHNpZ25lcikgPT4gQWNjb3VudEFkZHJlc3MuZnJvbUhleChzaWduZXIpKTtcbiAgICBjb25zdCBmZWVQYXllclR4biA9IG5ldyBhcHRvc190eXBlc19leHBvcnRzLkZlZVBheWVyUmF3VHJhbnNhY3Rpb24ocmF3VHhuLCBzaWduZXJzLCBBY2NvdW50QWRkcmVzcy5mcm9tSGV4KGZlZVBheWVyKSk7XG4gICAgcmV0dXJuIGZlZVBheWVyVHhuO1xuICB9XG4gIC8qKlxuICAgKiBTdWJtaXRzIGZlZSBwYXllciB0cmFuc2FjdGlvbiB0byBjaGFpblxuICAgKlxuICAgKiBAcGFyYW0gZmVlUGF5ZXJUcmFuc2FjdGlvbiB0aGUgcmF3IHRyYW5zYWN0aW9uIHRvIGJlIHN1Ym1pdHRlZCwgb2YgdHlwZSBGZWVQYXllclJhd1RyYW5zYWN0aW9uXG4gICAqIEBwYXJhbSBzZW5kZXJBdXRoZW50aWNhdG9yIHRoZSBzZW5kZXIgYWNjb3VudCBhdXRoZW50aWNhdG9yIChjYW4gZ2V0IGZyb20gc2lnbk11bHRpVHJhbnNhY3Rpb24oKSBtZXRob2QpXG4gICAqIEBwYXJhbSBmZWVQYXllckF1dGhlbnRpY2F0b3IgdGhlIGZlZXBheWVyIGFjY291bnQgYXV0aGVudGljYXRvciAoY2FuIGdldCBmcm9tIHNpZ25NdWx0aVRyYW5zYWN0aW9uKCkgbWV0aG9kKVxuICAgKiBAcGFyYW0gc2lnbmVyc0F1dGhlbnRpY2F0b3JzIGFuIG9wdGlvbmFsIGFycmF5IG9mIHRoZSBzaWduZXIgYWNjb3VudCBhdXRoZW50aWNhdG9yc1xuICAgKiBAcmV0dXJucyBUaGUgcGVuZGluZyB0cmFuc2FjdGlvblxuICAgKi9cbiAgYXN5bmMgc3VibWl0RmVlUGF5ZXJUcmFuc2FjdGlvbihmZWVQYXllclRyYW5zYWN0aW9uLCBzZW5kZXJBdXRoZW50aWNhdG9yLCBmZWVQYXllckF1dGhlbnRpY2F0b3IsIGFkZGl0aW9uYWxTaWduZXJzQXV0aGVudGljYXRvcnMgPSBbXSkge1xuICAgIGNvbnN0IHR4QXV0aGVudGljYXRvckZlZVBheWVyID0gbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yRmVlUGF5ZXIoXG4gICAgICBzZW5kZXJBdXRoZW50aWNhdG9yLFxuICAgICAgZmVlUGF5ZXJUcmFuc2FjdGlvbi5zZWNvbmRhcnlfc2lnbmVyX2FkZHJlc3NlcyxcbiAgICAgIGFkZGl0aW9uYWxTaWduZXJzQXV0aGVudGljYXRvcnMsXG4gICAgICB7IGFkZHJlc3M6IGZlZVBheWVyVHJhbnNhY3Rpb24uZmVlX3BheWVyX2FkZHJlc3MsIGF1dGhlbnRpY2F0b3I6IGZlZVBheWVyQXV0aGVudGljYXRvciB9XG4gICAgKTtcbiAgICBjb25zdCBiY3NUeG4gPSBiY3NUb0J5dGVzKFxuICAgICAgbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuU2lnbmVkVHJhbnNhY3Rpb24oZmVlUGF5ZXJUcmFuc2FjdGlvbi5yYXdfdHhuLCB0eEF1dGhlbnRpY2F0b3JGZWVQYXllcilcbiAgICApO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uUmVzID0gYXdhaXQgdGhpcy5zdWJtaXRTaWduZWRCQ1NUcmFuc2FjdGlvbihiY3NUeG4pO1xuICAgIHJldHVybiB0cmFuc2FjdGlvblJlcztcbiAgfVxuICAvKipcbiAgICogU2lnbnMgYSBtdWx0aSB0cmFuc2FjdGlvbiB0eXBlIChtdWx0aSBhZ2VudCAvIGZlZSBwYXllcikgYW5kIHJldHVybnMgdGhlXG4gICAqIHNpZ25lciBhdXRoZW50aWNhdG9yIHRvIGJlIHVzZWQgdG8gc3VibWl0IHRoZSB0cmFuc2FjdGlvbi5cbiAgICpcbiAgICogQHBhcmFtIHNpZ25lciB0aGUgYWNjb3VudCB0byBzaWduIG9uIHRoZSB0cmFuc2FjdGlvblxuICAgKiBAcGFyYW0gcmF3VHhuIGEgTXVsdGlBZ2VudFJhd1RyYW5zYWN0aW9uIG9yIEZlZVBheWVyUmF3VHJhbnNhY3Rpb25cbiAgICogQHJldHVybnMgc2lnbmVyIGF1dGhlbnRpY2F0b3JcbiAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIGFzeW5jIHNpZ25NdWx0aVRyYW5zYWN0aW9uKHNpZ25lciwgcmF3VHhuKSB7XG4gICAgY29uc3Qgc2lnbmVyU2lnbmF0dXJlID0gbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuRWQyNTUxOVNpZ25hdHVyZShcbiAgICAgIHNpZ25lci5zaWduQnVmZmVyKFRyYW5zYWN0aW9uQnVpbGRlci5nZXRTaWduaW5nTWVzc2FnZShyYXdUeG4pKS50b1VpbnQ4QXJyYXkoKVxuICAgICk7XG4gICAgY29uc3Qgc2lnbmVyQXV0aGVudGljYXRvciA9IG5ldyBhcHRvc190eXBlc19leHBvcnRzLkFjY291bnRBdXRoZW50aWNhdG9yRWQyNTUxOShcbiAgICAgIG5ldyBhcHRvc190eXBlc19leHBvcnRzLkVkMjU1MTlQdWJsaWNLZXkoc2lnbmVyLnNpZ25pbmdLZXkucHVibGljS2V5KSxcbiAgICAgIHNpZ25lclNpZ25hdHVyZVxuICAgICk7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShzaWduZXJBdXRoZW50aWNhdG9yKTtcbiAgfVxuICAvKiogQ29udmVydHMgYSB0cmFuc2FjdGlvbiByZXF1ZXN0IHByb2R1Y2VkIGJ5IGBnZW5lcmF0ZVRyYW5zYWN0aW9uYCBpbnRvIGEgcHJvcGVybHlcbiAgICogc2lnbmVkIHRyYW5zYWN0aW9uLCB3aGljaCBjYW4gdGhlbiBiZSBzdWJtaXR0ZWQgdG8gdGhlIGJsb2NrY2hhaW5cbiAgICogQHBhcmFtIGFjY291bnRGcm9tIEFwdG9zQWNjb3VudCBvZiB0cmFuc2FjdGlvbiBzZW5kZXJcbiAgICogQHBhcmFtIHJhd1RyYW5zYWN0aW9uIEEgcmF3IHRyYW5zYWN0aW9uIGdlbmVyYXRlZCBieSBgZ2VuZXJhdGVUcmFuc2FjdGlvbmAgbWV0aG9kXG4gICAqIEByZXR1cm5zIEEgdHJhbnNhY3Rpb24sIHNpZ25lZCB3aXRoIHNlbmRlciBhY2NvdW50XG4gICAqL1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2xhc3MtbWV0aG9kcy11c2UtdGhpc1xuICBhc3luYyBzaWduVHJhbnNhY3Rpb24oYWNjb3VudEZyb20sIHJhd1RyYW5zYWN0aW9uKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShfQXB0b3NDbGllbnQuZ2VuZXJhdGVCQ1NUcmFuc2FjdGlvbihhY2NvdW50RnJvbSwgcmF3VHJhbnNhY3Rpb24pKTtcbiAgfVxuICBhc3luYyBnZXRFdmVudHNCeUNyZWF0aW9uTnVtYmVyKGFkZHJlc3MsIGNyZWF0aW9uTnVtYmVyLCBxdWVyeSkge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgZW5kcG9pbnQ6IGBhY2NvdW50cy8ke0hleFN0cmluZy5lbnN1cmUoYWRkcmVzcykuaGV4KCl9L2V2ZW50cy8ke2NyZWF0aW9uTnVtYmVyfWAsXG4gICAgICBvcmlnaW5NZXRob2Q6IFwiZ2V0RXZlbnRzQnlDcmVhdGlvbk51bWJlclwiLFxuICAgICAgcGFyYW1zOiB7IHN0YXJ0OiBxdWVyeSA9PSBudWxsID8gdm9pZCAwIDogcXVlcnkuc3RhcnQsIGxpbWl0OiBxdWVyeSA9PSBudWxsID8gdm9pZCAwIDogcXVlcnkubGltaXQgfSxcbiAgICAgIG92ZXJyaWRlczogeyAuLi50aGlzLmNvbmZpZyB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cbiAgYXN5bmMgZ2V0RXZlbnRzQnlFdmVudEhhbmRsZShhZGRyZXNzLCBldmVudEhhbmRsZVN0cnVjdCwgZmllbGROYW1lLCBxdWVyeSkge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgZW5kcG9pbnQ6IGBhY2NvdW50cy8ke0hleFN0cmluZy5lbnN1cmUoYWRkcmVzcykuaGV4KCl9L2V2ZW50cy8ke2V2ZW50SGFuZGxlU3RydWN0fS8ke2ZpZWxkTmFtZX1gLFxuICAgICAgb3JpZ2luTWV0aG9kOiBcImdldEV2ZW50c0J5RXZlbnRIYW5kbGVcIixcbiAgICAgIHBhcmFtczogeyBzdGFydDogcXVlcnkgPT0gbnVsbCA/IHZvaWQgMCA6IHF1ZXJ5LnN0YXJ0LCBsaW1pdDogcXVlcnkgPT0gbnVsbCA/IHZvaWQgMCA6IHF1ZXJ5LmxpbWl0IH0sXG4gICAgICBvdmVycmlkZXM6IHsgLi4udGhpcy5jb25maWcgfVxuICAgIH0pO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG4gIC8qKlxuICAgKiBTdWJtaXRzIGEgc2lnbmVkIHRyYW5zYWN0aW9uIHRvIHRoZSB0cmFuc2FjdGlvbiBlbmRwb2ludC5cbiAgICogQHBhcmFtIHNpZ25lZFR4biBBIHRyYW5zYWN0aW9uLCBzaWduZWQgYnkgYHNpZ25UcmFuc2FjdGlvbmAgbWV0aG9kXG4gICAqIEByZXR1cm5zIFRyYW5zYWN0aW9uIHRoYXQgaXMgYWNjZXB0ZWQgYW5kIHN1Ym1pdHRlZCB0byBtZW1wb29sXG4gICAqL1xuICBhc3luYyBzdWJtaXRUcmFuc2FjdGlvbihzaWduZWRUeG4pIHtcbiAgICByZXR1cm4gdGhpcy5zdWJtaXRTaWduZWRCQ1NUcmFuc2FjdGlvbihzaWduZWRUeG4pO1xuICB9XG4gIC8qKlxuICAgKiBHZW5lcmF0ZXMgYW5kIHN1Ym1pdHMgYSB0cmFuc2FjdGlvbiB0byB0aGUgdHJhbnNhY3Rpb24gc2ltdWxhdGlvblxuICAgKiBlbmRwb2ludC4gRm9yIHRoaXMgd2UgZ2VuZXJhdGUgYSB0cmFuc2FjdGlvbiB3aXRoIGEgZmFrZSBzaWduYXR1cmUuXG4gICAqXG4gICAqIEBwYXJhbSBhY2NvdW50T3JQdWJrZXkgVGhlIHNlbmRlciBvciBzZW5kZXIncyBwdWJsaWMga2V5LiBXaGVuIHByaXZhdGUga2V5IGlzIGF2YWlsYWJsZSwgYEFwdG9zQWNjb3VudGAgaW5zdGFuY2VcbiAgICogY2FuIGJlIHVzZWQgdG8gc2VuZCB0aGUgdHJhbnNhY3Rpb24gZm9yIHNpbXVsYXRpb24uIElmIHByaXZhdGUga2V5IGlzIG5vdCBhdmFpbGFibGUsIHNlbmRlcidzIHB1YmxpYyBrZXkgY2FuIGJlXG4gICAqIHVzZWQgdG8gc2VuZCB0aGUgdHJhbnNhY3Rpb24gZm9yIHNpbXVsYXRpb24uXG4gICAqIEBwYXJhbSByYXdUcmFuc2FjdGlvbiBUaGUgcmF3IHRyYW5zYWN0aW9uIHRvIGJlIHNpbXVsYXRlZCwgbGlrZWx5IGNyZWF0ZWRcbiAgICogYnkgY2FsbGluZyB0aGUgYGdlbmVyYXRlVHJhbnNhY3Rpb25gIGZ1bmN0aW9uLlxuICAgKiBAcGFyYW0gcXVlcnkuZXN0aW1hdGVHYXNVbml0UHJpY2UgSWYgc2V0IHRvIHRydWUsIHRoZSBnYXMgdW5pdCBwcmljZSBpbiB0aGVcbiAgICogdHJhbnNhY3Rpb24gd2lsbCBiZSBpZ25vcmVkIGFuZCB0aGUgZXN0aW1hdGVkIHZhbHVlIHdpbGwgYmUgdXNlZC5cbiAgICogQHBhcmFtIHF1ZXJ5LmVzdGltYXRlTWF4R2FzQW1vdW50IElmIHNldCB0byB0cnVlLCB0aGUgbWF4IGdhcyB2YWx1ZSBpbiB0aGVcbiAgICogdHJhbnNhY3Rpb24gd2lsbCBiZSBpZ25vcmVkIGFuZCB0aGUgbWF4aW11bSBwb3NzaWJsZSBnYXMgd2lsbCBiZSB1c2VkLlxuICAgKiBAcGFyYW0gcXVlcnkuZXN0aW1hdGVQcmlvcml0aXplZEdhc1VuaXRQcmljZSBJZiBzZXQgdG8gdHJ1ZSwgdGhlIHRyYW5zYWN0aW9uIHdpbGwgdXNlIGEgaGlnaGVyIHByaWNlIHRoYW4gdGhlXG4gICAqIG9yaWdpbmFsIGVzdGltYXRlLlxuICAgKiBAcmV0dXJucyBUaGUgQkNTIGVuY29kZWQgc2lnbmVkIHRyYW5zYWN0aW9uLCB3aGljaCB5b3Ugc2hvdWxkIHRoZW4gcHJvdmlkZVxuICAgKlxuICAgKi9cbiAgYXN5bmMgc2ltdWxhdGVUcmFuc2FjdGlvbihhY2NvdW50T3JQdWJrZXksIHJhd1RyYW5zYWN0aW9uLCBxdWVyeSkge1xuICAgIGxldCBzaWduZWRUeG47XG4gICAgaWYgKGFjY291bnRPclB1YmtleSBpbnN0YW5jZW9mIEFwdG9zQWNjb3VudCkge1xuICAgICAgc2lnbmVkVHhuID0gX0FwdG9zQ2xpZW50LmdlbmVyYXRlQkNTU2ltdWxhdGlvbihhY2NvdW50T3JQdWJrZXksIHJhd1RyYW5zYWN0aW9uKTtcbiAgICB9IGVsc2UgaWYgKGFjY291bnRPclB1YmtleSBpbnN0YW5jZW9mIE11bHRpRWQyNTUxOVB1YmxpY0tleSkge1xuICAgICAgY29uc3QgdHhuQnVpbGRlciA9IG5ldyBUcmFuc2FjdGlvbkJ1aWxkZXJNdWx0aUVkMjU1MTkoKCkgPT4ge1xuICAgICAgICBjb25zdCB7IHRocmVzaG9sZCB9ID0gYWNjb3VudE9yUHVia2V5O1xuICAgICAgICBjb25zdCBiaXRzID0gW107XG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZXMgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aHJlc2hvbGQ7IGkgKz0gMSkge1xuICAgICAgICAgIGJpdHMucHVzaChpKTtcbiAgICAgICAgICBzaWduYXR1cmVzLnB1c2gobmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuRWQyNTUxOVNpZ25hdHVyZShuZXcgVWludDhBcnJheSg2NCkpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBiaXRtYXAgPSBhcHRvc190eXBlc19leHBvcnRzLk11bHRpRWQyNTUxOVNpZ25hdHVyZS5jcmVhdGVCaXRtYXAoYml0cyk7XG4gICAgICAgIHJldHVybiBuZXcgYXB0b3NfdHlwZXNfZXhwb3J0cy5NdWx0aUVkMjU1MTlTaWduYXR1cmUoc2lnbmF0dXJlcywgYml0bWFwKTtcbiAgICAgIH0sIGFjY291bnRPclB1YmtleSk7XG4gICAgICBzaWduZWRUeG4gPSB0eG5CdWlsZGVyLnNpZ24ocmF3VHJhbnNhY3Rpb24pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB0eG5CdWlsZGVyID0gbmV3IFRyYW5zYWN0aW9uQnVpbGRlckVkMjU1MTkoKCkgPT4ge1xuICAgICAgICBjb25zdCBpbnZhbGlkU2lnQnl0ZXMgPSBuZXcgVWludDhBcnJheSg2NCk7XG4gICAgICAgIHJldHVybiBuZXcgYXB0b3NfdHlwZXNfZXhwb3J0cy5FZDI1NTE5U2lnbmF0dXJlKGludmFsaWRTaWdCeXRlcyk7XG4gICAgICB9LCBhY2NvdW50T3JQdWJrZXkudG9CeXRlcygpKTtcbiAgICAgIHNpZ25lZFR4biA9IHR4bkJ1aWxkZXIuc2lnbihyYXdUcmFuc2FjdGlvbik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnN1Ym1pdEJDU1NpbXVsYXRpb24oc2lnbmVkVHhuLCBxdWVyeSk7XG4gIH1cbiAgYXN5bmMgc3VibWl0U2lnbmVkQkNTVHJhbnNhY3Rpb24oc2lnbmVkVHhuKSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBwb3N0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgYm9keTogc2lnbmVkVHhuLFxuICAgICAgZW5kcG9pbnQ6IFwidHJhbnNhY3Rpb25zXCIsXG4gICAgICBvcmlnaW5NZXRob2Q6IFwic3VibWl0U2lnbmVkQkNTVHJhbnNhY3Rpb25cIixcbiAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL3guYXB0b3Muc2lnbmVkX3RyYW5zYWN0aW9uK2Jjc1wiLFxuICAgICAgb3ZlcnJpZGVzOiB7IC4uLnRoaXMuY29uZmlnIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuICBhc3luYyBzdWJtaXRCQ1NTaW11bGF0aW9uKGJjc0JvZHksIHF1ZXJ5KSB7XG4gICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgY29uc3QgcXVlcnlQYXJhbXMgPSB7XG4gICAgICBlc3RpbWF0ZV9nYXNfdW5pdF9wcmljZTogKF9hID0gcXVlcnkgPT0gbnVsbCA/IHZvaWQgMCA6IHF1ZXJ5LmVzdGltYXRlR2FzVW5pdFByaWNlKSAhPSBudWxsID8gX2EgOiBmYWxzZSxcbiAgICAgIGVzdGltYXRlX21heF9nYXNfYW1vdW50OiAoX2IgPSBxdWVyeSA9PSBudWxsID8gdm9pZCAwIDogcXVlcnkuZXN0aW1hdGVNYXhHYXNBbW91bnQpICE9IG51bGwgPyBfYiA6IGZhbHNlLFxuICAgICAgZXN0aW1hdGVfcHJpb3JpdGl6ZWRfZ2FzX3VuaXRfcHJpY2U6IChfYyA9IHF1ZXJ5ID09IG51bGwgPyB2b2lkIDAgOiBxdWVyeS5lc3RpbWF0ZVByaW9yaXRpemVkR2FzVW5pdFByaWNlKSAhPSBudWxsID8gX2MgOiBmYWxzZVxuICAgIH07XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBwb3N0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgYm9keTogYmNzQm9keSxcbiAgICAgIGVuZHBvaW50OiBcInRyYW5zYWN0aW9ucy9zaW11bGF0ZVwiLFxuICAgICAgcGFyYW1zOiBxdWVyeVBhcmFtcyxcbiAgICAgIG9yaWdpbk1ldGhvZDogXCJzdWJtaXRCQ1NTaW11bGF0aW9uXCIsXG4gICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi94LmFwdG9zLnNpZ25lZF90cmFuc2FjdGlvbitiY3NcIixcbiAgICAgIG92ZXJyaWRlczogeyAuLi50aGlzLmNvbmZpZyB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cbiAgYXN5bmMgZ2V0VHJhbnNhY3Rpb25zKHF1ZXJ5KSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgZW5kcG9pbnQ6IFwidHJhbnNhY3Rpb25zXCIsXG4gICAgICBvcmlnaW5NZXRob2Q6IFwiZ2V0VHJhbnNhY3Rpb25zXCIsXG4gICAgICBwYXJhbXM6IHsgc3RhcnQ6IChfYSA9IHF1ZXJ5ID09IG51bGwgPyB2b2lkIDAgOiBxdWVyeS5zdGFydCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnRvU3RyaW5nKCksIGxpbWl0OiBxdWVyeSA9PSBudWxsID8gdm9pZCAwIDogcXVlcnkubGltaXQgfSxcbiAgICAgIG92ZXJyaWRlczogeyAuLi50aGlzLmNvbmZpZyB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cbiAgYXN5bmMgZ2V0VHJhbnNhY3Rpb25CeUhhc2godHhuSGFzaCkge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgZW5kcG9pbnQ6IGB0cmFuc2FjdGlvbnMvYnlfaGFzaC8ke3R4bkhhc2h9YCxcbiAgICAgIG9yaWdpbk1ldGhvZDogXCJnZXRUcmFuc2FjdGlvbkJ5SGFzaFwiLFxuICAgICAgb3ZlcnJpZGVzOiB7IC4uLnRoaXMuY29uZmlnIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuICBhc3luYyBnZXRUcmFuc2FjdGlvbkJ5VmVyc2lvbih0eG5WZXJzaW9uKSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBnZXQoe1xuICAgICAgdXJsOiB0aGlzLm5vZGVVcmwsXG4gICAgICBlbmRwb2ludDogYHRyYW5zYWN0aW9ucy9ieV92ZXJzaW9uLyR7dHhuVmVyc2lvbn1gLFxuICAgICAgb3JpZ2luTWV0aG9kOiBcImdldFRyYW5zYWN0aW9uQnlWZXJzaW9uXCIsXG4gICAgICBvdmVycmlkZXM6IHsgLi4udGhpcy5jb25maWcgfVxuICAgIH0pO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG4gIC8qKlxuICAgKiBEZWZpbmVzIGlmIHNwZWNpZmllZCB0cmFuc2FjdGlvbiBpcyBjdXJyZW50bHkgaW4gcGVuZGluZyBzdGF0ZVxuICAgKiBAcGFyYW0gdHhuSGFzaCBBIGhhc2ggb2YgdHJhbnNhY3Rpb25cbiAgICpcbiAgICogVG8gY3JlYXRlIGEgdHJhbnNhY3Rpb24gaGFzaDpcbiAgICpcbiAgICogMS4gQ3JlYXRlIGhhc2ggbWVzc2FnZSBieXRlczogXCJBcHRvczo6VHJhbnNhY3Rpb25cIiBieXRlcyArIEJDUyBieXRlcyBvZiBUcmFuc2FjdGlvbi5cbiAgICogMi4gQXBwbHkgaGFzaCBhbGdvcml0aG0gU0hBMy0yNTYgdG8gdGhlIGhhc2ggbWVzc2FnZSBieXRlcy5cbiAgICogMy4gSGV4LWVuY29kZSB0aGUgaGFzaCBieXRlcyB3aXRoIDB4IHByZWZpeC5cbiAgICpcbiAgICogQHJldHVybnMgYHRydWVgIGlmIHRyYW5zYWN0aW9uIGlzIGluIHBlbmRpbmcgc3RhdGUgYW5kIGBmYWxzZWAgb3RoZXJ3aXNlXG4gICAqL1xuICBhc3luYyB0cmFuc2FjdGlvblBlbmRpbmcodHhuSGFzaCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuZ2V0VHJhbnNhY3Rpb25CeUhhc2godHhuSGFzaCk7XG4gICAgICByZXR1cm4gcmVzcG9uc2UudHlwZSA9PT0gXCJwZW5kaW5nX3RyYW5zYWN0aW9uXCI7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgaWYgKChlID09IG51bGwgPyB2b2lkIDAgOiBlLnN0YXR1cykgPT09IDQwNCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBXYWl0IGZvciBhIHRyYW5zYWN0aW9uIHRvIG1vdmUgcGFzdCBwZW5kaW5nIHN0YXRlLlxuICAgKlxuICAgKiBUaGVyZSBhcmUgNCBwb3NzaWJsZSBvdXRjb21lczpcbiAgICogMS4gVHJhbnNhY3Rpb24gaXMgcHJvY2Vzc2VkIGFuZCBzdWNjZXNzZnVsbHkgY29tbWl0dGVkIHRvIHRoZSBibG9ja2NoYWluLlxuICAgKiAyLiBUcmFuc2FjdGlvbiBpcyByZWplY3RlZCBmb3Igc29tZSByZWFzb24sIGFuZCBpcyB0aGVyZWZvcmUgbm90IGNvbW1pdHRlZFxuICAgKiAgICB0byB0aGUgYmxvY2tjaGFpbi5cbiAgICogMy4gVHJhbnNhY3Rpb24gaXMgY29tbWl0dGVkIGJ1dCBleGVjdXRpb24gZmFpbGVkLCBtZWFuaW5nIG5vIGNoYW5nZXMgd2VyZVxuICAgKiAgICB3cml0dGVuIHRvIHRoZSBibG9ja2NoYWluIHN0YXRlLlxuICAgKiA0LiBUcmFuc2FjdGlvbiBpcyBub3QgcHJvY2Vzc2VkIHdpdGhpbiB0aGUgc3BlY2lmaWVkIHRpbWVvdXQuXG4gICAqXG4gICAqIEluIGNhc2UgMSwgdGhpcyBmdW5jdGlvbiByZXNvbHZlcyB3aXRoIHRoZSB0cmFuc2FjdGlvbiByZXNwb25zZSByZXR1cm5lZFxuICAgKiBieSB0aGUgQVBJLlxuICAgKlxuICAgKiBJbiBjYXNlIDIsIHRoZSBmdW5jdGlvbiB3aWxsIHRocm93IGFuIEFwaUVycm9yLCBsaWtlbHkgd2l0aCBhbiBIVFRQIHN0YXR1c1xuICAgKiBjb2RlIGluZGljYXRpbmcgc29tZSBwcm9ibGVtIHdpdGggdGhlIHJlcXVlc3QgKGUuZy4gNDAwKS5cbiAgICpcbiAgICogSW4gY2FzZSAzLCBpZiBgY2hlY2tTdWNjZXNzYCBpcyBmYWxzZSAodGhlIGRlZmF1bHQpLCB0aGlzIGZ1bmN0aW9uIHJldHVybnNcbiAgICogdGhlIHRyYW5zYWN0aW9uIHJlc3BvbnNlIGp1c3QgbGlrZSBpbiBjYXNlIDEsIGluIHdoaWNoIHRoZSBgc3VjY2Vzc2AgZmllbGRcbiAgICogd2lsbCBiZSBmYWxzZS4gSWYgYGNoZWNrU3VjY2Vzc2AgaXMgdHJ1ZSwgaXQgd2lsbCBpbnN0ZWFkIHRocm93IGFcbiAgICogRmFpbGVkVHJhbnNhY3Rpb25FcnJvci5cbiAgICpcbiAgICogSW4gY2FzZSA0LCB0aGlzIGZ1bmN0aW9uIHRocm93cyBhIFdhaXRGb3JUcmFuc2FjdGlvbkVycm9yLlxuICAgKlxuICAgKiBAcGFyYW0gdHhuSGFzaCBUaGUgaGFzaCBvZiBhIHRyYW5zYWN0aW9uIHByZXZpb3VzbHkgc3VibWl0dGVkIHRvIHRoZSBibG9ja2NoYWluLlxuICAgKiBAcGFyYW0gZXh0cmFBcmdzLnRpbWVvdXRTZWNzIFRpbWVvdXQgaW4gc2Vjb25kcy4gRGVmYXVsdHMgdG8gMjAgc2Vjb25kcy5cbiAgICogQHBhcmFtIGV4dHJhQXJncy5jaGVja1N1Y2Nlc3MgU2VlIGFib3ZlLiBEZWZhdWx0cyB0byBmYWxzZS5cbiAgICogQHJldHVybnMgU2VlIGFib3ZlLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBcbiAgICogY29uc3QgcmF3VHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLmdlbmVyYXRlUmF3VHJhbnNhY3Rpb24oc2VuZGVyLmFkZHJlc3MoKSwgcGF5bG9hZCwgZXh0cmFBcmdzKTtcbiAgICogY29uc3QgYmNzVHhuID0gQXB0b3NDbGllbnQuZ2VuZXJhdGVCQ1NUcmFuc2FjdGlvbihzZW5kZXIsIHJhd1RyYW5zYWN0aW9uKTtcbiAgICogY29uc3QgcGVuZGluZ1RyYW5zYWN0aW9uID0gYXdhaXQgdGhpcy5zdWJtaXRTaWduZWRCQ1NUcmFuc2FjdGlvbihiY3NUeG4pO1xuICAgKiBjb25zdCB0cmFuc2FzY3Rpb24gPSBhd2FpdCB0aGlzLmFwdG9zQ2xpZW50LndhaXRGb3JUcmFuc2FjdGlvbldpdGhSZXN1bHQocGVuZGluZ1RyYW5zYWN0aW9uLmhhc2gpO1xuICAgKiBgYGBcbiAgICovXG4gIGFzeW5jIHdhaXRGb3JUcmFuc2FjdGlvbldpdGhSZXN1bHQodHhuSGFzaCwgZXh0cmFBcmdzKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCB0aW1lb3V0U2VjcyA9IChfYSA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRpbWVvdXRTZWNzKSAhPSBudWxsID8gX2EgOiBERUZBVUxUX1RYTl9USU1FT1VUX1NFQztcbiAgICBjb25zdCBjaGVja1N1Y2Nlc3MgPSAoX2IgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5jaGVja1N1Y2Nlc3MpICE9IG51bGwgPyBfYiA6IGZhbHNlO1xuICAgIGxldCBpc1BlbmRpbmcgPSB0cnVlO1xuICAgIGxldCBjb3VudCA9IDA7XG4gICAgbGV0IGxhc3RUeG47XG4gICAgd2hpbGUgKGlzUGVuZGluZykge1xuICAgICAgaWYgKGNvdW50ID49IHRpbWVvdXRTZWNzKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgdHJ5IHtcbiAgICAgICAgbGFzdFR4biA9IGF3YWl0IHRoaXMuZ2V0VHJhbnNhY3Rpb25CeUhhc2godHhuSGFzaCk7XG4gICAgICAgIGlzUGVuZGluZyA9IGxhc3RUeG4udHlwZSA9PT0gXCJwZW5kaW5nX3RyYW5zYWN0aW9uXCI7XG4gICAgICAgIGlmICghaXNQZW5kaW5nKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc3QgaXNBcGlFcnJvciA9IGUgaW5zdGFuY2VvZiBBcGlFcnJvcjtcbiAgICAgICAgY29uc3QgaXNSZXF1ZXN0RXJyb3IgPSBpc0FwaUVycm9yICYmIGUuc3RhdHVzICE9PSA0MDQgJiYgZS5zdGF0dXMgPj0gNDAwICYmIGUuc3RhdHVzIDwgNTAwO1xuICAgICAgICBpZiAoIWlzQXBpRXJyb3IgfHwgaXNSZXF1ZXN0RXJyb3IpIHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBhd2FpdCBzbGVlcCgxZTMpO1xuICAgICAgY291bnQgKz0gMTtcbiAgICB9XG4gICAgaWYgKGxhc3RUeG4gPT09IHZvaWQgMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBXYWl0aW5nIGZvciB0cmFuc2FjdGlvbiAke3R4bkhhc2h9IGZhaWxlZGApO1xuICAgIH1cbiAgICBpZiAoaXNQZW5kaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgV2FpdEZvclRyYW5zYWN0aW9uRXJyb3IoXG4gICAgICAgIGBXYWl0aW5nIGZvciB0cmFuc2FjdGlvbiAke3R4bkhhc2h9IHRpbWVkIG91dCBhZnRlciAke3RpbWVvdXRTZWNzfSBzZWNvbmRzYCxcbiAgICAgICAgbGFzdFR4blxuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKCFjaGVja1N1Y2Nlc3MpIHtcbiAgICAgIHJldHVybiBsYXN0VHhuO1xuICAgIH1cbiAgICBpZiAoIShsYXN0VHhuID09IG51bGwgPyB2b2lkIDAgOiBsYXN0VHhuLnN1Y2Nlc3MpKSB7XG4gICAgICB0aHJvdyBuZXcgRmFpbGVkVHJhbnNhY3Rpb25FcnJvcihcbiAgICAgICAgYFRyYW5zYWN0aW9uICR7dHhuSGFzaH0gZmFpbGVkIHdpdGggYW4gZXJyb3I6ICR7bGFzdFR4bi52bV9zdGF0dXN9YCxcbiAgICAgICAgbGFzdFR4blxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIGxhc3RUeG47XG4gIH1cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gd29ya3MgdGhlIHNhbWUgYXMgYHdhaXRGb3JUcmFuc2FjdGlvbldpdGhSZXN1bHRgIGV4Y2VwdCBpdFxuICAgKiBkb2Vzbid0IHJldHVybiB0aGUgdHJhbnNhY3Rpb24gaW4gdGhvc2UgY2FzZXMsIGl0IHJldHVybnMgbm90aGluZy4gRm9yXG4gICAqIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgZG9jdW1lbnRhdGlvbiBmb3IgYHdhaXRGb3JUcmFuc2FjdGlvbldpdGhSZXN1bHRgLlxuICAgKi9cbiAgYXN5bmMgd2FpdEZvclRyYW5zYWN0aW9uKHR4bkhhc2gsIGV4dHJhQXJncykge1xuICAgIGF3YWl0IHRoaXMud2FpdEZvclRyYW5zYWN0aW9uV2l0aFJlc3VsdCh0eG5IYXNoLCBleHRyYUFyZ3MpO1xuICB9XG4gIGFzeW5jIGdldExlZGdlckluZm8oKSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBnZXQoe1xuICAgICAgdXJsOiB0aGlzLm5vZGVVcmwsXG4gICAgICBvcmlnaW5NZXRob2Q6IFwiZ2V0TGVkZ2VySW5mb1wiLFxuICAgICAgb3ZlcnJpZGVzOiB7IC4uLnRoaXMuY29uZmlnIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuICBhc3luYyBnZXRDaGFpbklkKCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuZ2V0TGVkZ2VySW5mbygpO1xuICAgIHJldHVybiByZXN1bHQuY2hhaW5faWQ7XG4gIH1cbiAgYXN5bmMgZ2V0VGFibGVJdGVtKGhhbmRsZSwgZGF0YSwgcXVlcnkpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBwb3N0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgYm9keTogZGF0YSxcbiAgICAgIGVuZHBvaW50OiBgdGFibGVzLyR7aGFuZGxlfS9pdGVtYCxcbiAgICAgIG9yaWdpbk1ldGhvZDogXCJnZXRUYWJsZUl0ZW1cIixcbiAgICAgIHBhcmFtczogeyBsZWRnZXJfdmVyc2lvbjogKF9hID0gcXVlcnkgPT0gbnVsbCA/IHZvaWQgMCA6IHF1ZXJ5LmxlZGdlclZlcnNpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYS50b1N0cmluZygpIH0sXG4gICAgICBvdmVycmlkZXM6IHsgLi4udGhpcy5jb25maWcgfVxuICAgIH0pO1xuICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICB9XG4gIC8qKlxuICAgKiBHZW5lcmF0ZXMgYSByYXcgdHJhbnNhY3Rpb24gb3V0IG9mIGEgdHJhbnNhY3Rpb24gcGF5bG9hZFxuICAgKiBAcGFyYW0gYWNjb3VudEZyb21cbiAgICogQHBhcmFtIHBheWxvYWRcbiAgICogQHBhcmFtIGV4dHJhQXJnc1xuICAgKiBAcmV0dXJucyBBIHJhdyB0cmFuc2FjdGlvbiBvYmplY3RcbiAgICovXG4gIGFzeW5jIGdlbmVyYXRlUmF3VHJhbnNhY3Rpb24oYWNjb3VudEZyb20sIHBheWxvYWQsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IFt7IHNlcXVlbmNlX251bWJlcjogc2VxdWVuY2VOdW1iZXIgfSwgY2hhaW5JZCwgeyBnYXNfZXN0aW1hdGU6IGdhc0VzdGltYXRlIH1dID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgKGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnByb3ZpZGVkU2VxdWVuY2VOdW1iZXIpID8gUHJvbWlzZS5yZXNvbHZlKHsgc2VxdWVuY2VfbnVtYmVyOiBleHRyYUFyZ3MucHJvdmlkZWRTZXF1ZW5jZU51bWJlciB9KSA6IHRoaXMuZ2V0QWNjb3VudChhY2NvdW50RnJvbSksXG4gICAgICB0aGlzLmdldENoYWluSWQoKSxcbiAgICAgIChleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5nYXNVbml0UHJpY2UpID8gUHJvbWlzZS5yZXNvbHZlKHsgZ2FzX2VzdGltYXRlOiBleHRyYUFyZ3MuZ2FzVW5pdFByaWNlIH0pIDogdGhpcy5lc3RpbWF0ZUdhc1ByaWNlKClcbiAgICBdKTtcbiAgICBjb25zdCB7IG1heEdhc0Ftb3VudCwgZ2FzVW5pdFByaWNlLCBleHBpcmVUaW1lc3RhbXAgfSA9IHtcbiAgICAgIG1heEdhc0Ftb3VudDogQmlnSW50KERFRkFVTFRfTUFYX0dBU19BTU9VTlQpLFxuICAgICAgZ2FzVW5pdFByaWNlOiBCaWdJbnQoZ2FzRXN0aW1hdGUpLFxuICAgICAgZXhwaXJlVGltZXN0YW1wOiBCaWdJbnQoTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMWUzKSArIERFRkFVTFRfVFhOX0VYUF9TRUNfRlJPTV9OT1cpLFxuICAgICAgLi4uZXh0cmFBcmdzXG4gICAgfTtcbiAgICByZXR1cm4gbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuUmF3VHJhbnNhY3Rpb24oXG4gICAgICBhcHRvc190eXBlc19leHBvcnRzLkFjY291bnRBZGRyZXNzLmZyb21IZXgoYWNjb3VudEZyb20pLFxuICAgICAgQmlnSW50KHNlcXVlbmNlTnVtYmVyKSxcbiAgICAgIHBheWxvYWQsXG4gICAgICBtYXhHYXNBbW91bnQsXG4gICAgICBnYXNVbml0UHJpY2UsXG4gICAgICBleHBpcmVUaW1lc3RhbXAsXG4gICAgICBuZXcgYXB0b3NfdHlwZXNfZXhwb3J0cy5DaGFpbklkKGNoYWluSWQpXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogSGVscGVyIGZvciBnZW5lcmF0aW5nLCBzaWduaW5nLCBhbmQgc3VibWl0dGluZyBhIHRyYW5zYWN0aW9uLlxuICAgKlxuICAgKiBAcGFyYW0gc2VuZGVyIEFwdG9zQWNjb3VudCBvZiB0cmFuc2FjdGlvbiBzZW5kZXIuXG4gICAqIEBwYXJhbSBwYXlsb2FkIFRyYW5zYWN0aW9uIHBheWxvYWQuXG4gICAqIEBwYXJhbSBleHRyYUFyZ3MgRXh0cmEgYXJncyBmb3IgYnVpbGRpbmcgdGhlIHRyYW5zYWN0aW9uIHBheWxvYWQuXG4gICAqIEByZXR1cm5zIFRoZSB0cmFuc2FjdGlvbiByZXNwb25zZSBmcm9tIHRoZSBBUEkuXG4gICAqL1xuICBhc3luYyBnZW5lcmF0ZVNpZ25TdWJtaXRUcmFuc2FjdGlvbihzZW5kZXIsIHBheWxvYWQsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IHJhd1RyYW5zYWN0aW9uID0gYXdhaXQgdGhpcy5nZW5lcmF0ZVJhd1RyYW5zYWN0aW9uKHNlbmRlci5hZGRyZXNzKCksIHBheWxvYWQsIGV4dHJhQXJncyk7XG4gICAgY29uc3QgYmNzVHhuID0gX0FwdG9zQ2xpZW50LmdlbmVyYXRlQkNTVHJhbnNhY3Rpb24oc2VuZGVyLCByYXdUcmFuc2FjdGlvbik7XG4gICAgY29uc3QgcGVuZGluZ1RyYW5zYWN0aW9uID0gYXdhaXQgdGhpcy5zdWJtaXRTaWduZWRCQ1NUcmFuc2FjdGlvbihiY3NUeG4pO1xuICAgIHJldHVybiBwZW5kaW5nVHJhbnNhY3Rpb24uaGFzaDtcbiAgfVxuICAvKipcbiAgICogSGVscGVyIGZvciBzaWduaW5nIGFuZCBzdWJtaXR0aW5nIGEgdHJhbnNhY3Rpb24uXG4gICAqXG4gICAqIEBwYXJhbSBzZW5kZXIgQXB0b3NBY2NvdW50IG9mIHRyYW5zYWN0aW9uIHNlbmRlci5cbiAgICogQHBhcmFtIHRyYW5zYWN0aW9uIEEgZ2VuZXJhdGVkIFJhdyB0cmFuc2FjdGlvbiBwYXlsb2FkLlxuICAgKiBAcmV0dXJucyBUaGUgdHJhbnNhY3Rpb24gcmVzcG9uc2UgZnJvbSB0aGUgQVBJLlxuICAgKi9cbiAgYXN5bmMgc2lnbkFuZFN1Ym1pdFRyYW5zYWN0aW9uKHNlbmRlciwgdHJhbnNhY3Rpb24pIHtcbiAgICBjb25zdCBiY3NUeG4gPSBfQXB0b3NDbGllbnQuZ2VuZXJhdGVCQ1NUcmFuc2FjdGlvbihzZW5kZXIsIHRyYW5zYWN0aW9uKTtcbiAgICBjb25zdCBwZW5kaW5nVHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLnN1Ym1pdFNpZ25lZEJDU1RyYW5zYWN0aW9uKGJjc1R4bik7XG4gICAgcmV0dXJuIHBlbmRpbmdUcmFuc2FjdGlvbi5oYXNoO1xuICB9XG4gIC8qKlxuICAgKiBQdWJsaXNoZXMgYSBtb3ZlIHBhY2thZ2UuIGBwYWNrYWdlTWV0YWRhdGFgIGFuZCBgbW9kdWxlc2AgY2FuIGJlIGdlbmVyYXRlZCB3aXRoIGNvbW1hbmRcbiAgICogYGFwdG9zIG1vdmUgY29tcGlsZSAtLXNhdmUtbWV0YWRhdGEgWyAtLWluY2x1ZGVkLWFydGlmYWN0cz08Li4uPiBdYC5cbiAgICogQHBhcmFtIHNlbmRlclxuICAgKiBAcGFyYW0gcGFja2FnZU1ldGFkYXRhIHBhY2thZ2UgbWV0YWRhdGEgYnl0ZXNcbiAgICogQHBhcmFtIG1vZHVsZXMgYnl0ZWNvZGVzIG9mIG1vZHVsZXNcbiAgICogQHBhcmFtIGV4dHJhQXJnc1xuICAgKiBAcmV0dXJucyBUcmFuc2FjdGlvbiBoYXNoXG4gICAqL1xuICBhc3luYyBwdWJsaXNoUGFja2FnZShzZW5kZXIsIHBhY2thZ2VNZXRhZGF0YSwgbW9kdWxlcywgZXh0cmFBcmdzKSB7XG4gICAgY29uc3QgY29kZVNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICAgIHNlcmlhbGl6ZVZlY3Rvcihtb2R1bGVzLCBjb2RlU2VyaWFsaXplcik7XG4gICAgY29uc3QgcGF5bG9hZCA9IG5ldyBhcHRvc190eXBlc19leHBvcnRzLlRyYW5zYWN0aW9uUGF5bG9hZEVudHJ5RnVuY3Rpb24oXG4gICAgICBhcHRvc190eXBlc19leHBvcnRzLkVudHJ5RnVuY3Rpb24ubmF0dXJhbChcbiAgICAgICAgXCIweDE6OmNvZGVcIixcbiAgICAgICAgXCJwdWJsaXNoX3BhY2thZ2VfdHhuXCIsXG4gICAgICAgIFtdLFxuICAgICAgICBbYmNzU2VyaWFsaXplQnl0ZXMocGFja2FnZU1ldGFkYXRhKSwgY29kZVNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKV1cbiAgICAgIClcbiAgICApO1xuICAgIHJldHVybiB0aGlzLmdlbmVyYXRlU2lnblN1Ym1pdFRyYW5zYWN0aW9uKHNlbmRlciwgcGF5bG9hZCwgZXh0cmFBcmdzKTtcbiAgfVxuICAvKipcbiAgICogUHVibGlzaGVzIGEgbW92ZSBwYWNrYWdlcyBieSBjcmVhdGluZyBhIHJlc291cmNlIGFjY291bnQuXG4gICAqIFRoZSBwYWNrYWdlIGNhbm5vdCBiZSB1cGdyYWRlZCBzaW5jZSBpdCBpcyBkZXBsb3llZCBieSByZXNvdXJjZSBhY2NvdW50XG4gICAqIGBwYWNrYWdlTWV0YWRhdGFgIGFuZCBgbW9kdWxlc2AgY2FuIGJlIGdlbmVyYXRlZCB3aXRoIGNvbW1hbmRcbiAgICogYGFwdG9zIG1vdmUgY29tcGlsZSAtLXNhdmUtbWV0YWRhdGEgWyAtLWluY2x1ZGVkLWFydGlmYWN0cz08Li4uPiBdYC5cbiAgICogQHBhcmFtIHNlbmRlclxuICAgKiBAcGFyYW0gc2VlZCBzZWVkcyBmb3IgY3JlYXRpb24gb2YgcmVzb3VyY2UgYWRkcmVzc1xuICAgKiBAcGFyYW0gcGFja2FnZU1ldGFkYXRhIHBhY2thZ2UgbWV0YWRhdGEgYnl0ZXNcbiAgICogQHBhcmFtIG1vZHVsZXMgYnl0ZWNvZGVzIG9mIG1vZHVsZXNcbiAgICogQHBhcmFtIGV4dHJhQXJnc1xuICAgKiBAcmV0dXJucyBUcmFuc2FjdGlvbiBoYXNoXG4gICAqL1xuICBhc3luYyBjcmVhdGVSZXNvdXJjZUFjY291bnRBbmRQdWJsaXNoUGFja2FnZShzZW5kZXIsIHNlZWQsIHBhY2thZ2VNZXRhZGF0YSwgbW9kdWxlcywgZXh0cmFBcmdzKSB7XG4gICAgY29uc3QgY29kZVNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICAgIHNlcmlhbGl6ZVZlY3Rvcihtb2R1bGVzLCBjb2RlU2VyaWFsaXplcik7XG4gICAgY29uc3QgcGF5bG9hZCA9IG5ldyBhcHRvc190eXBlc19leHBvcnRzLlRyYW5zYWN0aW9uUGF5bG9hZEVudHJ5RnVuY3Rpb24oXG4gICAgICBhcHRvc190eXBlc19leHBvcnRzLkVudHJ5RnVuY3Rpb24ubmF0dXJhbChcbiAgICAgICAgXCIweDE6OnJlc291cmNlX2FjY291bnRcIixcbiAgICAgICAgXCJjcmVhdGVfcmVzb3VyY2VfYWNjb3VudF9hbmRfcHVibGlzaF9wYWNrYWdlXCIsXG4gICAgICAgIFtdLFxuICAgICAgICBbYmNzU2VyaWFsaXplQnl0ZXMoc2VlZCksIGJjc1NlcmlhbGl6ZUJ5dGVzKHBhY2thZ2VNZXRhZGF0YSksIGNvZGVTZXJpYWxpemVyLmdldEJ5dGVzKCldXG4gICAgICApXG4gICAgKTtcbiAgICByZXR1cm4gdGhpcy5nZW5lcmF0ZVNpZ25TdWJtaXRUcmFuc2FjdGlvbihzZW5kZXIsIHBheWxvYWQsIGV4dHJhQXJncyk7XG4gIH1cbiAgLyoqXG4gICAqIEhlbHBlciBmb3IgZ2VuZXJhdGluZywgc3VibWl0dGluZywgYW5kIHdhaXRpbmcgZm9yIGEgdHJhbnNhY3Rpb24sIGFuZCB0aGVuXG4gICAqIGNoZWNraW5nIHdoZXRoZXIgaXQgd2FzIGNvbW1pdHRlZCBzdWNjZXNzZnVsbHkuIFVuZGVyIHRoZSBob29kIHRoaXMgaXMganVzdFxuICAgKiBgZ2VuZXJhdGVTaWduU3VibWl0VHJhbnNhY3Rpb25gIGFuZCB0aGVuIGB3YWl0Rm9yVHJhbnNhY3Rpb25XaXRoUmVzdWx0YCwgc2VlXG4gICAqIHRob3NlIGZvciBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcmV0dXJuIC8gZXJyb3Igc2VtYW50aWNzIG9mIHRoaXMgZnVuY3Rpb24uXG4gICAqL1xuICBhc3luYyBnZW5lcmF0ZVNpZ25TdWJtaXRXYWl0Rm9yVHJhbnNhY3Rpb24oc2VuZGVyLCBwYXlsb2FkLCBleHRyYUFyZ3MpIHtcbiAgICBjb25zdCB0eG5IYXNoID0gYXdhaXQgdGhpcy5nZW5lcmF0ZVNpZ25TdWJtaXRUcmFuc2FjdGlvbihzZW5kZXIsIHBheWxvYWQsIGV4dHJhQXJncyk7XG4gICAgcmV0dXJuIHRoaXMud2FpdEZvclRyYW5zYWN0aW9uV2l0aFJlc3VsdCh0eG5IYXNoLCBleHRyYUFyZ3MpO1xuICB9XG4gIGFzeW5jIGVzdGltYXRlR2FzUHJpY2UoKSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBnZXQoe1xuICAgICAgdXJsOiB0aGlzLm5vZGVVcmwsXG4gICAgICBlbmRwb2ludDogXCJlc3RpbWF0ZV9nYXNfcHJpY2VcIixcbiAgICAgIG9yaWdpbk1ldGhvZDogXCJlc3RpbWF0ZUdhc1ByaWNlXCIsXG4gICAgICBvdmVycmlkZXM6IHsgLi4udGhpcy5jb25maWcgfVxuICAgIH0pO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG4gIGFzeW5jIGVzdGltYXRlTWF4R2FzQW1vdW50KGZvckFjY291bnQpIHtcbiAgICBjb25zdCB0eXBlVGFnID0gYDB4MTo6Y29pbjo6Q29pblN0b3JlPCR7QVBUT1NfQ09JTn0+YDtcbiAgICBjb25zdCBbeyBnYXNfZXN0aW1hdGU6IGdhc1VuaXRQcmljZSB9LCByZXNvdXJjZXNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgdGhpcy5lc3RpbWF0ZUdhc1ByaWNlKCksXG4gICAgICB0aGlzLmdldEFjY291bnRSZXNvdXJjZXMoZm9yQWNjb3VudClcbiAgICBdKTtcbiAgICBjb25zdCBhY2NvdW50UmVzb3VyY2UgPSByZXNvdXJjZXMuZmluZCgocikgPT4gci50eXBlID09PSB0eXBlVGFnKTtcbiAgICBjb25zdCBiYWxhbmNlID0gQmlnSW50KGFjY291bnRSZXNvdXJjZS5kYXRhLmNvaW4udmFsdWUpO1xuICAgIHJldHVybiBiYWxhbmNlIC8gQmlnSW50KGdhc1VuaXRQcmljZSk7XG4gIH1cbiAgLyoqXG4gICAqIFJvdGF0ZSBhbiBhY2NvdW50J3MgYXV0aCBrZXkuIEFmdGVyIHJvdGF0aW9uLCBvbmx5IHRoZSBuZXcgcHJpdmF0ZSBrZXkgY2FuIGJlIHVzZWQgdG8gc2lnbiB0eG5zIGZvclxuICAgKiB0aGUgYWNjb3VudC5cbiAgICogV0FSTklORzogWW91IG11c3QgY3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIEFwdG9zQWNjb3VudCBhZnRlciB1c2luZyB0aGlzIGZ1bmN0aW9uLlxuICAgKiBAcGFyYW0gZm9yQWNjb3VudCBBY2NvdW50IG9mIHdoaWNoIHRoZSBhdXRoIGtleSB3aWxsIGJlIHJvdGF0ZWRcbiAgICogQHBhcmFtIHRvUHJpdmF0ZUtleUJ5dGVzIE5ldyBwcml2YXRlIGtleVxuICAgKiBAcGFyYW0gZXh0cmFBcmdzIEV4dHJhIGFyZ3MgZm9yIGJ1aWxkaW5nIHRoZSB0cmFuc2FjdGlvbiBwYXlsb2FkLlxuICAgKiBAcmV0dXJucyBQZW5kaW5nVHJhbnNhY3Rpb25cbiAgICovXG4gIGFzeW5jIHJvdGF0ZUF1dGhLZXlFZDI1NTE5KGZvckFjY291bnQsIHRvUHJpdmF0ZUtleUJ5dGVzLCBleHRyYUFyZ3MpIHtcbiAgICBjb25zdCB7IHNlcXVlbmNlX251bWJlcjogc2VxdWVuY2VOdW1iZXIsIGF1dGhlbnRpY2F0aW9uX2tleTogYXV0aEtleSB9ID0gYXdhaXQgdGhpcy5nZXRBY2NvdW50KFxuICAgICAgZm9yQWNjb3VudC5hZGRyZXNzKClcbiAgICApO1xuICAgIGNvbnN0IGhlbHBlckFjY291bnQgPSBuZXcgQXB0b3NBY2NvdW50KHRvUHJpdmF0ZUtleUJ5dGVzKTtcbiAgICBjb25zdCBjaGFsbGVuZ2UgPSBuZXcgYXB0b3NfdHlwZXNfZXhwb3J0cy5Sb3RhdGlvblByb29mQ2hhbGxlbmdlKFxuICAgICAgYXB0b3NfdHlwZXNfZXhwb3J0cy5BY2NvdW50QWRkcmVzcy5DT1JFX0NPREVfQUREUkVTUyxcbiAgICAgIFwiYWNjb3VudFwiLFxuICAgICAgXCJSb3RhdGlvblByb29mQ2hhbGxlbmdlXCIsXG4gICAgICBCaWdJbnQoc2VxdWVuY2VOdW1iZXIpLFxuICAgICAgYXB0b3NfdHlwZXNfZXhwb3J0cy5BY2NvdW50QWRkcmVzcy5mcm9tSGV4KGZvckFjY291bnQuYWRkcmVzcygpKSxcbiAgICAgIG5ldyBhcHRvc190eXBlc19leHBvcnRzLkFjY291bnRBZGRyZXNzKG5ldyBIZXhTdHJpbmcoYXV0aEtleSkudG9VaW50OEFycmF5KCkpLFxuICAgICAgaGVscGVyQWNjb3VudC5wdWJLZXkoKS50b1VpbnQ4QXJyYXkoKVxuICAgICk7XG4gICAgY29uc3QgY2hhbGxlbmdlSGV4ID0gSGV4U3RyaW5nLmZyb21VaW50OEFycmF5KGJjc1RvQnl0ZXMoY2hhbGxlbmdlKSk7XG4gICAgY29uc3QgcHJvb2ZTaWduZWRCeUN1cnJlbnRQcml2YXRlS2V5ID0gZm9yQWNjb3VudC5zaWduSGV4U3RyaW5nKGNoYWxsZW5nZUhleCk7XG4gICAgY29uc3QgcHJvb2ZTaWduZWRCeU5ld1ByaXZhdGVLZXkgPSBoZWxwZXJBY2NvdW50LnNpZ25IZXhTdHJpbmcoY2hhbGxlbmdlSGV4KTtcbiAgICBjb25zdCBwYXlsb2FkID0gbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuVHJhbnNhY3Rpb25QYXlsb2FkRW50cnlGdW5jdGlvbihcbiAgICAgIGFwdG9zX3R5cGVzX2V4cG9ydHMuRW50cnlGdW5jdGlvbi5uYXR1cmFsKFxuICAgICAgICBcIjB4MTo6YWNjb3VudFwiLFxuICAgICAgICBcInJvdGF0ZV9hdXRoZW50aWNhdGlvbl9rZXlcIixcbiAgICAgICAgW10sXG4gICAgICAgIFtcbiAgICAgICAgICBiY3NTZXJpYWxpemVVOCgwKSxcbiAgICAgICAgICAvLyBlZDI1NTE5IHNjaGVtZVxuICAgICAgICAgIGJjc1NlcmlhbGl6ZUJ5dGVzKGZvckFjY291bnQucHViS2V5KCkudG9VaW50OEFycmF5KCkpLFxuICAgICAgICAgIGJjc1NlcmlhbGl6ZVU4KDApLFxuICAgICAgICAgIC8vIGVkMjU1MTkgc2NoZW1lXG4gICAgICAgICAgYmNzU2VyaWFsaXplQnl0ZXMoaGVscGVyQWNjb3VudC5wdWJLZXkoKS50b1VpbnQ4QXJyYXkoKSksXG4gICAgICAgICAgYmNzU2VyaWFsaXplQnl0ZXMocHJvb2ZTaWduZWRCeUN1cnJlbnRQcml2YXRlS2V5LnRvVWludDhBcnJheSgpKSxcbiAgICAgICAgICBiY3NTZXJpYWxpemVCeXRlcyhwcm9vZlNpZ25lZEJ5TmV3UHJpdmF0ZUtleS50b1VpbnQ4QXJyYXkoKSlcbiAgICAgICAgXVxuICAgICAgKVxuICAgICk7XG4gICAgY29uc3QgcmF3VHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLmdlbmVyYXRlUmF3VHJhbnNhY3Rpb24oZm9yQWNjb3VudC5hZGRyZXNzKCksIHBheWxvYWQsIGV4dHJhQXJncyk7XG4gICAgY29uc3QgYmNzVHhuID0gX0FwdG9zQ2xpZW50LmdlbmVyYXRlQkNTVHJhbnNhY3Rpb24oZm9yQWNjb3VudCwgcmF3VHJhbnNhY3Rpb24pO1xuICAgIHJldHVybiB0aGlzLnN1Ym1pdFNpZ25lZEJDU1RyYW5zYWN0aW9uKGJjc1R4bik7XG4gIH1cbiAgLyoqXG4gICAqIExvb2t1cCB0aGUgb3JpZ2luYWwgYWRkcmVzcyBieSB0aGUgY3VycmVudCBkZXJpdmVkIGFkZHJlc3NcbiAgICogQHBhcmFtIGFkZHJlc3NPckF1dGhLZXlcbiAgICogQHJldHVybnMgb3JpZ2luYWwgYWRkcmVzc1xuICAgKi9cbiAgYXN5bmMgbG9va3VwT3JpZ2luYWxBZGRyZXNzKGFkZHJlc3NPckF1dGhLZXkpIHtcbiAgICBjb25zdCByZXNvdXJjZSA9IGF3YWl0IHRoaXMuZ2V0QWNjb3VudFJlc291cmNlKFwiMHgxXCIsIFwiMHgxOjphY2NvdW50OjpPcmlnaW5hdGluZ0FkZHJlc3NcIik7XG4gICAgY29uc3Qge1xuICAgICAgYWRkcmVzc19tYXA6IHsgaGFuZGxlIH1cbiAgICB9ID0gcmVzb3VyY2UuZGF0YTtcbiAgICBjb25zdCBvcmlnQWRkcmVzcyA9IGF3YWl0IHRoaXMuZ2V0VGFibGVJdGVtKGhhbmRsZSwge1xuICAgICAga2V5X3R5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgdmFsdWVfdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICBrZXk6IEhleFN0cmluZy5lbnN1cmUoYWRkcmVzc09yQXV0aEtleSkuaGV4KClcbiAgICB9KTtcbiAgICByZXR1cm4gbmV3IEhleFN0cmluZyhvcmlnQWRkcmVzcyk7XG4gIH1cbiAgYXN5bmMgZ2V0QmxvY2tCeUhlaWdodChibG9ja0hlaWdodCwgd2l0aFRyYW5zYWN0aW9ucykge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgZW5kcG9pbnQ6IGBibG9ja3MvYnlfaGVpZ2h0LyR7YmxvY2tIZWlnaHR9YCxcbiAgICAgIG9yaWdpbk1ldGhvZDogXCJnZXRCbG9ja0J5SGVpZ2h0XCIsXG4gICAgICBwYXJhbXM6IHsgd2l0aF90cmFuc2FjdGlvbnM6IHdpdGhUcmFuc2FjdGlvbnMgfSxcbiAgICAgIG92ZXJyaWRlczogeyAuLi50aGlzLmNvbmZpZyB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cbiAgYXN5bmMgZ2V0QmxvY2tCeVZlcnNpb24odmVyc2lvbiwgd2l0aFRyYW5zYWN0aW9ucykge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0KHtcbiAgICAgIHVybDogdGhpcy5ub2RlVXJsLFxuICAgICAgZW5kcG9pbnQ6IGBibG9ja3MvYnlfdmVyc2lvbi8ke3ZlcnNpb259YCxcbiAgICAgIG9yaWdpbk1ldGhvZDogXCJnZXRCbG9ja0J5VmVyc2lvblwiLFxuICAgICAgcGFyYW1zOiB7IHdpdGhfdHJhbnNhY3Rpb25zOiB3aXRoVHJhbnNhY3Rpb25zIH0sXG4gICAgICBvdmVycmlkZXM6IHsgLi4udGhpcy5jb25maWcgfVxuICAgIH0pO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG4gIGFzeW5jIHZpZXcocGF5bG9hZCwgbGVkZ2VyX3ZlcnNpb24pIHtcbiAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHBvc3Qoe1xuICAgICAgdXJsOiB0aGlzLm5vZGVVcmwsXG4gICAgICBib2R5OiBwYXlsb2FkLFxuICAgICAgZW5kcG9pbnQ6IFwidmlld1wiLFxuICAgICAgb3JpZ2luTWV0aG9kOiBcImdldFRhYmxlSXRlbVwiLFxuICAgICAgcGFyYW1zOiB7IGxlZGdlcl92ZXJzaW9uIH0sXG4gICAgICBvdmVycmlkZXM6IHsgLi4udGhpcy5jb25maWcgfVxuICAgIH0pO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIGNsZWFyQ2FjaGUodGFncykge1xuICAgIGNsZWFyKHRhZ3MpO1xuICB9XG59O1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgcGFyc2VBcGlFcnJvclxuXSwgX0FwdG9zQ2xpZW50LnByb3RvdHlwZSwgXCJnZXRBY2NvdW50XCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgcGFyc2VBcGlFcnJvclxuXSwgX0FwdG9zQ2xpZW50LnByb3RvdHlwZSwgXCJnZXRBY2NvdW50VHJhbnNhY3Rpb25zXCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgcGFyc2VBcGlFcnJvcixcbiAgTWVtb2l6ZUV4cGlyaW5nKDEwICogNjAgKiAxZTMpXG5dLCBfQXB0b3NDbGllbnQucHJvdG90eXBlLCBcImdldEFjY291bnRNb2R1bGVzXCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgcGFyc2VBcGlFcnJvclxuXSwgX0FwdG9zQ2xpZW50LnByb3RvdHlwZSwgXCJnZXRBY2NvdW50TW9kdWxlXCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgcGFyc2VBcGlFcnJvclxuXSwgX0FwdG9zQ2xpZW50LnByb3RvdHlwZSwgXCJnZXRBY2NvdW50UmVzb3VyY2VzXCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgcGFyc2VBcGlFcnJvclxuXSwgX0FwdG9zQ2xpZW50LnByb3RvdHlwZSwgXCJnZXRBY2NvdW50UmVzb3VyY2VcIiwgMSk7XG5fX2RlY29yYXRlQ2xhc3MoW1xuICBwYXJzZUFwaUVycm9yXG5dLCBfQXB0b3NDbGllbnQucHJvdG90eXBlLCBcImdldEV2ZW50c0J5Q3JlYXRpb25OdW1iZXJcIiwgMSk7XG5fX2RlY29yYXRlQ2xhc3MoW1xuICBwYXJzZUFwaUVycm9yXG5dLCBfQXB0b3NDbGllbnQucHJvdG90eXBlLCBcImdldEV2ZW50c0J5RXZlbnRIYW5kbGVcIiwgMSk7XG5fX2RlY29yYXRlQ2xhc3MoW1xuICBwYXJzZUFwaUVycm9yXG5dLCBfQXB0b3NDbGllbnQucHJvdG90eXBlLCBcInN1Ym1pdFNpZ25lZEJDU1RyYW5zYWN0aW9uXCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgcGFyc2VBcGlFcnJvclxuXSwgX0FwdG9zQ2xpZW50LnByb3RvdHlwZSwgXCJzdWJtaXRCQ1NTaW11bGF0aW9uXCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgcGFyc2VBcGlFcnJvclxuXSwgX0FwdG9zQ2xpZW50LnByb3RvdHlwZSwgXCJnZXRUcmFuc2FjdGlvbnNcIiwgMSk7XG5fX2RlY29yYXRlQ2xhc3MoW1xuICBwYXJzZUFwaUVycm9yXG5dLCBfQXB0b3NDbGllbnQucHJvdG90eXBlLCBcImdldFRyYW5zYWN0aW9uQnlIYXNoXCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgcGFyc2VBcGlFcnJvclxuXSwgX0FwdG9zQ2xpZW50LnByb3RvdHlwZSwgXCJnZXRUcmFuc2FjdGlvbkJ5VmVyc2lvblwiLCAxKTtcbl9fZGVjb3JhdGVDbGFzcyhbXG4gIHBhcnNlQXBpRXJyb3Jcbl0sIF9BcHRvc0NsaWVudC5wcm90b3R5cGUsIFwiZ2V0TGVkZ2VySW5mb1wiLCAxKTtcbl9fZGVjb3JhdGVDbGFzcyhbXG4gIE1lbW9pemUoKVxuXSwgX0FwdG9zQ2xpZW50LnByb3RvdHlwZSwgXCJnZXRDaGFpbklkXCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgcGFyc2VBcGlFcnJvclxuXSwgX0FwdG9zQ2xpZW50LnByb3RvdHlwZSwgXCJnZXRUYWJsZUl0ZW1cIiwgMSk7XG5fX2RlY29yYXRlQ2xhc3MoW1xuICBwYXJzZUFwaUVycm9yLFxuICBNZW1vaXplKHtcbiAgICB0dGxNczogNSAqIDYwICogMWUzLFxuICAgIC8vIGNhY2hlIHJlc3VsdCBmb3IgNW1pblxuICAgIHRhZ3M6IFtcImdhc19lc3RpbWF0ZXNcIl1cbiAgfSlcbl0sIF9BcHRvc0NsaWVudC5wcm90b3R5cGUsIFwiZXN0aW1hdGVHYXNQcmljZVwiLCAxKTtcbl9fZGVjb3JhdGVDbGFzcyhbXG4gIHBhcnNlQXBpRXJyb3Jcbl0sIF9BcHRvc0NsaWVudC5wcm90b3R5cGUsIFwiZXN0aW1hdGVNYXhHYXNBbW91bnRcIiwgMSk7XG5fX2RlY29yYXRlQ2xhc3MoW1xuICBwYXJzZUFwaUVycm9yXG5dLCBfQXB0b3NDbGllbnQucHJvdG90eXBlLCBcImdldEJsb2NrQnlIZWlnaHRcIiwgMSk7XG5fX2RlY29yYXRlQ2xhc3MoW1xuICBwYXJzZUFwaUVycm9yXG5dLCBfQXB0b3NDbGllbnQucHJvdG90eXBlLCBcImdldEJsb2NrQnlWZXJzaW9uXCIsIDEpO1xuX19kZWNvcmF0ZUNsYXNzKFtcbiAgcGFyc2VBcGlFcnJvclxuXSwgX0FwdG9zQ2xpZW50LnByb3RvdHlwZSwgXCJ2aWV3XCIsIDEpO1xudmFyIEFwdG9zQ2xpZW50ID0gX0FwdG9zQ2xpZW50O1xudmFyIFdhaXRGb3JUcmFuc2FjdGlvbkVycm9yID0gY2xhc3MgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGxhc3RTdWJtaXR0ZWRUcmFuc2FjdGlvbikge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIHRoaXMubGFzdFN1Ym1pdHRlZFRyYW5zYWN0aW9uID0gbGFzdFN1Ym1pdHRlZFRyYW5zYWN0aW9uO1xuICB9XG59O1xudmFyIEZhaWxlZFRyYW5zYWN0aW9uRXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IobWVzc2FnZSwgdHJhbnNhY3Rpb24pIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLnRyYW5zYWN0aW9uID0gdHJhbnNhY3Rpb247XG4gIH1cbn07XG52YXIgQXBpRXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3Ioc3RhdHVzLCBtZXNzYWdlLCBlcnJvckNvZGUsIHZtRXJyb3JDb2RlKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB0aGlzLmVycm9yQ29kZSA9IGVycm9yQ29kZTtcbiAgICB0aGlzLnZtRXJyb3JDb2RlID0gdm1FcnJvckNvZGU7XG4gIH1cbn07XG5mdW5jdGlvbiBwYXJzZUFwaUVycm9yKHRhcmdldCwgcHJvcGVydHlLZXksIGRlc2NyaXB0b3IpIHtcbiAgY29uc3QgY2hpbGRGdW5jdGlvbiA9IGRlc2NyaXB0b3IudmFsdWU7XG4gIGRlc2NyaXB0b3IudmFsdWUgPSBhc3luYyBmdW5jdGlvbiB3cmFwcGVyKC4uLmFyZ3MpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBjaGlsZEZ1bmN0aW9uLmFwcGx5KHRoaXMsIFsuLi5hcmdzXSk7XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGlmIChlIGluc3RhbmNlb2YgQXB0b3NBcGlFcnJvcikge1xuICAgICAgICB0aHJvdyBuZXcgQXBpRXJyb3IoXG4gICAgICAgICAgZS5zdGF0dXMsXG4gICAgICAgICAgSlNPTi5zdHJpbmdpZnkoeyBtZXNzYWdlOiBlLm1lc3NhZ2UsIC4uLmUuZGF0YSB9KSxcbiAgICAgICAgICAoX2EgPSBlLmRhdGEpID09IG51bGwgPyB2b2lkIDAgOiBfYS5lcnJvcl9jb2RlLFxuICAgICAgICAgIChfYiA9IGUuZGF0YSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnZtX2Vycm9yX2NvZGVcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9O1xuICByZXR1cm4gZGVzY3JpcHRvcjtcbn1cblxuLy8gc3JjL3Byb3ZpZGVycy9pbmRleGVyLnRzXG52YXIgSW5kZXhlckNsaWVudCA9IGNsYXNzIF9JbmRleGVyQ2xpZW50IHtcbiAgLyoqXG4gICAqIEBwYXJhbSBlbmRwb2ludCBVUkwgb2YgdGhlIEFwdG9zIEluZGV4ZXIgQVBJIGVuZHBvaW50LlxuICAgKi9cbiAgY29uc3RydWN0b3IoZW5kcG9pbnQsIGNvbmZpZykge1xuICAgIHRoaXMuZW5kcG9pbnQgPSBlbmRwb2ludDtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgfVxuICAvKipcbiAgICogSW5kZXhlciBvbmx5IGFjY2VwdHMgYWRkcmVzcyBpbiB0aGUgbG9uZyBmb3JtYXQsIGkuZSBhIDY2IGNoYXJzIGxvbmcgLT4gMHg8NjQgY2hhcnM+XG4gICAqIFRoaXMgbWV0aG9kIG1ha2VzIHN1cmUgYWRkcmVzcyBpcyA2NiBjaGFycyBsb25nLlxuICAgKiBAcGFyYW0gYWRkcmVzc1xuICAgKi9cbiAgc3RhdGljIHZhbGlkYXRlQWRkcmVzcyhhZGRyZXNzKSB7XG4gICAgaWYgKGFkZHJlc3MubGVuZ3RoIDwgNjYpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgJHthZGRyZXNzfSBpcyBsZXNzIHRoYW4gNjYgY2hhcnMgbG9uZy5gKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIE1ha2VzIGF4aW9zIGNsaWVudCBjYWxsIHRvIGZldGNoIGRhdGEgZnJvbSBBcHRvcyBJbmRleGVyLlxuICAgKlxuICAgKiBAcGFyYW0gZ3JhcGhxbFF1ZXJ5IEEgR3JhcGhRTCBxdWVyeSB0byBwYXNzIGluIHRoZSBgZGF0YWAgYXhpb3MgY2FsbC5cbiAgICovXG4gIGFzeW5jIHF1ZXJ5SW5kZXhlcihncmFwaHFsUXVlcnkpIHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHBvc3Qoe1xuICAgICAgdXJsOiB0aGlzLmVuZHBvaW50LFxuICAgICAgYm9keTogZ3JhcGhxbFF1ZXJ5LFxuICAgICAgb3ZlcnJpZGVzOiB7IFdJVEhfQ1JFREVOVElBTFM6IGZhbHNlLCAuLi50aGlzLmNvbmZpZyB9XG4gICAgfSk7XG4gICAgaWYgKHJlc3BvbnNlLmRhdGEuZXJyb3JzKSB7XG4gICAgICB0aHJvdyBuZXcgQXBpRXJyb3IoXG4gICAgICAgIHJlc3BvbnNlLmRhdGEuZXJyb3JzWzBdLmV4dGVuc2lvbnMuY29kZSxcbiAgICAgICAgSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLmRhdGEuZXJyb3JzWzBdLm1lc3NhZ2UsXG4gICAgICAgICAgZXJyb3JfY29kZTogcmVzcG9uc2UuZGF0YS5lcnJvcnNbMF0uZXh0ZW5zaW9ucy5jb2RlXG4gICAgICAgIH0pXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzcG9uc2UuZGF0YS5kYXRhO1xuICB9XG4gIC8qKlxuICAgKiBRdWVyaWVzIEluZGV4ZXIgTGVkZ2VyIEluZm9cbiAgICpcbiAgICogQHJldHVybnMgR2V0TGVkZ2VySW5mb1F1ZXJ5IHJlc3BvbnNlIHR5cGVcbiAgICovXG4gIGFzeW5jIGdldEluZGV4ZXJMZWRnZXJJbmZvKCkge1xuICAgIGNvbnN0IGdyYXBocWxRdWVyeSA9IHtcbiAgICAgIHF1ZXJ5OiBHZXRJbmRleGVyTGVkZ2VySW5mb1xuICAgIH07XG4gICAgcmV0dXJuIHRoaXMucXVlcnlJbmRleGVyKGdyYXBocWxRdWVyeSk7XG4gIH1cbiAgLy8gVE9LRU5TIC8vXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBwbGVhc2UgdXNlIGBnZXRPd25lZFRva2Vuc2AgcXVlcnlcbiAgICpcbiAgICogUXVlcmllcyBhbiBBcHRvcyBhY2NvdW50J3MgTkZUcyBieSBvd25lciBhZGRyZXNzXG4gICAqXG4gICAqIEBwYXJhbSBvd25lckFkZHJlc3MgSGV4LWVuY29kZWQgMzIgYnl0ZSBBcHRvcyBhY2NvdW50IGFkZHJlc3NcbiAgICogQHJldHVybnMgR2V0QWNjb3VudEN1cnJlbnRUb2tlbnNRdWVyeSByZXNwb25zZSB0eXBlXG4gICAqL1xuICBhc3luYyBnZXRBY2NvdW50TkZUcyhvd25lckFkZHJlc3MsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBhZGRyZXNzID0gSGV4U3RyaW5nLmVuc3VyZShvd25lckFkZHJlc3MpLmhleCgpO1xuICAgIF9JbmRleGVyQ2xpZW50LnZhbGlkYXRlQWRkcmVzcyhhZGRyZXNzKTtcbiAgICBjb25zdCBncmFwaHFsUXVlcnkgPSB7XG4gICAgICBxdWVyeTogR2V0QWNjb3VudEN1cnJlbnRUb2tlbnMsXG4gICAgICB2YXJpYWJsZXM6IHsgYWRkcmVzcywgb2Zmc2V0OiBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLm9mZnNldCwgbGltaXQ6IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubGltaXQgfVxuICAgIH07XG4gICAgcmV0dXJuIHRoaXMucXVlcnlJbmRleGVyKGdyYXBocWxRdWVyeSk7XG4gIH1cbiAgLyoqXG4gICAqIFF1ZXJpZXMgYSB0b2tlbiBhY3Rpdml0aWVzIGJ5IHRva2VuIGFkZHJlc3MgKHYyKSBvciB0b2tlbiBkYXRhIGlkICh2MSlcbiAgICpcbiAgICogQHBhcmFtIGlkSGFzaCB0b2tlbiBhZGRyZXNzICh2Mikgb3IgdG9rZW4gZGF0YSBpZCAodjEpXG4gICAqIEByZXR1cm5zIEdldFRva2VuQWN0aXZpdGllc1F1ZXJ5IHJlc3BvbnNlIHR5cGVcbiAgICovXG4gIGFzeW5jIGdldFRva2VuQWN0aXZpdGllcyh0b2tlbiwgZXh0cmFBcmdzKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCB0b2tlbkFkZHJlc3MgPSBIZXhTdHJpbmcuZW5zdXJlKHRva2VuKS5oZXgoKTtcbiAgICBfSW5kZXhlckNsaWVudC52YWxpZGF0ZUFkZHJlc3ModG9rZW5BZGRyZXNzKTtcbiAgICBjb25zdCB3aGVyZUNvbmRpdGlvbiA9IHtcbiAgICAgIHRva2VuX2RhdGFfaWQ6IHsgX2VxOiB0b2tlbkFkZHJlc3MgfVxuICAgIH07XG4gICAgaWYgKGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQpIHtcbiAgICAgIHdoZXJlQ29uZGl0aW9uLnRva2VuX3N0YW5kYXJkID0geyBfZXE6IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQgfTtcbiAgICB9XG4gICAgY29uc3QgZ3JhcGhxbFF1ZXJ5ID0ge1xuICAgICAgcXVlcnk6IEdldFRva2VuQWN0aXZpdGllcyxcbiAgICAgIHZhcmlhYmxlczoge1xuICAgICAgICB3aGVyZV9jb25kaXRpb246IHdoZXJlQ29uZGl0aW9uLFxuICAgICAgICBvZmZzZXQ6IChfYSA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfYS5vZmZzZXQsXG4gICAgICAgIGxpbWl0OiAoX2IgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2IubGltaXQsXG4gICAgICAgIG9yZGVyX2J5OiBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcmRlckJ5XG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5xdWVyeUluZGV4ZXIoZ3JhcGhxbFF1ZXJ5KTtcbiAgfVxuICAvKipcbiAgICogR2V0cyB0aGUgY291bnQgb2YgdG9rZW4ncyBhY3Rpdml0aWVzIGJ5IHRva2VuIGFkZHJlc3MgKHYyKSBvciB0b2tlbiBkYXRhIGlkICh2MSlcbiAgICpcbiAgICogQHBhcmFtIHRva2VuIHRva2VuIGFkZHJlc3MgKHYyKSBvciB0b2tlbiBkYXRhIGlkICh2MSlcbiAgICogQHJldHVybnMgR2V0VG9rZW5BY3Rpdml0aWVzQ291bnRRdWVyeSByZXNwb25zZSB0eXBlXG4gICAqL1xuICBhc3luYyBnZXRUb2tlbkFjdGl2aXRpZXNDb3VudCh0b2tlbikge1xuICAgIGNvbnN0IGdyYXBocWxRdWVyeSA9IHtcbiAgICAgIHF1ZXJ5OiBHZXRUb2tlbkFjdGl2aXRpZXNDb3VudCxcbiAgICAgIHZhcmlhYmxlczogeyB0b2tlbl9pZDogdG9rZW4gfVxuICAgIH07XG4gICAgcmV0dXJuIHRoaXMucXVlcnlJbmRleGVyKGdyYXBocWxRdWVyeSk7XG4gIH1cbiAgLyoqXG4gICAqIEdldHMgdGhlIGNvdW50IG9mIHRva2VucyBvd25lZCBieSBhbiBhY2NvdW50XG4gICAqXG4gICAqIEBwYXJhbSBvd25lckFkZHJlc3MgT3duZXIgYWRkcmVzc1xuICAgKiBAcmV0dXJucyBBY2NvdW50VG9rZW5zQ291bnRRdWVyeSByZXNwb25zZSB0eXBlXG4gICAqL1xuICBhc3luYyBnZXRBY2NvdW50VG9rZW5zQ291bnQob3duZXJBZGRyZXNzLCBleHRyYUFyZ3MpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHdoZXJlQ29uZGl0aW9uID0ge1xuICAgICAgb3duZXJfYWRkcmVzczogeyBfZXE6IG93bmVyQWRkcmVzcyB9LFxuICAgICAgYW1vdW50OiB7IF9ndDogXCIwXCIgfVxuICAgIH07XG4gICAgaWYgKGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQpIHtcbiAgICAgIHdoZXJlQ29uZGl0aW9uLnRva2VuX3N0YW5kYXJkID0geyBfZXE6IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQgfTtcbiAgICB9XG4gICAgY29uc3QgYWRkcmVzcyA9IEhleFN0cmluZy5lbnN1cmUob3duZXJBZGRyZXNzKS5oZXgoKTtcbiAgICBfSW5kZXhlckNsaWVudC52YWxpZGF0ZUFkZHJlc3MoYWRkcmVzcyk7XG4gICAgY29uc3QgZ3JhcGhxbFF1ZXJ5ID0ge1xuICAgICAgcXVlcnk6IEdldEFjY291bnRUb2tlbnNDb3VudCxcbiAgICAgIHZhcmlhYmxlczoge1xuICAgICAgICB3aGVyZV9jb25kaXRpb246IHdoZXJlQ29uZGl0aW9uLFxuICAgICAgICBvZmZzZXQ6IChfYSA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfYS5vZmZzZXQsXG4gICAgICAgIGxpbWl0OiAoX2IgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2IubGltaXRcbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5SW5kZXhlcihncmFwaHFsUXVlcnkpO1xuICB9XG4gIC8qKlxuICAgKiBRdWVyaWVzIHRva2VuIGRhdGEgYnkgdG9rZW4gYWRkcmVzcyAodjIpIG9yIHRva2VuIGRhdGEgaWQgKHYxKVxuICAgKlxuICAgKiBAcGFyYW0gdG9rZW4gdG9rZW4gYWRkcmVzcyAodjIpIG9yIHRva2VuIGRhdGEgaWQgKHYxKVxuICAgKiBAcmV0dXJucyBHZXRUb2tlbkRhdGFRdWVyeSByZXNwb25zZSB0eXBlXG4gICAqL1xuICAvLyA6ITo+Z2V0VG9rZW5EYXRhXG4gIGFzeW5jIGdldFRva2VuRGF0YSh0b2tlbiwgZXh0cmFBcmdzKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCB0b2tlbkFkZHJlc3MgPSBIZXhTdHJpbmcuZW5zdXJlKHRva2VuKS5oZXgoKTtcbiAgICBfSW5kZXhlckNsaWVudC52YWxpZGF0ZUFkZHJlc3ModG9rZW5BZGRyZXNzKTtcbiAgICBjb25zdCB3aGVyZUNvbmRpdGlvbiA9IHtcbiAgICAgIHRva2VuX2RhdGFfaWQ6IHsgX2VxOiB0b2tlbkFkZHJlc3MgfVxuICAgIH07XG4gICAgaWYgKGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQpIHtcbiAgICAgIHdoZXJlQ29uZGl0aW9uLnRva2VuX3N0YW5kYXJkID0geyBfZXE6IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQgfTtcbiAgICB9XG4gICAgY29uc3QgZ3JhcGhxbFF1ZXJ5ID0ge1xuICAgICAgcXVlcnk6IEdldFRva2VuRGF0YSxcbiAgICAgIHZhcmlhYmxlczoge1xuICAgICAgICB3aGVyZV9jb25kaXRpb246IHdoZXJlQ29uZGl0aW9uLFxuICAgICAgICBvZmZzZXQ6IChfYSA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfYS5vZmZzZXQsXG4gICAgICAgIGxpbWl0OiAoX2IgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2IubGltaXQsXG4gICAgICAgIG9yZGVyX2J5OiBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcmRlckJ5XG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5xdWVyeUluZGV4ZXIoZ3JhcGhxbFF1ZXJ5KTtcbiAgfVxuICAvLyA8OiE6Z2V0VG9rZW5EYXRhXG4gIC8qKlxuICAgKiBRdWVyaWVzIHRva2VuIG93bmVycyBkYXRhIGJ5IHRva2VuIGFkZHJlc3MgKHYyKSBvciB0b2tlbiBkYXRhIGlkICh2MSkuXG4gICAqIFRoaXMgcXVlcnkgcmV0dXJucyBoaXN0b3JpY2FsIG93bmVycyBkYXRhLlxuICAgKlxuICAgKiBUbyBmZXRjaCB0b2tlbiB2MiBzdGFuZGFyZCwgcGFzcyBpbiB0aGUgb3B0aW9uYWwgYHRva2VuU3RhbmRhcmRgIHBhcmFtZXRlciBhbmRcbiAgICogZG9udCBwYXNzIGBwcm9wZXJ0eVZlcnNpb25gIHBhcmFtZXRlciAoYXMgcHJvcGVydHlWZXJzaW9uIG9ubHkgY29tcGF0aWJsZSB3aXRoIHYxIHN0YW5kYXJkKVxuICAgKlxuICAgKiBAcGFyYW0gdG9rZW4gdG9rZW4gYWRkcmVzcyAodjIpIG9yIHRva2VuIGRhdGEgaWQgKHYxKVxuICAgKiBAcGFyYW0gcHJvcGVydHlWZXJzaW9uIFByb3BlcnR5IHZlcnNpb24gKG9wdGlvbmFsKSAtIG9ubHkgY29tcGF0aWJsZSB3aXRoIHRva2VuIHYxIHN0YW5kYXJkXG4gICAqIEByZXR1cm5zIEdldFRva2VuT3duZXJzRGF0YVF1ZXJ5IHJlc3BvbnNlIHR5cGVcbiAgICovXG4gIGFzeW5jIGdldFRva2VuT3duZXJzRGF0YSh0b2tlbiwgcHJvcGVydHlWZXJzaW9uLCBleHRyYUFyZ3MpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHRva2VuQWRkcmVzcyA9IEhleFN0cmluZy5lbnN1cmUodG9rZW4pLmhleCgpO1xuICAgIF9JbmRleGVyQ2xpZW50LnZhbGlkYXRlQWRkcmVzcyh0b2tlbkFkZHJlc3MpO1xuICAgIGNvbnN0IHdoZXJlQ29uZGl0aW9uID0ge1xuICAgICAgdG9rZW5fZGF0YV9pZDogeyBfZXE6IHRva2VuQWRkcmVzcyB9LFxuICAgICAgYW1vdW50OiB7IF9ndDogXCIwXCIgfVxuICAgIH07XG4gICAgaWYgKHByb3BlcnR5VmVyc2lvbikge1xuICAgICAgd2hlcmVDb25kaXRpb24ucHJvcGVydHlfdmVyc2lvbl92MSA9IHsgX2VxOiBwcm9wZXJ0eVZlcnNpb24gfTtcbiAgICB9XG4gICAgaWYgKGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQpIHtcbiAgICAgIHdoZXJlQ29uZGl0aW9uLnRva2VuX3N0YW5kYXJkID0geyBfZXE6IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQgfTtcbiAgICB9XG4gICAgY29uc3QgZ3JhcGhxbFF1ZXJ5ID0ge1xuICAgICAgcXVlcnk6IEdldFRva2VuT3duZXJzRGF0YSxcbiAgICAgIHZhcmlhYmxlczoge1xuICAgICAgICB3aGVyZV9jb25kaXRpb246IHdoZXJlQ29uZGl0aW9uLFxuICAgICAgICBvZmZzZXQ6IChfYSA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfYS5vZmZzZXQsXG4gICAgICAgIGxpbWl0OiAoX2IgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2IubGltaXQsXG4gICAgICAgIG9yZGVyX2J5OiBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcmRlckJ5XG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5xdWVyeUluZGV4ZXIoZ3JhcGhxbFF1ZXJ5KTtcbiAgfVxuICAvKipcbiAgICogUXVlcmllcyBjdXJyZW50IHRva2VuIG93bmVyIGRhdGEgYnkgdG9rZW4gYWRkcmVzcyAodjIpIG9yIHRva2VuIGRhdGEgaWQgKHYxKS5cbiAgICogVGhpcyBxdWVyeSByZXR1cm5zIHRoZSBjdXJyZW50IHRva2VuIG93bmVyIGRhdGEuXG4gICAqXG4gICAqIFRvIGZldGNoIHRva2VuIHYyIHN0YW5kYXJkLCBwYXNzIGluIHRoZSBvcHRpb25hbCBgdG9rZW5TdGFuZGFyZGAgcGFyYW1ldGVyIGFuZFxuICAgKiBkb250IHBhc3MgYHByb3BlcnR5VmVyc2lvbmAgcGFyYW1ldGVyIChhcyBwcm9wZXJ0eVZlcnNpb24gb25seSBjb21wYXRpYmxlIHdpdGggdjEgc3RhbmRhcmQpXG4gICAqXG4gICAqIEBwYXJhbSB0b2tlbiB0b2tlbiBhZGRyZXNzICh2Mikgb3IgdG9rZW4gZGF0YSBpZCAodjEpXG4gICAqIEBwYXJhbSBwcm9wZXJ0eVZlcnNpb24gUHJvcGVydHkgdmVyc2lvbiAob3B0aW9uYWwpIC0gb25seSBjb21wYXRpYmxlIHdpdGggdG9rZW4gdjEgc3RhbmRhcmRcbiAgICogQHJldHVybnMgR2V0VG9rZW5DdXJyZW50T3duZXJEYXRhUXVlcnkgcmVzcG9uc2UgdHlwZVxuICAgKi9cbiAgYXN5bmMgZ2V0VG9rZW5DdXJyZW50T3duZXJEYXRhKHRva2VuLCBwcm9wZXJ0eVZlcnNpb24sIGV4dHJhQXJncykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgdG9rZW5BZGRyZXNzID0gSGV4U3RyaW5nLmVuc3VyZSh0b2tlbikuaGV4KCk7XG4gICAgX0luZGV4ZXJDbGllbnQudmFsaWRhdGVBZGRyZXNzKHRva2VuQWRkcmVzcyk7XG4gICAgY29uc3Qgd2hlcmVDb25kaXRpb24gPSB7XG4gICAgICB0b2tlbl9kYXRhX2lkOiB7IF9lcTogdG9rZW5BZGRyZXNzIH0sXG4gICAgICBhbW91bnQ6IHsgX2d0OiBcIjBcIiB9XG4gICAgfTtcbiAgICBpZiAocHJvcGVydHlWZXJzaW9uKSB7XG4gICAgICB3aGVyZUNvbmRpdGlvbi5wcm9wZXJ0eV92ZXJzaW9uX3YxID0geyBfZXE6IHByb3BlcnR5VmVyc2lvbiB9O1xuICAgIH1cbiAgICBpZiAoZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3MudG9rZW5TdGFuZGFyZCkge1xuICAgICAgd2hlcmVDb25kaXRpb24udG9rZW5fc3RhbmRhcmQgPSB7IF9lcTogZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3MudG9rZW5TdGFuZGFyZCB9O1xuICAgIH1cbiAgICBjb25zdCBncmFwaHFsUXVlcnkgPSB7XG4gICAgICBxdWVyeTogR2V0VG9rZW5DdXJyZW50T3duZXJEYXRhLFxuICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgIHdoZXJlX2NvbmRpdGlvbjogd2hlcmVDb25kaXRpb24sXG4gICAgICAgIG9mZnNldDogKF9hID0gZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3Mub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLm9mZnNldCxcbiAgICAgICAgbGltaXQ6IChfYiA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfYi5saW1pdCxcbiAgICAgICAgb3JkZXJfYnk6IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9yZGVyQnlcbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5SW5kZXhlcihncmFwaHFsUXVlcnkpO1xuICB9XG4gIC8qKlxuICAgKiBRdWVyaWVzIGFjY291bnQncyBjdXJyZW50IG93bmVkIHRva2Vucy5cbiAgICogVGhpcyBxdWVyeSByZXR1cm5zIGFsbCB0b2tlbnMgKHYxIGFuZCB2MiBzdGFuZGFyZHMpIGFuIGFjY291bnQgb3ducywgaW5jbHVkaW5nIE5GVHMsIGZ1bmdpYmxlLCBzb3VsYm91bmQsIGV0Yy5cbiAgICogSWYgeW91IHdhbnQgdG8gZ2V0IG9ubHkgdGhlIHRva2VuIGZyb20gYSBzcGVjaWZpYyBzdGFuZHJkLCB5b3UgY2FuIHBhc3MgYW4gb3B0aW9uYWwgdG9rZW5TdGFuZGFyZCBwYXJhbVxuICAgKlxuICAgKiBAcGFyYW0gb3duZXJBZGRyZXNzIFRoZSB0b2tlbiBvd25lciBhZGRyZXNzIHdlIHdhbnQgdG8gZ2V0IHRoZSB0b2tlbnMgZm9yXG4gICAqIEByZXR1cm5zIEdldE93bmVkVG9rZW5zUXVlcnkgcmVzcG9uc2UgdHlwZVxuICAgKi9cbiAgYXN5bmMgZ2V0T3duZWRUb2tlbnMob3duZXJBZGRyZXNzLCBleHRyYUFyZ3MpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IGFkZHJlc3MgPSBIZXhTdHJpbmcuZW5zdXJlKG93bmVyQWRkcmVzcykuaGV4KCk7XG4gICAgX0luZGV4ZXJDbGllbnQudmFsaWRhdGVBZGRyZXNzKGFkZHJlc3MpO1xuICAgIGNvbnN0IHdoZXJlQ29uZGl0aW9uID0ge1xuICAgICAgb3duZXJfYWRkcmVzczogeyBfZXE6IGFkZHJlc3MgfSxcbiAgICAgIGFtb3VudDogeyBfZ3Q6IDAgfVxuICAgIH07XG4gICAgaWYgKGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQpIHtcbiAgICAgIHdoZXJlQ29uZGl0aW9uLnRva2VuX3N0YW5kYXJkID0geyBfZXE6IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQgfTtcbiAgICB9XG4gICAgY29uc3QgZ3JhcGhxbFF1ZXJ5ID0ge1xuICAgICAgcXVlcnk6IEdldE93bmVkVG9rZW5zLFxuICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgIHdoZXJlX2NvbmRpdGlvbjogd2hlcmVDb25kaXRpb24sXG4gICAgICAgIG9mZnNldDogKF9hID0gZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3Mub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLm9mZnNldCxcbiAgICAgICAgbGltaXQ6IChfYiA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfYi5saW1pdCxcbiAgICAgICAgb3JkZXJfYnk6IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9yZGVyQnlcbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5SW5kZXhlcihncmFwaHFsUXVlcnkpO1xuICB9XG4gIC8qKlxuICAgKiBRdWVyaWVzIGFjY291bnQncyBjdXJyZW50IG93bmVkIHRva2VucyBieSB0b2tlbiBhZGRyZXNzICh2Mikgb3IgdG9rZW4gZGF0YSBpZCAodjEpLlxuICAgKlxuICAgKiBAcGFyYW0gdG9rZW4gdG9rZW4gYWRkcmVzcyAodjIpIG9yIHRva2VuIGRhdGEgaWQgKHYxKVxuICAgKiBAcmV0dXJucyBHZXRPd25lZFRva2Vuc0J5VG9rZW5EYXRhUXVlcnkgcmVzcG9uc2UgdHlwZVxuICAgKi9cbiAgYXN5bmMgZ2V0T3duZWRUb2tlbnNCeVRva2VuRGF0YSh0b2tlbiwgZXh0cmFBcmdzKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCBhZGRyZXNzID0gSGV4U3RyaW5nLmVuc3VyZSh0b2tlbikuaGV4KCk7XG4gICAgX0luZGV4ZXJDbGllbnQudmFsaWRhdGVBZGRyZXNzKGFkZHJlc3MpO1xuICAgIGNvbnN0IHdoZXJlQ29uZGl0aW9uID0ge1xuICAgICAgdG9rZW5fZGF0YV9pZDogeyBfZXE6IGFkZHJlc3MgfSxcbiAgICAgIGFtb3VudDogeyBfZ3Q6IDAgfVxuICAgIH07XG4gICAgaWYgKGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQpIHtcbiAgICAgIHdoZXJlQ29uZGl0aW9uLnRva2VuX3N0YW5kYXJkID0geyBfZXE6IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQgfTtcbiAgICB9XG4gICAgY29uc3QgZ3JhcGhxbFF1ZXJ5ID0ge1xuICAgICAgcXVlcnk6IEdldE93bmVkVG9rZW5zQnlUb2tlbkRhdGEsXG4gICAgICB2YXJpYWJsZXM6IHtcbiAgICAgICAgd2hlcmVfY29uZGl0aW9uOiB3aGVyZUNvbmRpdGlvbixcbiAgICAgICAgb2Zmc2V0OiAoX2EgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2Eub2Zmc2V0LFxuICAgICAgICBsaW1pdDogKF9iID0gZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3Mub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmxpbWl0LFxuICAgICAgICBvcmRlcl9ieTogZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3Mub3JkZXJCeVxuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHRoaXMucXVlcnlJbmRleGVyKGdyYXBocWxRdWVyeSk7XG4gIH1cbiAgLyoqXG4gICAqIFF1ZXJpZXMgYWxsIHRva2VucyBvZiBhIHNwZWNpZmljIGNvbGxlY3Rpb24gdGhhdCBhbiBhY2NvdW50IG93bnMgYnkgdGhlIGNvbGxlY3Rpb24gYWRkcmVzc1xuICAgKlxuICAgKiBAcGFyYW0gb3duZXJBZGRyZXNzIG93bmVyIGFkZHJlc3MgdGhhdCBvd25zIHRoZSB0b2tlbnNcbiAgICogQHBhcmFtIGNvbGxlY3Rpb25BZGRyZXNzIHRoZSBjb2xsZWN0aW9uIGFkZHJlc3NcbiAgICogQHJldHVybnMgR2V0VG9rZW5Pd25lZEZyb21Db2xsZWN0aW9uUXVlcnkgcmVzcG9uc2UgdHlwZVxuICAgKi9cbiAgYXN5bmMgZ2V0VG9rZW5Pd25lZEZyb21Db2xsZWN0aW9uQWRkcmVzcyhvd25lckFkZHJlc3MsIGNvbGxlY3Rpb25BZGRyZXNzLCBleHRyYUFyZ3MpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IG93bmVySGV4QWRkcmVzcyA9IEhleFN0cmluZy5lbnN1cmUob3duZXJBZGRyZXNzKS5oZXgoKTtcbiAgICBfSW5kZXhlckNsaWVudC52YWxpZGF0ZUFkZHJlc3Mob3duZXJIZXhBZGRyZXNzKTtcbiAgICBjb25zdCBjb2xsZWN0aW9uSGV4QWRkcmVzcyA9IEhleFN0cmluZy5lbnN1cmUoY29sbGVjdGlvbkFkZHJlc3MpLmhleCgpO1xuICAgIF9JbmRleGVyQ2xpZW50LnZhbGlkYXRlQWRkcmVzcyhjb2xsZWN0aW9uSGV4QWRkcmVzcyk7XG4gICAgY29uc3Qgd2hlcmVDb25kaXRpb24gPSB7XG4gICAgICBvd25lcl9hZGRyZXNzOiB7IF9lcTogb3duZXJIZXhBZGRyZXNzIH0sXG4gICAgICBjdXJyZW50X3Rva2VuX2RhdGE6IHsgY29sbGVjdGlvbl9pZDogeyBfZXE6IGNvbGxlY3Rpb25IZXhBZGRyZXNzIH0gfSxcbiAgICAgIGFtb3VudDogeyBfZ3Q6IDAgfVxuICAgIH07XG4gICAgaWYgKGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQpIHtcbiAgICAgIHdoZXJlQ29uZGl0aW9uLnRva2VuX3N0YW5kYXJkID0geyBfZXE6IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLnRva2VuU3RhbmRhcmQgfTtcbiAgICB9XG4gICAgY29uc3QgZ3JhcGhxbFF1ZXJ5ID0ge1xuICAgICAgcXVlcnk6IEdldFRva2VuT3duZWRGcm9tQ29sbGVjdGlvbixcbiAgICAgIHZhcmlhYmxlczoge1xuICAgICAgICB3aGVyZV9jb25kaXRpb246IHdoZXJlQ29uZGl0aW9uLFxuICAgICAgICBvZmZzZXQ6IChfYSA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfYS5vZmZzZXQsXG4gICAgICAgIGxpbWl0OiAoX2IgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2IubGltaXQsXG4gICAgICAgIG9yZGVyX2J5OiBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcmRlckJ5XG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5xdWVyeUluZGV4ZXIoZ3JhcGhxbFF1ZXJ5KTtcbiAgfVxuICAvKipcbiAgICogUXVlcmllcyBhbGwgdG9rZW5zIG9mIGEgc3BlY2lmaWMgY29sbGVjdGlvbiB0aGF0IGFuIGFjY291bnQgb3ducyBieSB0aGUgY29sbGVjdGlvbiBuYW1lIGFuZCBjb2xsZWN0aW9uXG4gICAqIGNyZWF0b3IgYWRkcmVzc1xuICAgKlxuICAgKiBAcGFyYW0gb3duZXJBZGRyZXNzIG93bmVyIGFkZHJlc3MgdGhhdCBvd25zIHRoZSB0b2tlbnNcbiAgICogQHBhcmFtIGNvbGxlY3Rpb25OYW1lIHRoZSBjb2xsZWN0aW9uIG5hbWVcbiAgICogQHBhcmFtIGNyZWF0b3JBZGRyZXNzIHRoZSBjb2xsZWN0aW9uIGNyZWF0b3IgYWRkcmVzc1xuICAgKiBAcmV0dXJucyBHZXRUb2tlbk93bmVkRnJvbUNvbGxlY3Rpb25RdWVyeSByZXNwb25zZSB0eXBlXG4gICAqL1xuICBhc3luYyBnZXRUb2tlbk93bmVkRnJvbUNvbGxlY3Rpb25OYW1lQW5kQ3JlYXRvckFkZHJlc3Mob3duZXJBZGRyZXNzLCBjb2xsZWN0aW9uTmFtZSwgY3JlYXRvckFkZHJlc3MsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGNvbGxlY3Rpb25BZGRyZXNzID0gYXdhaXQgdGhpcy5nZXRDb2xsZWN0aW9uQWRkcmVzcyhjcmVhdG9yQWRkcmVzcywgY29sbGVjdGlvbk5hbWUsIGV4dHJhQXJncyk7XG4gICAgY29uc3QgdG9rZW5zID0gYXdhaXQgdGhpcy5nZXRUb2tlbk93bmVkRnJvbUNvbGxlY3Rpb25BZGRyZXNzKG93bmVyQWRkcmVzcywgY29sbGVjdGlvbkFkZHJlc3MsIGV4dHJhQXJncyk7XG4gICAgcmV0dXJuIHRva2VucztcbiAgfVxuICAvKipcbiAgICogUXVlcmllcyBkYXRhIG9mIGEgc3BlY2lmaWMgY29sbGVjdGlvbiBieSB0aGUgY29sbGVjdGlvbiBjcmVhdG9yIGFkZHJlc3MgYW5kIHRoZSBjb2xsZWN0aW9uIG5hbWUuXG4gICAqXG4gICAqIGlmLCBmb3Igc29tZSByZWFzb24sIGEgY3JlYXRvciBhY2NvdW50IGhhcyAyIGNvbGxlY3Rpb25zIHdpdGggdGhlIHNhbWUgbmFtZSBpbiB2MSBhbmQgdjIsXG4gICAqIGNhbiBwYXNzIGFuIG9wdGlvbmFsIGB0b2tlblN0YW5kYXJkYCBwYXJhbWV0ZXIgdG8gcXVlcnkgYSBzcGVjaWZpYyBzdGFuZGFyZFxuICAgKlxuICAgKiBAcGFyYW0gY3JlYXRvckFkZHJlc3MgdGhlIGNvbGxlY3Rpb24gY3JlYXRvciBhZGRyZXNzXG4gICAqIEBwYXJhbSBjb2xsZWN0aW9uTmFtZSB0aGUgY29sbGVjdGlvbiBuYW1lXG4gICAqIEByZXR1cm5zIEdldENvbGxlY3Rpb25EYXRhUXVlcnkgcmVzcG9uc2UgdHlwZVxuICAgKi9cbiAgYXN5bmMgZ2V0Q29sbGVjdGlvbkRhdGEoY3JlYXRvckFkZHJlc3MsIGNvbGxlY3Rpb25OYW1lLCBleHRyYUFyZ3MpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IGFkZHJlc3MgPSBIZXhTdHJpbmcuZW5zdXJlKGNyZWF0b3JBZGRyZXNzKS5oZXgoKTtcbiAgICBfSW5kZXhlckNsaWVudC52YWxpZGF0ZUFkZHJlc3MoYWRkcmVzcyk7XG4gICAgY29uc3Qgd2hlcmVDb25kaXRpb24gPSB7XG4gICAgICBjb2xsZWN0aW9uX25hbWU6IHsgX2VxOiBjb2xsZWN0aW9uTmFtZSB9LFxuICAgICAgY3JlYXRvcl9hZGRyZXNzOiB7IF9lcTogYWRkcmVzcyB9XG4gICAgfTtcbiAgICBpZiAoZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3MudG9rZW5TdGFuZGFyZCkge1xuICAgICAgd2hlcmVDb25kaXRpb24udG9rZW5fc3RhbmRhcmQgPSB7IF9lcTogZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3MudG9rZW5TdGFuZGFyZCB9O1xuICAgIH1cbiAgICBjb25zdCBncmFwaHFsUXVlcnkgPSB7XG4gICAgICBxdWVyeTogR2V0Q29sbGVjdGlvbkRhdGEsXG4gICAgICB2YXJpYWJsZXM6IHtcbiAgICAgICAgd2hlcmVfY29uZGl0aW9uOiB3aGVyZUNvbmRpdGlvbixcbiAgICAgICAgb2Zmc2V0OiAoX2EgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2Eub2Zmc2V0LFxuICAgICAgICBsaW1pdDogKF9iID0gZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3Mub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmxpbWl0LFxuICAgICAgICBvcmRlcl9ieTogZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3Mub3JkZXJCeVxuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHRoaXMucXVlcnlJbmRleGVyKGdyYXBocWxRdWVyeSk7XG4gIH1cbiAgLyoqXG4gICAqIFF1ZXJpZXMgYSBjb2xsZWN0aW9uIGFkZHJlc3MuXG4gICAqXG4gICAqIEBwYXJhbSBjcmVhdG9yQWRkcmVzcyB0aGUgY29sbGVjdGlvbiBjcmVhdG9yIGFkZHJlc3NcbiAgICogQHBhcmFtIGNvbGxlY3Rpb25OYW1lIHRoZSBjb2xsZWN0aW9uIG5hbWVcbiAgICogQHJldHVybnMgdGhlIGNvbGxlY3Rpb24gYWRkcmVzc1xuICAgKi9cbiAgYXN5bmMgZ2V0Q29sbGVjdGlvbkFkZHJlc3MoY3JlYXRvckFkZHJlc3MsIGNvbGxlY3Rpb25OYW1lLCBleHRyYUFyZ3MpIHtcbiAgICByZXR1cm4gKGF3YWl0IHRoaXMuZ2V0Q29sbGVjdGlvbkRhdGEoY3JlYXRvckFkZHJlc3MsIGNvbGxlY3Rpb25OYW1lLCBleHRyYUFyZ3MpKS5jdXJyZW50X2NvbGxlY3Rpb25zX3YyWzBdLmNvbGxlY3Rpb25faWQ7XG4gIH1cbiAgLyoqXG4gICAqIFF1ZXJpZXMgZm9yIGFsbCBjb2xsZWN0aW9ucyB0aGF0IGFuIGFjY291bnQgaGFzIHRva2VucyBmb3IuXG4gICAqXG4gICAqIEBwYXJhbSBvd25lckFkZHJlc3MgdGhlIGFjY291bnQgYWRkcmVzcyB0aGF0IG93bnMgdGhlIHRva2Vuc1xuICAgKiBAcmV0dXJucyBHZXRDb2xsZWN0aW9uc1dpdGhPd25lZFRva2Vuc1F1ZXJ5IHJlc3BvbnNlIHR5cGVcbiAgICovXG4gIGFzeW5jIGdldENvbGxlY3Rpb25zV2l0aE93bmVkVG9rZW5zKG93bmVyQWRkcmVzcywgZXh0cmFBcmdzKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCBvd25lckhleEFkZHJlc3MgPSBIZXhTdHJpbmcuZW5zdXJlKG93bmVyQWRkcmVzcykuaGV4KCk7XG4gICAgX0luZGV4ZXJDbGllbnQudmFsaWRhdGVBZGRyZXNzKG93bmVySGV4QWRkcmVzcyk7XG4gICAgY29uc3Qgd2hlcmVDb25kaXRpb24gPSB7XG4gICAgICBvd25lcl9hZGRyZXNzOiB7IF9lcTogb3duZXJIZXhBZGRyZXNzIH1cbiAgICB9O1xuICAgIGlmIChleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy50b2tlblN0YW5kYXJkKSB7XG4gICAgICB3aGVyZUNvbmRpdGlvbi5jdXJyZW50X2NvbGxlY3Rpb24gPSB7IHRva2VuX3N0YW5kYXJkOiB7IF9lcTogZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3MudG9rZW5TdGFuZGFyZCB9IH07XG4gICAgfVxuICAgIGNvbnN0IGdyYXBocWxRdWVyeSA9IHtcbiAgICAgIHF1ZXJ5OiBHZXRDb2xsZWN0aW9uc1dpdGhPd25lZFRva2VucyxcbiAgICAgIHZhcmlhYmxlczoge1xuICAgICAgICB3aGVyZV9jb25kaXRpb246IHdoZXJlQ29uZGl0aW9uLFxuICAgICAgICBvZmZzZXQ6IChfYSA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfYS5vZmZzZXQsXG4gICAgICAgIGxpbWl0OiAoX2IgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2IubGltaXQsXG4gICAgICAgIG9yZGVyX2J5OiBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcmRlckJ5XG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5xdWVyeUluZGV4ZXIoZ3JhcGhxbFF1ZXJ5KTtcbiAgfVxuICAvLyBUUkFOU0FDVElPTlMgLy9cbiAgLyoqXG4gICAqIEdldHMgdGhlIGNvdW50IG9mIHRyYW5zYWN0aW9ucyBzdWJtaXR0ZWQgYnkgYW4gYWNjb3VudFxuICAgKlxuICAgKiBAcGFyYW0gYWRkcmVzcyBBY2NvdW50IGFkZHJlc3NcbiAgICogQHJldHVybnMgR2V0QWNjb3VudFRyYW5zYWN0aW9uc0NvdW50UXVlcnkgcmVzcG9uc2UgdHlwZVxuICAgKi9cbiAgYXN5bmMgZ2V0QWNjb3VudFRyYW5zYWN0aW9uc0NvdW50KGFjY291bnRBZGRyZXNzKSB7XG4gICAgY29uc3QgYWRkcmVzcyA9IEhleFN0cmluZy5lbnN1cmUoYWNjb3VudEFkZHJlc3MpLmhleCgpO1xuICAgIF9JbmRleGVyQ2xpZW50LnZhbGlkYXRlQWRkcmVzcyhhZGRyZXNzKTtcbiAgICBjb25zdCBncmFwaHFsUXVlcnkgPSB7XG4gICAgICBxdWVyeTogR2V0QWNjb3VudFRyYW5zYWN0aW9uc0NvdW50LFxuICAgICAgdmFyaWFibGVzOiB7IGFkZHJlc3MgfVxuICAgIH07XG4gICAgcmV0dXJuIHRoaXMucXVlcnlJbmRleGVyKGdyYXBocWxRdWVyeSk7XG4gIH1cbiAgLyoqXG4gICAqIFF1ZXJpZXMgYW4gYWNjb3VudCB0cmFuc2FjdGlvbnMgZGF0YVxuICAgKlxuICAgKiBAcGFyYW0gYWRkcmVzcyBBY2NvdW50IGFkZHJlc3NcbiAgICogQHJldHVybnMgR2V0QWNjb3VudFRyYW5zYWN0aW9uc0RhdGFRdWVyeSByZXNwb25zZSB0eXBlXG4gICAqL1xuICBhc3luYyBnZXRBY2NvdW50VHJhbnNhY3Rpb25zRGF0YShhY2NvdW50QWRkcmVzcywgZXh0cmFBcmdzKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCBhZGRyZXNzID0gSGV4U3RyaW5nLmVuc3VyZShhY2NvdW50QWRkcmVzcykuaGV4KCk7XG4gICAgX0luZGV4ZXJDbGllbnQudmFsaWRhdGVBZGRyZXNzKGFkZHJlc3MpO1xuICAgIGNvbnN0IHdoZXJlQ29uZGl0aW9uID0ge1xuICAgICAgYWNjb3VudF9hZGRyZXNzOiB7IF9lcTogYWRkcmVzcyB9XG4gICAgfTtcbiAgICBjb25zdCBncmFwaHFsUXVlcnkgPSB7XG4gICAgICBxdWVyeTogR2V0QWNjb3VudFRyYW5zYWN0aW9uc0RhdGEsXG4gICAgICB2YXJpYWJsZXM6IHtcbiAgICAgICAgd2hlcmVfY29uZGl0aW9uOiB3aGVyZUNvbmRpdGlvbixcbiAgICAgICAgb2Zmc2V0OiAoX2EgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2Eub2Zmc2V0LFxuICAgICAgICBsaW1pdDogKF9iID0gZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3Mub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmxpbWl0LFxuICAgICAgICBvcmRlcl9ieTogZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3Mub3JkZXJCeVxuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHRoaXMucXVlcnlJbmRleGVyKGdyYXBocWxRdWVyeSk7XG4gIH1cbiAgLyoqXG4gICAqIFF1ZXJpZXMgdG9wIHVzZXIgdHJhbnNhY3Rpb25zXG4gICAqXG4gICAqIEBwYXJhbSBsaW1pdFxuICAgKiBAcmV0dXJucyBHZXRUb3BVc2VyVHJhbnNhY3Rpb25zUXVlcnkgcmVzcG9uc2UgdHlwZVxuICAgKi9cbiAgYXN5bmMgZ2V0VG9wVXNlclRyYW5zYWN0aW9ucyhsaW1pdCkge1xuICAgIGNvbnN0IGdyYXBocWxRdWVyeSA9IHtcbiAgICAgIHF1ZXJ5OiBHZXRUb3BVc2VyVHJhbnNhY3Rpb25zLFxuICAgICAgdmFyaWFibGVzOiB7IGxpbWl0IH1cbiAgICB9O1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5SW5kZXhlcihncmFwaHFsUXVlcnkpO1xuICB9XG4gIC8qKlxuICAgKiBRdWVyaWVzIHRvcCB1c2VyIHRyYW5zYWN0aW9uc1xuICAgKlxuICAgKiBAcGFyYW0gc3RhcnRWZXJzaW9uIG9wdGlvbmFsIC0gY2FuIGJlIHNldCB0byB0ZWxsIGluZGV4ZXIgd2hhdCB2ZXJzaW9uIHRvIHN0YXJ0IGZyb21cbiAgICogQHJldHVybnMgR2V0VXNlclRyYW5zYWN0aW9uc1F1ZXJ5IHJlc3BvbnNlIHR5cGVcbiAgICovXG4gIGFzeW5jIGdldFVzZXJUcmFuc2FjdGlvbnMoZXh0cmFBcmdzKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCB3aGVyZUNvbmRpdGlvbiA9IHtcbiAgICAgIHZlcnNpb246IHsgX2x0ZTogZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3Muc3RhcnRWZXJzaW9uIH1cbiAgICB9O1xuICAgIGNvbnN0IGdyYXBocWxRdWVyeSA9IHtcbiAgICAgIHF1ZXJ5OiBHZXRVc2VyVHJhbnNhY3Rpb25zLFxuICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgIHdoZXJlX2NvbmRpdGlvbjogd2hlcmVDb25kaXRpb24sXG4gICAgICAgIG9mZnNldDogKF9hID0gZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3Mub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLm9mZnNldCxcbiAgICAgICAgbGltaXQ6IChfYiA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfYi5saW1pdCxcbiAgICAgICAgb3JkZXJfYnk6IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9yZGVyQnlcbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5SW5kZXhlcihncmFwaHFsUXVlcnkpO1xuICB9XG4gIC8vIFNUQUtJTkcgLy9cbiAgLyoqXG4gICAqIFF1ZXJpZXMgZGVsZWdhdGVkIHN0YWtpbmcgYWN0aXZpdGllc1xuICAgKlxuICAgKiBAcGFyYW0gZGVsZWdhdG9yQWRkcmVzcyBEZWxlZ2F0b3IgYWRkcmVzc1xuICAgKiBAcGFyYW0gcG9vbEFkZHJlc3MgUG9vbCBhZGRyZXNzXG4gICAqIEByZXR1cm5zIEdldERlbGVnYXRlZFN0YWtpbmdBY3Rpdml0aWVzUXVlcnkgcmVzcG9uc2UgdHlwZVxuICAgKi9cbiAgYXN5bmMgZ2V0RGVsZWdhdGVkU3Rha2luZ0FjdGl2aXRpZXMoZGVsZWdhdG9yQWRkcmVzcywgcG9vbEFkZHJlc3MpIHtcbiAgICBjb25zdCBkZWxlZ2F0b3IgPSBIZXhTdHJpbmcuZW5zdXJlKGRlbGVnYXRvckFkZHJlc3MpLmhleCgpO1xuICAgIGNvbnN0IHBvb2wgPSBIZXhTdHJpbmcuZW5zdXJlKHBvb2xBZGRyZXNzKS5oZXgoKTtcbiAgICBfSW5kZXhlckNsaWVudC52YWxpZGF0ZUFkZHJlc3MoZGVsZWdhdG9yKTtcbiAgICBfSW5kZXhlckNsaWVudC52YWxpZGF0ZUFkZHJlc3MocG9vbCk7XG4gICAgY29uc3QgZ3JhcGhxbFF1ZXJ5ID0ge1xuICAgICAgcXVlcnk6IEdldERlbGVnYXRlZFN0YWtpbmdBY3Rpdml0aWVzLFxuICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgIGRlbGVnYXRvckFkZHJlc3M6IGRlbGVnYXRvcixcbiAgICAgICAgcG9vbEFkZHJlc3M6IHBvb2xcbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5SW5kZXhlcihncmFwaHFsUXVlcnkpO1xuICB9XG4gIC8qKlxuICAgKiBRdWVyaWVzIGN1cnJlbnQgbnVtYmVyIG9mIGRlbGVnYXRvcnMgaW4gYSBwb29sXG4gICAqXG4gICAqIEByZXR1cm5zIEdldE51bWJlck9mRGVsZWdhdG9yc1F1ZXJ5IHJlc3BvbnNlIHR5cGVcbiAgICovXG4gIGFzeW5jIGdldE51bWJlck9mRGVsZWdhdG9ycyhwb29sQWRkcmVzcykge1xuICAgIGNvbnN0IGFkZHJlc3MgPSBIZXhTdHJpbmcuZW5zdXJlKHBvb2xBZGRyZXNzKS5oZXgoKTtcbiAgICBfSW5kZXhlckNsaWVudC52YWxpZGF0ZUFkZHJlc3MoYWRkcmVzcyk7XG4gICAgY29uc3QgZ3JhcGhxbFF1ZXJ5ID0ge1xuICAgICAgcXVlcnk6IEdldE51bWJlck9mRGVsZWdhdG9ycyxcbiAgICAgIHZhcmlhYmxlczogeyBwb29sQWRkcmVzczogYWRkcmVzcyB9XG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5xdWVyeUluZGV4ZXIoZ3JhcGhxbFF1ZXJ5KTtcbiAgfVxuICAvLyBBQ0NPVU5UIC8vXG4gIC8qKlxuICAgKiBRdWVyaWVzIGFuIGFjY291bnQgY29pbiBkYXRhXG4gICAqXG4gICAqIEBwYXJhbSBvd25lckFkZHJlc3MgT3duZXIgYWRkcmVzc1xuICAgKiBAcmV0dXJucyBHZXRBY2NvdW50Q29pbnNEYXRhUXVlcnkgcmVzcG9uc2UgdHlwZVxuICAgKi9cbiAgYXN5bmMgZ2V0QWNjb3VudENvaW5zRGF0YShvd25lckFkZHJlc3MsIGV4dHJhQXJncykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgYWRkcmVzcyA9IEhleFN0cmluZy5lbnN1cmUob3duZXJBZGRyZXNzKS5oZXgoKTtcbiAgICBfSW5kZXhlckNsaWVudC52YWxpZGF0ZUFkZHJlc3MoYWRkcmVzcyk7XG4gICAgY29uc3Qgd2hlcmVDb25kaXRpb24gPSB7XG4gICAgICBvd25lcl9hZGRyZXNzOiB7IF9lcTogYWRkcmVzcyB9XG4gICAgfTtcbiAgICBjb25zdCBncmFwaHFsUXVlcnkgPSB7XG4gICAgICBxdWVyeTogR2V0QWNjb3VudENvaW5zRGF0YSxcbiAgICAgIHZhcmlhYmxlczoge1xuICAgICAgICB3aGVyZV9jb25kaXRpb246IHdoZXJlQ29uZGl0aW9uLFxuICAgICAgICBvZmZzZXQ6IChfYSA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfYS5vZmZzZXQsXG4gICAgICAgIGxpbWl0OiAoX2IgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2IubGltaXQsXG4gICAgICAgIG9yZGVyX2J5OiBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5vcmRlckJ5XG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5xdWVyeUluZGV4ZXIoZ3JhcGhxbFF1ZXJ5KTtcbiAgfVxuICAvKipcbiAgICogUXVlcmllcyBhbiBhY2NvdW50IGNvaW4gZGF0YSBjb3VudFxuICAgKlxuICAgKiBAcGFyYW0gb3duZXJBZGRyZXNzIE93bmVyIGFkZHJlc3NcbiAgICogQHJldHVybnMgR2V0QWNjb3VudENvaW5zRGF0YUNvdW50UXVlcnkgcmVzcG9uc2UgdHlwZVxuICAgKi9cbiAgYXN5bmMgZ2V0QWNjb3VudENvaW5zRGF0YUNvdW50KG93bmVyQWRkcmVzcykge1xuICAgIGNvbnN0IGFkZHJlc3MgPSBIZXhTdHJpbmcuZW5zdXJlKG93bmVyQWRkcmVzcykuaGV4KCk7XG4gICAgX0luZGV4ZXJDbGllbnQudmFsaWRhdGVBZGRyZXNzKGFkZHJlc3MpO1xuICAgIGNvbnN0IGdyYXBocWxRdWVyeSA9IHtcbiAgICAgIHF1ZXJ5OiBHZXRBY2NvdW50Q29pbnNEYXRhQ291bnQsXG4gICAgICB2YXJpYWJsZXM6IHtcbiAgICAgICAgYWRkcmVzc1xuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHRoaXMucXVlcnlJbmRleGVyKGdyYXBocWxRdWVyeSk7XG4gIH1cbiAgLyoqXG4gICAqIFF1ZXJpZXMgYW4gYWNjb3VudCBvd25lZCBvYmplY3RzXG4gICAqXG4gICAqIEBwYXJhbSBvd25lckFkZHJlc3MgT3duZXIgYWRkcmVzc1xuICAgKiBAcmV0dXJucyBHZXRDdXJyZW50T2JqZWN0c1F1ZXJ5IHJlc3BvbnNlIHR5cGVcbiAgICovXG4gIGFzeW5jIGdldEFjY291bnRPd25lZE9iamVjdHMob3duZXJBZGRyZXNzLCBleHRyYUFyZ3MpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IGFkZHJlc3MgPSBIZXhTdHJpbmcuZW5zdXJlKG93bmVyQWRkcmVzcykuaGV4KCk7XG4gICAgX0luZGV4ZXJDbGllbnQudmFsaWRhdGVBZGRyZXNzKGFkZHJlc3MpO1xuICAgIGNvbnN0IHdoZXJlQ29uZGl0aW9uID0ge1xuICAgICAgb3duZXJfYWRkcmVzczogeyBfZXE6IGFkZHJlc3MgfVxuICAgIH07XG4gICAgY29uc3QgZ3JhcGhxbFF1ZXJ5ID0ge1xuICAgICAgcXVlcnk6IEdldEN1cnJlbnRPYmplY3RzLFxuICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgIHdoZXJlX2NvbmRpdGlvbjogd2hlcmVDb25kaXRpb24sXG4gICAgICAgIG9mZnNldDogKF9hID0gZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3Mub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLm9mZnNldCxcbiAgICAgICAgbGltaXQ6IChfYiA9IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfYi5saW1pdCxcbiAgICAgICAgb3JkZXJfYnk6IGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLm9yZGVyQnlcbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5SW5kZXhlcihncmFwaHFsUXVlcnkpO1xuICB9XG59O1xuXG4vLyBzcmMvcHJvdmlkZXJzL3Byb3ZpZGVyLnRzXG52YXIgUHJvdmlkZXIgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKG5ldHdvcmssIGNvbmZpZywgZG9Ob3RGaXhOb2RlVXJsID0gZmFsc2UpIHtcbiAgICBsZXQgZnVsbE5vZGVVcmwgPSBudWxsO1xuICAgIGxldCBpbmRleGVyVXJsID0gbnVsbDtcbiAgICBpZiAodHlwZW9mIG5ldHdvcmsgPT09IFwib2JqZWN0XCIgJiYgaXNDdXN0b21FbmRwb2ludHMobmV0d29yaykpIHtcbiAgICAgIGZ1bGxOb2RlVXJsID0gbmV0d29yay5mdWxsbm9kZVVybDtcbiAgICAgIGluZGV4ZXJVcmwgPSBuZXR3b3JrLmluZGV4ZXJVcmw7XG4gICAgICB0aGlzLm5ldHdvcmsgPSBcIkNVU1RPTVwiO1xuICAgIH0gZWxzZSB7XG4gICAgICBmdWxsTm9kZVVybCA9IE5ldHdvcmtUb05vZGVBUElbbmV0d29ya107XG4gICAgICBpbmRleGVyVXJsID0gTmV0d29ya1RvSW5kZXhlckFQSVtuZXR3b3JrXTtcbiAgICAgIHRoaXMubmV0d29yayA9IG5ldHdvcms7XG4gICAgfVxuICAgIGlmICh0aGlzLm5ldHdvcmsgPT09IFwiQ1VTVE9NXCIgJiYgIWZ1bGxOb2RlVXJsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJmdWxsbm9kZSB1cmwgaXMgbm90IHByb3ZpZGVkXCIpO1xuICAgIH1cbiAgICBpZiAoaW5kZXhlclVybCkge1xuICAgICAgdGhpcy5pbmRleGVyQ2xpZW50ID0gbmV3IEluZGV4ZXJDbGllbnQoaW5kZXhlclVybCwgY29uZmlnKTtcbiAgICB9XG4gICAgdGhpcy5hcHRvc0NsaWVudCA9IG5ldyBBcHRvc0NsaWVudChmdWxsTm9kZVVybCwgY29uZmlnLCBkb05vdEZpeE5vZGVVcmwpO1xuICB9XG59O1xuZnVuY3Rpb24gYXBwbHlNaXhpbih0YXJnZXRDbGFzcywgYmFzZUNsYXNzLCBiYXNlQ2xhc3NQcm9wKSB7XG4gIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGJhc2VDbGFzcy5wcm90b3R5cGUpLmZvckVhY2goKHByb3BlcnR5TmFtZSkgPT4ge1xuICAgIGNvbnN0IHByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYmFzZUNsYXNzLnByb3RvdHlwZSwgcHJvcGVydHlOYW1lKTtcbiAgICBpZiAoIXByb3BlcnR5RGVzY3JpcHRvcilcbiAgICAgIHJldHVybjtcbiAgICBwcm9wZXJ0eURlc2NyaXB0b3IudmFsdWUgPSBmdW5jdGlvbiguLi5hcmdzKSB7XG4gICAgICByZXR1cm4gdGhpc1tiYXNlQ2xhc3NQcm9wXVtwcm9wZXJ0eU5hbWVdKC4uLmFyZ3MpO1xuICAgIH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldENsYXNzLnByb3RvdHlwZSwgcHJvcGVydHlOYW1lLCBwcm9wZXJ0eURlc2NyaXB0b3IpO1xuICB9KTtcbiAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoYmFzZUNsYXNzKS5mb3JFYWNoKChwcm9wZXJ0eU5hbWUpID0+IHtcbiAgICBjb25zdCBwcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJhc2VDbGFzcywgcHJvcGVydHlOYW1lKTtcbiAgICBpZiAoIXByb3BlcnR5RGVzY3JpcHRvcilcbiAgICAgIHJldHVybjtcbiAgICBwcm9wZXJ0eURlc2NyaXB0b3IudmFsdWUgPSBmdW5jdGlvbiguLi5hcmdzKSB7XG4gICAgICByZXR1cm4gdGhpc1tiYXNlQ2xhc3NQcm9wXVtwcm9wZXJ0eU5hbWVdKC4uLmFyZ3MpO1xuICAgIH07XG4gICAgaWYgKHRhcmdldENsYXNzLmhhc093blByb3BlcnR5LmNhbGwodGFyZ2V0Q2xhc3MsIHByb3BlcnR5TmFtZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldENsYXNzLCBwcm9wZXJ0eU5hbWUsIHByb3BlcnR5RGVzY3JpcHRvcik7XG4gIH0pO1xufVxuYXBwbHlNaXhpbihQcm92aWRlciwgQXB0b3NDbGllbnQsIFwiYXB0b3NDbGllbnRcIik7XG5hcHBseU1peGluKFByb3ZpZGVyLCBJbmRleGVyQ2xpZW50LCBcImluZGV4ZXJDbGllbnRcIik7XG5mdW5jdGlvbiBpc0N1c3RvbUVuZHBvaW50cyhuZXR3b3JrKSB7XG4gIHJldHVybiBuZXR3b3JrLmZ1bGxub2RlVXJsICE9PSB2b2lkIDAgJiYgdHlwZW9mIG5ldHdvcmsuZnVsbG5vZGVVcmwgPT09IFwic3RyaW5nXCI7XG59XG5cbi8vIHNyYy91dGlscy9wcm9wZXJ0eV9tYXBfc2VyZGUudHNcbnZhciBQcm9wZXJ0eVZhbHVlID0gY2xhc3Mge1xuICBjb25zdHJ1Y3Rvcih0eXBlLCB2YWx1ZSkge1xuICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG59O1xudmFyIFByb3BlcnR5TWFwID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmRhdGEgPSB7fTtcbiAgfVxuICBzZXRQcm9wZXJ0eShrZXksIHZhbHVlKSB7XG4gICAgdGhpcy5kYXRhW2tleV0gPSB2YWx1ZTtcbiAgfVxufTtcbmZ1bmN0aW9uIGdldFByb3BlcnR5VHlwZSh0eXApIHtcbiAgbGV0IHR5cGVUYWc7XG4gIGlmICh0eXAgPT09IFwic3RyaW5nXCIgfHwgdHlwID09PSBcIlN0cmluZ1wiKSB7XG4gICAgdHlwZVRhZyA9IG5ldyBUeXBlVGFnU3RydWN0KHN0cmluZ1N0cnVjdFRhZyk7XG4gIH0gZWxzZSB7XG4gICAgdHlwZVRhZyA9IG5ldyBUeXBlVGFnUGFyc2VyKHR5cCkucGFyc2VUeXBlVGFnKCk7XG4gIH1cbiAgcmV0dXJuIHR5cGVUYWc7XG59XG5mdW5jdGlvbiBnZXRQcm9wZXJ0eVZhbHVlUmF3KHZhbHVlcywgdHlwZXMpIHtcbiAgaWYgKHZhbHVlcy5sZW5ndGggIT09IHR5cGVzLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkxlbmd0aCBvZiBwcm9wZXJ0eSB2YWx1ZXMgYW5kIHR5cGVzIG5vdCBtYXRjaFwiKTtcbiAgfVxuICBjb25zdCByZXN1bHRzID0gbmV3IEFycmF5KCk7XG4gIHR5cGVzLmZvckVhY2goKHR5cCwgaW5kZXgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgdHlwZVRhZyA9IGdldFByb3BlcnR5VHlwZSh0eXApO1xuICAgICAgY29uc3Qgc2VyaWFsaXplciA9IG5ldyBTZXJpYWxpemVyKCk7XG4gICAgICBzZXJpYWxpemVBcmcodmFsdWVzW2luZGV4XSwgdHlwZVRhZywgc2VyaWFsaXplcik7XG4gICAgICByZXN1bHRzLnB1c2goc2VyaWFsaXplci5nZXRCeXRlcygpKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmVzdWx0cy5wdXNoKG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZSh2YWx1ZXNbaW5kZXhdKSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJlc3VsdHM7XG59XG5mdW5jdGlvbiBnZXRTaW5nbGVQcm9wZXJ0eVZhbHVlUmF3KHZhbHVlLCB0eXBlKSB7XG4gIGlmICghdmFsdWUgfHwgIXR5cGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ2YWx1ZSBvciB0eXBlIGNhbiBub3QgYmUgZW1wdHlcIik7XG4gIH1cbiAgdHJ5IHtcbiAgICBjb25zdCB0eXBlVGFnID0gZ2V0UHJvcGVydHlUeXBlKHR5cGUpO1xuICAgIGNvbnN0IHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICAgIHNlcmlhbGl6ZUFyZyh2YWx1ZSwgdHlwZVRhZywgc2VyaWFsaXplcik7XG4gICAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHZhbHVlKTtcbiAgfVxufVxuZnVuY3Rpb24gZGVzZXJpYWxpemVQcm9wZXJ0eU1hcChyYXdQcm9wZXJ0eU1hcCkge1xuICBjb25zdCBlbnRyaWVzID0gcmF3UHJvcGVydHlNYXAubWFwLmRhdGE7XG4gIGNvbnN0IHBtID0gbmV3IFByb3BlcnR5TWFwKCk7XG4gIGVudHJpZXMuZm9yRWFjaCgocHJvcCkgPT4ge1xuICAgIGNvbnN0IHsga2V5IH0gPSBwcm9wO1xuICAgIGNvbnN0IHZhbCA9IHByb3AudmFsdWUudmFsdWU7XG4gICAgY29uc3QgdHlwID0gcHJvcC52YWx1ZS50eXBlO1xuICAgIGNvbnN0IHR5cGVUYWcgPSBnZXRQcm9wZXJ0eVR5cGUodHlwKTtcbiAgICBjb25zdCBuZXdWYWx1ZSA9IGRlc2VyaWFsaXplVmFsdWVCYXNlZE9uVHlwZVRhZyh0eXBlVGFnLCB2YWwpO1xuICAgIGNvbnN0IHB2ID0gbmV3IFByb3BlcnR5VmFsdWUodHlwLCBuZXdWYWx1ZSk7XG4gICAgcG0uc2V0UHJvcGVydHkoa2V5LCBwdik7XG4gIH0pO1xuICByZXR1cm4gcG07XG59XG5mdW5jdGlvbiBkZXNlcmlhbGl6ZVZhbHVlQmFzZWRPblR5cGVUYWcodGFnLCB2YWwpIHtcbiAgY29uc3QgZGUgPSBuZXcgRGVzZXJpYWxpemVyKG5ldyBIZXhTdHJpbmcodmFsKS50b1VpbnQ4QXJyYXkoKSk7XG4gIGxldCByZXMgPSBcIlwiO1xuICBpZiAodGFnIGluc3RhbmNlb2YgVHlwZVRhZ1U4KSB7XG4gICAgcmVzID0gZGUuZGVzZXJpYWxpemVVOCgpLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSBpZiAodGFnIGluc3RhbmNlb2YgVHlwZVRhZ1U2NCkge1xuICAgIHJlcyA9IGRlLmRlc2VyaWFsaXplVTY0KCkudG9TdHJpbmcoKTtcbiAgfSBlbHNlIGlmICh0YWcgaW5zdGFuY2VvZiBUeXBlVGFnVTEyOCkge1xuICAgIHJlcyA9IGRlLmRlc2VyaWFsaXplVTEyOCgpLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSBpZiAodGFnIGluc3RhbmNlb2YgVHlwZVRhZ0Jvb2wpIHtcbiAgICByZXMgPSBkZS5kZXNlcmlhbGl6ZUJvb2woKSA/IFwidHJ1ZVwiIDogXCJmYWxzZVwiO1xuICB9IGVsc2UgaWYgKHRhZyBpbnN0YW5jZW9mIFR5cGVUYWdBZGRyZXNzKSB7XG4gICAgcmVzID0gSGV4U3RyaW5nLmZyb21VaW50OEFycmF5KGRlLmRlc2VyaWFsaXplRml4ZWRCeXRlcygzMikpLmhleCgpO1xuICB9IGVsc2UgaWYgKHRhZyBpbnN0YW5jZW9mIFR5cGVUYWdTdHJ1Y3QgJiYgdGFnLmlzU3RyaW5nVHlwZVRhZygpKSB7XG4gICAgcmVzID0gZGUuZGVzZXJpYWxpemVTdHIoKTtcbiAgfSBlbHNlIHtcbiAgICByZXMgPSB2YWw7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cblxuLy8gc3JjL2FwdG9zX3R5cGVzL3Rva2VuX3R5cGVzLnRzXG52YXIgdG9rZW5fdHlwZXNfZXhwb3J0cyA9IHt9O1xuX19leHBvcnQodG9rZW5fdHlwZXNfZXhwb3J0cywge1xuICBQcm9wZXJ0eU1hcDogKCkgPT4gUHJvcGVydHlNYXAsXG4gIFByb3BlcnR5VmFsdWU6ICgpID0+IFByb3BlcnR5VmFsdWUsXG4gIFRva2VuOiAoKSA9PiBUb2tlbixcbiAgVG9rZW5EYXRhOiAoKSA9PiBUb2tlbkRhdGFcbn0pO1xudmFyIFRva2VuRGF0YSA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoY29sbGVjdGlvbiwgZGVzY3JpcHRpb24sIG5hbWUsIG1heGltdW0sIHN1cHBseSwgdXJpLCBkZWZhdWx0X3Byb3BlcnRpZXMsIG11dGFiaWxpdHlfY29uZmlnKSB7XG4gICAgdGhpcy5jb2xsZWN0aW9uID0gY29sbGVjdGlvbjtcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLm1heGltdW0gPSBtYXhpbXVtO1xuICAgIHRoaXMuc3VwcGx5ID0gc3VwcGx5O1xuICAgIHRoaXMudXJpID0gdXJpO1xuICAgIHRoaXMuZGVmYXVsdF9wcm9wZXJ0aWVzID0gZGVzZXJpYWxpemVQcm9wZXJ0eU1hcChkZWZhdWx0X3Byb3BlcnRpZXMpO1xuICAgIHRoaXMubXV0YWJpbGl0eV9jb25maWcgPSBtdXRhYmlsaXR5X2NvbmZpZztcbiAgfVxufTtcbnZhciBUb2tlbiA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoaWQsIGFtb3VudCwgdG9rZW5fcHJvcGVydGllcykge1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgICB0aGlzLmFtb3VudCA9IGFtb3VudDtcbiAgICB0aGlzLnRva2VuX3Byb3BlcnRpZXMgPSBkZXNlcmlhbGl6ZVByb3BlcnR5TWFwKHRva2VuX3Byb3BlcnRpZXMpO1xuICB9XG59O1xuXG4vLyBzcmMvcGx1Z2lucy90b2tlbl9jbGllbnQudHNcbnZhciBUb2tlbkNsaWVudCA9IGNsYXNzIHtcbiAgLyoqXG4gICAqIENyZWF0ZXMgbmV3IFRva2VuQ2xpZW50IGluc3RhbmNlXG4gICAqXG4gICAqIEBwYXJhbSBhcHRvc0NsaWVudCBBcHRvc0NsaWVudCBpbnN0YW5jZVxuICAgKi9cbiAgY29uc3RydWN0b3IoYXB0b3NDbGllbnQyKSB7XG4gICAgdGhpcy5hcHRvc0NsaWVudCA9IGFwdG9zQ2xpZW50MjtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBORlQgY29sbGVjdGlvbiB3aXRoaW4gdGhlIHNwZWNpZmllZCBhY2NvdW50XG4gICAqXG4gICAqIEBwYXJhbSBhY2NvdW50IEFwdG9zQWNjb3VudCB3aGVyZSBjb2xsZWN0aW9uIHdpbGwgYmUgY3JlYXRlZFxuICAgKiBAcGFyYW0gbmFtZSBDb2xsZWN0aW9uIG5hbWVcbiAgICogQHBhcmFtIGRlc2NyaXB0aW9uIENvbGxlY3Rpb24gZGVzY3JpcHRpb25cbiAgICogQHBhcmFtIHVyaSBVUkwgdG8gYWRkaXRpb25hbCBpbmZvIGFib3V0IGNvbGxlY3Rpb25cbiAgICogQHBhcmFtIG1heEFtb3VudCBNYXhpbXVtIG51bWJlciBvZiBgdG9rZW5fZGF0YWAgYWxsb3dlZCB3aXRoaW4gdGhpcyBjb2xsZWN0aW9uXG4gICAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgLy8gOiE6PmNyZWF0ZUNvbGxlY3Rpb25cbiAgYXN5bmMgY3JlYXRlQ29sbGVjdGlvbihhY2NvdW50LCBuYW1lLCBkZXNjcmlwdGlvbiwgdXJpLCBtYXhBbW91bnQgPSBNQVhfVTY0X0JJR19JTlQsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMuYXB0b3NDbGllbnQsIHsgc2VuZGVyOiBhY2NvdW50LmFkZHJlc3MoKSwgLi4uZXh0cmFBcmdzIH0pO1xuICAgIGNvbnN0IHJhd1R4biA9IGF3YWl0IGJ1aWxkZXIuYnVpbGQoXG4gICAgICBcIjB4Mzo6dG9rZW46OmNyZWF0ZV9jb2xsZWN0aW9uX3NjcmlwdFwiLFxuICAgICAgW10sXG4gICAgICBbbmFtZSwgZGVzY3JpcHRpb24sIHVyaSwgbWF4QW1vdW50LCBbZmFsc2UsIGZhbHNlLCBmYWxzZV1dXG4gICAgKTtcbiAgICBjb25zdCBiY3NUeG4gPSBBcHRvc0NsaWVudC5nZW5lcmF0ZUJDU1RyYW5zYWN0aW9uKGFjY291bnQsIHJhd1R4bik7XG4gICAgY29uc3QgcGVuZGluZ1RyYW5zYWN0aW9uID0gYXdhaXQgdGhpcy5hcHRvc0NsaWVudC5zdWJtaXRTaWduZWRCQ1NUcmFuc2FjdGlvbihiY3NUeG4pO1xuICAgIHJldHVybiBwZW5kaW5nVHJhbnNhY3Rpb24uaGFzaDtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBORlQgd2l0aGluIHRoZSBzcGVjaWZpZWQgYWNjb3VudFxuICAgKlxuICAgKiBAcGFyYW0gYWNjb3VudCBBcHRvc0FjY291bnQgd2hlcmUgdG9rZW4gd2lsbCBiZSBjcmVhdGVkXG4gICAqIEBwYXJhbSBjb2xsZWN0aW9uTmFtZSBOYW1lIG9mIGNvbGxlY3Rpb24sIHRoYXQgdG9rZW4gYmVsb25ncyB0b1xuICAgKiBAcGFyYW0gbmFtZSBUb2tlbiBuYW1lXG4gICAqIEBwYXJhbSBkZXNjcmlwdGlvbiBUb2tlbiBkZXNjcmlwdGlvblxuICAgKiBAcGFyYW0gc3VwcGx5IFRva2VuIHN1cHBseVxuICAgKiBAcGFyYW0gdXJpIFVSTCB0byBhZGRpdGlvbmFsIGluZm8gYWJvdXQgdG9rZW5cbiAgICogQHBhcmFtIG1heCBUaGUgbWF4aXVtIG9mIHRva2VucyBjYW4gYmUgbWludGVkIGZyb20gdGhpcyB0b2tlblxuICAgKiBAcGFyYW0gcm95YWx0eV9wYXllZV9hZGRyZXNzIHRoZSBhZGRyZXNzIHRvIHJlY2VpdmUgdGhlIHJveWFsdHksIHRoZSBhZGRyZXNzIGNhbiBiZSBhIHNoYXJlZCBhY2NvdW50IGFkZHJlc3MuXG4gICAqIEBwYXJhbSByb3lhbHR5X3BvaW50c19kZW5vbWluYXRvciB0aGUgZGVub21pbmF0b3IgZm9yIGNhbGN1bGF0aW5nIHJveWFsdHlcbiAgICogQHBhcmFtIHJveWFsdHlfcG9pbnRzX251bWVyYXRvciB0aGUgbnVtZXJhdG9yIGZvciBjYWxjdWxhdGluZyByb3lhbHR5XG4gICAqIEBwYXJhbSBwcm9wZXJ0eV9rZXlzIHRoZSBwcm9wZXJ0eSBrZXlzIGZvciBzdG9yaW5nIG9uLWNoYWluIHByb3BlcnRpZXNcbiAgICogQHBhcmFtIHByb3BlcnR5X3ZhbHVlcyB0aGUgcHJvcGVydHkgdmFsdWVzIHRvIGJlIHN0b3JlZCBvbi1jaGFpblxuICAgKiBAcGFyYW0gcHJvcGVydHlfdHlwZXMgdGhlIHR5cGUgb2YgcHJvcGVydHkgdmFsdWVzXG4gICAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgLy8gOiE6PmNyZWF0ZVRva2VuXG4gIGFzeW5jIGNyZWF0ZVRva2VuKGFjY291bnQsIGNvbGxlY3Rpb25OYW1lLCBuYW1lLCBkZXNjcmlwdGlvbiwgc3VwcGx5LCB1cmksIG1heCA9IE1BWF9VNjRfQklHX0lOVCwgcm95YWx0eV9wYXllZV9hZGRyZXNzID0gYWNjb3VudC5hZGRyZXNzKCksIHJveWFsdHlfcG9pbnRzX2Rlbm9taW5hdG9yID0gMCwgcm95YWx0eV9wb2ludHNfbnVtZXJhdG9yID0gMCwgcHJvcGVydHlfa2V5cyA9IFtdLCBwcm9wZXJ0eV92YWx1ZXMgPSBbXSwgcHJvcGVydHlfdHlwZXMgPSBbXSwgZXh0cmFBcmdzKSB7XG4gICAgY29uc3QgYnVpbGRlciA9IG5ldyBUcmFuc2FjdGlvbkJ1aWxkZXJSZW1vdGVBQkkodGhpcy5hcHRvc0NsaWVudCwgeyBzZW5kZXI6IGFjY291bnQuYWRkcmVzcygpLCAuLi5leHRyYUFyZ3MgfSk7XG4gICAgY29uc3QgcmF3VHhuID0gYXdhaXQgYnVpbGRlci5idWlsZChcbiAgICAgIFwiMHgzOjp0b2tlbjo6Y3JlYXRlX3Rva2VuX3NjcmlwdFwiLFxuICAgICAgW10sXG4gICAgICBbXG4gICAgICAgIGNvbGxlY3Rpb25OYW1lLFxuICAgICAgICBuYW1lLFxuICAgICAgICBkZXNjcmlwdGlvbixcbiAgICAgICAgc3VwcGx5LFxuICAgICAgICBtYXgsXG4gICAgICAgIHVyaSxcbiAgICAgICAgcm95YWx0eV9wYXllZV9hZGRyZXNzLFxuICAgICAgICByb3lhbHR5X3BvaW50c19kZW5vbWluYXRvcixcbiAgICAgICAgcm95YWx0eV9wb2ludHNfbnVtZXJhdG9yLFxuICAgICAgICBbZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlXSxcbiAgICAgICAgcHJvcGVydHlfa2V5cyxcbiAgICAgICAgZ2V0UHJvcGVydHlWYWx1ZVJhdyhwcm9wZXJ0eV92YWx1ZXMsIHByb3BlcnR5X3R5cGVzKSxcbiAgICAgICAgcHJvcGVydHlfdHlwZXNcbiAgICAgIF1cbiAgICApO1xuICAgIGNvbnN0IGJjc1R4biA9IEFwdG9zQ2xpZW50LmdlbmVyYXRlQkNTVHJhbnNhY3Rpb24oYWNjb3VudCwgcmF3VHhuKTtcbiAgICBjb25zdCBwZW5kaW5nVHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLmFwdG9zQ2xpZW50LnN1Ym1pdFNpZ25lZEJDU1RyYW5zYWN0aW9uKGJjc1R4bik7XG4gICAgcmV0dXJuIHBlbmRpbmdUcmFuc2FjdGlvbi5oYXNoO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IE5GVCB3aXRoaW4gdGhlIHNwZWNpZmllZCBhY2NvdW50XG4gICAqXG4gICAqIEBwYXJhbSBhY2NvdW50IEFwdG9zQWNjb3VudCB3aGVyZSB0b2tlbiB3aWxsIGJlIGNyZWF0ZWRcbiAgICogQHBhcmFtIGNvbGxlY3Rpb25OYW1lIE5hbWUgb2YgY29sbGVjdGlvbiwgdGhhdCB0b2tlbiBiZWxvbmdzIHRvXG4gICAqIEBwYXJhbSBuYW1lIFRva2VuIG5hbWVcbiAgICogQHBhcmFtIGRlc2NyaXB0aW9uIFRva2VuIGRlc2NyaXB0aW9uXG4gICAqIEBwYXJhbSBzdXBwbHkgVG9rZW4gc3VwcGx5XG4gICAqIEBwYXJhbSB1cmkgVVJMIHRvIGFkZGl0aW9uYWwgaW5mbyBhYm91dCB0b2tlblxuICAgKiBAcGFyYW0gbWF4IFRoZSBtYXhpdW0gb2YgdG9rZW5zIGNhbiBiZSBtaW50ZWQgZnJvbSB0aGlzIHRva2VuXG4gICAqIEBwYXJhbSByb3lhbHR5X3BheWVlX2FkZHJlc3MgdGhlIGFkZHJlc3MgdG8gcmVjZWl2ZSB0aGUgcm95YWx0eSwgdGhlIGFkZHJlc3MgY2FuIGJlIGEgc2hhcmVkIGFjY291bnQgYWRkcmVzcy5cbiAgICogQHBhcmFtIHJveWFsdHlfcG9pbnRzX2Rlbm9taW5hdG9yIHRoZSBkZW5vbWluYXRvciBmb3IgY2FsY3VsYXRpbmcgcm95YWx0eVxuICAgKiBAcGFyYW0gcm95YWx0eV9wb2ludHNfbnVtZXJhdG9yIHRoZSBudW1lcmF0b3IgZm9yIGNhbGN1bGF0aW5nIHJveWFsdHlcbiAgICogQHBhcmFtIHByb3BlcnR5X2tleXMgdGhlIHByb3BlcnR5IGtleXMgZm9yIHN0b3Jpbmcgb24tY2hhaW4gcHJvcGVydGllc1xuICAgKiBAcGFyYW0gcHJvcGVydHlfdmFsdWVzIHRoZSBwcm9wZXJ0eSB2YWx1ZXMgdG8gYmUgc3RvcmVkIG9uLWNoYWluXG4gICAqIEBwYXJhbSBwcm9wZXJ0eV90eXBlcyB0aGUgdHlwZSBvZiBwcm9wZXJ0eSB2YWx1ZXNcbiAgICogQHBhcmFtIG11dGFiaWxpdHlfY29uZmlnIGNvbmZpZ3Mgd2hpY2ggZmllbGQgaXMgbXV0YWJsZVxuICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgdHJhbnNhY3Rpb24gc3VibWl0dGVkIHRvIHRoZSBBUElcbiAgICovXG4gIC8vIDohOj5jcmVhdGVUb2tlblxuICBhc3luYyBjcmVhdGVUb2tlbldpdGhNdXRhYmlsaXR5Q29uZmlnKGFjY291bnQsIGNvbGxlY3Rpb25OYW1lLCBuYW1lLCBkZXNjcmlwdGlvbiwgc3VwcGx5LCB1cmksIG1heCA9IE1BWF9VNjRfQklHX0lOVCwgcm95YWx0eV9wYXllZV9hZGRyZXNzID0gYWNjb3VudC5hZGRyZXNzKCksIHJveWFsdHlfcG9pbnRzX2Rlbm9taW5hdG9yID0gMCwgcm95YWx0eV9wb2ludHNfbnVtZXJhdG9yID0gMCwgcHJvcGVydHlfa2V5cyA9IFtdLCBwcm9wZXJ0eV92YWx1ZXMgPSBbXSwgcHJvcGVydHlfdHlwZXMgPSBbXSwgbXV0YWJpbGl0eV9jb25maWcgPSBbZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlXSwgZXh0cmFBcmdzKSB7XG4gICAgY29uc3QgYnVpbGRlciA9IG5ldyBUcmFuc2FjdGlvbkJ1aWxkZXJSZW1vdGVBQkkodGhpcy5hcHRvc0NsaWVudCwgeyBzZW5kZXI6IGFjY291bnQuYWRkcmVzcygpLCAuLi5leHRyYUFyZ3MgfSk7XG4gICAgY29uc3QgcmF3VHhuID0gYXdhaXQgYnVpbGRlci5idWlsZChcbiAgICAgIFwiMHgzOjp0b2tlbjo6Y3JlYXRlX3Rva2VuX3NjcmlwdFwiLFxuICAgICAgW10sXG4gICAgICBbXG4gICAgICAgIGNvbGxlY3Rpb25OYW1lLFxuICAgICAgICBuYW1lLFxuICAgICAgICBkZXNjcmlwdGlvbixcbiAgICAgICAgc3VwcGx5LFxuICAgICAgICBtYXgsXG4gICAgICAgIHVyaSxcbiAgICAgICAgcm95YWx0eV9wYXllZV9hZGRyZXNzLFxuICAgICAgICByb3lhbHR5X3BvaW50c19kZW5vbWluYXRvcixcbiAgICAgICAgcm95YWx0eV9wb2ludHNfbnVtZXJhdG9yLFxuICAgICAgICBtdXRhYmlsaXR5X2NvbmZpZyxcbiAgICAgICAgcHJvcGVydHlfa2V5cyxcbiAgICAgICAgcHJvcGVydHlfdmFsdWVzLFxuICAgICAgICBwcm9wZXJ0eV90eXBlc1xuICAgICAgXVxuICAgICk7XG4gICAgY29uc3QgYmNzVHhuID0gQXB0b3NDbGllbnQuZ2VuZXJhdGVCQ1NUcmFuc2FjdGlvbihhY2NvdW50LCByYXdUeG4pO1xuICAgIGNvbnN0IHBlbmRpbmdUcmFuc2FjdGlvbiA9IGF3YWl0IHRoaXMuYXB0b3NDbGllbnQuc3VibWl0U2lnbmVkQkNTVHJhbnNhY3Rpb24oYmNzVHhuKTtcbiAgICByZXR1cm4gcGVuZGluZ1RyYW5zYWN0aW9uLmhhc2g7XG4gIH1cbiAgLyoqXG4gICAqIFRyYW5zZmVycyBzcGVjaWZpZWQgYW1vdW50IG9mIHRva2VucyBmcm9tIGFjY291bnQgdG8gcmVjZWl2ZXJcbiAgICpcbiAgICogQHBhcmFtIGFjY291bnQgQXB0b3NBY2NvdW50IHdoZXJlIHRva2VuIGZyb20gd2hpY2ggdG9rZW5zIHdpbGwgYmUgdHJhbnNmZXJlZFxuICAgKiBAcGFyYW0gcmVjZWl2ZXIgIEhleC1lbmNvZGVkIDMyIGJ5dGUgQXB0b3MgYWNjb3VudCBhZGRyZXNzIHRvIHdoaWNoIHRva2VucyB3aWxsIGJlIHRyYW5zZmVyZWRcbiAgICogQHBhcmFtIGNyZWF0b3IgSGV4LWVuY29kZWQgMzIgYnl0ZSBBcHRvcyBhY2NvdW50IGFkZHJlc3MgdG8gd2hpY2ggY3JlYXRlZCB0b2tlbnNcbiAgICogQHBhcmFtIGNvbGxlY3Rpb25OYW1lIE5hbWUgb2YgY29sbGVjdGlvbiB3aGVyZSB0b2tlbiBpcyBzdG9yZWRcbiAgICogQHBhcmFtIG5hbWUgVG9rZW4gbmFtZVxuICAgKiBAcGFyYW0gYW1vdW50IEFtb3VudCBvZiB0b2tlbnMgd2hpY2ggd2lsbCBiZSB0cmFuc2ZlcmVkXG4gICAqIEBwYXJhbSBwcm9wZXJ0eV92ZXJzaW9uIHRoZSB2ZXJzaW9uIG9mIHRva2VuIFByb3BlcnR5TWFwIHdpdGggYSBkZWZhdWx0IHZhbHVlIDAuXG4gICAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgYXN5bmMgb2ZmZXJUb2tlbihhY2NvdW50LCByZWNlaXZlciwgY3JlYXRvciwgY29sbGVjdGlvbk5hbWUsIG5hbWUsIGFtb3VudCwgcHJvcGVydHlfdmVyc2lvbiA9IDAsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMuYXB0b3NDbGllbnQsIHsgc2VuZGVyOiBhY2NvdW50LmFkZHJlc3MoKSwgLi4uZXh0cmFBcmdzIH0pO1xuICAgIGNvbnN0IHJhd1R4biA9IGF3YWl0IGJ1aWxkZXIuYnVpbGQoXG4gICAgICBcIjB4Mzo6dG9rZW5fdHJhbnNmZXJzOjpvZmZlcl9zY3JpcHRcIixcbiAgICAgIFtdLFxuICAgICAgW3JlY2VpdmVyLCBjcmVhdG9yLCBjb2xsZWN0aW9uTmFtZSwgbmFtZSwgcHJvcGVydHlfdmVyc2lvbiwgYW1vdW50XVxuICAgICk7XG4gICAgY29uc3QgYmNzVHhuID0gQXB0b3NDbGllbnQuZ2VuZXJhdGVCQ1NUcmFuc2FjdGlvbihhY2NvdW50LCByYXdUeG4pO1xuICAgIGNvbnN0IHBlbmRpbmdUcmFuc2FjdGlvbiA9IGF3YWl0IHRoaXMuYXB0b3NDbGllbnQuc3VibWl0U2lnbmVkQkNTVHJhbnNhY3Rpb24oYmNzVHhuKTtcbiAgICByZXR1cm4gcGVuZGluZ1RyYW5zYWN0aW9uLmhhc2g7XG4gIH1cbiAgLyoqXG4gICAqIENsYWltcyBhIHRva2VuIG9uIHNwZWNpZmllZCBhY2NvdW50XG4gICAqXG4gICAqIEBwYXJhbSBhY2NvdW50IEFwdG9zQWNjb3VudCB3aGljaCB3aWxsIGNsYWltIHRva2VuXG4gICAqIEBwYXJhbSBzZW5kZXIgSGV4LWVuY29kZWQgMzIgYnl0ZSBBcHRvcyBhY2NvdW50IGFkZHJlc3Mgd2hpY2ggaG9sZHMgYSB0b2tlblxuICAgKiBAcGFyYW0gY3JlYXRvciBIZXgtZW5jb2RlZCAzMiBieXRlIEFwdG9zIGFjY291bnQgYWRkcmVzcyB3aGljaCBjcmVhdGVkIGEgdG9rZW5cbiAgICogQHBhcmFtIGNvbGxlY3Rpb25OYW1lIE5hbWUgb2YgY29sbGVjdGlvbiB3aGVyZSB0b2tlbiBpcyBzdG9yZWRcbiAgICogQHBhcmFtIG5hbWUgVG9rZW4gbmFtZVxuICAgKiBAcGFyYW0gcHJvcGVydHlfdmVyc2lvbiB0aGUgdmVyc2lvbiBvZiB0b2tlbiBQcm9wZXJ0eU1hcCB3aXRoIGEgZGVmYXVsdCB2YWx1ZSAwLlxuICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgdHJhbnNhY3Rpb24gc3VibWl0dGVkIHRvIHRoZSBBUElcbiAgICovXG4gIGFzeW5jIGNsYWltVG9rZW4oYWNjb3VudCwgc2VuZGVyLCBjcmVhdG9yLCBjb2xsZWN0aW9uTmFtZSwgbmFtZSwgcHJvcGVydHlfdmVyc2lvbiA9IDAsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMuYXB0b3NDbGllbnQsIHsgc2VuZGVyOiBhY2NvdW50LmFkZHJlc3MoKSwgLi4uZXh0cmFBcmdzIH0pO1xuICAgIGNvbnN0IHJhd1R4biA9IGF3YWl0IGJ1aWxkZXIuYnVpbGQoXG4gICAgICBcIjB4Mzo6dG9rZW5fdHJhbnNmZXJzOjpjbGFpbV9zY3JpcHRcIixcbiAgICAgIFtdLFxuICAgICAgW3NlbmRlciwgY3JlYXRvciwgY29sbGVjdGlvbk5hbWUsIG5hbWUsIHByb3BlcnR5X3ZlcnNpb25dXG4gICAgKTtcbiAgICBjb25zdCBiY3NUeG4gPSBBcHRvc0NsaWVudC5nZW5lcmF0ZUJDU1RyYW5zYWN0aW9uKGFjY291bnQsIHJhd1R4bik7XG4gICAgY29uc3QgcGVuZGluZ1RyYW5zYWN0aW9uID0gYXdhaXQgdGhpcy5hcHRvc0NsaWVudC5zdWJtaXRTaWduZWRCQ1NUcmFuc2FjdGlvbihiY3NUeG4pO1xuICAgIHJldHVybiBwZW5kaW5nVHJhbnNhY3Rpb24uaGFzaDtcbiAgfVxuICAvKipcbiAgICogUmVtb3ZlcyBhIHRva2VuIGZyb20gcGVuZGluZyBjbGFpbXMgbGlzdFxuICAgKlxuICAgKiBAcGFyYW0gYWNjb3VudCBBcHRvc0FjY291bnQgd2hpY2ggd2lsbCByZW1vdmUgdG9rZW4gZnJvbSBwZW5kaW5nIGxpc3RcbiAgICogQHBhcmFtIHJlY2VpdmVyIEhleC1lbmNvZGVkIDMyIGJ5dGUgQXB0b3MgYWNjb3VudCBhZGRyZXNzIHdoaWNoIGhhZCB0byBjbGFpbSB0b2tlblxuICAgKiBAcGFyYW0gY3JlYXRvciBIZXgtZW5jb2RlZCAzMiBieXRlIEFwdG9zIGFjY291bnQgYWRkcmVzcyB3aGljaCBjcmVhdGVkIGEgdG9rZW5cbiAgICogQHBhcmFtIGNvbGxlY3Rpb25OYW1lIE5hbWUgb2YgY29sbGVjdGlvbiB3aGVyZSB0b2tlbiBpcyBzdHJvcmVkXG4gICAqIEBwYXJhbSBuYW1lIFRva2VuIG5hbWVcbiAgICogQHBhcmFtIHByb3BlcnR5X3ZlcnNpb24gdGhlIHZlcnNpb24gb2YgdG9rZW4gUHJvcGVydHlNYXAgd2l0aCBhIGRlZmF1bHQgdmFsdWUgMC5cbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICBhc3luYyBjYW5jZWxUb2tlbk9mZmVyKGFjY291bnQsIHJlY2VpdmVyLCBjcmVhdG9yLCBjb2xsZWN0aW9uTmFtZSwgbmFtZSwgcHJvcGVydHlfdmVyc2lvbiA9IDAsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMuYXB0b3NDbGllbnQsIHsgc2VuZGVyOiBhY2NvdW50LmFkZHJlc3MoKSwgLi4uZXh0cmFBcmdzIH0pO1xuICAgIGNvbnN0IHJhd1R4biA9IGF3YWl0IGJ1aWxkZXIuYnVpbGQoXG4gICAgICBcIjB4Mzo6dG9rZW5fdHJhbnNmZXJzOjpjYW5jZWxfb2ZmZXJfc2NyaXB0XCIsXG4gICAgICBbXSxcbiAgICAgIFtyZWNlaXZlciwgY3JlYXRvciwgY29sbGVjdGlvbk5hbWUsIG5hbWUsIHByb3BlcnR5X3ZlcnNpb25dXG4gICAgKTtcbiAgICBjb25zdCBiY3NUeG4gPSBBcHRvc0NsaWVudC5nZW5lcmF0ZUJDU1RyYW5zYWN0aW9uKGFjY291bnQsIHJhd1R4bik7XG4gICAgY29uc3QgcGVuZGluZ1RyYW5zYWN0aW9uID0gYXdhaXQgdGhpcy5hcHRvc0NsaWVudC5zdWJtaXRTaWduZWRCQ1NUcmFuc2FjdGlvbihiY3NUeG4pO1xuICAgIHJldHVybiBwZW5kaW5nVHJhbnNhY3Rpb24uaGFzaDtcbiAgfVxuICAvKipcbiAgICogRGlyZWN0bHkgdHJhbnNmZXIgdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgdG9rZW5zIGZyb20gYWNjb3VudCB0byByZWNlaXZlclxuICAgKiB1c2luZyBhIHNpbmdsZSBtdWx0aSBzaWduYXR1cmUgdHJhbnNhY3Rpb24uXG4gICAqXG4gICAqIEBwYXJhbSBzZW5kZXIgQXB0b3NBY2NvdW50IHdoZXJlIHRva2VuIGZyb20gd2hpY2ggdG9rZW5zIHdpbGwgYmUgdHJhbnNmZXJyZWRcbiAgICogQHBhcmFtIHJlY2VpdmVyIEhleC1lbmNvZGVkIDMyIGJ5dGUgQXB0b3MgYWNjb3VudCBhZGRyZXNzIHRvIHdoaWNoIHRva2VucyB3aWxsIGJlIHRyYW5zZmVycmVkXG4gICAqIEBwYXJhbSBjcmVhdG9yIEhleC1lbmNvZGVkIDMyIGJ5dGUgQXB0b3MgYWNjb3VudCBhZGRyZXNzIHRvIHdoaWNoIGNyZWF0ZWQgdG9rZW5zXG4gICAqIEBwYXJhbSBjb2xsZWN0aW9uTmFtZSBOYW1lIG9mIGNvbGxlY3Rpb24gd2hlcmUgdG9rZW4gaXMgc3RvcmVkXG4gICAqIEBwYXJhbSBuYW1lIFRva2VuIG5hbWVcbiAgICogQHBhcmFtIGFtb3VudCBBbW91bnQgb2YgdG9rZW5zIHdoaWNoIHdpbGwgYmUgdHJhbnNmZXJyZWRcbiAgICogQHBhcmFtIHByb3BlcnR5X3ZlcnNpb24gdGhlIHZlcnNpb24gb2YgdG9rZW4gUHJvcGVydHlNYXAgd2l0aCBhIGRlZmF1bHQgdmFsdWUgMC5cbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICBhc3luYyBkaXJlY3RUcmFuc2ZlclRva2VuKHNlbmRlciwgcmVjZWl2ZXIsIGNyZWF0b3IsIGNvbGxlY3Rpb25OYW1lLCBuYW1lLCBhbW91bnQsIHByb3BlcnR5VmVyc2lvbiA9IDAsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMuYXB0b3NDbGllbnQsIHsgc2VuZGVyOiBzZW5kZXIuYWRkcmVzcygpLCAuLi5leHRyYUFyZ3MgfSk7XG4gICAgY29uc3QgcmF3VHhuID0gYXdhaXQgYnVpbGRlci5idWlsZChcbiAgICAgIFwiMHgzOjp0b2tlbjo6ZGlyZWN0X3RyYW5zZmVyX3NjcmlwdFwiLFxuICAgICAgW10sXG4gICAgICBbY3JlYXRvciwgY29sbGVjdGlvbk5hbWUsIG5hbWUsIHByb3BlcnR5VmVyc2lvbiwgYW1vdW50XVxuICAgICk7XG4gICAgY29uc3QgbXVsdGlBZ2VudFR4biA9IG5ldyBhcHRvc190eXBlc19leHBvcnRzLk11bHRpQWdlbnRSYXdUcmFuc2FjdGlvbihyYXdUeG4sIFtcbiAgICAgIGFwdG9zX3R5cGVzX2V4cG9ydHMuQWNjb3VudEFkZHJlc3MuZnJvbUhleChyZWNlaXZlci5hZGRyZXNzKCkpXG4gICAgXSk7XG4gICAgY29uc3Qgc2VuZGVyU2lnbmF0dXJlID0gbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuRWQyNTUxOVNpZ25hdHVyZShcbiAgICAgIHNlbmRlci5zaWduQnVmZmVyKFRyYW5zYWN0aW9uQnVpbGRlci5nZXRTaWduaW5nTWVzc2FnZShtdWx0aUFnZW50VHhuKSkudG9VaW50OEFycmF5KClcbiAgICApO1xuICAgIGNvbnN0IHNlbmRlckF1dGhlbnRpY2F0b3IgPSBuZXcgYXB0b3NfdHlwZXNfZXhwb3J0cy5BY2NvdW50QXV0aGVudGljYXRvckVkMjU1MTkoXG4gICAgICBuZXcgYXB0b3NfdHlwZXNfZXhwb3J0cy5FZDI1NTE5UHVibGljS2V5KHNlbmRlci5zaWduaW5nS2V5LnB1YmxpY0tleSksXG4gICAgICBzZW5kZXJTaWduYXR1cmVcbiAgICApO1xuICAgIGNvbnN0IHJlY2VpdmVyU2lnbmF0dXJlID0gbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuRWQyNTUxOVNpZ25hdHVyZShcbiAgICAgIHJlY2VpdmVyLnNpZ25CdWZmZXIoVHJhbnNhY3Rpb25CdWlsZGVyLmdldFNpZ25pbmdNZXNzYWdlKG11bHRpQWdlbnRUeG4pKS50b1VpbnQ4QXJyYXkoKVxuICAgICk7XG4gICAgY29uc3QgcmVjZWl2ZXJBdXRoZW50aWNhdG9yID0gbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuQWNjb3VudEF1dGhlbnRpY2F0b3JFZDI1NTE5KFxuICAgICAgbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuRWQyNTUxOVB1YmxpY0tleShyZWNlaXZlci5zaWduaW5nS2V5LnB1YmxpY0tleSksXG4gICAgICByZWNlaXZlclNpZ25hdHVyZVxuICAgICk7XG4gICAgY29uc3QgbXVsdGlBZ2VudEF1dGhlbnRpY2F0b3IgPSBuZXcgYXB0b3NfdHlwZXNfZXhwb3J0cy5UcmFuc2FjdGlvbkF1dGhlbnRpY2F0b3JNdWx0aUFnZW50KFxuICAgICAgc2VuZGVyQXV0aGVudGljYXRvcixcbiAgICAgIFthcHRvc190eXBlc19leHBvcnRzLkFjY291bnRBZGRyZXNzLmZyb21IZXgocmVjZWl2ZXIuYWRkcmVzcygpKV0sXG4gICAgICAvLyBTZWNvbmRhcnkgc2lnbmVyIGFkZHJlc3Nlc1xuICAgICAgW3JlY2VpdmVyQXV0aGVudGljYXRvcl1cbiAgICAgIC8vIFNlY29uZGFyeSBzaWduZXIgYXV0aGVudGljYXRvcnNcbiAgICApO1xuICAgIGNvbnN0IGJjc1R4biA9IGJjc1RvQnl0ZXMobmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuU2lnbmVkVHJhbnNhY3Rpb24ocmF3VHhuLCBtdWx0aUFnZW50QXV0aGVudGljYXRvcikpO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uUmVzID0gYXdhaXQgdGhpcy5hcHRvc0NsaWVudC5zdWJtaXRTaWduZWRCQ1NUcmFuc2FjdGlvbihiY3NUeG4pO1xuICAgIHJldHVybiB0cmFuc2FjdGlvblJlcy5oYXNoO1xuICB9XG4gIC8qKlxuICAgKiBEaXJlY3RseSB0cmFuc2ZlciB0aGUgc3BlY2lmaWVkIGFtb3VudCBvZiB0b2tlbnMgZnJvbSBhY2NvdW50IHRvIHJlY2VpdmVyXG4gICAqIHVzaW5nIGEgc2luZ2xlIG11bHRpIHNpZ25hdHVyZSB0cmFuc2FjdGlvbi5cbiAgICpcbiAgICogQHBhcmFtIHNlbmRlciBBcHRvc0FjY291bnQgd2hlcmUgdG9rZW4gZnJvbSB3aGljaCB0b2tlbnMgd2lsbCBiZSB0cmFuc2ZlcnJlZFxuICAgKiBAcGFyYW0gcmVjZWl2ZXIgSGV4LWVuY29kZWQgMzIgYnl0ZSBBcHRvcyBhY2NvdW50IGFkZHJlc3MgdG8gd2hpY2ggdG9rZW5zIHdpbGwgYmUgdHJhbnNmZXJyZWRcbiAgICogQHBhcmFtIGNyZWF0b3IgSGV4LWVuY29kZWQgMzIgYnl0ZSBBcHRvcyBhY2NvdW50IGFkZHJlc3MgdG8gd2hpY2ggY3JlYXRlZCB0b2tlbnNcbiAgICogQHBhcmFtIGNvbGxlY3Rpb25OYW1lIE5hbWUgb2YgY29sbGVjdGlvbiB3aGVyZSB0b2tlbiBpcyBzdG9yZWRcbiAgICogQHBhcmFtIG5hbWUgVG9rZW4gbmFtZVxuICAgKiBAcGFyYW0gYW1vdW50IEFtb3VudCBvZiB0b2tlbnMgd2hpY2ggd2lsbCBiZSB0cmFuc2ZlcnJlZFxuICAgKiBAcGFyYW0gZmVlX3BheWVyIEFwdG9zQWNjb3VudCB3aGljaCB3aWxsIHBheSBmZWUgZm9yIHRyYW5zYWN0aW9uXG4gICAqIEBwYXJhbSBwcm9wZXJ0eV92ZXJzaW9uIHRoZSB2ZXJzaW9uIG9mIHRva2VuIFByb3BlcnR5TWFwIHdpdGggYSBkZWZhdWx0IHZhbHVlIDAuXG4gICAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgYXN5bmMgZGlyZWN0VHJhbnNmZXJUb2tlbldpdGhGZWVQYXllcihzZW5kZXIsIHJlY2VpdmVyLCBjcmVhdG9yLCBjb2xsZWN0aW9uTmFtZSwgbmFtZSwgYW1vdW50LCBmZWVfcGF5ZXIsIHByb3BlcnR5VmVyc2lvbiA9IDAsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMuYXB0b3NDbGllbnQsIHsgc2VuZGVyOiBzZW5kZXIuYWRkcmVzcygpLCAuLi5leHRyYUFyZ3MgfSk7XG4gICAgY29uc3QgcmF3VHhuID0gYXdhaXQgYnVpbGRlci5idWlsZChcbiAgICAgIFwiMHgzOjp0b2tlbjo6ZGlyZWN0X3RyYW5zZmVyX3NjcmlwdFwiLFxuICAgICAgW10sXG4gICAgICBbY3JlYXRvciwgY29sbGVjdGlvbk5hbWUsIG5hbWUsIHByb3BlcnR5VmVyc2lvbiwgYW1vdW50XVxuICAgICk7XG4gICAgY29uc3QgZmVlUGF5ZXJUeG4gPSBuZXcgYXB0b3NfdHlwZXNfZXhwb3J0cy5GZWVQYXllclJhd1RyYW5zYWN0aW9uKFxuICAgICAgcmF3VHhuLFxuICAgICAgW2FwdG9zX3R5cGVzX2V4cG9ydHMuQWNjb3VudEFkZHJlc3MuZnJvbUhleChyZWNlaXZlci5hZGRyZXNzKCkpXSxcbiAgICAgIGFwdG9zX3R5cGVzX2V4cG9ydHMuQWNjb3VudEFkZHJlc3MuZnJvbUhleChmZWVfcGF5ZXIuYWRkcmVzcygpKVxuICAgICk7XG4gICAgY29uc3Qgc2VuZGVyU2lnbmF0dXJlID0gbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuRWQyNTUxOVNpZ25hdHVyZShcbiAgICAgIHNlbmRlci5zaWduQnVmZmVyKFRyYW5zYWN0aW9uQnVpbGRlci5nZXRTaWduaW5nTWVzc2FnZShmZWVQYXllclR4bikpLnRvVWludDhBcnJheSgpXG4gICAgKTtcbiAgICBjb25zdCBzZW5kZXJBdXRoZW50aWNhdG9yID0gbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuQWNjb3VudEF1dGhlbnRpY2F0b3JFZDI1NTE5KFxuICAgICAgbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuRWQyNTUxOVB1YmxpY0tleShzZW5kZXIuc2lnbmluZ0tleS5wdWJsaWNLZXkpLFxuICAgICAgc2VuZGVyU2lnbmF0dXJlXG4gICAgKTtcbiAgICBjb25zdCByZWNlaXZlclNpZ25hdHVyZSA9IG5ldyBhcHRvc190eXBlc19leHBvcnRzLkVkMjU1MTlTaWduYXR1cmUoXG4gICAgICByZWNlaXZlci5zaWduQnVmZmVyKFRyYW5zYWN0aW9uQnVpbGRlci5nZXRTaWduaW5nTWVzc2FnZShmZWVQYXllclR4bikpLnRvVWludDhBcnJheSgpXG4gICAgKTtcbiAgICBjb25zdCByZWNlaXZlckF1dGhlbnRpY2F0b3IgPSBuZXcgYXB0b3NfdHlwZXNfZXhwb3J0cy5BY2NvdW50QXV0aGVudGljYXRvckVkMjU1MTkoXG4gICAgICBuZXcgYXB0b3NfdHlwZXNfZXhwb3J0cy5FZDI1NTE5UHVibGljS2V5KHJlY2VpdmVyLnNpZ25pbmdLZXkucHVibGljS2V5KSxcbiAgICAgIHJlY2VpdmVyU2lnbmF0dXJlXG4gICAgKTtcbiAgICBjb25zdCBmZWVQYXllclNpZ25hdHVyZSA9IG5ldyBhcHRvc190eXBlc19leHBvcnRzLkVkMjU1MTlTaWduYXR1cmUoXG4gICAgICBmZWVfcGF5ZXIuc2lnbkJ1ZmZlcihUcmFuc2FjdGlvbkJ1aWxkZXIuZ2V0U2lnbmluZ01lc3NhZ2UoZmVlUGF5ZXJUeG4pKS50b1VpbnQ4QXJyYXkoKVxuICAgICk7XG4gICAgY29uc3QgZmVlUGF5ZXJBdXRoZW50aWNhdG9yID0gbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuQWNjb3VudEF1dGhlbnRpY2F0b3JFZDI1NTE5KFxuICAgICAgbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuRWQyNTUxOVB1YmxpY0tleShmZWVfcGF5ZXIuc2lnbmluZ0tleS5wdWJsaWNLZXkpLFxuICAgICAgZmVlUGF5ZXJTaWduYXR1cmVcbiAgICApO1xuICAgIGNvbnN0IHR4QXV0aGVudGljYXRvckZlZVBheWVyID0gbmV3IGFwdG9zX3R5cGVzX2V4cG9ydHMuVHJhbnNhY3Rpb25BdXRoZW50aWNhdG9yRmVlUGF5ZXIoXG4gICAgICBzZW5kZXJBdXRoZW50aWNhdG9yLFxuICAgICAgW2FwdG9zX3R5cGVzX2V4cG9ydHMuQWNjb3VudEFkZHJlc3MuZnJvbUhleChyZWNlaXZlci5hZGRyZXNzKCkpXSxcbiAgICAgIFtyZWNlaXZlckF1dGhlbnRpY2F0b3JdLFxuICAgICAgeyBhZGRyZXNzOiBhcHRvc190eXBlc19leHBvcnRzLkFjY291bnRBZGRyZXNzLmZyb21IZXgoZmVlX3BheWVyLmFkZHJlc3MoKSksIGF1dGhlbnRpY2F0b3I6IGZlZVBheWVyQXV0aGVudGljYXRvciB9XG4gICAgKTtcbiAgICBjb25zdCBiY3NUeG4gPSBiY3NUb0J5dGVzKG5ldyBhcHRvc190eXBlc19leHBvcnRzLlNpZ25lZFRyYW5zYWN0aW9uKHJhd1R4biwgdHhBdXRoZW50aWNhdG9yRmVlUGF5ZXIpKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvblJlcyA9IGF3YWl0IHRoaXMuYXB0b3NDbGllbnQuc3VibWl0U2lnbmVkQkNTVHJhbnNhY3Rpb24oYmNzVHhuKTtcbiAgICByZXR1cm4gdHJhbnNhY3Rpb25SZXMuaGFzaDtcbiAgfVxuICAvKipcbiAgICogVXNlciBvcHQtaW4gb3Igb3V0IGRpcmVjdCB0cmFuc2ZlciB0aHJvdWdoIGEgYm9vbGVhbiBmbGFnXG4gICAqXG4gICAqIEBwYXJhbSBzZW5kZXIgQXB0b3NBY2NvdW50IHdoZXJlIHRoZSB0b2tlbiB3aWxsIGJlIHRyYW5zZmVycmVkXG4gICAqIEBwYXJhbSBvcHRJbiBib29sZWFuIHZhbHVlIGluZGljYXRlcyB1c2VyIHdhbnQgdG8gb3B0LWluIG9yIG91dCBvZiBkaXJlY3QgdHJhbnNmZXJcbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICBhc3luYyBvcHRJblRva2VuVHJhbnNmZXIoc2VuZGVyLCBvcHRJbiwgZXh0cmFBcmdzKSB7XG4gICAgY29uc3QgYnVpbGRlciA9IG5ldyBUcmFuc2FjdGlvbkJ1aWxkZXJSZW1vdGVBQkkodGhpcy5hcHRvc0NsaWVudCwgeyBzZW5kZXI6IHNlbmRlci5hZGRyZXNzKCksIC4uLmV4dHJhQXJncyB9KTtcbiAgICBjb25zdCByYXdUeG4gPSBhd2FpdCBidWlsZGVyLmJ1aWxkKFwiMHgzOjp0b2tlbjo6b3B0X2luX2RpcmVjdF90cmFuc2ZlclwiLCBbXSwgW29wdEluXSk7XG4gICAgY29uc3QgYmNzVHhuID0gQXB0b3NDbGllbnQuZ2VuZXJhdGVCQ1NUcmFuc2FjdGlvbihzZW5kZXIsIHJhd1R4bik7XG4gICAgY29uc3QgcGVuZGluZ1RyYW5zYWN0aW9uID0gYXdhaXQgdGhpcy5hcHRvc0NsaWVudC5zdWJtaXRTaWduZWRCQ1NUcmFuc2FjdGlvbihiY3NUeG4pO1xuICAgIHJldHVybiBwZW5kaW5nVHJhbnNhY3Rpb24uaGFzaDtcbiAgfVxuICAvKipcbiAgICogRGlyZWN0bHkgdHJhbnNmZXIgdG9rZW4gdG8gYSByZWNlaXZlci4gVGhlIHJlY2VpdmVyIHNob3VsZCBoYXZlIG9wdGVkIGluIHRvIGRpcmVjdCB0cmFuc2ZlclxuICAgKlxuICAgKiBAcGFyYW0gc2VuZGVyIEFwdG9zQWNjb3VudCB3aGVyZSB0aGUgdG9rZW4gd2lsbCBiZSB0cmFuc2ZlcnJlZFxuICAgKiBAcGFyYW0gY3JlYXRvciAgYWRkcmVzcyBvZiB0aGUgdG9rZW4gY3JlYXRvclxuICAgKiBAcGFyYW0gY29sbGVjdGlvbk5hbWUgTmFtZSBvZiBjb2xsZWN0aW9uIHdoZXJlIHRva2VuIGlzIHN0b3JlZFxuICAgKiBAcGFyYW0gbmFtZSBUb2tlbiBuYW1lXG4gICAqIEBwYXJhbSBwcm9wZXJ0eV92ZXJzaW9uIHRoZSB2ZXJzaW9uIG9mIHRva2VuIFByb3BlcnR5TWFwXG4gICAqIEBwYXJhbSBhbW91bnQgQW1vdW50IG9mIHRva2VucyB3aGljaCB3aWxsIGJlIHRyYW5zZmVyZWRcbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICBhc3luYyB0cmFuc2ZlcldpdGhPcHRJbihzZW5kZXIsIGNyZWF0b3IsIGNvbGxlY3Rpb25OYW1lLCB0b2tlbk5hbWUsIHByb3BlcnR5VmVyc2lvbiwgcmVjZWl2ZXIsIGFtb3VudCwgZXh0cmFBcmdzKSB7XG4gICAgY29uc3QgYnVpbGRlciA9IG5ldyBUcmFuc2FjdGlvbkJ1aWxkZXJSZW1vdGVBQkkodGhpcy5hcHRvc0NsaWVudCwgeyBzZW5kZXI6IHNlbmRlci5hZGRyZXNzKCksIC4uLmV4dHJhQXJncyB9KTtcbiAgICBjb25zdCByYXdUeG4gPSBhd2FpdCBidWlsZGVyLmJ1aWxkKFxuICAgICAgXCIweDM6OnRva2VuOjp0cmFuc2Zlcl93aXRoX29wdF9pblwiLFxuICAgICAgW10sXG4gICAgICBbY3JlYXRvciwgY29sbGVjdGlvbk5hbWUsIHRva2VuTmFtZSwgcHJvcGVydHlWZXJzaW9uLCByZWNlaXZlciwgYW1vdW50XVxuICAgICk7XG4gICAgY29uc3QgYmNzVHhuID0gQXB0b3NDbGllbnQuZ2VuZXJhdGVCQ1NUcmFuc2FjdGlvbihzZW5kZXIsIHJhd1R4bik7XG4gICAgY29uc3QgcGVuZGluZ1RyYW5zYWN0aW9uID0gYXdhaXQgdGhpcy5hcHRvc0NsaWVudC5zdWJtaXRTaWduZWRCQ1NUcmFuc2FjdGlvbihiY3NUeG4pO1xuICAgIHJldHVybiBwZW5kaW5nVHJhbnNhY3Rpb24uaGFzaDtcbiAgfVxuICAvKipcbiAgICogQnVyblRva2VuIGJ5IENyZWF0b3JcbiAgICpcbiAgICogQHBhcmFtIGNyZWF0b3IgY3JlYXRvciBvZiB0aGUgdG9rZW5cbiAgICogQHBhcmFtIG93bmVyQWRkcmVzcyBhZGRyZXNzIG9mIHRoZSB0b2tlbiBvd25lclxuICAgKiBAcGFyYW0gY29sbGVjdGlvbk5hbWUgTmFtZSBvZiBjb2xsZWN0aW9uIHdoZXJlIHRva2VuIGlzIHN0b3JlZFxuICAgKiBAcGFyYW0gbmFtZSBUb2tlbiBuYW1lXG4gICAqIEBwYXJhbSBhbW91bnQgQW1vdW50IG9mIHRva2VucyB3aGljaCB3aWxsIGJlIHRyYW5zZmVyZWRcbiAgICogQHBhcmFtIHByb3BlcnR5X3ZlcnNpb24gdGhlIHZlcnNpb24gb2YgdG9rZW4gUHJvcGVydHlNYXBcbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICBhc3luYyBidXJuQnlDcmVhdG9yKGNyZWF0b3IsIG93bmVyQWRkcmVzcywgY29sbGVjdGlvbiwgbmFtZSwgUHJvcGVydHlWZXJzaW9uLCBhbW91bnQsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMuYXB0b3NDbGllbnQsIHsgc2VuZGVyOiBjcmVhdG9yLmFkZHJlc3MoKSwgLi4uZXh0cmFBcmdzIH0pO1xuICAgIGNvbnN0IHJhd1R4biA9IGF3YWl0IGJ1aWxkZXIuYnVpbGQoXG4gICAgICBcIjB4Mzo6dG9rZW46OmJ1cm5fYnlfY3JlYXRvclwiLFxuICAgICAgW10sXG4gICAgICBbb3duZXJBZGRyZXNzLCBjb2xsZWN0aW9uLCBuYW1lLCBQcm9wZXJ0eVZlcnNpb24sIGFtb3VudF1cbiAgICApO1xuICAgIGNvbnN0IGJjc1R4biA9IEFwdG9zQ2xpZW50LmdlbmVyYXRlQkNTVHJhbnNhY3Rpb24oY3JlYXRvciwgcmF3VHhuKTtcbiAgICBjb25zdCBwZW5kaW5nVHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLmFwdG9zQ2xpZW50LnN1Ym1pdFNpZ25lZEJDU1RyYW5zYWN0aW9uKGJjc1R4bik7XG4gICAgcmV0dXJuIHBlbmRpbmdUcmFuc2FjdGlvbi5oYXNoO1xuICB9XG4gIC8qKlxuICAgKiBCdXJuVG9rZW4gYnkgT3duZXJcbiAgICpcbiAgICogQHBhcmFtIG93bmVyIGNyZWF0b3Igb2YgdGhlIHRva2VuXG4gICAqIEBwYXJhbSBjcmVhdG9yQWRkcmVzcyBhZGRyZXNzIG9mIHRoZSB0b2tlbiBjcmVhdG9yXG4gICAqIEBwYXJhbSBjb2xsZWN0aW9uTmFtZSBOYW1lIG9mIGNvbGxlY3Rpb24gd2hlcmUgdG9rZW4gaXMgc3RvcmVkXG4gICAqIEBwYXJhbSBuYW1lIFRva2VuIG5hbWVcbiAgICogQHBhcmFtIGFtb3VudCBBbW91bnQgb2YgdG9rZW5zIHdoaWNoIHdpbGwgYmUgdHJhbnNmZXJlZFxuICAgKiBAcGFyYW0gcHJvcGVydHlfdmVyc2lvbiB0aGUgdmVyc2lvbiBvZiB0b2tlbiBQcm9wZXJ0eU1hcFxuICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgdHJhbnNhY3Rpb24gc3VibWl0dGVkIHRvIHRoZSBBUElcbiAgICovXG4gIGFzeW5jIGJ1cm5CeU93bmVyKG93bmVyLCBjcmVhdG9yQWRkcmVzcywgY29sbGVjdGlvbiwgbmFtZSwgUHJvcGVydHlWZXJzaW9uLCBhbW91bnQsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMuYXB0b3NDbGllbnQsIHsgc2VuZGVyOiBvd25lci5hZGRyZXNzKCksIC4uLmV4dHJhQXJncyB9KTtcbiAgICBjb25zdCByYXdUeG4gPSBhd2FpdCBidWlsZGVyLmJ1aWxkKFxuICAgICAgXCIweDM6OnRva2VuOjpidXJuXCIsXG4gICAgICBbXSxcbiAgICAgIFtjcmVhdG9yQWRkcmVzcywgY29sbGVjdGlvbiwgbmFtZSwgUHJvcGVydHlWZXJzaW9uLCBhbW91bnRdXG4gICAgKTtcbiAgICBjb25zdCBiY3NUeG4gPSBBcHRvc0NsaWVudC5nZW5lcmF0ZUJDU1RyYW5zYWN0aW9uKG93bmVyLCByYXdUeG4pO1xuICAgIGNvbnN0IHBlbmRpbmdUcmFuc2FjdGlvbiA9IGF3YWl0IHRoaXMuYXB0b3NDbGllbnQuc3VibWl0U2lnbmVkQkNTVHJhbnNhY3Rpb24oYmNzVHhuKTtcbiAgICByZXR1cm4gcGVuZGluZ1RyYW5zYWN0aW9uLmhhc2g7XG4gIH1cbiAgLyoqXG4gICAqIGNyZWF0b3IgbXV0YXRlcyB0aGUgcHJvcGVydGllcyBvZiB0aGUgdG9rZW5zXG4gICAqXG4gICAqIEBwYXJhbSBhY2NvdW50IEFwdG9zQWNjb3VudCB3aG8gbW9kaWZpZXMgdGhlIHRva2VuIHByb3BlcnRpZXNcbiAgICogQHBhcmFtIHRva2VuT3duZXIgdGhlIGFkZHJlc3Mgb2YgYWNjb3VudCBvd25pbmcgdGhlIHRva2VuXG4gICAqIEBwYXJhbSBjcmVhdG9yIHRoZSBjcmVhdG9yIG9mIHRoZSB0b2tlblxuICAgKiBAcGFyYW0gY29sbGVjdGlvbl9uYW1lIHRoZSBuYW1lIG9mIHRoZSB0b2tlbiBjb2xsZWN0aW9uXG4gICAqIEBwYXJhbSB0b2tlbk5hbWUgdGhlIG5hbWUgb2YgY3JlYXRlZCB0b2tlblxuICAgKiBAcGFyYW0gcHJvcGVydHlWZXJzaW9uIHRoZSBwcm9wZXJ0eV92ZXJzaW9uIG9mIHRoZSB0b2tlbiB0byBiZSBtb2RpZmllZFxuICAgKiBAcGFyYW0gYW1vdW50IHRoZSBudW1iZXIgb2YgdG9rZW5zIHRvIGJlIG1vZGlmaWVkXG4gICAqXG4gICAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgYXN5bmMgbXV0YXRlVG9rZW5Qcm9wZXJ0aWVzKGFjY291bnQsIHRva2VuT3duZXIsIGNyZWF0b3IsIGNvbGxlY3Rpb25fbmFtZSwgdG9rZW5OYW1lLCBwcm9wZXJ0eVZlcnNpb24sIGFtb3VudCwga2V5cywgdmFsdWVzLCB0eXBlcywgZXh0cmFBcmdzKSB7XG4gICAgY29uc3QgYnVpbGRlciA9IG5ldyBUcmFuc2FjdGlvbkJ1aWxkZXJSZW1vdGVBQkkodGhpcy5hcHRvc0NsaWVudCwgeyBzZW5kZXI6IGFjY291bnQuYWRkcmVzcygpLCAuLi5leHRyYUFyZ3MgfSk7XG4gICAgY29uc3QgcmF3VHhuID0gYXdhaXQgYnVpbGRlci5idWlsZChcbiAgICAgIFwiMHgzOjp0b2tlbjo6bXV0YXRlX3Rva2VuX3Byb3BlcnRpZXNcIixcbiAgICAgIFtdLFxuICAgICAgW3Rva2VuT3duZXIsIGNyZWF0b3IsIGNvbGxlY3Rpb25fbmFtZSwgdG9rZW5OYW1lLCBwcm9wZXJ0eVZlcnNpb24sIGFtb3VudCwga2V5cywgdmFsdWVzLCB0eXBlc11cbiAgICApO1xuICAgIGNvbnN0IGJjc1R4biA9IEFwdG9zQ2xpZW50LmdlbmVyYXRlQkNTVHJhbnNhY3Rpb24oYWNjb3VudCwgcmF3VHhuKTtcbiAgICBjb25zdCBwZW5kaW5nVHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLmFwdG9zQ2xpZW50LnN1Ym1pdFNpZ25lZEJDU1RyYW5zYWN0aW9uKGJjc1R4bik7XG4gICAgcmV0dXJuIHBlbmRpbmdUcmFuc2FjdGlvbi5oYXNoO1xuICB9XG4gIC8qKlxuICAgKiBRdWVyaWVzIGNvbGxlY3Rpb24gZGF0YVxuICAgKiBAcGFyYW0gY3JlYXRvciBIZXgtZW5jb2RlZCAzMiBieXRlIEFwdG9zIGFjY291bnQgYWRkcmVzcyB3aGljaCBjcmVhdGVkIGEgY29sbGVjdGlvblxuICAgKiBAcGFyYW0gY29sbGVjdGlvbk5hbWUgQ29sbGVjdGlvbiBuYW1lXG4gICAqIEByZXR1cm5zIENvbGxlY3Rpb24gZGF0YSBpbiBiZWxvdyBmb3JtYXRcbiAgICogYGBgXG4gICAqICBDb2xsZWN0aW9uIHtcbiAgICogICAgLy8gRGVzY3JpYmVzIHRoZSBjb2xsZWN0aW9uXG4gICAqICAgIGRlc2NyaXB0aW9uOiBzdHJpbmcsXG4gICAqICAgIC8vIFVuaXF1ZSBuYW1lIHdpdGhpbiB0aGlzIGNyZWF0b3JzIGFjY291bnQgZm9yIHRoaXMgY29sbGVjdGlvblxuICAgKiAgICBuYW1lOiBzdHJpbmcsXG4gICAqICAgIC8vIFVSTCBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbi9tZWRpYVxuICAgKiAgICB1cmk6IHN0cmluZyxcbiAgICogICAgLy8gVG90YWwgbnVtYmVyIG9mIGRpc3RpbmN0IFRva2VucyB0cmFja2VkIGJ5IHRoZSBjb2xsZWN0aW9uXG4gICAqICAgIGNvdW50OiBudW1iZXIsXG4gICAqICAgIC8vIE9wdGlvbmFsIG1heGltdW0gbnVtYmVyIG9mIHRva2VucyBhbGxvd2VkIHdpdGhpbiB0aGlzIGNvbGxlY3Rpb25zXG4gICAqICAgIG1heGltdW06IG51bWJlclxuICAgKiAgfVxuICAgKiBgYGBcbiAgICovXG4gIGFzeW5jIGdldENvbGxlY3Rpb25EYXRhKGNyZWF0b3IsIGNvbGxlY3Rpb25OYW1lKSB7XG4gICAgY29uc3QgcmVzb3VyY2VzID0gYXdhaXQgdGhpcy5hcHRvc0NsaWVudC5nZXRBY2NvdW50UmVzb3VyY2VzKGNyZWF0b3IpO1xuICAgIGNvbnN0IGFjY291bnRSZXNvdXJjZSA9IHJlc291cmNlcy5maW5kKFxuICAgICAgKHIpID0+IHIudHlwZSA9PT0gXCIweDM6OnRva2VuOjpDb2xsZWN0aW9uc1wiXG4gICAgKTtcbiAgICBjb25zdCB7IGhhbmRsZSB9ID0gYWNjb3VudFJlc291cmNlLmRhdGEuY29sbGVjdGlvbl9kYXRhO1xuICAgIGNvbnN0IGdldENvbGxlY3Rpb25UYWJsZUl0ZW1SZXF1ZXN0ID0ge1xuICAgICAga2V5X3R5cGU6IFwiMHgxOjpzdHJpbmc6OlN0cmluZ1wiLFxuICAgICAgdmFsdWVfdHlwZTogXCIweDM6OnRva2VuOjpDb2xsZWN0aW9uRGF0YVwiLFxuICAgICAga2V5OiBjb2xsZWN0aW9uTmFtZVxuICAgIH07XG4gICAgY29uc3QgY29sbGVjdGlvblRhYmxlID0gYXdhaXQgdGhpcy5hcHRvc0NsaWVudC5nZXRUYWJsZUl0ZW0oaGFuZGxlLCBnZXRDb2xsZWN0aW9uVGFibGVJdGVtUmVxdWVzdCk7XG4gICAgcmV0dXJuIGNvbGxlY3Rpb25UYWJsZTtcbiAgfVxuICAvKipcbiAgICogUXVlcmllcyB0b2tlbiBkYXRhIGZyb20gY29sbGVjdGlvblxuICAgKlxuICAgKiBAcGFyYW0gY3JlYXRvciBIZXgtZW5jb2RlZCAzMiBieXRlIEFwdG9zIGFjY291bnQgYWRkcmVzcyB3aGljaCBjcmVhdGVkIGEgdG9rZW5cbiAgICogQHBhcmFtIGNvbGxlY3Rpb25OYW1lIE5hbWUgb2YgY29sbGVjdGlvbiwgd2hpY2ggaG9sZHMgYSB0b2tlblxuICAgKiBAcGFyYW0gdG9rZW5OYW1lIFRva2VuIG5hbWVcbiAgICogQHJldHVybnMgVG9rZW4gZGF0YSBpbiBiZWxvdyBmb3JtYXRcbiAgICogYGBgXG4gICAqIFRva2VuRGF0YSB7XG4gICAqICAgICAvLyBVbmlxdWUgbmFtZSB3aXRoaW4gdGhpcyBjcmVhdG9ycyBhY2NvdW50IGZvciB0aGlzIFRva2VuJ3MgY29sbGVjdGlvblxuICAgKiAgICAgY29sbGVjdGlvbjogc3RyaW5nO1xuICAgKiAgICAgLy8gRGVzY3JpYmVzIHRoaXMgVG9rZW5cbiAgICogICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAqICAgICAvLyBUaGUgbmFtZSBvZiB0aGlzIFRva2VuXG4gICAqICAgICBuYW1lOiBzdHJpbmc7XG4gICAqICAgICAvLyBPcHRpb25hbCBtYXhpbXVtIG51bWJlciBvZiB0aGlzIHR5cGUgb2YgVG9rZW4uXG4gICAqICAgICBtYXhpbXVtOiBudW1iZXI7XG4gICAqICAgICAvLyBUb3RhbCBudW1iZXIgb2YgdGhpcyB0eXBlIG9mIFRva2VuXG4gICAqICAgICBzdXBwbHk6IG51bWJlcjtcbiAgICogICAgIC8vLyBVUkwgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gLyBtZWRpYVxuICAgKiAgICAgdXJpOiBzdHJpbmc7XG4gICAqICAgfVxuICAgKiBgYGBcbiAgICovXG4gIC8vIDohOj5nZXRUb2tlbkRhdGFcbiAgYXN5bmMgZ2V0VG9rZW5EYXRhKGNyZWF0b3IsIGNvbGxlY3Rpb25OYW1lLCB0b2tlbk5hbWUpIHtcbiAgICBjb25zdCBjcmVhdG9ySGV4ID0gY3JlYXRvciBpbnN0YW5jZW9mIEhleFN0cmluZyA/IGNyZWF0b3IuaGV4KCkgOiBjcmVhdG9yO1xuICAgIGNvbnN0IGNvbGxlY3Rpb24gPSBhd2FpdCB0aGlzLmFwdG9zQ2xpZW50LmdldEFjY291bnRSZXNvdXJjZShcbiAgICAgIGNyZWF0b3JIZXgsXG4gICAgICBcIjB4Mzo6dG9rZW46OkNvbGxlY3Rpb25zXCJcbiAgICApO1xuICAgIGNvbnN0IHsgaGFuZGxlIH0gPSBjb2xsZWN0aW9uLmRhdGEudG9rZW5fZGF0YTtcbiAgICBjb25zdCB0b2tlbkRhdGFJZCA9IHtcbiAgICAgIGNyZWF0b3I6IGNyZWF0b3JIZXgsXG4gICAgICBjb2xsZWN0aW9uOiBjb2xsZWN0aW9uTmFtZSxcbiAgICAgIG5hbWU6IHRva2VuTmFtZVxuICAgIH07XG4gICAgY29uc3QgZ2V0VG9rZW5UYWJsZUl0ZW1SZXF1ZXN0ID0ge1xuICAgICAga2V5X3R5cGU6IFwiMHgzOjp0b2tlbjo6VG9rZW5EYXRhSWRcIixcbiAgICAgIHZhbHVlX3R5cGU6IFwiMHgzOjp0b2tlbjo6VG9rZW5EYXRhXCIsXG4gICAgICBrZXk6IHRva2VuRGF0YUlkXG4gICAgfTtcbiAgICBjb25zdCByYXdUb2tlbkRhdGEgPSBhd2FpdCB0aGlzLmFwdG9zQ2xpZW50LmdldFRhYmxlSXRlbShoYW5kbGUsIGdldFRva2VuVGFibGVJdGVtUmVxdWVzdCk7XG4gICAgcmV0dXJuIG5ldyBUb2tlbkRhdGEoXG4gICAgICByYXdUb2tlbkRhdGEuY29sbGVjdGlvbixcbiAgICAgIHJhd1Rva2VuRGF0YS5kZXNjcmlwdGlvbixcbiAgICAgIHJhd1Rva2VuRGF0YS5uYW1lLFxuICAgICAgcmF3VG9rZW5EYXRhLm1heGltdW0sXG4gICAgICByYXdUb2tlbkRhdGEuc3VwcGx5LFxuICAgICAgcmF3VG9rZW5EYXRhLnVyaSxcbiAgICAgIHJhd1Rva2VuRGF0YS5kZWZhdWx0X3Byb3BlcnRpZXMsXG4gICAgICByYXdUb2tlbkRhdGEubXV0YWJpbGl0eV9jb25maWdcbiAgICApO1xuICB9XG4gIC8vIDw6ITpnZXRUb2tlbkRhdGFcbiAgLyoqXG4gICAqIFF1ZXJpZXMgdG9rZW4gYmFsYW5jZSBmb3IgdGhlIHRva2VuIGNyZWF0b3JcbiAgICovXG4gIGFzeW5jIGdldFRva2VuKGNyZWF0b3IsIGNvbGxlY3Rpb25OYW1lLCB0b2tlbk5hbWUsIHByb3BlcnR5X3ZlcnNpb24gPSBcIjBcIikge1xuICAgIGNvbnN0IHRva2VuRGF0YUlkID0ge1xuICAgICAgY3JlYXRvcjogY3JlYXRvciBpbnN0YW5jZW9mIEhleFN0cmluZyA/IGNyZWF0b3IuaGV4KCkgOiBjcmVhdG9yLFxuICAgICAgY29sbGVjdGlvbjogY29sbGVjdGlvbk5hbWUsXG4gICAgICBuYW1lOiB0b2tlbk5hbWVcbiAgICB9O1xuICAgIHJldHVybiB0aGlzLmdldFRva2VuRm9yQWNjb3VudChjcmVhdG9yLCB7XG4gICAgICB0b2tlbl9kYXRhX2lkOiB0b2tlbkRhdGFJZCxcbiAgICAgIHByb3BlcnR5X3ZlcnNpb25cbiAgICB9KTtcbiAgfVxuICAvKipcbiAgICogUXVlcmllcyB0b2tlbiBiYWxhbmNlIGZvciBhIHRva2VuIGFjY291bnRcbiAgICogQHBhcmFtIGFjY291bnQgSGV4LWVuY29kZWQgMzIgYnl0ZSBBcHRvcyBhY2NvdW50IGFkZHJlc3Mgd2hpY2ggY3JlYXRlZCBhIHRva2VuXG4gICAqIEBwYXJhbSB0b2tlbklkIHRva2VuIGlkXG4gICAqXG4gICAqIFRPRE86IFVwZGF0ZSB0aGlzOlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBcbiAgICoge1xuICAgKiAgIGNyZWF0b3I6ICcweDEnLFxuICAgKiAgIGNvbGxlY3Rpb246ICdTb21lIGNvbGxlY3Rpb24nLFxuICAgKiAgIG5hbWU6ICdBd2Vzb21lIHRva2VuJ1xuICAgKiB9XG4gICAqIGBgYFxuICAgKiBAcmV0dXJucyBUb2tlbiBvYmplY3QgaW4gYmVsb3cgZm9ybWF0XG4gICAqIGBgYFxuICAgKiBUb2tlbiB7XG4gICAqICAgaWQ6IFRva2VuSWQ7XG4gICAqICAgdmFsdWU6IG51bWJlcjtcbiAgICogfVxuICAgKiBgYGBcbiAgICovXG4gIGFzeW5jIGdldFRva2VuRm9yQWNjb3VudChhY2NvdW50LCB0b2tlbklkKSB7XG4gICAgY29uc3QgdG9rZW5TdG9yZSA9IGF3YWl0IHRoaXMuYXB0b3NDbGllbnQuZ2V0QWNjb3VudFJlc291cmNlKFxuICAgICAgYWNjb3VudCBpbnN0YW5jZW9mIEhleFN0cmluZyA/IGFjY291bnQuaGV4KCkgOiBhY2NvdW50LFxuICAgICAgXCIweDM6OnRva2VuOjpUb2tlblN0b3JlXCJcbiAgICApO1xuICAgIGNvbnN0IHsgaGFuZGxlIH0gPSB0b2tlblN0b3JlLmRhdGEudG9rZW5zO1xuICAgIGNvbnN0IGdldFRva2VuVGFibGVJdGVtUmVxdWVzdCA9IHtcbiAgICAgIGtleV90eXBlOiBcIjB4Mzo6dG9rZW46OlRva2VuSWRcIixcbiAgICAgIHZhbHVlX3R5cGU6IFwiMHgzOjp0b2tlbjo6VG9rZW5cIixcbiAgICAgIGtleTogdG9rZW5JZFxuICAgIH07XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJhd1Rva2VuID0gYXdhaXQgdGhpcy5hcHRvc0NsaWVudC5nZXRUYWJsZUl0ZW0oaGFuZGxlLCBnZXRUb2tlblRhYmxlSXRlbVJlcXVlc3QpO1xuICAgICAgcmV0dXJuIG5ldyBUb2tlbihyYXdUb2tlbi5pZCwgcmF3VG9rZW4uYW1vdW50LCByYXdUb2tlbi50b2tlbl9wcm9wZXJ0aWVzKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgaWYgKChlcnJvciA9PSBudWxsID8gdm9pZCAwIDogZXJyb3Iuc3RhdHVzKSA9PT0gNDA0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaWQ6IHRva2VuSWQsXG4gICAgICAgICAgYW1vdW50OiBcIjBcIixcbiAgICAgICAgICB0b2tlbl9wcm9wZXJ0aWVzOiBuZXcgUHJvcGVydHlNYXAoKVxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIGVycm9yO1xuICAgIH1cbiAgfVxufTtcblxuLy8gc3JjL3BsdWdpbnMvZnVuZ2libGVfYXNzZXRfY2xpZW50LnRzXG52YXIgRnVuZ2libGVBc3NldENsaWVudCA9IGNsYXNzIHtcbiAgLyoqXG4gICAqIENyZWF0ZXMgbmV3IEZ1bmdpYmxlQXNzZXRDbGllbnQgaW5zdGFuY2VcbiAgICpcbiAgICogQHBhcmFtIHByb3ZpZGVyIFByb3ZpZGVyIGluc3RhbmNlXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcm92aWRlcikge1xuICAgIHRoaXMuYXNzZXRUeXBlID0gXCIweDE6OmZ1bmdpYmxlX2Fzc2V0OjpNZXRhZGF0YVwiO1xuICAgIHRoaXMucHJvdmlkZXIgPSBwcm92aWRlcjtcbiAgfVxuICAvKipcbiAgICogIFRyYW5zZmVyIGBhbW91bnRgIG9mIGZ1bmdpYmxlIGFzc2V0IGZyb20gc2VuZGVyJ3MgcHJpbWFyeSBzdG9yZSB0byByZWNpcGllbnQncyBwcmltYXJ5IHN0b3JlLlxuICAgKlxuICAgKiBVc2UgdGhpcyBtZXRob2QgdG8gdHJhbnNmZXIgYW55IGZ1bmdpYmxlIGFzc2V0IGluY2x1ZGluZyBmdW5naWJsZSB0b2tlbi5cbiAgICpcbiAgICogQHBhcmFtIHNlbmRlciBUaGUgc2VuZGVyIGFjY291bnRcbiAgICogQHBhcmFtIGZ1bmdpYmxlQXNzZXRNZXRhZGF0YUFkZHJlc3MgVGhlIGZ1bmdpYmxlIGFzc2V0IGFkZHJlc3MuXG4gICAqIEZvciBleGFtcGxlIGlmIHlvdeKAmXJlIHRyYW5zZmVycmluZyBVU0RUIHRoaXMgd291bGQgYmUgdGhlIFVTRFQgYWRkcmVzc1xuICAgKiBAcGFyYW0gcmVjaXBpZW50IFJlY2lwaWVudCBhZGRyZXNzXG4gICAqIEBwYXJhbSBhbW91bnQgTnVtYmVyIG9mIGFzc2V0cyB0byB0cmFuc2ZlclxuICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgdHJhbnNhY3Rpb24gc3VibWl0dGVkIHRvIHRoZSBBUElcbiAgICovXG4gIGFzeW5jIHRyYW5zZmVyKHNlbmRlciwgZnVuZ2libGVBc3NldE1ldGFkYXRhQWRkcmVzcywgcmVjaXBpZW50LCBhbW91bnQsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IHJhd1RyYW5zYWN0aW9uID0gYXdhaXQgdGhpcy5nZW5lcmF0ZVRyYW5zZmVyKFxuICAgICAgc2VuZGVyLFxuICAgICAgZnVuZ2libGVBc3NldE1ldGFkYXRhQWRkcmVzcyxcbiAgICAgIHJlY2lwaWVudCxcbiAgICAgIGFtb3VudCxcbiAgICAgIGV4dHJhQXJnc1xuICAgICk7XG4gICAgY29uc3QgdHhuSGFzaCA9IGF3YWl0IHRoaXMucHJvdmlkZXIuc2lnbkFuZFN1Ym1pdFRyYW5zYWN0aW9uKHNlbmRlciwgcmF3VHJhbnNhY3Rpb24pO1xuICAgIHJldHVybiB0eG5IYXNoO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgdGhlIGJhbGFuY2Ugb2YgYSBmdW5naWJsZSBhc3NldCBmcm9tIHRoZSBhY2NvdW50J3MgcHJpbWFyeSBmdW5naWJsZSBzdG9yZS5cbiAgICpcbiAgICogQHBhcmFtIGFjY291bnQgQWNjb3VudCB0aGF0IHlvdSB3YW50IHRvIGdldCB0aGUgYmFsYW5jZSBvZi5cbiAgICogQHBhcmFtIGZ1bmdpYmxlQXNzZXRNZXRhZGF0YUFkZHJlc3MgVGhlIGZ1bmdpYmxlIGFzc2V0IGFkZHJlc3MgeW91IHdhbnQgdG8gY2hlY2sgdGhlIGJhbGFuY2Ugb2ZcbiAgICogQHJldHVybnMgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBiYWxhbmNlXG4gICAqL1xuICBhc3luYyBnZXRQcmltYXJ5QmFsYW5jZShhY2NvdW50LCBmdW5naWJsZUFzc2V0TWV0YWRhdGFBZGRyZXNzKSB7XG4gICAgY29uc3QgcGF5bG9hZCA9IHtcbiAgICAgIGZ1bmN0aW9uOiBcIjB4MTo6cHJpbWFyeV9mdW5naWJsZV9zdG9yZTo6YmFsYW5jZVwiLFxuICAgICAgdHlwZV9hcmd1bWVudHM6IFt0aGlzLmFzc2V0VHlwZV0sXG4gICAgICBhcmd1bWVudHM6IFtIZXhTdHJpbmcuZW5zdXJlKGFjY291bnQpLmhleCgpLCBIZXhTdHJpbmcuZW5zdXJlKGZ1bmdpYmxlQXNzZXRNZXRhZGF0YUFkZHJlc3MpLmhleCgpXVxuICAgIH07XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnByb3ZpZGVyLnZpZXcocGF5bG9hZCk7XG4gICAgcmV0dXJuIEJpZ0ludChyZXNwb25zZVswXSk7XG4gIH1cbiAgLyoqXG4gICAqXG4gICAqIEdlbmVyYXRlIGEgdHJhbnNmZXIgdHJhbnNhY3Rpb24gdGhhdCBjYW4gYmUgdXNlZCB0byBzaWduIGFuZCBzdWJtaXQgdG8gdHJhbnNmZXIgYW4gYXNzZXQgYW1vdW50XG4gICAqIGZyb20gdGhlIHNlbmRlciBwcmltYXJ5IGZ1bmdpYmxlIHN0b3JlIHRvIHRoZSByZWNpcGllbnQgcHJpbWFyeSBmdW5naWJsZSBzdG9yZS5cbiAgICpcbiAgICogVGhpcyBtZXRob2QgY2FuIGJlIHVzZWQgaWYgeW91IHdhbnQvbmVlZCB0byBnZXQgdGhlIHJhdyB0cmFuc2FjdGlvbiBzbyB5b3UgY2FuXG4gICAqIGZpcnN0IHNpbXVsYXRlIHRoZSB0cmFuc2FjdGlvbiBhbmQgdGhlbiBzaWduIGFuZCBzdWJtaXQgaXQuXG4gICAqXG4gICAqIEBwYXJhbSBzZW5kZXIgVGhlIHNlbmRlciBhY2NvdW50XG4gICAqIEBwYXJhbSBmdW5naWJsZUFzc2V0TWV0YWRhdGFBZGRyZXNzIFRoZSBmdW5naWJsZSBhc3NldCBhZGRyZXNzLlxuICAgKiBGb3IgZXhhbXBsZSBpZiB5b3XigJlyZSB0cmFuc2ZlcnJpbmcgVVNEVCB0aGlzIHdvdWxkIGJlIHRoZSBVU0RUIGFkZHJlc3NcbiAgICogQHBhcmFtIHJlY2lwaWVudCBSZWNpcGllbnQgYWRkcmVzc1xuICAgKiBAcGFyYW0gYW1vdW50IE51bWJlciBvZiBhc3NldHMgdG8gdHJhbnNmZXJcbiAgICogQHJldHVybnMgUmF3IFRyYW5zYWN0aW9uXG4gICAqL1xuICBhc3luYyBnZW5lcmF0ZVRyYW5zZmVyKHNlbmRlciwgZnVuZ2libGVBc3NldE1ldGFkYXRhQWRkcmVzcywgcmVjaXBpZW50LCBhbW91bnQsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMucHJvdmlkZXIsIHtcbiAgICAgIHNlbmRlcjogc2VuZGVyLmFkZHJlc3MoKSxcbiAgICAgIC4uLmV4dHJhQXJnc1xuICAgIH0pO1xuICAgIGNvbnN0IHJhd1R4biA9IGF3YWl0IGJ1aWxkZXIuYnVpbGQoXG4gICAgICBcIjB4MTo6cHJpbWFyeV9mdW5naWJsZV9zdG9yZTo6dHJhbnNmZXJcIixcbiAgICAgIFt0aGlzLmFzc2V0VHlwZV0sXG4gICAgICBbSGV4U3RyaW5nLmVuc3VyZShmdW5naWJsZUFzc2V0TWV0YWRhdGFBZGRyZXNzKS5oZXgoKSwgSGV4U3RyaW5nLmVuc3VyZShyZWNpcGllbnQpLmhleCgpLCBhbW91bnRdXG4gICAgKTtcbiAgICByZXR1cm4gcmF3VHhuO1xuICB9XG59O1xuXG4vLyBzcmMvcGx1Z2lucy9hcHRvc190b2tlbi50c1xudmFyIFByb3BlcnR5VHlwZU1hcCA9IHtcbiAgQk9PTEVBTjogXCJib29sXCIsXG4gIFU4OiBcInU4XCIsXG4gIFUxNjogXCJ1MTZcIixcbiAgVTMyOiBcInUzMlwiLFxuICBVNjQ6IFwidTY0XCIsXG4gIFUxMjg6IFwidTEyOFwiLFxuICBVMjU2OiBcInUyNTZcIixcbiAgQUREUkVTUzogXCJhZGRyZXNzXCIsXG4gIFZFQ1RPUjogXCJ2ZWN0b3I8dTg+XCIsXG4gIFNUUklORzogXCJzdHJpbmdcIlxufTtcbnZhciBBcHRvc1Rva2VuID0gY2xhc3Mge1xuICAvKipcbiAgICogQ3JlYXRlcyBuZXcgQXB0b3NUb2tlbiBpbnN0YW5jZVxuICAgKlxuICAgKiBAcGFyYW0gcHJvdmlkZXIgUHJvdmlkZXIgaW5zdGFuY2VcbiAgICovXG4gIGNvbnN0cnVjdG9yKHByb3ZpZGVyKSB7XG4gICAgdGhpcy50b2tlblR5cGUgPSBcIjB4NDo6dG9rZW46OlRva2VuXCI7XG4gICAgdGhpcy5wcm92aWRlciA9IHByb3ZpZGVyO1xuICB9XG4gIGFzeW5jIHN1Ym1pdFRyYW5zYWN0aW9uKGFjY291bnQsIGZ1bmNOYW1lLCB0eXBlQXJncywgYXJncywgZXh0cmFBcmdzKSB7XG4gICAgY29uc3QgYnVpbGRlciA9IG5ldyBUcmFuc2FjdGlvbkJ1aWxkZXJSZW1vdGVBQkkodGhpcy5wcm92aWRlciwge1xuICAgICAgc2VuZGVyOiBhY2NvdW50LmFkZHJlc3MoKSxcbiAgICAgIC4uLmV4dHJhQXJnc1xuICAgIH0pO1xuICAgIGNvbnN0IHJhd1R4biA9IGF3YWl0IGJ1aWxkZXIuYnVpbGQoYDB4NDo6YXB0b3NfdG9rZW46OiR7ZnVuY05hbWV9YCwgdHlwZUFyZ3MsIGFyZ3MpO1xuICAgIGNvbnN0IGJjc1R4biA9IEFwdG9zQ2xpZW50LmdlbmVyYXRlQkNTVHJhbnNhY3Rpb24oYWNjb3VudCwgcmF3VHhuKTtcbiAgICBjb25zdCBwZW5kaW5nVHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLnByb3ZpZGVyLnN1Ym1pdFNpZ25lZEJDU1RyYW5zYWN0aW9uKGJjc1R4bik7XG4gICAgcmV0dXJuIHBlbmRpbmdUcmFuc2FjdGlvbi5oYXNoO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IGNvbGxlY3Rpb24gd2l0aGluIHRoZSBzcGVjaWZpZWQgYWNjb3VudFxuICAgKlxuICAgKiBAcGFyYW0gY3JlYXRvciBBcHRvc0FjY291bnQgd2hlcmUgY29sbGVjdGlvbiB3aWxsIGJlIGNyZWF0ZWRcbiAgICogQHBhcmFtIGRlc2NyaXB0aW9uIENvbGxlY3Rpb24gZGVzY3JpcHRpb25cbiAgICogQHBhcmFtIG5hbWUgQ29sbGVjdGlvbiBuYW1lXG4gICAqIEBwYXJhbSB1cmkgVVJMIHRvIGFkZGl0aW9uYWwgaW5mbyBhYm91dCBjb2xsZWN0aW9uXG4gICAqIEBwYXJhbSBvcHRpb25zIENyZWF0ZUNvbGxlY3Rpb25PcHRpb25zIHR5cGUuIEJ5IGRlZmF1bHQgYWxsIHZhbHVlcyBzZXQgdG8gYHRydWVgIG9yIGAwYFxuICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgdHJhbnNhY3Rpb24gc3VibWl0dGVkIHRvIHRoZSBBUElcbiAgICovXG4gIC8vIDohOj5jcmVhdGVDb2xsZWN0aW9uXG4gIGFzeW5jIGNyZWF0ZUNvbGxlY3Rpb24oY3JlYXRvciwgZGVzY3JpcHRpb24sIG5hbWUsIHVyaSwgbWF4U3VwcGx5ID0gTUFYX1U2NF9CSUdfSU5ULCBvcHRpb25zLCBleHRyYUFyZ3MpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oLCBfaSwgX2osIF9rO1xuICAgIHJldHVybiB0aGlzLnN1Ym1pdFRyYW5zYWN0aW9uKFxuICAgICAgY3JlYXRvcixcbiAgICAgIFwiY3JlYXRlX2NvbGxlY3Rpb25cIixcbiAgICAgIFtdLFxuICAgICAgW1xuICAgICAgICBkZXNjcmlwdGlvbixcbiAgICAgICAgbWF4U3VwcGx5LFxuICAgICAgICBuYW1lLFxuICAgICAgICB1cmksXG4gICAgICAgIChfYSA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubXV0YWJsZURlc2NyaXB0aW9uKSAhPSBudWxsID8gX2EgOiB0cnVlLFxuICAgICAgICAoX2IgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLm11dGFibGVSb3lhbHR5KSAhPSBudWxsID8gX2IgOiB0cnVlLFxuICAgICAgICAoX2MgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLm11dGFibGVVUkkpICE9IG51bGwgPyBfYyA6IHRydWUsXG4gICAgICAgIChfZCA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubXV0YWJsZVRva2VuRGVzY3JpcHRpb24pICE9IG51bGwgPyBfZCA6IHRydWUsXG4gICAgICAgIChfZSA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubXV0YWJsZVRva2VuTmFtZSkgIT0gbnVsbCA/IF9lIDogdHJ1ZSxcbiAgICAgICAgKF9mID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5tdXRhYmxlVG9rZW5Qcm9wZXJ0aWVzKSAhPSBudWxsID8gX2YgOiB0cnVlLFxuICAgICAgICAoX2cgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLm11dGFibGVUb2tlblVSSSkgIT0gbnVsbCA/IF9nIDogdHJ1ZSxcbiAgICAgICAgKF9oID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy50b2tlbnNCdXJuYWJsZUJ5Q3JlYXRvcikgIT0gbnVsbCA/IF9oIDogdHJ1ZSxcbiAgICAgICAgKF9pID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy50b2tlbnNGcmVlemFibGVCeUNyZWF0b3IpICE9IG51bGwgPyBfaSA6IHRydWUsXG4gICAgICAgIChfaiA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMucm95YWx0eU51bWVyYXRvcikgIT0gbnVsbCA/IF9qIDogMCxcbiAgICAgICAgKF9rID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5yb3lhbHR5RGVub21pbmF0b3IpICE9IG51bGwgPyBfayA6IDFcbiAgICAgIF0sXG4gICAgICBleHRyYUFyZ3NcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBNaW50IGEgbmV3IHRva2VuIHdpdGhpbiB0aGUgc3BlY2lmaWVkIGFjY291bnRcbiAgICpcbiAgICogQHBhcmFtIGFjY291bnQgQXB0b3NBY2NvdW50IHdoZXJlIHRva2VuIHdpbGwgYmUgY3JlYXRlZFxuICAgKiBAcGFyYW0gY29sbGVjdGlvbiBOYW1lIG9mIGNvbGxlY3Rpb24sIHRoYXQgdG9rZW4gYmVsb25ncyB0b1xuICAgKiBAcGFyYW0gZGVzY3JpcHRpb24gVG9rZW4gZGVzY3JpcHRpb25cbiAgICogQHBhcmFtIG5hbWUgVG9rZW4gbmFtZVxuICAgKiBAcGFyYW0gdXJpIFVSTCB0byBhZGRpdGlvbmFsIGluZm8gYWJvdXQgdG9rZW5cbiAgICogQHBhcmFtIHByb3BlcnR5S2V5cyB0aGUgcHJvcGVydHkga2V5cyBmb3Igc3RvcmluZyBvbi1jaGFpbiBwcm9wZXJ0aWVzXG4gICAqIEBwYXJhbSBwcm9wZXJ0eVR5cGVzIHRoZSB0eXBlIG9mIHByb3BlcnR5IHZhbHVlc1xuICAgKiBAcGFyYW0gcHJvcGVydHlWYWx1ZXMgdGhlIHByb3BlcnR5IHZhbHVlcyB0byBiZSBzdG9yZWQgb24tY2hhaW5cbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICAvLyA6ITo+bWludFxuICBhc3luYyBtaW50KGFjY291bnQsIGNvbGxlY3Rpb24sIGRlc2NyaXB0aW9uLCBuYW1lLCB1cmksIHByb3BlcnR5S2V5cyA9IFtdLCBwcm9wZXJ0eVR5cGVzID0gW10sIHByb3BlcnR5VmFsdWVzID0gW10sIGV4dHJhQXJncykge1xuICAgIHJldHVybiB0aGlzLnN1Ym1pdFRyYW5zYWN0aW9uKFxuICAgICAgYWNjb3VudCxcbiAgICAgIFwibWludFwiLFxuICAgICAgW10sXG4gICAgICBbXG4gICAgICAgIGNvbGxlY3Rpb24sXG4gICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICBuYW1lLFxuICAgICAgICB1cmksXG4gICAgICAgIHByb3BlcnR5S2V5cyxcbiAgICAgICAgcHJvcGVydHlUeXBlcyxcbiAgICAgICAgZ2V0UHJvcGVydHlWYWx1ZVJhdyhwcm9wZXJ0eVZhbHVlcywgcHJvcGVydHlUeXBlcylcbiAgICAgIF0sXG4gICAgICBleHRyYUFyZ3NcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBNaW50IGEgc291bCBib3VuZCB0b2tlbiBpbnRvIGEgcmVjaXBpZW50J3MgYWNjb3VudFxuICAgKlxuICAgKiBAcGFyYW0gYWNjb3VudCBBcHRvc0FjY291bnQgdGhhdCBtaW50cyB0aGUgdG9rZW5cbiAgICogQHBhcmFtIGNvbGxlY3Rpb24gTmFtZSBvZiBjb2xsZWN0aW9uLCB0aGF0IHRva2VuIGJlbG9uZ3MgdG9cbiAgICogQHBhcmFtIGRlc2NyaXB0aW9uIFRva2VuIGRlc2NyaXB0aW9uXG4gICAqIEBwYXJhbSBuYW1lIFRva2VuIG5hbWVcbiAgICogQHBhcmFtIHVyaSBVUkwgdG8gYWRkaXRpb25hbCBpbmZvIGFib3V0IHRva2VuXG4gICAqIEBwYXJhbSByZWNpcGllbnQgQXB0b3NBY2NvdW50IHdoZXJlIHRva2VuIHdpbGwgYmUgY3JlYXRlZFxuICAgKiBAcGFyYW0gcHJvcGVydHlLZXlzIHRoZSBwcm9wZXJ0eSBrZXlzIGZvciBzdG9yaW5nIG9uLWNoYWluIHByb3BlcnRpZXNcbiAgICogQHBhcmFtIHByb3BlcnR5VHlwZXMgdGhlIHR5cGUgb2YgcHJvcGVydHkgdmFsdWVzXG4gICAqIEBwYXJhbSBwcm9wZXJ0eVZhbHVlcyB0aGUgcHJvcGVydHkgdmFsdWVzIHRvIGJlIHN0b3JlZCBvbi1jaGFpblxuICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgdHJhbnNhY3Rpb24gc3VibWl0dGVkIHRvIHRoZSBBUElcbiAgICovXG4gIGFzeW5jIG1pbnRTb3VsQm91bmQoYWNjb3VudCwgY29sbGVjdGlvbiwgZGVzY3JpcHRpb24sIG5hbWUsIHVyaSwgcmVjaXBpZW50LCBwcm9wZXJ0eUtleXMgPSBbXSwgcHJvcGVydHlUeXBlcyA9IFtdLCBwcm9wZXJ0eVZhbHVlcyA9IFtdLCBleHRyYUFyZ3MpIHtcbiAgICByZXR1cm4gdGhpcy5zdWJtaXRUcmFuc2FjdGlvbihcbiAgICAgIGFjY291bnQsXG4gICAgICBcIm1pbnRfc291bF9ib3VuZFwiLFxuICAgICAgW10sXG4gICAgICBbXG4gICAgICAgIGNvbGxlY3Rpb24sXG4gICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICBuYW1lLFxuICAgICAgICB1cmksXG4gICAgICAgIHByb3BlcnR5S2V5cyxcbiAgICAgICAgcHJvcGVydHlUeXBlcyxcbiAgICAgICAgZ2V0UHJvcGVydHlWYWx1ZVJhdyhwcm9wZXJ0eVZhbHVlcywgcHJvcGVydHlUeXBlcyksXG4gICAgICAgIHJlY2lwaWVudC5hZGRyZXNzKCkuaGV4KClcbiAgICAgIF0sXG4gICAgICBleHRyYUFyZ3NcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBCdXJuIGEgdG9rZW4gYnkgaXRzIGNyZWF0b3JcbiAgICogQHBhcmFtIGNyZWF0b3IgQ3JlYXRvciBhY2NvdW50XG4gICAqIEBwYXJhbSB0b2tlbiBUb2tlbiBhZGRyZXNzXG4gICAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgYXN5bmMgYnVyblRva2VuKGNyZWF0b3IsIHRva2VuLCB0b2tlblR5cGUsIGV4dHJhQXJncykge1xuICAgIHJldHVybiB0aGlzLnN1Ym1pdFRyYW5zYWN0aW9uKFxuICAgICAgY3JlYXRvcixcbiAgICAgIFwiYnVyblwiLFxuICAgICAgW3Rva2VuVHlwZSB8fCB0aGlzLnRva2VuVHlwZV0sXG4gICAgICBbSGV4U3RyaW5nLmVuc3VyZSh0b2tlbikuaGV4KCldLFxuICAgICAgZXh0cmFBcmdzXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogRnJlZXplIHRva2VuIHRyYW5zZmVyIGFiaWxpdHlcbiAgICogQHBhcmFtIGNyZWF0b3IgQ3JlYXRvciBhY2NvdW50XG4gICAqIEBwYXJhbSB0b2tlbiBUb2tlbiBhZGRyZXNzXG4gICAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgYXN5bmMgZnJlZXplVG9rZW5UcmFuc2FmZXIoY3JlYXRvciwgdG9rZW4sIHRva2VuVHlwZSwgZXh0cmFBcmdzKSB7XG4gICAgcmV0dXJuIHRoaXMuc3VibWl0VHJhbnNhY3Rpb24oXG4gICAgICBjcmVhdG9yLFxuICAgICAgXCJmcmVlemVfdHJhbnNmZXJcIixcbiAgICAgIFt0b2tlblR5cGUgfHwgdGhpcy50b2tlblR5cGVdLFxuICAgICAgW0hleFN0cmluZy5lbnN1cmUodG9rZW4pLmhleCgpXSxcbiAgICAgIGV4dHJhQXJnc1xuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIFVuZnJlZXplIHRva2VuIHRyYW5zZmVyIGFiaWxpdHlcbiAgICogQHBhcmFtIGNyZWF0b3IgQ3JlYXRvciBhY2NvdW50XG4gICAqIEBwYXJhbSB0b2tlbiBUb2tlbiBhZGRyZXNzXG4gICAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgYXN5bmMgdW5mcmVlemVUb2tlblRyYW5zYWZlcihjcmVhdG9yLCB0b2tlbiwgdG9rZW5UeXBlLCBleHRyYUFyZ3MpIHtcbiAgICByZXR1cm4gdGhpcy5zdWJtaXRUcmFuc2FjdGlvbihcbiAgICAgIGNyZWF0b3IsXG4gICAgICBcInVuZnJlZXplX3RyYW5zZmVyXCIsXG4gICAgICBbdG9rZW5UeXBlIHx8IHRoaXMudG9rZW5UeXBlXSxcbiAgICAgIFtIZXhTdHJpbmcuZW5zdXJlKHRva2VuKS5oZXgoKV0sXG4gICAgICBleHRyYUFyZ3NcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBTZXQgdG9rZW4gZGVzY3JpcHRpb25cbiAgICogQHBhcmFtIGNyZWF0b3IgQ3JlYXRvciBhY2NvdW50XG4gICAqIEBwYXJhbSB0b2tlbiBUb2tlbiBhZGRyZXNzXG4gICAqIEBwYXJhbSBkZXNjcmlwdGlvbiBUb2tlbiBkZXNjcmlwdGlvblxuICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgdHJhbnNhY3Rpb24gc3VibWl0dGVkIHRvIHRoZSBBUElcbiAgICovXG4gIGFzeW5jIHNldFRva2VuRGVzY3JpcHRpb24oY3JlYXRvciwgdG9rZW4sIGRlc2NyaXB0aW9uLCB0b2tlblR5cGUsIGV4dHJhQXJncykge1xuICAgIHJldHVybiB0aGlzLnN1Ym1pdFRyYW5zYWN0aW9uKFxuICAgICAgY3JlYXRvcixcbiAgICAgIFwic2V0X2Rlc2NyaXB0aW9uXCIsXG4gICAgICBbdG9rZW5UeXBlIHx8IHRoaXMudG9rZW5UeXBlXSxcbiAgICAgIFtIZXhTdHJpbmcuZW5zdXJlKHRva2VuKS5oZXgoKSwgZGVzY3JpcHRpb25dLFxuICAgICAgZXh0cmFBcmdzXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogU2V0IHRva2VuIG5hbWVcbiAgICogQHBhcmFtIGNyZWF0b3IgQ3JlYXRvciBhY2NvdW50XG4gICAqIEBwYXJhbSB0b2tlbiBUb2tlbiBhZGRyZXNzXG4gICAqIEBwYXJhbSBuYW1lIFRva2VuIG5hbWVcbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICBhc3luYyBzZXRUb2tlbk5hbWUoY3JlYXRvciwgdG9rZW4sIG5hbWUsIHRva2VuVHlwZSwgZXh0cmFBcmdzKSB7XG4gICAgcmV0dXJuIHRoaXMuc3VibWl0VHJhbnNhY3Rpb24oXG4gICAgICBjcmVhdG9yLFxuICAgICAgXCJzZXRfbmFtZVwiLFxuICAgICAgW3Rva2VuVHlwZSB8fCB0aGlzLnRva2VuVHlwZV0sXG4gICAgICBbSGV4U3RyaW5nLmVuc3VyZSh0b2tlbikuaGV4KCksIG5hbWVdLFxuICAgICAgZXh0cmFBcmdzXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogU2V0IHRva2VuIFVSSVxuICAgKiBAcGFyYW0gY3JlYXRvciBDcmVhdG9yIGFjY291bnRcbiAgICogQHBhcmFtIHRva2VuIFRva2VuIGFkZHJlc3NcbiAgICogQHBhcmFtIHVyaSBUb2tlbiB1cmlcbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICBhc3luYyBzZXRUb2tlblVSSShjcmVhdG9yLCB0b2tlbiwgdXJpLCB0b2tlblR5cGUsIGV4dHJhQXJncykge1xuICAgIHJldHVybiB0aGlzLnN1Ym1pdFRyYW5zYWN0aW9uKFxuICAgICAgY3JlYXRvcixcbiAgICAgIFwic2V0X3VyaVwiLFxuICAgICAgW3Rva2VuVHlwZSB8fCB0aGlzLnRva2VuVHlwZV0sXG4gICAgICBbSGV4U3RyaW5nLmVuc3VyZSh0b2tlbikuaGV4KCksIHVyaV0sXG4gICAgICBleHRyYUFyZ3NcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBBZGQgdG9rZW4gcHJvcGVydHlcbiAgICogQHBhcmFtIGNyZWF0b3IgQ3JlYXRvciBhY2NvdW50XG4gICAqIEBwYXJhbSB0b2tlbiBUb2tlbiBhZGRyZXNzXG4gICAqIEBwYXJhbSBrZXkgdGhlIHByb3BlcnR5IGtleSBmb3Igc3RvcmluZyBvbi1jaGFpbiBwcm9wZXJ0eVxuICAgKiBAcGFyYW0gdHlwZSB0aGUgdHlwZSBvZiBwcm9wZXJ0eSB2YWx1ZVxuICAgKiBAcGFyYW0gdmFsdWUgdGhlIHByb3BlcnR5IHZhbHVlIHRvIGJlIHN0b3JlZCBvbi1jaGFpblxuICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgdHJhbnNhY3Rpb24gc3VibWl0dGVkIHRvIHRoZSBBUElcbiAgICovXG4gIGFzeW5jIGFkZFRva2VuUHJvcGVydHkoY3JlYXRvciwgdG9rZW4sIHByb3BlcnR5S2V5LCBwcm9wZXJ0eVR5cGUsIHByb3BlcnR5VmFsdWUsIHRva2VuVHlwZSwgZXh0cmFBcmdzKSB7XG4gICAgcmV0dXJuIHRoaXMuc3VibWl0VHJhbnNhY3Rpb24oXG4gICAgICBjcmVhdG9yLFxuICAgICAgXCJhZGRfcHJvcGVydHlcIixcbiAgICAgIFt0b2tlblR5cGUgfHwgdGhpcy50b2tlblR5cGVdLFxuICAgICAgW1xuICAgICAgICBIZXhTdHJpbmcuZW5zdXJlKHRva2VuKS5oZXgoKSxcbiAgICAgICAgcHJvcGVydHlLZXksXG4gICAgICAgIFByb3BlcnR5VHlwZU1hcFtwcm9wZXJ0eVR5cGVdLFxuICAgICAgICBnZXRTaW5nbGVQcm9wZXJ0eVZhbHVlUmF3KHByb3BlcnR5VmFsdWUsIFByb3BlcnR5VHlwZU1hcFtwcm9wZXJ0eVR5cGVdKVxuICAgICAgXSxcbiAgICAgIGV4dHJhQXJnc1xuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIFJlbW92ZSB0b2tlbiBwcm9wZXJ0eVxuICAgKiBAcGFyYW0gY3JlYXRvciBDcmVhdG9yIGFjY291bnRcbiAgICogQHBhcmFtIHRva2VuIFRva2VuIGFkZHJlc3NcbiAgICogQHBhcmFtIGtleSB0aGUgcHJvcGVydHkga2V5IHN0b3JlZCBvbi1jaGFpblxuICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgdHJhbnNhY3Rpb24gc3VibWl0dGVkIHRvIHRoZSBBUElcbiAgICovXG4gIGFzeW5jIHJlbW92ZVRva2VuUHJvcGVydHkoY3JlYXRvciwgdG9rZW4sIHByb3BlcnR5S2V5LCB0b2tlblR5cGUsIGV4dHJhQXJncykge1xuICAgIHJldHVybiB0aGlzLnN1Ym1pdFRyYW5zYWN0aW9uKFxuICAgICAgY3JlYXRvcixcbiAgICAgIFwicmVtb3ZlX3Byb3BlcnR5XCIsXG4gICAgICBbdG9rZW5UeXBlIHx8IHRoaXMudG9rZW5UeXBlXSxcbiAgICAgIFtIZXhTdHJpbmcuZW5zdXJlKHRva2VuKS5oZXgoKSwgcHJvcGVydHlLZXldLFxuICAgICAgZXh0cmFBcmdzXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogVXBkYXRlIHRva2VuIHByb3BlcnR5XG4gICAqIEBwYXJhbSBjcmVhdG9yIENyZWF0b3IgYWNjb3VudFxuICAgKiBAcGFyYW0gdG9rZW4gVG9rZW4gYWRkcmVzc1xuICAgKiBAcGFyYW0ga2V5IHRoZSBwcm9wZXJ0eSBrZXkgc3RvcmVkIG9uLWNoYWluXG4gICAqIEBwYXJhbSB0eXBlIHRoZSBwcm9wZXJ0eSB0eXBlZCBzdG9yZWQgb24tY2hhaW5cbiAgICogQHBhcmFtIHZhbHVlIHRoZSBwcm9wZXJ0eSB2YWx1ZSB0byBiZSBzdG9yZWQgb24tY2hhaW5cbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICBhc3luYyB1cGRhdGVUb2tlblByb3BlcnR5KGNyZWF0b3IsIHRva2VuLCBwcm9wZXJ0eUtleSwgcHJvcGVydHlUeXBlLCBwcm9wZXJ0eVZhbHVlLCB0b2tlblR5cGUsIGV4dHJhQXJncykge1xuICAgIHJldHVybiB0aGlzLnN1Ym1pdFRyYW5zYWN0aW9uKFxuICAgICAgY3JlYXRvcixcbiAgICAgIFwidXBkYXRlX3Byb3BlcnR5XCIsXG4gICAgICBbdG9rZW5UeXBlIHx8IHRoaXMudG9rZW5UeXBlXSxcbiAgICAgIFtcbiAgICAgICAgSGV4U3RyaW5nLmVuc3VyZSh0b2tlbikuaGV4KCksXG4gICAgICAgIHByb3BlcnR5S2V5LFxuICAgICAgICBQcm9wZXJ0eVR5cGVNYXBbcHJvcGVydHlUeXBlXSxcbiAgICAgICAgZ2V0U2luZ2xlUHJvcGVydHlWYWx1ZVJhdyhwcm9wZXJ0eVZhbHVlLCBQcm9wZXJ0eVR5cGVNYXBbcHJvcGVydHlUeXBlXSlcbiAgICAgIF0sXG4gICAgICBleHRyYUFyZ3NcbiAgICApO1xuICB9XG4gIGFzeW5jIGFkZFR5cGVkUHJvcGVydHkoY3JlYXRvciwgdG9rZW4sIHByb3BlcnR5S2V5LCBwcm9wZXJ0eVR5cGUsIHByb3BlcnR5VmFsdWUsIHRva2VuVHlwZSwgZXh0cmFBcmdzKSB7XG4gICAgcmV0dXJuIHRoaXMuc3VibWl0VHJhbnNhY3Rpb24oXG4gICAgICBjcmVhdG9yLFxuICAgICAgXCJhZGRfdHlwZWRfcHJvcGVydHlcIixcbiAgICAgIFt0b2tlblR5cGUgfHwgdGhpcy50b2tlblR5cGUsIFByb3BlcnR5VHlwZU1hcFtwcm9wZXJ0eVR5cGVdXSxcbiAgICAgIFtIZXhTdHJpbmcuZW5zdXJlKHRva2VuKS5oZXgoKSwgcHJvcGVydHlLZXksIHByb3BlcnR5VmFsdWVdLFxuICAgICAgZXh0cmFBcmdzXG4gICAgKTtcbiAgfVxuICBhc3luYyB1cGRhdGVUeXBlZFByb3BlcnR5KGNyZWF0b3IsIHRva2VuLCBwcm9wZXJ0eUtleSwgcHJvcGVydHlUeXBlLCBwcm9wZXJ0eVZhbHVlLCB0b2tlblR5cGUsIGV4dHJhQXJncykge1xuICAgIHJldHVybiB0aGlzLnN1Ym1pdFRyYW5zYWN0aW9uKFxuICAgICAgY3JlYXRvcixcbiAgICAgIFwidXBkYXRlX3R5cGVkX3Byb3BlcnR5XCIsXG4gICAgICBbdG9rZW5UeXBlIHx8IHRoaXMudG9rZW5UeXBlLCBQcm9wZXJ0eVR5cGVNYXBbcHJvcGVydHlUeXBlXV0sXG4gICAgICBbSGV4U3RyaW5nLmVuc3VyZSh0b2tlbikuaGV4KCksIHByb3BlcnR5S2V5LCBwcm9wZXJ0eVZhbHVlXSxcbiAgICAgIGV4dHJhQXJnc1xuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIFRyYW5zZmVyIGEgbm9uIGZ1bmdpYmxlIHRva2VuIG93bmVyc2hpcC5cbiAgICogV2UgY2FuIHRyYW5zZmVyIGEgdG9rZW4gb25seSB3aGVuIHRoZSB0b2tlbiBpcyBub3QgZnJvemVuIChpLmUuIG93bmVyIHRyYW5zZmVyIGlzIG5vdCBkaXNhYmxlZCBzdWNoIGFzIGZvciBzb3VsIGJvdW5kIHRva2VucylcbiAgICogQHBhcmFtIG93bmVyIFRoZSBhY2NvdW50IG9mIHRoZSBjdXJyZW50IHRva2VuIG93bmVyXG4gICAqIEBwYXJhbSB0b2tlbiBUb2tlbiBhZGRyZXNzXG4gICAqIEBwYXJhbSByZWNpcGllbnQgUmVjaXBpZW50IGFkZHJlc3NcbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICBhc3luYyB0cmFuc2ZlclRva2VuT3duZXJzaGlwKG93bmVyLCB0b2tlbiwgcmVjaXBpZW50LCB0b2tlblR5cGUsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMucHJvdmlkZXIsIHtcbiAgICAgIHNlbmRlcjogb3duZXIuYWRkcmVzcygpLFxuICAgICAgLi4uZXh0cmFBcmdzXG4gICAgfSk7XG4gICAgY29uc3QgcmF3VHhuID0gYXdhaXQgYnVpbGRlci5idWlsZChcbiAgICAgIFwiMHgxOjpvYmplY3Q6OnRyYW5zZmVyXCIsXG4gICAgICBbdG9rZW5UeXBlIHx8IHRoaXMudG9rZW5UeXBlXSxcbiAgICAgIFtIZXhTdHJpbmcuZW5zdXJlKHRva2VuKS5oZXgoKSwgSGV4U3RyaW5nLmVuc3VyZShyZWNpcGllbnQpLmhleCgpXVxuICAgICk7XG4gICAgY29uc3QgYmNzVHhuID0gQXB0b3NDbGllbnQuZ2VuZXJhdGVCQ1NUcmFuc2FjdGlvbihvd25lciwgcmF3VHhuKTtcbiAgICBjb25zdCBwZW5kaW5nVHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLnByb3ZpZGVyLnN1Ym1pdFNpZ25lZEJDU1RyYW5zYWN0aW9uKGJjc1R4bik7XG4gICAgcmV0dXJuIHBlbmRpbmdUcmFuc2FjdGlvbi5oYXNoO1xuICB9XG4gIC8qKlxuICAgKiBUcmFuc2ZlciBhIHRva2VuLiBUaGlzIGZ1bmN0aW9uIHN1cHBvcnRzIHRyYW5zZmVyIG5vbi1mdW5naWJsZSB0b2tlbiBhbmQgZnVuZ2libGUgdG9rZW4uXG4gICAqXG4gICAqIFRvIHNldCB0aGUgdG9rZW4gdHlwZSwgc2V0IGlzRnVuZ2libGVUb2tlbiBwYXJhbSB0byB0cnVlIG9yIGZhbHNlLlxuICAgKiBJZiBpc0Z1bmdpYmxlVG9rZW4gcGFyYW0gaXMgbm90IHNldCwgdGhlIGZ1bmN0aW9uIHdvdWxkIHF1ZXJ5IEluZGV4ZXJcbiAgICogZm9yIHRoZSB0b2tlbiBkYXRhIGFuZCBjaGVjayB3aGV0aGVyIGl0IGlzIGEgbm9uLWZ1bmdpYmxlIG9yIGEgZnVuZ2libGUgdG9rZW4uXG4gICAqXG4gICAqIE5vdGU6IHRoaXMgZnVuY3Rpb24gc3VwcG9ydHMgb25seSB0b2tlbiB2MiBzdGFuZGFyZCAoaXQgZG9lcyBub3Qgc3VwcG9ydCB0aGUgdG9rZW4gdjEgc3RhbmRhcmQpXG4gICAqXG4gICAqIEBwYXJhbSBkYXRhIE5vbkZ1bmdpYmxlVG9rZW5QYXJhbWV0ZXJzIHwgRnVuZ2libGVUb2tlblBhcmFtZXRlcnMgdHlwZVxuICAgKiBAcGFyYW0gaXNGdW5naWJsZVRva2VuIChvcHRpb25hbCkgVGhlIHRva2VuIHR5cGUsIG5vbi1mdW5naWJsZSBvciBmdW5naWJsZSB0b2tlbi5cbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICBhc3luYyB0cmFuc2ZlcihkYXRhLCBpc0Z1bmdpYmxlVG9rZW4pIHtcbiAgICBsZXQgaXNGdW5naWJsZSA9IGlzRnVuZ2libGVUb2tlbjtcbiAgICBpZiAoaXNGdW5naWJsZSA9PT0gdm9pZCAwIHx8IGlzRnVuZ2libGUgPT09IG51bGwpIHtcbiAgICAgIGNvbnN0IHRva2VuRGF0YSA9IGF3YWl0IHRoaXMucHJvdmlkZXIuZ2V0VG9rZW5EYXRhKEhleFN0cmluZy5lbnN1cmUoZGF0YS50b2tlbkFkZHJlc3MpLmhleCgpKTtcbiAgICAgIGlzRnVuZ2libGUgPSB0b2tlbkRhdGEuY3VycmVudF90b2tlbl9kYXRhc192MlswXS5pc19mdW5naWJsZV92MjtcbiAgICB9XG4gICAgaWYgKGlzRnVuZ2libGUpIHtcbiAgICAgIGNvbnN0IHRva2VuMiA9IGRhdGE7XG4gICAgICBjb25zdCBmdW5naWJsZUFzc2V0ID0gbmV3IEZ1bmdpYmxlQXNzZXRDbGllbnQodGhpcy5wcm92aWRlcik7XG4gICAgICBjb25zdCB0eG5IYXNoMiA9IGF3YWl0IGZ1bmdpYmxlQXNzZXQudHJhbnNmZXIoXG4gICAgICAgIHRva2VuMi5vd25lcixcbiAgICAgICAgdG9rZW4yLnRva2VuQWRkcmVzcyxcbiAgICAgICAgdG9rZW4yLnJlY2lwaWVudCxcbiAgICAgICAgdG9rZW4yLmFtb3VudCxcbiAgICAgICAgdG9rZW4yLmV4dHJhQXJnc1xuICAgICAgKTtcbiAgICAgIHJldHVybiB0eG5IYXNoMjtcbiAgICB9XG4gICAgY29uc3QgdG9rZW4gPSBkYXRhO1xuICAgIGNvbnN0IHR4bkhhc2ggPSBhd2FpdCB0aGlzLnRyYW5zZmVyVG9rZW5Pd25lcnNoaXAoXG4gICAgICB0b2tlbi5vd25lcixcbiAgICAgIHRva2VuLnRva2VuQWRkcmVzcyxcbiAgICAgIHRva2VuLnJlY2lwaWVudCxcbiAgICAgIHRva2VuLnRva2VuVHlwZSxcbiAgICAgIHRva2VuLmV4dHJhQXJnc1xuICAgICk7XG4gICAgcmV0dXJuIHR4bkhhc2g7XG4gIH1cbiAgLyoqXG4gICAqIEJ1cm4gYW4gb2JqZWN0IGJ5IHRoZSBvYmplY3Qgb3duZXJcbiAgICogQHBhcmFtIG93bmVyIFRoZSBvYmplY3Qgb3duZXIgYWNjb3VudFxuICAgKiBAcGFyYW0gb2JqZWN0SWQgVGhlIG9iamVjdCBhZGRyZXNzXG4gICAqIEBvcHRpb25hbCBvYmplY3RUeXBlLiBUaGUgb2JqZWN0IHR5cGUsIGRlZmF1bHQgdG8gXCIweDE6Om9iamVjdDo6T2JqZWN0Q29yZVwiXG4gICAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgYXN5bmMgYnVybk9iamVjdChvd25lciwgb2JqZWN0SWQsIG9iamVjdFR5cGUsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMucHJvdmlkZXIsIHtcbiAgICAgIHNlbmRlcjogb3duZXIuYWRkcmVzcygpLFxuICAgICAgLi4uZXh0cmFBcmdzXG4gICAgfSk7XG4gICAgY29uc3QgcmF3VHhuID0gYXdhaXQgYnVpbGRlci5idWlsZChcbiAgICAgIFwiMHgxOjpvYmplY3Q6OmJ1cm5cIixcbiAgICAgIFtvYmplY3RUeXBlIHx8IFwiMHgxOjpvYmplY3Q6Ok9iamVjdENvcmVcIl0sXG4gICAgICBbSGV4U3RyaW5nLmVuc3VyZShvYmplY3RJZCkuaGV4KCldXG4gICAgKTtcbiAgICBjb25zdCBiY3NUeG4gPSBBcHRvc0NsaWVudC5nZW5lcmF0ZUJDU1RyYW5zYWN0aW9uKG93bmVyLCByYXdUeG4pO1xuICAgIGNvbnN0IHBlbmRpbmdUcmFuc2FjdGlvbiA9IGF3YWl0IHRoaXMucHJvdmlkZXIuc3VibWl0U2lnbmVkQkNTVHJhbnNhY3Rpb24oYmNzVHhuKTtcbiAgICByZXR1cm4gcGVuZGluZ1RyYW5zYWN0aW9uLmhhc2g7XG4gIH1cbn07XG5cbi8vIHNyYy9wbHVnaW5zL2NvaW5fY2xpZW50LnRzXG52YXIgVFJBTlNGRVJfQ09JTlMgPSBcIjB4MTo6YXB0b3NfYWNjb3VudDo6dHJhbnNmZXJfY29pbnNcIjtcbnZhciBDT0lOX1RSQU5TRkVSID0gXCIweDE6OmNvaW46OnRyYW5zZmVyXCI7XG52YXIgQ29pbkNsaWVudCA9IGNsYXNzIHtcbiAgLyoqXG4gICAqIENyZWF0ZXMgbmV3IENvaW5DbGllbnQgaW5zdGFuY2VcbiAgICogQHBhcmFtIGFwdG9zQ2xpZW50IEFwdG9zQ2xpZW50IGluc3RhbmNlXG4gICAqL1xuICBjb25zdHJ1Y3RvcihhcHRvc0NsaWVudDIpIHtcbiAgICB0aGlzLmFwdG9zQ2xpZW50ID0gYXB0b3NDbGllbnQyO1xuICB9XG4gIC8qKlxuICAgKiBHZW5lcmF0ZSwgc2lnbiwgYW5kIHN1Ym1pdCBhIHRyYW5zYWN0aW9uIHRvIHRoZSBBcHRvcyBibG9ja2NoYWluIEFQSSB0b1xuICAgKiB0cmFuc2ZlciBjb2lucyBmcm9tIG9uZSBhY2NvdW50IHRvIGFub3RoZXIuIEJ5IGRlZmF1bHQgaXQgdHJhbnNmZXJzXG4gICAqIDB4MTo6YXB0b3NfY29pbjo6QXB0b3NDb2luLCBidXQgeW91IGNhbiBzcGVjaWZ5IGEgZGlmZmVyZW50IGNvaW4gdHlwZVxuICAgKiB3aXRoIHRoZSBgY29pblR5cGVgIGFyZ3VtZW50LlxuICAgKlxuICAgKiBZb3UgbWF5IHNldCBgY3JlYXRlUmVjZWl2ZXJJZk1pc3NpbmdgIHRvIHRydWUgaWYgeW91IHdhbnQgdG8gY3JlYXRlIHRoZVxuICAgKiByZWNlaXZlciBhY2NvdW50IGlmIGl0IGRvZXMgbm90IGV4aXN0IG9uIGNoYWluIHlldC4gSWYgeW91IGRvIG5vdCBzZXRcbiAgICogdGhpcyB0byB0cnVlLCB0aGUgdHJhbnNhY3Rpb24gd2lsbCBmYWlsIGlmIHRoZSByZWNlaXZlciBhY2NvdW50IGRvZXMgbm90XG4gICAqIGV4aXN0IG9uLWNoYWluLlxuICAgKlxuICAgKiBUaGUgVFMgU0RLIHN1cHBvcnRzIGZ1bmdpYmxlIGFzc2V0cyBvcGVyYXRpb25zLiBJZiB5b3Ugd2FudCB0byB1c2UgQ29pbkNsaWVudFxuICAgKiB3aXRoIHRoaXMgZmVhdHVyZSwgc2V0IHRoZSBgY29pblR5cGVgIHRvIGJlIHRoZSBmdW5naWJsZSBhc3NldCBtZXRhZGF0YSBhZGRyZXNzLlxuICAgKiBUaGlzIG9wdGlvbiB1c2VzIHRoZSBgRnVuZ2libGVBc3NldENsaWVudGAgY2xhc3MgYW5kIHF1ZXJpZXMgdGhlXG4gICAqIGZ1bmdpYmxlIGFzc2V0IHByaW1hcnkgc3RvcmUuXG4gICAqXG4gICAqIEBwYXJhbSBmcm9tIEFjY291bnQgc2VuZGluZyB0aGUgY29pbnNcbiAgICogQHBhcmFtIHRvIEFjY291bnQgdG8gcmVjZWl2ZSB0aGUgY29pbnNcbiAgICogQHBhcmFtIGFtb3VudCBOdW1iZXIgb2YgY29pbnMgdG8gdHJhbnNmZXJcbiAgICogQHBhcmFtIGV4dHJhQXJncyBFeHRyYSBhcmdzIGZvciBidWlsZGluZyB0aGUgdHJhbnNhY3Rpb24gb3IgY29uZmlndXJpbmcgaG93XG4gICAqIHRoZSBjbGllbnQgc2hvdWxkIHN1Ym1pdCBhbmQgd2FpdCBmb3IgdGhlIHRyYW5zYWN0aW9uXG4gICAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgLy8gOiE6PnRyYW5zZmVyXG4gIGFzeW5jIHRyYW5zZmVyKGZyb20sIHRvLCBhbW91bnQsIGV4dHJhQXJncykge1xuICAgIHZhciBfYSwgX2IsIF9jO1xuICAgIGNvbnN0IGlzVHlwZVRhZyA9ICgoX2EgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5jb2luVHlwZSkgIT0gbnVsbCA/IF9hIDogXCJcIikudG9TdHJpbmcoKS5pbmNsdWRlcyhcIjo6XCIpO1xuICAgIGlmICgoZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3MuY29pblR5cGUpICYmICFpc1R5cGVUYWcgJiYgQWNjb3VudEFkZHJlc3MuaXNWYWxpZChleHRyYUFyZ3MuY29pblR5cGUpKSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJ0byB0cmFuc2ZlciBhIGZ1bmdpYmxlIGFzc2V0LCB1c2UgYEZ1bmdpYmxlQXNzZXRDbGllbnQoKWAgY2xhc3MgZm9yIGJldHRlciBzdXBwb3J0XCIpO1xuICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgUHJvdmlkZXIoe1xuICAgICAgICBmdWxsbm9kZVVybDogdGhpcy5hcHRvc0NsaWVudC5ub2RlVXJsLFxuICAgICAgICBpbmRleGVyVXJsOiAoX2IgPSBOZXR3b3JrVG9JbmRleGVyQVBJW05vZGVBUElUb05ldHdvcmtbdGhpcy5hcHRvc0NsaWVudC5ub2RlVXJsXV0pICE9IG51bGwgPyBfYiA6IHRoaXMuYXB0b3NDbGllbnQubm9kZVVybFxuICAgICAgfSk7XG4gICAgICBjb25zdCBmdW5naWJsZUFzc2V0ID0gbmV3IEZ1bmdpYmxlQXNzZXRDbGllbnQocHJvdmlkZXIpO1xuICAgICAgY29uc3QgdHhuSGFzaCA9IGF3YWl0IGZ1bmdpYmxlQXNzZXQudHJhbnNmZXIoXG4gICAgICAgIGZyb20sXG4gICAgICAgIGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLmNvaW5UeXBlLFxuICAgICAgICBnZXRBZGRyZXNzRnJvbUFjY291bnRPckFkZHJlc3ModG8pLFxuICAgICAgICBhbW91bnRcbiAgICAgICk7XG4gICAgICByZXR1cm4gdHhuSGFzaDtcbiAgICB9XG4gICAgY29uc3QgY29pblR5cGVUb1RyYW5zZmVyID0gKF9jID0gZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3MuY29pblR5cGUpICE9IG51bGwgPyBfYyA6IEFQVE9TX0NPSU47XG4gICAgbGV0IGZ1bmM7XG4gICAgaWYgKChleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5jcmVhdGVSZWNlaXZlcklmTWlzc2luZykgPT09IHZvaWQgMCkge1xuICAgICAgZnVuYyA9IFRSQU5TRkVSX0NPSU5TO1xuICAgIH0gZWxzZSB7XG4gICAgICBmdW5jID0gKGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLmNyZWF0ZVJlY2VpdmVySWZNaXNzaW5nKSA/IFRSQU5TRkVSX0NPSU5TIDogQ09JTl9UUkFOU0ZFUjtcbiAgICB9XG4gICAgY29uc3QgdG9BZGRyZXNzID0gZ2V0QWRkcmVzc0Zyb21BY2NvdW50T3JBZGRyZXNzKHRvKTtcbiAgICBjb25zdCBidWlsZGVyID0gbmV3IFRyYW5zYWN0aW9uQnVpbGRlclJlbW90ZUFCSSh0aGlzLmFwdG9zQ2xpZW50LCB7IHNlbmRlcjogZnJvbS5hZGRyZXNzKCksIC4uLmV4dHJhQXJncyB9KTtcbiAgICBjb25zdCByYXdUeG4gPSBhd2FpdCBidWlsZGVyLmJ1aWxkKGZ1bmMsIFtjb2luVHlwZVRvVHJhbnNmZXJdLCBbdG9BZGRyZXNzLCBhbW91bnRdKTtcbiAgICBjb25zdCBiY3NUeG4gPSBBcHRvc0NsaWVudC5nZW5lcmF0ZUJDU1RyYW5zYWN0aW9uKGZyb20sIHJhd1R4bik7XG4gICAgY29uc3QgcGVuZGluZ1RyYW5zYWN0aW9uID0gYXdhaXQgdGhpcy5hcHRvc0NsaWVudC5zdWJtaXRTaWduZWRCQ1NUcmFuc2FjdGlvbihiY3NUeG4pO1xuICAgIHJldHVybiBwZW5kaW5nVHJhbnNhY3Rpb24uaGFzaDtcbiAgfVxuICAvLyA8OiE6dHJhbnNmZXJcbiAgLyoqXG4gICAqIEdldCB0aGUgYmFsYW5jZSBvZiB0aGUgYWNjb3VudC4gQnkgZGVmYXVsdCBpdCBjaGVja3MgdGhlIGJhbGFuY2Ugb2ZcbiAgICogMHgxOjphcHRvc19jb2luOjpBcHRvc0NvaW4sIGJ1dCB5b3UgY2FuIHNwZWNpZnkgYSBkaWZmZXJlbnQgY29pbiB0eXBlLlxuICAgKlxuICAgKiB0byB1c2UgYSBkaWZmZXJlbnQgdHlwZSwgc2V0IHRoZSBgY29pblR5cGVgIHRvIGJlIHRoZSBmdW5naWJsZSBhc3NldCB0eXBlLlxuICAgKlxuICAgKiBUaGUgVFMgU0RLIHN1cHBvcnRzIGZ1bmdpYmxlIGFzc2V0cyBvcGVyYXRpb25zLiBJZiB5b3Ugd2FudCB0byB1c2UgQ29pbkNsaWVudFxuICAgKiB3aXRoIHRoaXMgZmVhdHVyZSwgc2V0IHRoZSBgY29pblR5cGVgIHRvIGJlIHRoZSBmdW5naWJsZSBhc3NldCBtZXRhZGF0YSBhZGRyZXNzLlxuICAgKiBUaGlzIG9wdGlvbiB1c2VzIHRoZSBGdW5naWJsZUFzc2V0Q2xpZW50IGNsYXNzIGFuZCBxdWVyaWVzIHRoZVxuICAgKiBmdW5naWJsZSBhc3NldCBwcmltYXJ5IHN0b3JlLlxuICAgKlxuICAgKiBAcGFyYW0gYWNjb3VudCBBY2NvdW50IHRoYXQgeW91IHdhbnQgdG8gZ2V0IHRoZSBiYWxhbmNlIG9mLlxuICAgKiBAcGFyYW0gZXh0cmFBcmdzIEV4dHJhIGFyZ3MgZm9yIGNoZWNraW5nIHRoZSBiYWxhbmNlLlxuICAgKiBAcmV0dXJucyBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGJhbGFuY2UgYXMgYSBiaWdpbnQuXG4gICAqL1xuICAvLyA6ITo+Y2hlY2tCYWxhbmNlXG4gIGFzeW5jIGNoZWNrQmFsYW5jZShhY2NvdW50LCBleHRyYUFyZ3MpIHtcbiAgICB2YXIgX2EsIF9iLCBfYztcbiAgICBjb25zdCBpc1R5cGVUYWcgPSAoKF9hID0gZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3MuY29pblR5cGUpICE9IG51bGwgPyBfYSA6IFwiXCIpLnRvU3RyaW5nKCkuaW5jbHVkZXMoXCI6OlwiKTtcbiAgICBpZiAoKGV4dHJhQXJncyA9PSBudWxsID8gdm9pZCAwIDogZXh0cmFBcmdzLmNvaW5UeXBlKSAmJiAhaXNUeXBlVGFnICYmIEFjY291bnRBZGRyZXNzLmlzVmFsaWQoZXh0cmFBcmdzLmNvaW5UeXBlKSkge1xuICAgICAgY29uc29sZS53YXJuKFwidG8gY2hlY2sgYmFsYW5jZSBvZiBhIGZ1bmdpYmxlIGFzc2V0LCB1c2UgYEZ1bmdpYmxlQXNzZXRDbGllbnQoKWAgY2xhc3MgZm9yIGJldHRlciBzdXBwb3J0XCIpO1xuICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgUHJvdmlkZXIoe1xuICAgICAgICBmdWxsbm9kZVVybDogdGhpcy5hcHRvc0NsaWVudC5ub2RlVXJsLFxuICAgICAgICBpbmRleGVyVXJsOiAoX2IgPSBOZXR3b3JrVG9JbmRleGVyQVBJW05vZGVBUElUb05ldHdvcmtbdGhpcy5hcHRvc0NsaWVudC5ub2RlVXJsXV0pICE9IG51bGwgPyBfYiA6IHRoaXMuYXB0b3NDbGllbnQubm9kZVVybFxuICAgICAgfSk7XG4gICAgICBjb25zdCBmdW5naWJsZUFzc2V0ID0gbmV3IEZ1bmdpYmxlQXNzZXRDbGllbnQocHJvdmlkZXIpO1xuICAgICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IGZ1bmdpYmxlQXNzZXQuZ2V0UHJpbWFyeUJhbGFuY2UoXG4gICAgICAgIGdldEFkZHJlc3NGcm9tQWNjb3VudE9yQWRkcmVzcyhhY2NvdW50KSxcbiAgICAgICAgZXh0cmFBcmdzID09IG51bGwgPyB2b2lkIDAgOiBleHRyYUFyZ3MuY29pblR5cGVcbiAgICAgICk7XG4gICAgICByZXR1cm4gYmFsYW5jZTtcbiAgICB9XG4gICAgY29uc3QgY29pblR5cGUgPSAoX2MgPSBleHRyYUFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGV4dHJhQXJncy5jb2luVHlwZSkgIT0gbnVsbCA/IF9jIDogQVBUT1NfQ09JTjtcbiAgICBjb25zdCB0eXBlVGFnID0gYDB4MTo6Y29pbjo6Q29pblN0b3JlPCR7Y29pblR5cGV9PmA7XG4gICAgY29uc3QgYWRkcmVzcyA9IGdldEFkZHJlc3NGcm9tQWNjb3VudE9yQWRkcmVzcyhhY2NvdW50KTtcbiAgICBjb25zdCBhY2NvdW50UmVzb3VyY2UgPSBhd2FpdCB0aGlzLmFwdG9zQ2xpZW50LmdldEFjY291bnRSZXNvdXJjZShhZGRyZXNzLCB0eXBlVGFnKTtcbiAgICByZXR1cm4gQmlnSW50KGFjY291bnRSZXNvdXJjZS5kYXRhLmNvaW4udmFsdWUpO1xuICB9XG4gIC8vIDw6ITpjaGVja0JhbGFuY2Vcbn07XG5cbi8vIHNyYy9wbHVnaW5zL2ZhdWNldF9jbGllbnQudHNcbnZhciBGYXVjZXRDbGllbnQgPSBjbGFzcyBleHRlbmRzIEFwdG9zQ2xpZW50IHtcbiAgLyoqXG4gICAqIEVzdGFibGlzaGVzIGEgY29ubmVjdGlvbiB0byBBcHRvcyBub2RlXG4gICAqIEBwYXJhbSBub2RlVXJsIEEgdXJsIG9mIHRoZSBBcHRvcyBOb2RlIEFQSSBlbmRwb2ludFxuICAgKiBAcGFyYW0gZmF1Y2V0VXJsIEEgZmF1Y2V0IHVybFxuICAgKiBAcGFyYW0gY29uZmlnIEFuIG9wdGlvbmFsIGNvbmZpZyBmb3IgaW5uZXIgYXhpb3MgaW5zdGFuY2VcbiAgICogRGV0YWlsZWQgY29uZmlnIGRlc2NyaXB0aW9uOiB7QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2F4aW9zL2F4aW9zI3JlcXVlc3QtY29uZmlnfVxuICAgKi9cbiAgY29uc3RydWN0b3Iobm9kZVVybCwgZmF1Y2V0VXJsLCBjb25maWcpIHtcbiAgICBzdXBlcihub2RlVXJsLCBjb25maWcpO1xuICAgIGlmICghZmF1Y2V0VXJsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYXVjZXQgVVJMIGNhbm5vdCBiZSBlbXB0eS5cIik7XG4gICAgfVxuICAgIHRoaXMuZmF1Y2V0VXJsID0gZmF1Y2V0VXJsO1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuICB9XG4gIC8qKlxuICAgKiBUaGlzIGNyZWF0ZXMgYW4gYWNjb3VudCBpZiBpdCBkb2VzIG5vdCBleGlzdCBhbmQgbWludHMgdGhlIHNwZWNpZmllZCBhbW91bnQgb2ZcbiAgICogY29pbnMgaW50byB0aGF0IGFjY291bnRcbiAgICogQHBhcmFtIGFkZHJlc3MgSGV4LWVuY29kZWQgMTYgYnl0ZXMgQXB0b3MgYWNjb3VudCBhZGRyZXNzIHdpY2ggbWludHMgdG9rZW5zXG4gICAqIEBwYXJhbSBhbW91bnQgQW1vdW50IG9mIHRva2VucyB0byBtaW50XG4gICAqIEBwYXJhbSB0aW1lb3V0U2Vjc1xuICAgKiBAcmV0dXJucyBIYXNoZXMgb2Ygc3VibWl0dGVkIHRyYW5zYWN0aW9uc1xuICAgKi9cbiAgYXN5bmMgZnVuZEFjY291bnQoYWRkcmVzcywgYW1vdW50LCB0aW1lb3V0U2VjcyA9IERFRkFVTFRfVFhOX1RJTUVPVVRfU0VDKSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBwb3N0KHtcbiAgICAgIHVybDogdGhpcy5mYXVjZXRVcmwsXG4gICAgICBlbmRwb2ludDogXCJtaW50XCIsXG4gICAgICBib2R5OiBudWxsLFxuICAgICAgcGFyYW1zOiB7XG4gICAgICAgIGFkZHJlc3M6IEhleFN0cmluZy5lbnN1cmUoYWRkcmVzcykubm9QcmVmaXgoKSxcbiAgICAgICAgYW1vdW50XG4gICAgICB9LFxuICAgICAgb3ZlcnJpZGVzOiB7IC4uLnRoaXMuY29uZmlnIH0sXG4gICAgICBvcmlnaW5NZXRob2Q6IFwiZnVuZEFjY291bnRcIlxuICAgIH0pO1xuICAgIGNvbnN0IHByb21pc2VzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjb25zdCB0bnhIYXNoID0gZGF0YVtpXTtcbiAgICAgIHByb21pc2VzLnB1c2godGhpcy53YWl0Rm9yVHJhbnNhY3Rpb24odG54SGFzaCwgeyB0aW1lb3V0U2VjcyB9KSk7XG4gICAgfVxuICAgIGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxufTtcblxuLy8gc3JjL3BsdWdpbnMvYW5zX2NsaWVudC50c1xudmFyIGFuc0NvbnRyYWN0c01hcCA9IHtcbiAgdGVzdG5ldDogXCIweDVmOGZkMjM0NzQ0OTY4NWNmNDFkNGRiOTc5MjZlYzNhMDk2ZWFmMzgxMzMyYmU0ZjEzMThhZDRkMTZhODQ5N2NcIixcbiAgbWFpbm5ldDogXCIweDg2N2VkMWY2YmY5MTYxNzFiMWRlM2VlOTI4NDliODk3OGI3ZDFiOWUwYThjYzk4MmEzZDE5ZDUzNWRmZDljMGNcIlxufTtcbnZhciBuYW1lQ29tcG9uZW50UGF0dGVybiA9IC9eW2EtelxcZF1bYS16XFxkLV17MSw2MX1bYS16XFxkXSQvO1xudmFyIG5hbWVQYXR0ZXJuID0gbmV3IFJlZ0V4cChcbiAgXCJeKD86KD88c3ViZG9tYWluPlteLl0rKVxcXFwuKD8hYXB0JCkpPyg/PGRvbWFpbj5bXi5dKykoPzpcXFxcLmFwdCk/JFwiXG4pO1xudmFyIEFuc0NsaWVudCA9IGNsYXNzIHtcbiAgLyoqXG4gICAqIENyZWF0ZXMgbmV3IEFuc0NsaWVudCBpbnN0YW5jZVxuICAgKiBAcGFyYW0gcHJvdmlkZXIgUHJvdmlkZXIgaW5zdGFuY2VcbiAgICogQHBhcmFtIGNvbnRyYWN0QWRkcmVzcyBBbiBvcHRpb25hbCBjb250cmFjdCBhZGRyZXNzLlxuICAgKiBJZiB0aGVyZSBpcyBubyBjb250cmFjdCBhZGRyZXNzIG1hdGNoaW5nIHRvIHRoZSBwcm92aWRlZCBuZXR3b3JrXG4gICAqIHRoZW4gdGhlIEFuc0NsaWVudCBjbGFzcyBleHBlY3RzIGEgY29udHJhY3QgYWRkcmVzcyAtXG4gICAqIHRoaXMgaXMgdG8gc3VwcG9ydCBib3RoIG1haW5uZXQvdGVzdG5ldCBuZXR3b3JrcyBhbmQgbG9jYWwgZGV2ZWxvcG1lbnQuXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcm92aWRlciwgY29udHJhY3RBZGRyZXNzKSB7XG4gICAgdmFyIF9hO1xuICAgIHRoaXMucHJvdmlkZXIgPSBwcm92aWRlcjtcbiAgICBpZiAoIWFuc0NvbnRyYWN0c01hcFt0aGlzLnByb3ZpZGVyLm5ldHdvcmtdICYmICFjb250cmFjdEFkZHJlc3MpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yOiBGb3IgY3VzdG9tIHByb3ZpZGVycywgeW91IG11c3QgcGFzcyBpbiBhIGNvbnRyYWN0IGFkZHJlc3NcIik7XG4gICAgfVxuICAgIHRoaXMuY29udHJhY3RBZGRyZXNzID0gKF9hID0gYW5zQ29udHJhY3RzTWFwW3RoaXMucHJvdmlkZXIubmV0d29ya10pICE9IG51bGwgPyBfYSA6IGNvbnRyYWN0QWRkcmVzcztcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyB0aGUgcHJpbWFyeSBuYW1lIGZvciB0aGUgZ2l2ZW4gYWNjb3VudCBhZGRyZXNzXG4gICAqIEBwYXJhbSBhZGRyZXNzIEFuIGFjY291bnQgYWRkcmVzc1xuICAgKiBAcmV0dXJucyBBY2NvdW50J3MgcHJpbWFyeSBuYW1lIHwgbnVsbCBpZiB0aGVyZSBpcyBubyBwcmltYXJ5IG5hbWUgZGVmaW5lZFxuICAgKi9cbiAgYXN5bmMgZ2V0UHJpbWFyeU5hbWVCeUFkZHJlc3MoYWRkcmVzcykge1xuICAgIGNvbnN0IGFuc1Jlc291cmNlID0gYXdhaXQgdGhpcy5wcm92aWRlci5nZXRBY2NvdW50UmVzb3VyY2UoXG4gICAgICB0aGlzLmNvbnRyYWN0QWRkcmVzcyxcbiAgICAgIGAke3RoaXMuY29udHJhY3RBZGRyZXNzfTo6ZG9tYWluczo6UmV2ZXJzZUxvb2t1cFJlZ2lzdHJ5VjFgXG4gICAgKTtcbiAgICBjb25zdCBkYXRhID0gYW5zUmVzb3VyY2UuZGF0YTtcbiAgICBjb25zdCB7IGhhbmRsZSB9ID0gZGF0YS5yZWdpc3RyeTtcbiAgICBjb25zdCBkb21haW5zVGFibGVJdGVtUmVxdWVzdCA9IHtcbiAgICAgIGtleV90eXBlOiBcImFkZHJlc3NcIixcbiAgICAgIHZhbHVlX3R5cGU6IGAke3RoaXMuY29udHJhY3RBZGRyZXNzfTo6ZG9tYWluczo6TmFtZVJlY29yZEtleVYxYCxcbiAgICAgIGtleTogYWRkcmVzc1xuICAgIH07XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGl0ZW0gPSBhd2FpdCB0aGlzLnByb3ZpZGVyLmdldFRhYmxlSXRlbShoYW5kbGUsIGRvbWFpbnNUYWJsZUl0ZW1SZXF1ZXN0KTtcbiAgICAgIHJldHVybiBpdGVtLnN1YmRvbWFpbl9uYW1lLnZlY1swXSA/IGAke2l0ZW0uc3ViZG9tYWluX25hbWUudmVjWzBdfS4ke2l0ZW0uZG9tYWluX25hbWV9YCA6IGl0ZW0uZG9tYWluX25hbWU7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGlmIChlcnJvci5zdGF0dXMgPT09IDQwNCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvcik7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSB0YXJnZXQgYWNjb3VudCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gbmFtZVxuICAgKiBAcGFyYW0gbmFtZSBBTlMgbmFtZVxuICAgKiBAcmV0dXJucyBBY2NvdW50IGFkZHJlc3MgfCBudWxsXG4gICAqL1xuICBhc3luYyBnZXRBZGRyZXNzQnlOYW1lKG5hbWUpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHsgZG9tYWluLCBzdWJkb21haW4gfSA9IChfYiA9IChfYSA9IG5hbWUubWF0Y2gobmFtZVBhdHRlcm4pKSA9PSBudWxsID8gdm9pZCAwIDogX2EuZ3JvdXBzKSAhPSBudWxsID8gX2IgOiB7fTtcbiAgICBpZiAoIWRvbWFpbilcbiAgICAgIHJldHVybiBudWxsO1xuICAgIGNvbnN0IHJlZ2lzdHJhdGlvbiA9IHN1YmRvbWFpbiA/IGF3YWl0IHRoaXMuZ2V0UmVnaXN0cmF0aW9uRm9yU3ViZG9tYWluTmFtZShkb21haW4sIHN1YmRvbWFpbikgOiBhd2FpdCB0aGlzLmdldFJlZ2lzdHJhdGlvbkZvckRvbWFpbk5hbWUoZG9tYWluKTtcbiAgICByZXR1cm4gcmVnaXN0cmF0aW9uID09PSBudWxsID8gbnVsbCA6IHJlZ2lzdHJhdGlvbi50YXJnZXQ7XG4gIH1cbiAgLyoqXG4gICAqIE1pbnQgYSBuZXcgQXB0b3MgbmFtZVxuICAgKlxuICAgKiBAcGFyYW0gYWNjb3VudCBBcHRvc0FjY291bnQgd2hlcmUgY29sbGVjdGlvbiB3aWxsIGJlIGNyZWF0ZWRcbiAgICogQHBhcmFtIGRvbWFpbk5hbWUgQXB0b3MgZG9tYWluIG5hbWUgdG8gbWludFxuICAgKiBAcGFyYW0geWVhcnMgeWVhciBkdXJhdGlvbiBvZiB0aGUgZG9tYWluIG5hbWVcbiAgICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHBlbmRpbmcgdHJhbnNhY3Rpb24gc3VibWl0dGVkIHRvIHRoZSBBUElcbiAgICovXG4gIGFzeW5jIG1pbnRBcHRvc05hbWUoYWNjb3VudCwgZG9tYWluTmFtZSwgeWVhcnMgPSAxLCBleHRyYUFyZ3MpIHtcbiAgICBpZiAoZG9tYWluTmFtZS5tYXRjaChuYW1lQ29tcG9uZW50UGF0dGVybikgPT09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBBcGlFcnJvcig0MDAsIGBOYW1lICR7ZG9tYWluTmFtZX0gaXMgbm90IHZhbGlkYCk7XG4gICAgfVxuICAgIGNvbnN0IHJlZ2lzdHJhdGlvbiA9IGF3YWl0IHRoaXMuZ2V0UmVnaXN0cmF0aW9uRm9yRG9tYWluTmFtZShkb21haW5OYW1lKTtcbiAgICBpZiAocmVnaXN0cmF0aW9uKSB7XG4gICAgICBjb25zdCBub3cyID0gTWF0aC5jZWlsKERhdGUubm93KCkgLyAxZTMpO1xuICAgICAgaWYgKG5vdzIgPCByZWdpc3RyYXRpb24uZXhwaXJhdGlvblRpbWVzdGFtcFNlY29uZHMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFwaUVycm9yKDQwMCwgYE5hbWUgJHtkb21haW5OYW1lfSBpcyBub3QgYXZhaWxhYmxlYCk7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJKHRoaXMucHJvdmlkZXIuYXB0b3NDbGllbnQsIHtcbiAgICAgIHNlbmRlcjogYWNjb3VudC5hZGRyZXNzKCksXG4gICAgICAuLi5leHRyYUFyZ3NcbiAgICB9KTtcbiAgICBjb25zdCByYXdUeG4gPSBhd2FpdCBidWlsZGVyLmJ1aWxkKGAke3RoaXMuY29udHJhY3RBZGRyZXNzfTo6ZG9tYWluczo6cmVnaXN0ZXJfZG9tYWluYCwgW10sIFtkb21haW5OYW1lLCB5ZWFyc10pO1xuICAgIGNvbnN0IGJjc1R4biA9IEFwdG9zQ2xpZW50LmdlbmVyYXRlQkNTVHJhbnNhY3Rpb24oYWNjb3VudCwgcmF3VHhuKTtcbiAgICBjb25zdCBwZW5kaW5nVHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLnByb3ZpZGVyLnN1Ym1pdFNpZ25lZEJDU1RyYW5zYWN0aW9uKGJjc1R4bik7XG4gICAgcmV0dXJuIHBlbmRpbmdUcmFuc2FjdGlvbi5oYXNoO1xuICB9XG4gIC8qKlxuICAgKiBNaW50IGEgbmV3IEFwdG9zIFN1YmRvbWFpblxuICAgKlxuICAgKiBAcGFyYW0gYWNjb3VudCBBcHRvc0FjY291bnQgdGhlIG93bmVyIG9mIHRoZSBkb21haW4gbmFtZVxuICAgKiBAcGFyYW0gc3ViZG9tYWluTmFtZSBzdWJkb21haW4gbmFtZSB0byBtaW50XG4gICAqIEBwYXJhbSBkb21haW5OYW1lIEFwdG9zIGRvbWFpbiBuYW1lIHRvIG1pbnQgdW5kZXJcbiAgICogQHBhcmFtIGV4cGlyYXRpb25UaW1lc3RhbXBTZWNvbmRzIG11c3QgYmUgc2V0IGJldHdlZW4gdGhlIGRvbWFpbnMgZXhwaXJhdGlvbiBhbmQgdGhlIGN1cnJlbnQgdGltZVxuICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgcGVuZGluZyB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgYXN5bmMgbWludEFwdG9zU3ViZG9tYWluKGFjY291bnQsIHN1YmRvbWFpbk5hbWUsIGRvbWFpbk5hbWUsIGV4cGlyYXRpb25UaW1lc3RhbXBTZWNvbmRzLCBleHRyYUFyZ3MpIHtcbiAgICBpZiAoZG9tYWluTmFtZS5tYXRjaChuYW1lQ29tcG9uZW50UGF0dGVybikgPT09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBBcGlFcnJvcig0MDAsIGBEb21haW4gbmFtZSAke2RvbWFpbk5hbWV9IGlzIG5vdCB2YWxpZGApO1xuICAgIH1cbiAgICBpZiAoc3ViZG9tYWluTmFtZS5tYXRjaChuYW1lQ29tcG9uZW50UGF0dGVybikgPT09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBBcGlFcnJvcig0MDAsIGBTdWJkb21haW4gbmFtZSAke3N1YmRvbWFpbk5hbWV9IGlzIG5vdCB2YWxpZGApO1xuICAgIH1cbiAgICBjb25zdCBzdWJkb21haW5SZWdpc3RyYXRpb24gPSBhd2FpdCB0aGlzLmdldFJlZ2lzdHJhdGlvbkZvclN1YmRvbWFpbk5hbWUoZG9tYWluTmFtZSwgc3ViZG9tYWluTmFtZSk7XG4gICAgaWYgKHN1YmRvbWFpblJlZ2lzdHJhdGlvbikge1xuICAgICAgY29uc3Qgbm93MyA9IE1hdGguY2VpbChEYXRlLm5vdygpIC8gMWUzKTtcbiAgICAgIGlmIChub3czIDwgc3ViZG9tYWluUmVnaXN0cmF0aW9uLmV4cGlyYXRpb25UaW1lc3RhbXBTZWNvbmRzKSB7XG4gICAgICAgIHRocm93IG5ldyBBcGlFcnJvcig0MDAsIGBOYW1lICR7c3ViZG9tYWluTmFtZX0uJHtkb21haW5OYW1lfSBpcyBub3QgYXZhaWxhYmxlYCk7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGRvbWFpblJlZ2lzdHJhdGlvbiA9IGF3YWl0IHRoaXMuZ2V0UmVnaXN0cmF0aW9uRm9yRG9tYWluTmFtZShkb21haW5OYW1lKTtcbiAgICBpZiAoZG9tYWluUmVnaXN0cmF0aW9uID09PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgQXBpRXJyb3IoNDAwLCBgRG9tYWluIG5hbWUgJHtkb21haW5OYW1lfSBkb2VzIG5vdCBleGlzdGApO1xuICAgIH1cbiAgICBjb25zdCBub3cyID0gTWF0aC5jZWlsKERhdGUubm93KCkgLyAxZTMpO1xuICAgIGlmIChkb21haW5SZWdpc3RyYXRpb24uZXhwaXJhdGlvblRpbWVzdGFtcFNlY29uZHMgPCBub3cyKSB7XG4gICAgICB0aHJvdyBuZXcgQXBpRXJyb3IoNDAwLCBgRG9tYWluIG5hbWUgJHtkb21haW5OYW1lfSBleHBpcmVkYCk7XG4gICAgfVxuICAgIGNvbnN0IGFjdHVhbEV4cGlyYXRpb25UaW1lc3RhbXBTZWNvbmRzID0gZXhwaXJhdGlvblRpbWVzdGFtcFNlY29uZHMgfHwgZG9tYWluUmVnaXN0cmF0aW9uLmV4cGlyYXRpb25UaW1lc3RhbXBTZWNvbmRzO1xuICAgIGlmIChhY3R1YWxFeHBpcmF0aW9uVGltZXN0YW1wU2Vjb25kcyA8IG5vdzIpIHtcbiAgICAgIHRocm93IG5ldyBBcGlFcnJvcig0MDAsIGBFeHBpcmF0aW9uIGZvciAke3N1YmRvbWFpbk5hbWV9LiR7ZG9tYWluTmFtZX0gaXMgYmVmb3JlIG5vd2ApO1xuICAgIH1cbiAgICBjb25zdCBidWlsZGVyID0gbmV3IFRyYW5zYWN0aW9uQnVpbGRlclJlbW90ZUFCSSh0aGlzLnByb3ZpZGVyLmFwdG9zQ2xpZW50LCB7XG4gICAgICBzZW5kZXI6IGFjY291bnQuYWRkcmVzcygpLFxuICAgICAgLi4uZXh0cmFBcmdzXG4gICAgfSk7XG4gICAgY29uc3QgcmF3VHhuID0gYXdhaXQgYnVpbGRlci5idWlsZChcbiAgICAgIGAke3RoaXMuY29udHJhY3RBZGRyZXNzfTo6ZG9tYWluczo6cmVnaXN0ZXJfc3ViZG9tYWluYCxcbiAgICAgIFtdLFxuICAgICAgW3N1YmRvbWFpbk5hbWUsIGRvbWFpbk5hbWUsIGFjdHVhbEV4cGlyYXRpb25UaW1lc3RhbXBTZWNvbmRzXVxuICAgICk7XG4gICAgY29uc3QgYmNzVHhuID0gQXB0b3NDbGllbnQuZ2VuZXJhdGVCQ1NUcmFuc2FjdGlvbihhY2NvdW50LCByYXdUeG4pO1xuICAgIGNvbnN0IHBlbmRpbmdUcmFuc2FjdGlvbiA9IGF3YWl0IHRoaXMucHJvdmlkZXIuc3VibWl0U2lnbmVkQkNTVHJhbnNhY3Rpb24oYmNzVHhuKTtcbiAgICByZXR1cm4gcGVuZGluZ1RyYW5zYWN0aW9uLmhhc2g7XG4gIH1cbiAgLyoqXG4gICAqIEBwYXJhbSBhY2NvdW50IEFwdG9zQWNjb3VudCB0aGUgb3duZXIgb2YgdGhlIGRvbWFpbiBuYW1lXG4gICAqIEBwYXJhbSBzdWJkb21haW5OYW1lIHN1YmRvbWFpbiBuYW1lIHRvIG1pbnRcbiAgICogQHBhcmFtIGRvbWFpbk5hbWUgQXB0b3MgZG9tYWluIG5hbWUgdG8gbWludFxuICAgKiBAcGFyYW0gdGFyZ2V0IHRoZSB0YXJnZXQgYWRkcmVzcyBmb3IgdGhlIHN1YmRvbWFpblxuICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgcGVuZGluZyB0cmFuc2FjdGlvbiBzdWJtaXR0ZWQgdG8gdGhlIEFQSVxuICAgKi9cbiAgYXN5bmMgc2V0U3ViZG9tYWluQWRkcmVzcyhhY2NvdW50LCBzdWJkb21haW5OYW1lLCBkb21haW5OYW1lLCB0YXJnZXQsIGV4dHJhQXJncykge1xuICAgIGNvbnN0IHN0YW5kYXJkaXplQWRkcmVzcyA9IEFjY291bnRBZGRyZXNzLnN0YW5kYXJkaXplQWRkcmVzcyh0YXJnZXQpO1xuICAgIGlmIChkb21haW5OYW1lLm1hdGNoKG5hbWVDb21wb25lbnRQYXR0ZXJuKSA9PT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEFwaUVycm9yKDQwMCwgYE5hbWUgJHtkb21haW5OYW1lfSBpcyBub3QgdmFsaWRgKTtcbiAgICB9XG4gICAgaWYgKHN1YmRvbWFpbk5hbWUubWF0Y2gobmFtZUNvbXBvbmVudFBhdHRlcm4pID09PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgQXBpRXJyb3IoNDAwLCBgTmFtZSAke3N1YmRvbWFpbk5hbWV9IGlzIG5vdCB2YWxpZGApO1xuICAgIH1cbiAgICBjb25zdCBidWlsZGVyID0gbmV3IFRyYW5zYWN0aW9uQnVpbGRlclJlbW90ZUFCSSh0aGlzLnByb3ZpZGVyLmFwdG9zQ2xpZW50LCB7XG4gICAgICBzZW5kZXI6IGFjY291bnQuYWRkcmVzcygpLFxuICAgICAgLi4uZXh0cmFBcmdzXG4gICAgfSk7XG4gICAgY29uc3QgcmF3VHhuID0gYXdhaXQgYnVpbGRlci5idWlsZChcbiAgICAgIGAke3RoaXMuY29udHJhY3RBZGRyZXNzfTo6ZG9tYWluczo6c2V0X3N1YmRvbWFpbl9hZGRyZXNzYCxcbiAgICAgIFtdLFxuICAgICAgW3N1YmRvbWFpbk5hbWUsIGRvbWFpbk5hbWUsIHN0YW5kYXJkaXplQWRkcmVzc11cbiAgICApO1xuICAgIGNvbnN0IGJjc1R4biA9IEFwdG9zQ2xpZW50LmdlbmVyYXRlQkNTVHJhbnNhY3Rpb24oYWNjb3VudCwgcmF3VHhuKTtcbiAgICBjb25zdCBwZW5kaW5nVHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLnByb3ZpZGVyLnN1Ym1pdFNpZ25lZEJDU1RyYW5zYWN0aW9uKGJjc1R4bik7XG4gICAgcmV0dXJuIHBlbmRpbmdUcmFuc2FjdGlvbi5oYXNoO1xuICB9XG4gIC8qKlxuICAgKiBJbml0aWFsaXplIHJldmVyc2UgbG9va3VwIGZvciBjb250cmFjdCBvd25lclxuICAgKlxuICAgKiBAcGFyYW0gb3duZXIgdGhlIGBhcHRvc19uYW1lc2AgQXB0b3NBY2NvdW50XG4gICAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSBwZW5kaW5nIHRyYW5zYWN0aW9uIHN1Ym1pdHRlZCB0byB0aGUgQVBJXG4gICAqL1xuICBhc3luYyBpbml0UmV2ZXJzZUxvb2t1cFJlZ2lzdHJ5KG93bmVyLCBleHRyYUFyZ3MpIHtcbiAgICBjb25zdCBidWlsZGVyID0gbmV3IFRyYW5zYWN0aW9uQnVpbGRlclJlbW90ZUFCSSh0aGlzLnByb3ZpZGVyLmFwdG9zQ2xpZW50LCB7XG4gICAgICBzZW5kZXI6IG93bmVyLmFkZHJlc3MoKSxcbiAgICAgIC4uLmV4dHJhQXJnc1xuICAgIH0pO1xuICAgIGNvbnN0IHJhd1R4biA9IGF3YWl0IGJ1aWxkZXIuYnVpbGQoYCR7dGhpcy5jb250cmFjdEFkZHJlc3N9Ojpkb21haW5zOjppbml0X3JldmVyc2VfbG9va3VwX3JlZ2lzdHJ5X3YxYCwgW10sIFtdKTtcbiAgICBjb25zdCBiY3NUeG4gPSBBcHRvc0NsaWVudC5nZW5lcmF0ZUJDU1RyYW5zYWN0aW9uKG93bmVyLCByYXdUeG4pO1xuICAgIGNvbnN0IHBlbmRpbmdUcmFuc2FjdGlvbiA9IGF3YWl0IHRoaXMucHJvdmlkZXIuc3VibWl0U2lnbmVkQkNTVHJhbnNhY3Rpb24oYmNzVHhuKTtcbiAgICByZXR1cm4gcGVuZGluZ1RyYW5zYWN0aW9uLmhhc2g7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIEFuc1JlZ2lzdHJ5IGZvciB0aGUgZ2l2ZW4gZG9tYWluIG5hbWVcbiAgICogQHBhcmFtIGRvbWFpbiBkb21haW4gbmFtZVxuICAgKiBAZXhhbXBsZVxuICAgKiBpZiBuYW1lIGlzIGBhcHRvcy5hcHRgXG4gICAqIGRvbWFpbiA9IGFwdG9zXG4gICAqXG4gICAqIEByZXR1cm5zIEFuc1JlZ2lzdHJ5IHwgbnVsbFxuICAgKi9cbiAgYXN5bmMgZ2V0UmVnaXN0cmF0aW9uRm9yRG9tYWluTmFtZShkb21haW4pIHtcbiAgICBpZiAoZG9tYWluLm1hdGNoKG5hbWVDb21wb25lbnRQYXR0ZXJuKSA9PT0gbnVsbClcbiAgICAgIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGFuc1Jlc291cmNlID0gYXdhaXQgdGhpcy5wcm92aWRlci5nZXRBY2NvdW50UmVzb3VyY2UoXG4gICAgICB0aGlzLmNvbnRyYWN0QWRkcmVzcyxcbiAgICAgIGAke3RoaXMuY29udHJhY3RBZGRyZXNzfTo6ZG9tYWluczo6TmFtZVJlZ2lzdHJ5VjFgXG4gICAgKTtcbiAgICBjb25zdCBkYXRhID0gYW5zUmVzb3VyY2UuZGF0YTtcbiAgICBjb25zdCB7IGhhbmRsZSB9ID0gZGF0YS5yZWdpc3RyeTtcbiAgICBjb25zdCBkb21haW5zVGFibGVJdGVtUmVxdWVzdCA9IHtcbiAgICAgIGtleV90eXBlOiBgJHt0aGlzLmNvbnRyYWN0QWRkcmVzc306OmRvbWFpbnM6Ok5hbWVSZWNvcmRLZXlWMWAsXG4gICAgICB2YWx1ZV90eXBlOiBgJHt0aGlzLmNvbnRyYWN0QWRkcmVzc306OmRvbWFpbnM6Ok5hbWVSZWNvcmRWMWAsXG4gICAgICBrZXk6IHtcbiAgICAgICAgc3ViZG9tYWluX25hbWU6IHsgdmVjOiBbXSB9LFxuICAgICAgICBkb21haW5fbmFtZTogZG9tYWluXG4gICAgICB9XG4gICAgfTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgaXRlbSA9IGF3YWl0IHRoaXMucHJvdmlkZXIuZ2V0VGFibGVJdGVtKGhhbmRsZSwgZG9tYWluc1RhYmxlSXRlbVJlcXVlc3QpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdGFyZ2V0OiBpdGVtLnRhcmdldF9hZGRyZXNzLnZlYy5sZW5ndGggPT09IDEgPyBpdGVtLnRhcmdldF9hZGRyZXNzLnZlY1swXSA6IG51bGwsXG4gICAgICAgIGV4cGlyYXRpb25UaW1lc3RhbXBTZWNvbmRzOiBpdGVtLmV4cGlyYXRpb25fdGltZV9zZWNcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGlmIChlcnJvci5zdGF0dXMgPT09IDQwNCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvcik7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBBbnNSZWdpc3RyeSBmb3IgdGhlIGdpdmVuIHN1YmRvbWFpbl9uYW1lXG4gICAqIEBwYXJhbSBkb21haW4gZG9tYWluIG5hbWVcbiAgICogQHBhcmFtIHN1YmRvbWFpbiBzdWJkb21haW4gbmFtZVxuICAgKiBAZXhhbXBsZVxuICAgKiBpZiBuYW1lIGlzIGBkZXYuYXB0b3MuYXB0YFxuICAgKiBkb21haW4gPSBhcHRvc1xuICAgKiBzdWJkb21haW4gPSBkZXZcbiAgICpcbiAgICogQHJldHVybnMgQW5zUmVnaXN0cnkgfCBudWxsXG4gICAqL1xuICBhc3luYyBnZXRSZWdpc3RyYXRpb25Gb3JTdWJkb21haW5OYW1lKGRvbWFpbiwgc3ViZG9tYWluKSB7XG4gICAgaWYgKGRvbWFpbi5tYXRjaChuYW1lQ29tcG9uZW50UGF0dGVybikgPT09IG51bGwpXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICBpZiAoc3ViZG9tYWluLm1hdGNoKG5hbWVDb21wb25lbnRQYXR0ZXJuKSA9PT0gbnVsbClcbiAgICAgIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGFuc1Jlc291cmNlID0gYXdhaXQgdGhpcy5wcm92aWRlci5nZXRBY2NvdW50UmVzb3VyY2UoXG4gICAgICB0aGlzLmNvbnRyYWN0QWRkcmVzcyxcbiAgICAgIGAke3RoaXMuY29udHJhY3RBZGRyZXNzfTo6ZG9tYWluczo6TmFtZVJlZ2lzdHJ5VjFgXG4gICAgKTtcbiAgICBjb25zdCBkYXRhID0gYW5zUmVzb3VyY2UuZGF0YTtcbiAgICBjb25zdCB7IGhhbmRsZSB9ID0gZGF0YS5yZWdpc3RyeTtcbiAgICBjb25zdCBkb21haW5zVGFibGVJdGVtUmVxdWVzdCA9IHtcbiAgICAgIGtleV90eXBlOiBgJHt0aGlzLmNvbnRyYWN0QWRkcmVzc306OmRvbWFpbnM6Ok5hbWVSZWNvcmRLZXlWMWAsXG4gICAgICB2YWx1ZV90eXBlOiBgJHt0aGlzLmNvbnRyYWN0QWRkcmVzc306OmRvbWFpbnM6Ok5hbWVSZWNvcmRWMWAsXG4gICAgICBrZXk6IHtcbiAgICAgICAgc3ViZG9tYWluX25hbWU6IHsgdmVjOiBbc3ViZG9tYWluXSB9LFxuICAgICAgICBkb21haW5fbmFtZTogZG9tYWluXG4gICAgICB9XG4gICAgfTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgaXRlbSA9IGF3YWl0IHRoaXMucHJvdmlkZXIuZ2V0VGFibGVJdGVtKGhhbmRsZSwgZG9tYWluc1RhYmxlSXRlbVJlcXVlc3QpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdGFyZ2V0OiBpdGVtLnRhcmdldF9hZGRyZXNzLnZlYy5sZW5ndGggPT09IDEgPyBpdGVtLnRhcmdldF9hZGRyZXNzLnZlY1swXSA6IG51bGwsXG4gICAgICAgIGV4cGlyYXRpb25UaW1lc3RhbXBTZWNvbmRzOiBpdGVtLmV4cGlyYXRpb25fdGltZV9zZWNcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGlmIChlcnJvci5zdGF0dXMgPT09IDQwNCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvcik7XG4gICAgfVxuICB9XG59O1xuXG4vLyBzcmMvdHJhbnNhY3Rpb25zL2FjY291bnRfc2VxdWVuY2VfbnVtYmVyLnRzXG52YXIgbm93ID0gKCkgPT4gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMWUzKTtcbnZhciBBY2NvdW50U2VxdWVuY2VOdW1iZXIgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKHByb3ZpZGVyLCBhY2NvdW50LCBtYXhXYWl0VGltZSwgbWF4aW11bUluRmxpZ2h0LCBzbGVlcFRpbWUpIHtcbiAgICAvLyBzZXF1ZW5jZSBudW1iZXIgb24gY2hhaW5cbiAgICB0aGlzLmxhc3RVbmNvbW1pbnRlZE51bWJlciA9IG51bGw7XG4gICAgLy8gbG9jYWwgc2VxdWVuY2UgbnVtYmVyXG4gICAgdGhpcy5jdXJyZW50TnVtYmVyID0gbnVsbDtcbiAgICAvKipcbiAgICAgKiBXZSB3YW50IHRvIGd1YXJhbnRlZSB0aGF0IHdlIHByZXNlcnZlIG9yZGVyaW5nIG9mIHdvcmtlcnMgdG8gcmVxdWVzdHMuXG4gICAgICpcbiAgICAgKiBgbG9ja2AgaXMgdXNlZCB0byB0cnkgdG8gcHJldmVudCBtdWx0aXBsZSBjb3JvdXRpbmVzIGZyb20gYWNjZXNzaW5nIGEgc2hhcmVkIHJlc291cmNlIGF0IHRoZSBzYW1lIHRpbWUsXG4gICAgICogd2hpY2ggY2FuIHJlc3VsdCBpbiByYWNlIGNvbmRpdGlvbnMgYW5kIGRhdGEgaW5jb25zaXN0ZW5jeS5cbiAgICAgKiBUaGlzIGNvZGUgYWN0dWFsbHkgZG9lc24ndCBkbyBpdCB0aG91Z2gsIHNpbmNlIHdlIGFyZW4ndCBnaXZpbmcgb3V0IGEgc2xvdCwgaXQgaXMgc3RpbGwgc29tZXdoYXQgYSByYWNlIGNvbmRpdGlvbi5cbiAgICAgKlxuICAgICAqIFRoZSBpZGVhbCBzb2x1dGlvbiBpcyBsaWtlbHkgdGhhdCBlYWNoIHRocmVhZCBncmFicyB0aGUgbmV4dCBudW1iZXIgZnJvbSBhIGluY3JlbWVudGFsIGludGVnZXIuXG4gICAgICogV2hlbiB0aGV5IGNvbXBsZXRlLCB0aGV5IGluY3JlbWVudCB0aGF0IG51bWJlciBhbmQgdGhhdCBlbnRpdHkgaXMgYWJsZSB0byBlbnRlciB0aGUgYGxvY2tgLlxuICAgICAqIFRoYXQgd291bGQgZ3VhcmFudGVlIG9yZGVyaW5nLlxuICAgICAqL1xuICAgIHRoaXMubG9jayA9IGZhbHNlO1xuICAgIHRoaXMucHJvdmlkZXIgPSBwcm92aWRlcjtcbiAgICB0aGlzLmFjY291bnQgPSBhY2NvdW50O1xuICAgIHRoaXMubWF4V2FpdFRpbWUgPSBtYXhXYWl0VGltZTtcbiAgICB0aGlzLm1heGltdW1JbkZsaWdodCA9IG1heGltdW1JbkZsaWdodDtcbiAgICB0aGlzLnNsZWVwVGltZSA9IHNsZWVwVGltZTtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyB0aGUgbmV4dCBhdmFpbGFibGUgc2VxdWVuY2UgbnVtYmVyIGZvciB0aGlzIGFjY291bnRcbiAgICpcbiAgICogQHJldHVybnMgbmV4dCBhdmFpbGFibGUgc2VxdWVuY2UgbnVtYmVyXG4gICAqL1xuICBhc3luYyBuZXh0U2VxdWVuY2VOdW1iZXIoKSB7XG4gICAgd2hpbGUgKHRoaXMubG9jaykge1xuICAgICAgYXdhaXQgc2xlZXAodGhpcy5zbGVlcFRpbWUpO1xuICAgIH1cbiAgICB0aGlzLmxvY2sgPSB0cnVlO1xuICAgIGxldCBuZXh0TnVtYmVyID0gQmlnSW50KDApO1xuICAgIHRyeSB7XG4gICAgICBpZiAodGhpcy5sYXN0VW5jb21taW50ZWROdW1iZXIgPT09IG51bGwgfHwgdGhpcy5jdXJyZW50TnVtYmVyID09PSBudWxsKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuaW5pdGlhbGl6ZSgpO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMuY3VycmVudE51bWJlciAtIHRoaXMubGFzdFVuY29tbWludGVkTnVtYmVyID49IHRoaXMubWF4aW11bUluRmxpZ2h0KSB7XG4gICAgICAgIGF3YWl0IHRoaXMudXBkYXRlKCk7XG4gICAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IG5vdygpO1xuICAgICAgICB3aGlsZSAodGhpcy5jdXJyZW50TnVtYmVyIC0gdGhpcy5sYXN0VW5jb21taW50ZWROdW1iZXIgPj0gdGhpcy5tYXhpbXVtSW5GbGlnaHQpIHtcbiAgICAgICAgICBhd2FpdCBzbGVlcCh0aGlzLnNsZWVwVGltZSk7XG4gICAgICAgICAgaWYgKG5vdygpIC0gc3RhcnRUaW1lID4gdGhpcy5tYXhXYWl0VGltZSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKGBXYWl0ZWQgb3ZlciAzMCBzZWNvbmRzIGZvciBhIHRyYW5zYWN0aW9uIHRvIGNvbW1pdCwgcmVzeW5jaW5nICR7dGhpcy5hY2NvdW50LmFkZHJlc3MoKX1gKTtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuaW5pdGlhbGl6ZSgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbmV4dE51bWJlciA9IHRoaXMuY3VycmVudE51bWJlcjtcbiAgICAgIHRoaXMuY3VycmVudE51bWJlciArPSBCaWdJbnQoMSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5lcnJvcihcImVycm9yIGluIGdldHRpbmcgbmV4dCBzZXF1ZW5jZSBudW1iZXIgZm9yIHRoaXMgYWNjb3VudFwiLCBlKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy5sb2NrID0gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBuZXh0TnVtYmVyO1xuICB9XG4gIC8qKlxuICAgKiBJbml0aWFsaXplcyB0aGlzIGFjY291bnQgd2l0aCB0aGUgc2VxdWVuY2UgbnVtYmVyIG9uIGNoYWluXG4gICAqL1xuICBhc3luYyBpbml0aWFsaXplKCkge1xuICAgIGNvbnN0IHsgc2VxdWVuY2VfbnVtYmVyOiBzZXF1ZW5jZU51bWJlciB9ID0gYXdhaXQgdGhpcy5wcm92aWRlci5nZXRBY2NvdW50KHRoaXMuYWNjb3VudC5hZGRyZXNzKCkpO1xuICAgIHRoaXMuY3VycmVudE51bWJlciA9IEJpZ0ludChzZXF1ZW5jZU51bWJlcik7XG4gICAgdGhpcy5sYXN0VW5jb21taW50ZWROdW1iZXIgPSBCaWdJbnQoc2VxdWVuY2VOdW1iZXIpO1xuICB9XG4gIC8qKlxuICAgKiBVcGRhdGVzIHRoaXMgYWNjb3VudCBzZXF1ZW5jZSBudW1iZXIgd2l0aCB0aGUgb25lIG9uLWNoYWluXG4gICAqXG4gICAqIEByZXR1cm5zIG9uLWNoYWluIHNlcXVlbmNlIG51bWJlciBmb3IgdGhpcyBhY2NvdW50XG4gICAqL1xuICBhc3luYyB1cGRhdGUoKSB7XG4gICAgY29uc3QgeyBzZXF1ZW5jZV9udW1iZXI6IHNlcXVlbmNlTnVtYmVyIH0gPSBhd2FpdCB0aGlzLnByb3ZpZGVyLmdldEFjY291bnQodGhpcy5hY2NvdW50LmFkZHJlc3MoKSk7XG4gICAgdGhpcy5sYXN0VW5jb21taW50ZWROdW1iZXIgPSBCaWdJbnQoc2VxdWVuY2VOdW1iZXIpO1xuICAgIHJldHVybiB0aGlzLmxhc3RVbmNvbW1pbnRlZE51bWJlcjtcbiAgfVxuICAvKipcbiAgICogU3luY2hyb25pemVzIGxvY2FsIHNlcXVlbmNlIG51bWJlciB3aXRoIHRoZSBzZXFldW5jZSBudW1iZXIgb24gY2hhaW4gZm9yIHRoaXMgYWNjb3VudC5cbiAgICpcbiAgICogUG9sbCB0aGUgbmV0d29yayB1bnRpbCBhbGwgc3VibWl0dGVkIHRyYW5zYWN0aW9ucyBoYXZlIGVpdGhlciBiZWVuIGNvbW1pdHRlZCBvciB1bnRpbFxuICAgKiB0aGUgbWF4aW11bSB3YWl0IHRpbWUgaGFzIGVsYXBzZWRcbiAgICovXG4gIGFzeW5jIHN5bmNocm9uaXplKCkge1xuICAgIGlmICh0aGlzLmxhc3RVbmNvbW1pbnRlZE51bWJlciA9PT0gdGhpcy5jdXJyZW50TnVtYmVyKVxuICAgICAgcmV0dXJuO1xuICAgIHdoaWxlICh0aGlzLmxvY2spIHtcbiAgICAgIGF3YWl0IHNsZWVwKHRoaXMuc2xlZXBUaW1lKTtcbiAgICB9XG4gICAgdGhpcy5sb2NrID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy51cGRhdGUoKTtcbiAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IG5vdygpO1xuICAgICAgd2hpbGUgKHRoaXMubGFzdFVuY29tbWludGVkTnVtYmVyICE9PSB0aGlzLmN1cnJlbnROdW1iZXIpIHtcbiAgICAgICAgaWYgKG5vdygpIC0gc3RhcnRUaW1lID4gdGhpcy5tYXhXYWl0VGltZSkge1xuICAgICAgICAgIGNvbnNvbGUud2FybihgV2FpdGVkIG92ZXIgMzAgc2Vjb25kcyBmb3IgYSB0cmFuc2FjdGlvbiB0byBjb21taXQsIHJlc3luY2luZyAke3RoaXMuYWNjb3VudC5hZGRyZXNzKCl9YCk7XG4gICAgICAgICAgYXdhaXQgdGhpcy5pbml0aWFsaXplKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYXdhaXQgc2xlZXAodGhpcy5zbGVlcFRpbWUpO1xuICAgICAgICAgIGF3YWl0IHRoaXMudXBkYXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiZXJyb3IgaW4gc3luY2hyb25pemluZyB0aGlzIGFjY291bnQgc2VxdWVuY2UgbnVtYmVyIHdpdGggdGhlIG9uZSBvbiBjaGFpblwiLCBlKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy5sb2NrID0gZmFsc2U7XG4gICAgfVxuICB9XG59O1xuXG4vLyBzcmMvdHJhbnNhY3Rpb25zL3RyYW5zYWN0aW9uX3dvcmtlci50c1xuaW1wb3J0IEV2ZW50RW1pdHRlciBmcm9tIFwiZXZlbnRlbWl0dGVyM1wiO1xuXG4vLyBzcmMvdHJhbnNhY3Rpb25zL2FzeW5jX3F1ZXVlLnRzXG52YXIgQXN5bmNRdWV1ZSA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5xdWV1ZSA9IFtdO1xuICAgIC8vIFRoZSBwZW5kaW5nRGVxdWV1ZSBpcyB1c2VkIHRvIGhhbmRsZSB0aGUgcmVzb2x1dGlvbiBvZiBwcm9taXNlcyB3aGVuIGl0ZW1zIGFyZSBlbnF1ZXVlZCBhbmQgZGVxdWV1ZWQuXG4gICAgdGhpcy5wZW5kaW5nRGVxdWV1ZSA9IFtdO1xuICAgIHRoaXMuY2FuY2VsbGVkID0gZmFsc2U7XG4gIH1cbiAgLyoqXG4gICAqIFRoZSBlbnF1ZXVlIG1ldGhvZCBhZGRzIGFuIGl0ZW0gdG8gdGhlIHF1ZXVlLiBJZiB0aGVyZSBhcmUgcGVuZGluZyBkZXF1ZXVlZCBwcm9taXNlcyxcbiAgICogaW4gdGhlIHBlbmRpbmdEZXF1ZXVlLCBpdCByZXNvbHZlcyB0aGUgb2xkZXN0IHByb21pc2Ugd2l0aCB0aGUgZW5xdWV1ZWQgaXRlbSBpbW1lZGlhdGVseS5cbiAgICogT3RoZXJ3aXNlLCBpdCBhZGRzIHRoZSBpdGVtIHRvIHRoZSBxdWV1ZS5cbiAgICpcbiAgICogQHBhcmFtIGl0ZW0gVFxuICAgKi9cbiAgZW5xdWV1ZShpdGVtKSB7XG4gICAgdGhpcy5jYW5jZWxsZWQgPSBmYWxzZTtcbiAgICBpZiAodGhpcy5wZW5kaW5nRGVxdWV1ZS5sZW5ndGggPiAwKSB7XG4gICAgICBjb25zdCBwcm9taXNlID0gdGhpcy5wZW5kaW5nRGVxdWV1ZS5zaGlmdCgpO1xuICAgICAgcHJvbWlzZSA9PSBudWxsID8gdm9pZCAwIDogcHJvbWlzZS5yZXNvbHZlKGl0ZW0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnF1ZXVlLnB1c2goaXRlbSk7XG4gIH1cbiAgLyoqXG4gICAqIFRoZSBkZXF1ZXVlIG1ldGhvZCByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBuZXh0IGl0ZW0gaW4gdGhlIHF1ZXVlLlxuICAgKiBJZiB0aGUgcXVldWUgaXMgbm90IGVtcHR5LCBpdCByZXNvbHZlcyB0aGUgcHJvbWlzZSBpbW1lZGlhdGVseSB3aXRoIHRoZSBuZXh0IGl0ZW0uXG4gICAqIE90aGVyd2lzZSwgaXQgY3JlYXRlcyBhIG5ldyBwcm9taXNlLiBUaGUgcHJvbWlzZSdzIHJlc29sdmUgZnVuY3Rpb24gaXMgc3RvcmVkXG4gICAqIGluIHRoZSBwZW5kaW5nRGVxdWV1ZSB3aXRoIGEgdW5pcXVlIGNvdW50ZXIgdmFsdWUgYXMgdGhlIGtleS5cbiAgICogVGhlIG5ld2x5IGNyZWF0ZWQgcHJvbWlzZSBpcyB0aGVuIHJldHVybmVkLCBhbmQgaXQgd2lsbCBiZSByZXNvbHZlZCBsYXRlciB3aGVuIGFuIGl0ZW0gaXMgZW5xdWV1ZWQuXG4gICAqXG4gICAqIEByZXR1cm5zIFByb21pc2U8VD5cbiAgICovXG4gIGFzeW5jIGRlcXVldWUoKSB7XG4gICAgaWYgKHRoaXMucXVldWUubGVuZ3RoID4gMCkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLnF1ZXVlLnNoaWZ0KCkpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdGhpcy5wZW5kaW5nRGVxdWV1ZS5wdXNoKHsgcmVzb2x2ZSwgcmVqZWN0IH0pO1xuICAgIH0pO1xuICB9XG4gIC8qKlxuICAgKiBUaGUgaXNFbXB0eSBtZXRob2QgcmV0dXJucyB3aGV0aGVyIHRoZSBxdWV1ZSBpcyBlbXB0eSBvciBub3QuXG4gICAqXG4gICAqIEByZXR1cm5zIGJvb2xlYW5cbiAgICovXG4gIGlzRW1wdHkoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVldWUubGVuZ3RoID09PSAwO1xuICB9XG4gIC8qKlxuICAgKiBUaGUgY2FuY2VsIG1ldGhvZCBjYW5jZWxzIGFsbCBwZW5kaW5nIHByb21pc2VzIGluIHRoZSBxdWV1ZS5cbiAgICogSXQgcmVqZWN0cyB0aGUgcHJvbWlzZXMgd2l0aCBhIEFzeW5jUXVldWVDYW5jZWxsZWRFcnJvciBlcnJvcixcbiAgICogZW5zdXJpbmcgdGhhdCBhbnkgYXdhaXRpbmcgY29kZSBjYW4gaGFuZGxlIHRoZSBjYW5jZWxsYXRpb24gYXBwcm9wcmlhdGVseS5cbiAgICovXG4gIGNhbmNlbCgpIHtcbiAgICB0aGlzLmNhbmNlbGxlZCA9IHRydWU7XG4gICAgdGhpcy5wZW5kaW5nRGVxdWV1ZS5mb3JFYWNoKGFzeW5jICh7IHJlamVjdCB9KSA9PiB7XG4gICAgICByZWplY3QobmV3IEFzeW5jUXVldWVDYW5jZWxsZWRFcnJvcihcIlRhc2sgY2FuY2VsbGVkXCIpKTtcbiAgICB9KTtcbiAgICB0aGlzLnBlbmRpbmdEZXF1ZXVlID0gW107XG4gICAgdGhpcy5xdWV1ZS5sZW5ndGggPSAwO1xuICB9XG4gIC8qKlxuICAgKiBUaGUgaXNDYW5jZWxsZWQgbWV0aG9kIHJldHVybnMgd2hldGhlciB0aGUgcXVldWUgaXMgY2FuY2VsbGVkIG9yIG5vdC5cbiAgICpcbiAgICogQHJldHVybnMgYm9vbGVhblxuICAgKi9cbiAgaXNDYW5jZWxsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2FuY2VsbGVkO1xuICB9XG4gIC8qKlxuICAgKiBUaGUgcGVuZGluZ0RlcXVldWVMZW5ndGggbWV0aG9kIHJldHVybnMgdGhlIGxlbmd0aCBvZiB0aGUgcGVuZGluZ0RlcXVldWUuXG4gICAqXG4gICAqIEByZXR1cm5zIG51bWJlclxuICAgKi9cbiAgcGVuZGluZ0RlcXVldWVMZW5ndGgoKSB7XG4gICAgcmV0dXJuIHRoaXMucGVuZGluZ0RlcXVldWUubGVuZ3RoO1xuICB9XG59O1xudmFyIEFzeW5jUXVldWVDYW5jZWxsZWRFcnJvciA9IGNsYXNzIGV4dGVuZHMgRXJyb3Ige1xufTtcblxuLy8gc3JjL3RyYW5zYWN0aW9ucy90cmFuc2FjdGlvbl93b3JrZXIudHNcbnZhciBwcm9taXNlRnVsZmlsbGVkU3RhdHVzID0gXCJmdWxmaWxsZWRcIjtcbnZhciBUcmFuc2FjdGlvbldvcmtlckV2ZW50cyA9IC8qIEBfX1BVUkVfXyAqLyAoKFRyYW5zYWN0aW9uV29ya2VyRXZlbnRzMikgPT4ge1xuICBUcmFuc2FjdGlvbldvcmtlckV2ZW50czJbXCJUcmFuc2FjdGlvblNlbnRcIl0gPSBcInRyYW5zYWN0aW9uU2VudFwiO1xuICBUcmFuc2FjdGlvbldvcmtlckV2ZW50czJbXCJUcmFuc2FjdGlvblNlbmRGYWlsZWRcIl0gPSBcInRyYW5zYWN0aW9uc2VuZEZhaWxlZFwiO1xuICBUcmFuc2FjdGlvbldvcmtlckV2ZW50czJbXCJUcmFuc2FjdGlvbkV4ZWN1dGVkXCJdID0gXCJ0cmFuc2FjdGlvbkV4ZWN1dGVkXCI7XG4gIFRyYW5zYWN0aW9uV29ya2VyRXZlbnRzMltcIlRyYW5zYWN0aW9uRXhlY3V0aW9uRmFpbGVkXCJdID0gXCJ0cmFuc2FjdGlvbmV4ZWN1dGlvbkZhaWxlZFwiO1xuICByZXR1cm4gVHJhbnNhY3Rpb25Xb3JrZXJFdmVudHMyO1xufSkoVHJhbnNhY3Rpb25Xb3JrZXJFdmVudHMgfHwge30pO1xudmFyIFRyYW5zYWN0aW9uV29ya2VyID0gY2xhc3MgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICAvKipcbiAgICogUHJvdmlkZXMgYSBzaW1wbGUgZnJhbWV3b3JrIGZvciByZWNlaXZpbmcgcGF5bG9hZHMgdG8gYmUgcHJvY2Vzc2VkLlxuICAgKlxuICAgKiBAcGFyYW0gcHJvdmlkZXIgLSBhIGNsaWVudCBwcm92aWRlclxuICAgKiBAcGFyYW0gc2VuZGVyIC0gYSBzZW5kZXIgYXMgQXB0b3NBY2NvdW50XG4gICAqIEBwYXJhbSBtYXhXYWl0VGltZSAtIHRoZSBtYXggd2FpdCB0aW1lIHRvIHdhaXQgYmVmb3JlIHJlc3luY2luZyB0aGUgc2VxdWVuY2UgbnVtYmVyXG4gICAqIHRvIHRoZSBjdXJyZW50IG9uLWNoYWluIHN0YXRlLCBkZWZhdWx0IHRvIDMwXG4gICAqIEBwYXJhbSBtYXhpbXVtSW5GbGlnaHQgLSBzdWJtaXQgdXAgdG8gYG1heGltdW1JbkZsaWdodGAgdHJhbnNhY3Rpb25zIHBlciBhY2NvdW50LlxuICAgKiBNZW1wb29sIGxpbWl0cyB0aGUgbnVtYmVyIG9mIHRyYW5zYWN0aW9ucyBwZXIgYWNjb3VudCB0byAxMDAsIGhlbmNlIHdoeSB3ZSBkZWZhdWx0IHRvIDEwMC5cbiAgICogQHBhcmFtIHNsZWVwVGltZSAtIElmIGBtYXhpbXVtSW5GbGlnaHRgIGFyZSBpbiBmbGlnaHQsIHdhaXQgYHNsZWVwVGltZWAgc2Vjb25kcyBiZWZvcmUgcmUtZXZhbHVhdGluZywgZGVmYXVsdCB0byAxMFxuICAgKi9cbiAgY29uc3RydWN0b3IocHJvdmlkZXIsIGFjY291bnQsIG1heFdhaXRUaW1lID0gMzAsIG1heGltdW1JbkZsaWdodCA9IDEwMCwgc2xlZXBUaW1lID0gMTApIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMudGFza1F1ZXVlID0gbmV3IEFzeW5jUXVldWUoKTtcbiAgICAvKipcbiAgICAgKiB0cmFuc2FjdGlvbnMgcGF5bG9hZHMgd2FpdGluZyB0byBiZSBnZW5lcmF0ZWQgYW5kIHNpZ25lZFxuICAgICAqXG4gICAgICogVE9ETyBzdXBwb3J0IGVudHJ5IGZ1bmN0aW9uIHBheWxvYWQgZnJvbSBBQkkgYnVpbGRlclxuICAgICAqL1xuICAgIHRoaXMudHJhbnNhY3Rpb25zUXVldWUgPSBuZXcgQXN5bmNRdWV1ZSgpO1xuICAgIC8qKlxuICAgICAqIHNpZ25lZCB0cmFuc2FjdGlvbnMgd2FpdGluZyB0byBiZSBzdWJtaXR0ZWRcbiAgICAgKi9cbiAgICB0aGlzLm91dHN0YW5kaW5nVHJhbnNhY3Rpb25zID0gbmV3IEFzeW5jUXVldWUoKTtcbiAgICAvKipcbiAgICAgKiB0cmFuc2FjdGlvbnMgdGhhdCBoYXZlIGJlZW4gc3VibWl0dGVkIHRvIGNoYWluXG4gICAgICovXG4gICAgdGhpcy5zZW50VHJhbnNhY3Rpb25zID0gW107XG4gICAgLyoqXG4gICAgICogdHJhbnNhY3Rpb25zIHRoYXQgaGF2ZSBiZWVuIGNvbW1pdHRlZCB0byBjaGFpblxuICAgICAqL1xuICAgIHRoaXMuZXhlY3V0ZWRUcmFuc2FjdGlvbnMgPSBbXTtcbiAgICB0aGlzLnByb3ZpZGVyID0gcHJvdmlkZXI7XG4gICAgdGhpcy5hY2NvdW50ID0gYWNjb3VudDtcbiAgICB0aGlzLnN0YXJ0ZWQgPSBmYWxzZTtcbiAgICB0aGlzLmFjY291bnRTZXF1bmNlTnVtYmVyID0gbmV3IEFjY291bnRTZXF1ZW5jZU51bWJlcihwcm92aWRlciwgYWNjb3VudCwgbWF4V2FpdFRpbWUsIG1heGltdW1JbkZsaWdodCwgc2xlZXBUaW1lKTtcbiAgfVxuICAvKipcbiAgICogR2V0cyB0aGUgY3VycmVudCBhY2NvdW50IHNlcXVlbmNlIG51bWJlcixcbiAgICogZ2VuZXJhdGVzIHRoZSB0cmFuc2FjdGlvbiB3aXRoIHRoZSBhY2NvdW50IHNlcXVlbmNlIG51bWJlcixcbiAgICogYWRkcyB0aGUgdHJhbnNhY3Rpb24gdG8gdGhlIG91dHN0YW5kaW5nIHRyYW5zYWN0aW9uIHF1ZXVlXG4gICAqIHRvIGJlIHByb2Nlc3NlZCBsYXRlci5cbiAgICovXG4gIGFzeW5jIHN1Ym1pdE5leHRUcmFuc2FjdGlvbigpIHtcbiAgICB0cnkge1xuICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgaWYgKHRoaXMudHJhbnNhY3Rpb25zUXVldWUuaXNFbXB0eSgpKVxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3Qgc2VxdWVuY2VOdW1iZXIgPSBhd2FpdCB0aGlzLmFjY291bnRTZXF1bmNlTnVtYmVyLm5leHRTZXF1ZW5jZU51bWJlcigpO1xuICAgICAgICBpZiAoc2VxdWVuY2VOdW1iZXIgPT09IG51bGwpXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCB0cmFuc2FjdGlvbiA9IGF3YWl0IHRoaXMuZ2VuZXJhdGVOZXh0VHJhbnNhY3Rpb24odGhpcy5hY2NvdW50LCBzZXF1ZW5jZU51bWJlcik7XG4gICAgICAgIGlmICghdHJhbnNhY3Rpb24pXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBwZW5kaW5nVHJhbnNhY3Rpb24gPSB0aGlzLnByb3ZpZGVyLnN1Ym1pdFNpZ25lZEJDU1RyYW5zYWN0aW9uKHRyYW5zYWN0aW9uKTtcbiAgICAgICAgYXdhaXQgdGhpcy5vdXRzdGFuZGluZ1RyYW5zYWN0aW9ucy5lbnF1ZXVlKFtwZW5kaW5nVHJhbnNhY3Rpb24sIHNlcXVlbmNlTnVtYmVyXSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEFzeW5jUXVldWVDYW5jZWxsZWRFcnJvcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBSZWFkcyB0aGUgb3V0c3RhbmRpbmcgdHJhbnNhY3Rpb24gcXVldWUgYW5kIHN1Ym1pdHMgdGhlIHRyYW5zYWN0aW9uIHRvIGNoYWluLlxuICAgKlxuICAgKiBJZiB0aGUgdHJhbnNhY3Rpb24gaGFzIGZ1bGZpbGxlZCwgaXQgcHVzaGVzIHRoZSB0cmFuc2FjdGlvbiB0byB0aGUgcHJvY2Vzc2VkXG4gICAqIHRyYW5zYWN0aW9ucyBxdWV1ZSBhbmQgZmlyZXMgYSB0cmFuc2FjdGlvbnNGdWxmaWxsZWQgZXZlbnQuXG4gICAqXG4gICAqIElmIHRoZSB0cmFuc2FjdGlvbiBoYXMgZmFpbGVkLCBpdCBwdXNoZXMgdGhlIHRyYW5zYWN0aW9uIHRvIHRoZSBwcm9jZXNzZWRcbiAgICogdHJhbnNhY3Rpb25zIHF1ZXVlIHdpdGggdGhlIGZhaWx1cmUgcmVhc29uIGFuZCBmaXJlcyBhIHRyYW5zYWN0aW9uc0ZhaWxlZCBldmVudC5cbiAgICovXG4gIGFzeW5jIHByb2Nlc3NUcmFuc2FjdGlvbnMoKSB7XG4gICAgdHJ5IHtcbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGNvbnN0IGF3YWl0aW5nVHJhbnNhY3Rpb25zID0gW107XG4gICAgICAgIGNvbnN0IHNlcXVlbmNlTnVtYmVycyA9IFtdO1xuICAgICAgICBsZXQgW3BlbmRpbmdUcmFuc2FjdGlvbiwgc2VxdWVuY2VOdW1iZXJdID0gYXdhaXQgdGhpcy5vdXRzdGFuZGluZ1RyYW5zYWN0aW9ucy5kZXF1ZXVlKCk7XG4gICAgICAgIGF3YWl0aW5nVHJhbnNhY3Rpb25zLnB1c2gocGVuZGluZ1RyYW5zYWN0aW9uKTtcbiAgICAgICAgc2VxdWVuY2VOdW1iZXJzLnB1c2goc2VxdWVuY2VOdW1iZXIpO1xuICAgICAgICB3aGlsZSAoIXRoaXMub3V0c3RhbmRpbmdUcmFuc2FjdGlvbnMuaXNFbXB0eSgpKSB7XG4gICAgICAgICAgW3BlbmRpbmdUcmFuc2FjdGlvbiwgc2VxdWVuY2VOdW1iZXJdID0gYXdhaXQgdGhpcy5vdXRzdGFuZGluZ1RyYW5zYWN0aW9ucy5kZXF1ZXVlKCk7XG4gICAgICAgICAgYXdhaXRpbmdUcmFuc2FjdGlvbnMucHVzaChwZW5kaW5nVHJhbnNhY3Rpb24pO1xuICAgICAgICAgIHNlcXVlbmNlTnVtYmVycy5wdXNoKHNlcXVlbmNlTnVtYmVyKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzZW50VHJhbnNhY3Rpb25zID0gYXdhaXQgUHJvbWlzZS5hbGxTZXR0bGVkKGF3YWl0aW5nVHJhbnNhY3Rpb25zKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZW50VHJhbnNhY3Rpb25zLmxlbmd0aCAmJiBpIDwgc2VxdWVuY2VOdW1iZXJzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgY29uc3Qgc2VudFRyYW5zYWN0aW9uID0gc2VudFRyYW5zYWN0aW9uc1tpXTtcbiAgICAgICAgICBzZXF1ZW5jZU51bWJlciA9IHNlcXVlbmNlTnVtYmVyc1tpXTtcbiAgICAgICAgICBpZiAoc2VudFRyYW5zYWN0aW9uLnN0YXR1cyA9PT0gcHJvbWlzZUZ1bGZpbGxlZFN0YXR1cykge1xuICAgICAgICAgICAgdGhpcy5zZW50VHJhbnNhY3Rpb25zLnB1c2goW3NlbnRUcmFuc2FjdGlvbi52YWx1ZS5oYXNoLCBzZXF1ZW5jZU51bWJlciwgbnVsbF0pO1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwidHJhbnNhY3Rpb25TZW50XCIgLyogVHJhbnNhY3Rpb25TZW50ICovLCBbXG4gICAgICAgICAgICAgIHRoaXMuc2VudFRyYW5zYWN0aW9ucy5sZW5ndGgsXG4gICAgICAgICAgICAgIHNlbnRUcmFuc2FjdGlvbi52YWx1ZS5oYXNoXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuY2hlY2tUcmFuc2FjdGlvbihzZW50VHJhbnNhY3Rpb24sIHNlcXVlbmNlTnVtYmVyKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zZW50VHJhbnNhY3Rpb25zLnB1c2goW3NlbnRUcmFuc2FjdGlvbi5zdGF0dXMsIHNlcXVlbmNlTnVtYmVyLCBzZW50VHJhbnNhY3Rpb24ucmVhc29uXSk7XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJ0cmFuc2FjdGlvbnNlbmRGYWlsZWRcIiAvKiBUcmFuc2FjdGlvblNlbmRGYWlsZWQgKi8sIFtcbiAgICAgICAgICAgICAgdGhpcy5zZW50VHJhbnNhY3Rpb25zLmxlbmd0aCxcbiAgICAgICAgICAgICAgc2VudFRyYW5zYWN0aW9uLnJlYXNvblxuICAgICAgICAgICAgXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEFzeW5jUXVldWVDYW5jZWxsZWRFcnJvcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBPbmNlIHRyYW5zYWN0aW9uIGhhcyBiZWVuIHNlbnQgdG8gY2hhaW4sIHdlIGNoZWNrIGZvciBpdHMgZXhlY3V0aW9uIHN0YXR1cy5cbiAgICogQHBhcmFtIHNlbnRUcmFuc2FjdGlvbiB0cmFuc2FjdGlvbnMgdGhhdCB3ZXJlIHNlbnQgdG8gY2hhaW4gYW5kIGFyZSBub3cgd2FpdGluZyB0byBiZSBleGVjdXRlZFxuICAgKiBAcGFyYW0gc2VxdWVuY2VOdW1iZXIgdGhlIGFjY291bnQncyBzZXF1ZW5jZSBudW1iZXIgdGhhdCB3YXMgc2VudCB3aXRoIHRoZSB0cmFuc2FjdGlvblxuICAgKi9cbiAgYXN5bmMgY2hlY2tUcmFuc2FjdGlvbihzZW50VHJhbnNhY3Rpb24sIHNlcXVlbmNlTnVtYmVyKSB7XG4gICAgY29uc3Qgd2FpdEZvciA9IFtdO1xuICAgIHdhaXRGb3IucHVzaCh0aGlzLnByb3ZpZGVyLndhaXRGb3JUcmFuc2FjdGlvbldpdGhSZXN1bHQoc2VudFRyYW5zYWN0aW9uLnZhbHVlLmhhc2gsIHsgY2hlY2tTdWNjZXNzOiB0cnVlIH0pKTtcbiAgICBjb25zdCBzZW50VHJhbnNhY3Rpb25zID0gYXdhaXQgUHJvbWlzZS5hbGxTZXR0bGVkKHdhaXRGb3IpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VudFRyYW5zYWN0aW9ucy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY29uc3QgZXhlY3V0ZWRUcmFuc2FjdGlvbiA9IHNlbnRUcmFuc2FjdGlvbnNbaV07XG4gICAgICBpZiAoZXhlY3V0ZWRUcmFuc2FjdGlvbi5zdGF0dXMgPT09IHByb21pc2VGdWxmaWxsZWRTdGF0dXMpIHtcbiAgICAgICAgdGhpcy5leGVjdXRlZFRyYW5zYWN0aW9ucy5wdXNoKFtleGVjdXRlZFRyYW5zYWN0aW9uLnZhbHVlLmhhc2gsIHNlcXVlbmNlTnVtYmVyLCBudWxsXSk7XG4gICAgICAgIHRoaXMuZW1pdChcInRyYW5zYWN0aW9uRXhlY3V0ZWRcIiAvKiBUcmFuc2FjdGlvbkV4ZWN1dGVkICovLCBbXG4gICAgICAgICAgdGhpcy5leGVjdXRlZFRyYW5zYWN0aW9ucy5sZW5ndGgsXG4gICAgICAgICAgZXhlY3V0ZWRUcmFuc2FjdGlvbi52YWx1ZS5oYXNoXG4gICAgICAgIF0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5leGVjdXRlZFRyYW5zYWN0aW9ucy5wdXNoKFtleGVjdXRlZFRyYW5zYWN0aW9uLnN0YXR1cywgc2VxdWVuY2VOdW1iZXIsIGV4ZWN1dGVkVHJhbnNhY3Rpb24ucmVhc29uXSk7XG4gICAgICAgIHRoaXMuZW1pdChcInRyYW5zYWN0aW9uZXhlY3V0aW9uRmFpbGVkXCIgLyogVHJhbnNhY3Rpb25FeGVjdXRpb25GYWlsZWQgKi8sIFtcbiAgICAgICAgICB0aGlzLmV4ZWN1dGVkVHJhbnNhY3Rpb25zLmxlbmd0aCxcbiAgICAgICAgICBleGVjdXRlZFRyYW5zYWN0aW9uLnJlYXNvblxuICAgICAgICBdKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIFB1c2ggdHJhbnNhY3Rpb24gdG8gdGhlIHRyYW5zYWN0aW9ucyBxdWV1ZVxuICAgKiBAcGFyYW0gcGF5bG9hZCBUcmFuc2FjdGlvbiBwYXlsb2FkXG4gICAqL1xuICBhc3luYyBwdXNoKHBheWxvYWQpIHtcbiAgICBhd2FpdCB0aGlzLnRyYW5zYWN0aW9uc1F1ZXVlLmVucXVldWUocGF5bG9hZCk7XG4gIH1cbiAgLyoqXG4gICAqIEdlbmVyYXRlcyBhIHNpZ25lZCB0cmFuc2FjdGlvbiB0aGF0IGNhbiBiZSBzdWJtaXR0ZWQgdG8gY2hhaW5cbiAgICogQHBhcmFtIGFjY291bnQgYW4gQXB0b3MgYWNjb3VudFxuICAgKiBAcGFyYW0gc2VxdWVuY2VOdW1iZXIgYSBzZXF1ZW5jZSBudW1iZXIgdGhlIHRyYW5zYWN0aW9uIHdpbGwgYmUgZ2VuZXJhdGVkIHdpdGhcbiAgICogQHJldHVybnNcbiAgICovXG4gIGFzeW5jIGdlbmVyYXRlTmV4dFRyYW5zYWN0aW9uKGFjY291bnQsIHNlcXVlbmNlTnVtYmVyKSB7XG4gICAgaWYgKHRoaXMudHJhbnNhY3Rpb25zUXVldWUuaXNFbXB0eSgpKVxuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICBjb25zdCBwYXlsb2FkID0gYXdhaXQgdGhpcy50cmFuc2FjdGlvbnNRdWV1ZS5kZXF1ZXVlKCk7XG4gICAgY29uc3QgcmF3VHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLnByb3ZpZGVyLmdlbmVyYXRlUmF3VHJhbnNhY3Rpb24oYWNjb3VudC5hZGRyZXNzKCksIHBheWxvYWQsIHtcbiAgICAgIHByb3ZpZGVkU2VxdWVuY2VOdW1iZXI6IHNlcXVlbmNlTnVtYmVyXG4gICAgfSk7XG4gICAgY29uc3Qgc2lnbmVkVHJhbnNhY3Rpb24gPSBBcHRvc0NsaWVudC5nZW5lcmF0ZUJDU1RyYW5zYWN0aW9uKGFjY291bnQsIHJhd1RyYW5zYWN0aW9uKTtcbiAgICByZXR1cm4gc2lnbmVkVHJhbnNhY3Rpb247XG4gIH1cbiAgLyoqXG4gICAqIFN0YXJ0cyB0cmFuc2FjdGlvbiBzdWJtaXNzaW9uIGFuZCB0cmFuc2FjdGlvbiBwcm9jZXNzaW5nLlxuICAgKi9cbiAgYXN5bmMgcnVuKCkge1xuICAgIHRyeSB7XG4gICAgICB3aGlsZSAoIXRoaXMudGFza1F1ZXVlLmlzQ2FuY2VsbGVkKCkpIHtcbiAgICAgICAgY29uc3QgdGFzayA9IGF3YWl0IHRoaXMudGFza1F1ZXVlLmRlcXVldWUoKTtcbiAgICAgICAgYXdhaXQgdGFzaygpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogU3RhcnRzIHRoZSB0cmFuc2FjdGlvbiBtYW5hZ2VtZW50IHByb2Nlc3MuXG4gICAqL1xuICBzdGFydCgpIHtcbiAgICBpZiAodGhpcy5zdGFydGVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ3b3JrZXIgaGFzIGFscmVhZHkgc3RhcnRlZFwiKTtcbiAgICB9XG4gICAgdGhpcy5zdGFydGVkID0gdHJ1ZTtcbiAgICB0aGlzLnRhc2tRdWV1ZS5lbnF1ZXVlKCgpID0+IHRoaXMuc3VibWl0TmV4dFRyYW5zYWN0aW9uKCkpO1xuICAgIHRoaXMudGFza1F1ZXVlLmVucXVldWUoKCkgPT4gdGhpcy5wcm9jZXNzVHJhbnNhY3Rpb25zKCkpO1xuICAgIHRoaXMucnVuKCk7XG4gIH1cbiAgLyoqXG4gICAqIFN0b3BzIHRoZSB0aGUgdHJhbnNhY3Rpb24gbWFuYWdlbWVudCBwcm9jZXNzLlxuICAgKi9cbiAgc3RvcCgpIHtcbiAgICBpZiAodGhpcy50YXNrUXVldWUuaXNDYW5jZWxsZWQoKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwid29ya2VyIGhhcyBhbHJlYWR5IHN0b3BwZWRcIik7XG4gICAgfVxuICAgIHRoaXMuc3RhcnRlZCA9IGZhbHNlO1xuICAgIHRoaXMudGFza1F1ZXVlLmNhbmNlbCgpO1xuICB9XG59O1xuXG4vLyBzcmMvZ2VuZXJhdGVkL2luZGV4LnRzXG52YXIgZ2VuZXJhdGVkX2V4cG9ydHMgPSB7fTtcbl9fZXhwb3J0KGdlbmVyYXRlZF9leHBvcnRzLCB7XG4gIEFwdG9zRXJyb3JDb2RlOiAoKSA9PiBBcHRvc0Vycm9yQ29kZSxcbiAgTW92ZUZ1bmN0aW9uVmlzaWJpbGl0eTogKCkgPT4gTW92ZUZ1bmN0aW9uVmlzaWJpbGl0eSxcbiAgUm9sZVR5cGU6ICgpID0+IFJvbGVUeXBlXG59KTtcblxuLy8gc3JjL2dlbmVyYXRlZC9tb2RlbHMvQXB0b3NFcnJvckNvZGUudHNcbnZhciBBcHRvc0Vycm9yQ29kZSA9IC8qIEBfX1BVUkVfXyAqLyAoKEFwdG9zRXJyb3JDb2RlMikgPT4ge1xuICBBcHRvc0Vycm9yQ29kZTJbXCJBQ0NPVU5UX05PVF9GT1VORFwiXSA9IFwiYWNjb3VudF9ub3RfZm91bmRcIjtcbiAgQXB0b3NFcnJvckNvZGUyW1wiUkVTT1VSQ0VfTk9UX0ZPVU5EXCJdID0gXCJyZXNvdXJjZV9ub3RfZm91bmRcIjtcbiAgQXB0b3NFcnJvckNvZGUyW1wiTU9EVUxFX05PVF9GT1VORFwiXSA9IFwibW9kdWxlX25vdF9mb3VuZFwiO1xuICBBcHRvc0Vycm9yQ29kZTJbXCJTVFJVQ1RfRklFTERfTk9UX0ZPVU5EXCJdID0gXCJzdHJ1Y3RfZmllbGRfbm90X2ZvdW5kXCI7XG4gIEFwdG9zRXJyb3JDb2RlMltcIlZFUlNJT05fTk9UX0ZPVU5EXCJdID0gXCJ2ZXJzaW9uX25vdF9mb3VuZFwiO1xuICBBcHRvc0Vycm9yQ29kZTJbXCJUUkFOU0FDVElPTl9OT1RfRk9VTkRcIl0gPSBcInRyYW5zYWN0aW9uX25vdF9mb3VuZFwiO1xuICBBcHRvc0Vycm9yQ29kZTJbXCJUQUJMRV9JVEVNX05PVF9GT1VORFwiXSA9IFwidGFibGVfaXRlbV9ub3RfZm91bmRcIjtcbiAgQXB0b3NFcnJvckNvZGUyW1wiQkxPQ0tfTk9UX0ZPVU5EXCJdID0gXCJibG9ja19ub3RfZm91bmRcIjtcbiAgQXB0b3NFcnJvckNvZGUyW1wiU1RBVEVfVkFMVUVfTk9UX0ZPVU5EXCJdID0gXCJzdGF0ZV92YWx1ZV9ub3RfZm91bmRcIjtcbiAgQXB0b3NFcnJvckNvZGUyW1wiVkVSU0lPTl9QUlVORURcIl0gPSBcInZlcnNpb25fcHJ1bmVkXCI7XG4gIEFwdG9zRXJyb3JDb2RlMltcIkJMT0NLX1BSVU5FRFwiXSA9IFwiYmxvY2tfcHJ1bmVkXCI7XG4gIEFwdG9zRXJyb3JDb2RlMltcIklOVkFMSURfSU5QVVRcIl0gPSBcImludmFsaWRfaW5wdXRcIjtcbiAgQXB0b3NFcnJvckNvZGUyW1wiSU5WQUxJRF9UUkFOU0FDVElPTl9VUERBVEVcIl0gPSBcImludmFsaWRfdHJhbnNhY3Rpb25fdXBkYXRlXCI7XG4gIEFwdG9zRXJyb3JDb2RlMltcIlNFUVVFTkNFX05VTUJFUl9UT09fT0xEXCJdID0gXCJzZXF1ZW5jZV9udW1iZXJfdG9vX29sZFwiO1xuICBBcHRvc0Vycm9yQ29kZTJbXCJWTV9FUlJPUlwiXSA9IFwidm1fZXJyb3JcIjtcbiAgQXB0b3NFcnJvckNvZGUyW1wiSEVBTFRIX0NIRUNLX0ZBSUxFRFwiXSA9IFwiaGVhbHRoX2NoZWNrX2ZhaWxlZFwiO1xuICBBcHRvc0Vycm9yQ29kZTJbXCJNRU1QT09MX0lTX0ZVTExcIl0gPSBcIm1lbXBvb2xfaXNfZnVsbFwiO1xuICBBcHRvc0Vycm9yQ29kZTJbXCJJTlRFUk5BTF9FUlJPUlwiXSA9IFwiaW50ZXJuYWxfZXJyb3JcIjtcbiAgQXB0b3NFcnJvckNvZGUyW1wiV0VCX0ZSQU1FV09SS19FUlJPUlwiXSA9IFwid2ViX2ZyYW1ld29ya19lcnJvclwiO1xuICBBcHRvc0Vycm9yQ29kZTJbXCJCQ1NfTk9UX1NVUFBPUlRFRFwiXSA9IFwiYmNzX25vdF9zdXBwb3J0ZWRcIjtcbiAgQXB0b3NFcnJvckNvZGUyW1wiQVBJX0RJU0FCTEVEXCJdID0gXCJhcGlfZGlzYWJsZWRcIjtcbiAgcmV0dXJuIEFwdG9zRXJyb3JDb2RlMjtcbn0pKEFwdG9zRXJyb3JDb2RlIHx8IHt9KTtcblxuLy8gc3JjL2dlbmVyYXRlZC9tb2RlbHMvTW92ZUZ1bmN0aW9uVmlzaWJpbGl0eS50c1xudmFyIE1vdmVGdW5jdGlvblZpc2liaWxpdHkgPSAvKiBAX19QVVJFX18gKi8gKChNb3ZlRnVuY3Rpb25WaXNpYmlsaXR5MikgPT4ge1xuICBNb3ZlRnVuY3Rpb25WaXNpYmlsaXR5MltcIlBSSVZBVEVcIl0gPSBcInByaXZhdGVcIjtcbiAgTW92ZUZ1bmN0aW9uVmlzaWJpbGl0eTJbXCJQVUJMSUNcIl0gPSBcInB1YmxpY1wiO1xuICBNb3ZlRnVuY3Rpb25WaXNpYmlsaXR5MltcIkZSSUVORFwiXSA9IFwiZnJpZW5kXCI7XG4gIHJldHVybiBNb3ZlRnVuY3Rpb25WaXNpYmlsaXR5Mjtcbn0pKE1vdmVGdW5jdGlvblZpc2liaWxpdHkgfHwge30pO1xuXG4vLyBzcmMvZ2VuZXJhdGVkL21vZGVscy9Sb2xlVHlwZS50c1xudmFyIFJvbGVUeXBlID0gLyogQF9fUFVSRV9fICovICgoUm9sZVR5cGUyKSA9PiB7XG4gIFJvbGVUeXBlMltcIlZBTElEQVRPUlwiXSA9IFwidmFsaWRhdG9yXCI7XG4gIFJvbGVUeXBlMltcIkZVTExfTk9ERVwiXSA9IFwiZnVsbF9ub2RlXCI7XG4gIHJldHVybiBSb2xlVHlwZTI7XG59KShSb2xlVHlwZSB8fCB7fSk7XG5cbi8vIHNyYy9pbmRleGVyL2dlbmVyYXRlZC90eXBlcy50c1xudmFyIEFjY291bnRfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChBY2NvdW50X1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBBY2NvdW50X1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIkFjY291bnRBZGRyZXNzXCJdID0gXCJhY2NvdW50X2FkZHJlc3NcIjtcbiAgQWNjb3VudF9UcmFuc2FjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcInRyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgcmV0dXJuIEFjY291bnRfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4yO1xufSkoQWNjb3VudF9UcmFuc2FjdGlvbnNfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgQWRkcmVzc19FdmVudHNfU3VtbWFyeV9TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoQWRkcmVzc19FdmVudHNfU3VtbWFyeV9TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBBZGRyZXNzX0V2ZW50c19TdW1tYXJ5X1NlbGVjdF9Db2x1bW4yW1wiQWNjb3VudEFkZHJlc3NcIl0gPSBcImFjY291bnRfYWRkcmVzc1wiO1xuICBBZGRyZXNzX0V2ZW50c19TdW1tYXJ5X1NlbGVjdF9Db2x1bW4yW1wiTWluQmxvY2tIZWlnaHRcIl0gPSBcIm1pbl9ibG9ja19oZWlnaHRcIjtcbiAgQWRkcmVzc19FdmVudHNfU3VtbWFyeV9TZWxlY3RfQ29sdW1uMltcIk51bURpc3RpbmN0VmVyc2lvbnNcIl0gPSBcIm51bV9kaXN0aW5jdF92ZXJzaW9uc1wiO1xuICByZXR1cm4gQWRkcmVzc19FdmVudHNfU3VtbWFyeV9TZWxlY3RfQ29sdW1uMjtcbn0pKEFkZHJlc3NfRXZlbnRzX1N1bW1hcnlfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgQWRkcmVzc19WZXJzaW9uX0Zyb21fRXZlbnRzX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChBZGRyZXNzX1ZlcnNpb25fRnJvbV9FdmVudHNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgQWRkcmVzc19WZXJzaW9uX0Zyb21fRXZlbnRzX1NlbGVjdF9Db2x1bW4yW1wiQWNjb3VudEFkZHJlc3NcIl0gPSBcImFjY291bnRfYWRkcmVzc1wiO1xuICBBZGRyZXNzX1ZlcnNpb25fRnJvbV9FdmVudHNfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcInRyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgcmV0dXJuIEFkZHJlc3NfVmVyc2lvbl9Gcm9tX0V2ZW50c19TZWxlY3RfQ29sdW1uMjtcbn0pKEFkZHJlc3NfVmVyc2lvbl9Gcm9tX0V2ZW50c19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBBZGRyZXNzX1ZlcnNpb25fRnJvbV9Nb3ZlX1Jlc291cmNlc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoQWRkcmVzc19WZXJzaW9uX0Zyb21fTW92ZV9SZXNvdXJjZXNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgQWRkcmVzc19WZXJzaW9uX0Zyb21fTW92ZV9SZXNvdXJjZXNfU2VsZWN0X0NvbHVtbjJbXCJBZGRyZXNzXCJdID0gXCJhZGRyZXNzXCI7XG4gIEFkZHJlc3NfVmVyc2lvbl9Gcm9tX01vdmVfUmVzb3VyY2VzX1NlbGVjdF9Db2x1bW4yW1wiVHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJ0cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIHJldHVybiBBZGRyZXNzX1ZlcnNpb25fRnJvbV9Nb3ZlX1Jlc291cmNlc19TZWxlY3RfQ29sdW1uMjtcbn0pKEFkZHJlc3NfVmVyc2lvbl9Gcm9tX01vdmVfUmVzb3VyY2VzX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIEJsb2NrX01ldGFkYXRhX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoQmxvY2tfTWV0YWRhdGFfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4yKSA9PiB7XG4gIEJsb2NrX01ldGFkYXRhX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIkJsb2NrSGVpZ2h0XCJdID0gXCJibG9ja19oZWlnaHRcIjtcbiAgQmxvY2tfTWV0YWRhdGFfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4yW1wiRXBvY2hcIl0gPSBcImVwb2NoXCI7XG4gIEJsb2NrX01ldGFkYXRhX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIkZhaWxlZFByb3Bvc2VySW5kaWNlc1wiXSA9IFwiZmFpbGVkX3Byb3Bvc2VyX2luZGljZXNcIjtcbiAgQmxvY2tfTWV0YWRhdGFfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4yW1wiSWRcIl0gPSBcImlkXCI7XG4gIEJsb2NrX01ldGFkYXRhX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIlByZXZpb3VzQmxvY2tWb3Rlc0JpdHZlY1wiXSA9IFwicHJldmlvdXNfYmxvY2tfdm90ZXNfYml0dmVjXCI7XG4gIEJsb2NrX01ldGFkYXRhX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIlByb3Bvc2VyXCJdID0gXCJwcm9wb3NlclwiO1xuICBCbG9ja19NZXRhZGF0YV9UcmFuc2FjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJSb3VuZFwiXSA9IFwicm91bmRcIjtcbiAgQmxvY2tfTWV0YWRhdGFfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4yW1wiVGltZXN0YW1wXCJdID0gXCJ0aW1lc3RhbXBcIjtcbiAgQmxvY2tfTWV0YWRhdGFfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4yW1wiVmVyc2lvblwiXSA9IFwidmVyc2lvblwiO1xuICByZXR1cm4gQmxvY2tfTWV0YWRhdGFfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4yO1xufSkoQmxvY2tfTWV0YWRhdGFfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIENvaW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoQ29pbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yKSA9PiB7XG4gIENvaW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIkFjdGl2aXR5VHlwZVwiXSA9IFwiYWN0aXZpdHlfdHlwZVwiO1xuICBDb2luX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJBbW91bnRcIl0gPSBcImFtb3VudFwiO1xuICBDb2luX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJCbG9ja0hlaWdodFwiXSA9IFwiYmxvY2tfaGVpZ2h0XCI7XG4gIENvaW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIkNvaW5UeXBlXCJdID0gXCJjb2luX3R5cGVcIjtcbiAgQ29pbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiRW50cnlGdW5jdGlvbklkU3RyXCJdID0gXCJlbnRyeV9mdW5jdGlvbl9pZF9zdHJcIjtcbiAgQ29pbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiRXZlbnRBY2NvdW50QWRkcmVzc1wiXSA9IFwiZXZlbnRfYWNjb3VudF9hZGRyZXNzXCI7XG4gIENvaW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIkV2ZW50Q3JlYXRpb25OdW1iZXJcIl0gPSBcImV2ZW50X2NyZWF0aW9uX251bWJlclwiO1xuICBDb2luX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJFdmVudEluZGV4XCJdID0gXCJldmVudF9pbmRleFwiO1xuICBDb2luX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJFdmVudFNlcXVlbmNlTnVtYmVyXCJdID0gXCJldmVudF9zZXF1ZW5jZV9udW1iZXJcIjtcbiAgQ29pbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiSXNHYXNGZWVcIl0gPSBcImlzX2dhc19mZWVcIjtcbiAgQ29pbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiSXNUcmFuc2FjdGlvblN1Y2Nlc3NcIl0gPSBcImlzX3RyYW5zYWN0aW9uX3N1Y2Nlc3NcIjtcbiAgQ29pbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiT3duZXJBZGRyZXNzXCJdID0gXCJvd25lcl9hZGRyZXNzXCI7XG4gIENvaW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIlN0b3JhZ2VSZWZ1bmRBbW91bnRcIl0gPSBcInN0b3JhZ2VfcmVmdW5kX2Ftb3VudFwiO1xuICBDb2luX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblRpbWVzdGFtcFwiXSA9IFwidHJhbnNhY3Rpb25fdGltZXN0YW1wXCI7XG4gIENvaW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwidHJhbnNhY3Rpb25fdmVyc2lvblwiO1xuICByZXR1cm4gQ29pbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yO1xufSkoQ29pbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIENvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKENvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgQ29pbl9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIkFtb3VudFwiXSA9IFwiYW1vdW50XCI7XG4gIENvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJDb2luVHlwZVwiXSA9IFwiY29pbl90eXBlXCI7XG4gIENvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJDb2luVHlwZUhhc2hcIl0gPSBcImNvaW5fdHlwZV9oYXNoXCI7XG4gIENvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJPd25lckFkZHJlc3NcIl0gPSBcIm93bmVyX2FkZHJlc3NcIjtcbiAgQ29pbl9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJ0cmFuc2FjdGlvbl90aW1lc3RhbXBcIjtcbiAgQ29pbl9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwidHJhbnNhY3Rpb25fdmVyc2lvblwiO1xuICByZXR1cm4gQ29pbl9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMjtcbn0pKENvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgQ29pbl9JbmZvc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoQ29pbl9JbmZvc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDb2luX0luZm9zX1NlbGVjdF9Db2x1bW4yW1wiQ29pblR5cGVcIl0gPSBcImNvaW5fdHlwZVwiO1xuICBDb2luX0luZm9zX1NlbGVjdF9Db2x1bW4yW1wiQ29pblR5cGVIYXNoXCJdID0gXCJjb2luX3R5cGVfaGFzaFwiO1xuICBDb2luX0luZm9zX1NlbGVjdF9Db2x1bW4yW1wiQ3JlYXRvckFkZHJlc3NcIl0gPSBcImNyZWF0b3JfYWRkcmVzc1wiO1xuICBDb2luX0luZm9zX1NlbGVjdF9Db2x1bW4yW1wiRGVjaW1hbHNcIl0gPSBcImRlY2ltYWxzXCI7XG4gIENvaW5fSW5mb3NfU2VsZWN0X0NvbHVtbjJbXCJOYW1lXCJdID0gXCJuYW1lXCI7XG4gIENvaW5fSW5mb3NfU2VsZWN0X0NvbHVtbjJbXCJTdXBwbHlBZ2dyZWdhdG9yVGFibGVIYW5kbGVcIl0gPSBcInN1cHBseV9hZ2dyZWdhdG9yX3RhYmxlX2hhbmRsZVwiO1xuICBDb2luX0luZm9zX1NlbGVjdF9Db2x1bW4yW1wiU3VwcGx5QWdncmVnYXRvclRhYmxlS2V5XCJdID0gXCJzdXBwbHlfYWdncmVnYXRvcl90YWJsZV9rZXlcIjtcbiAgQ29pbl9JbmZvc19TZWxlY3RfQ29sdW1uMltcIlN5bWJvbFwiXSA9IFwic3ltYm9sXCI7XG4gIENvaW5fSW5mb3NfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvbkNyZWF0ZWRUaW1lc3RhbXBcIl0gPSBcInRyYW5zYWN0aW9uX2NyZWF0ZWRfdGltZXN0YW1wXCI7XG4gIENvaW5fSW5mb3NfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblZlcnNpb25DcmVhdGVkXCJdID0gXCJ0cmFuc2FjdGlvbl92ZXJzaW9uX2NyZWF0ZWRcIjtcbiAgcmV0dXJuIENvaW5fSW5mb3NfU2VsZWN0X0NvbHVtbjI7XG59KShDb2luX0luZm9zX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIENvaW5fU3VwcGx5X1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChDb2luX1N1cHBseV9TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDb2luX1N1cHBseV9TZWxlY3RfQ29sdW1uMltcIkNvaW5UeXBlXCJdID0gXCJjb2luX3R5cGVcIjtcbiAgQ29pbl9TdXBwbHlfU2VsZWN0X0NvbHVtbjJbXCJDb2luVHlwZUhhc2hcIl0gPSBcImNvaW5fdHlwZV9oYXNoXCI7XG4gIENvaW5fU3VwcGx5X1NlbGVjdF9Db2x1bW4yW1wiU3VwcGx5XCJdID0gXCJzdXBwbHlcIjtcbiAgQ29pbl9TdXBwbHlfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvbkVwb2NoXCJdID0gXCJ0cmFuc2FjdGlvbl9lcG9jaFwiO1xuICBDb2luX1N1cHBseV9TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJ0cmFuc2FjdGlvbl90aW1lc3RhbXBcIjtcbiAgQ29pbl9TdXBwbHlfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcInRyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgcmV0dXJuIENvaW5fU3VwcGx5X1NlbGVjdF9Db2x1bW4yO1xufSkoQ29pbl9TdXBwbHlfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDb2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiQ29sbGVjdGlvbkRhdGFJZEhhc2hcIl0gPSBcImNvbGxlY3Rpb25fZGF0YV9pZF9oYXNoXCI7XG4gIENvbGxlY3Rpb25fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uTmFtZVwiXSA9IFwiY29sbGVjdGlvbl9uYW1lXCI7XG4gIENvbGxlY3Rpb25fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJDcmVhdG9yQWRkcmVzc1wiXSA9IFwiY3JlYXRvcl9hZGRyZXNzXCI7XG4gIENvbGxlY3Rpb25fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJEZXNjcmlwdGlvblwiXSA9IFwiZGVzY3JpcHRpb25cIjtcbiAgQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIkRlc2NyaXB0aW9uTXV0YWJsZVwiXSA9IFwiZGVzY3JpcHRpb25fbXV0YWJsZVwiO1xuICBDb2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiTWF4aW11bVwiXSA9IFwibWF4aW11bVwiO1xuICBDb2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiTWF4aW11bU11dGFibGVcIl0gPSBcIm1heGltdW1fbXV0YWJsZVwiO1xuICBDb2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiTWV0YWRhdGFVcmlcIl0gPSBcIm1ldGFkYXRhX3VyaVwiO1xuICBDb2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiU3VwcGx5XCJdID0gXCJzdXBwbHlcIjtcbiAgQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlRhYmxlSGFuZGxlXCJdID0gXCJ0YWJsZV9oYW5kbGVcIjtcbiAgQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJ0cmFuc2FjdGlvbl90aW1lc3RhbXBcIjtcbiAgQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwidHJhbnNhY3Rpb25fdmVyc2lvblwiO1xuICBDb2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiVXJpTXV0YWJsZVwiXSA9IFwidXJpX211dGFibGVcIjtcbiAgcmV0dXJuIENvbGxlY3Rpb25fRGF0YXNfU2VsZWN0X0NvbHVtbjI7XG59KShDb2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIEN1cnJlbnRfQW5zX0xvb2t1cF9TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoQ3VycmVudF9BbnNfTG9va3VwX1NlbGVjdF9Db2x1bW4yKSA9PiB7XG4gIEN1cnJlbnRfQW5zX0xvb2t1cF9TZWxlY3RfQ29sdW1uMltcIkRvbWFpblwiXSA9IFwiZG9tYWluXCI7XG4gIEN1cnJlbnRfQW5zX0xvb2t1cF9TZWxlY3RfQ29sdW1uMltcIkV4cGlyYXRpb25UaW1lc3RhbXBcIl0gPSBcImV4cGlyYXRpb25fdGltZXN0YW1wXCI7XG4gIEN1cnJlbnRfQW5zX0xvb2t1cF9TZWxlY3RfQ29sdW1uMltcIklzRGVsZXRlZFwiXSA9IFwiaXNfZGVsZXRlZFwiO1xuICBDdXJyZW50X0Fuc19Mb29rdXBfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgQ3VycmVudF9BbnNfTG9va3VwX1NlbGVjdF9Db2x1bW4yW1wiUmVnaXN0ZXJlZEFkZHJlc3NcIl0gPSBcInJlZ2lzdGVyZWRfYWRkcmVzc1wiO1xuICBDdXJyZW50X0Fuc19Mb29rdXBfU2VsZWN0X0NvbHVtbjJbXCJTdWJkb21haW5cIl0gPSBcInN1YmRvbWFpblwiO1xuICBDdXJyZW50X0Fuc19Mb29rdXBfU2VsZWN0X0NvbHVtbjJbXCJUb2tlbk5hbWVcIl0gPSBcInRva2VuX25hbWVcIjtcbiAgcmV0dXJuIEN1cnJlbnRfQW5zX0xvb2t1cF9TZWxlY3RfQ29sdW1uMjtcbn0pKEN1cnJlbnRfQW5zX0xvb2t1cF9TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBDdXJyZW50X0Fuc19Mb29rdXBfVjJfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKEN1cnJlbnRfQW5zX0xvb2t1cF9WMl9TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDdXJyZW50X0Fuc19Mb29rdXBfVjJfU2VsZWN0X0NvbHVtbjJbXCJEb21haW5cIl0gPSBcImRvbWFpblwiO1xuICBDdXJyZW50X0Fuc19Mb29rdXBfVjJfU2VsZWN0X0NvbHVtbjJbXCJFeHBpcmF0aW9uVGltZXN0YW1wXCJdID0gXCJleHBpcmF0aW9uX3RpbWVzdGFtcFwiO1xuICBDdXJyZW50X0Fuc19Mb29rdXBfVjJfU2VsZWN0X0NvbHVtbjJbXCJJc0RlbGV0ZWRcIl0gPSBcImlzX2RlbGV0ZWRcIjtcbiAgQ3VycmVudF9BbnNfTG9va3VwX1YyX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIEN1cnJlbnRfQW5zX0xvb2t1cF9WMl9TZWxlY3RfQ29sdW1uMltcIlJlZ2lzdGVyZWRBZGRyZXNzXCJdID0gXCJyZWdpc3RlcmVkX2FkZHJlc3NcIjtcbiAgQ3VycmVudF9BbnNfTG9va3VwX1YyX1NlbGVjdF9Db2x1bW4yW1wiU3ViZG9tYWluXCJdID0gXCJzdWJkb21haW5cIjtcbiAgQ3VycmVudF9BbnNfTG9va3VwX1YyX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5OYW1lXCJdID0gXCJ0b2tlbl9uYW1lXCI7XG4gIEN1cnJlbnRfQW5zX0xvb2t1cF9WMl9TZWxlY3RfQ29sdW1uMltcIlRva2VuU3RhbmRhcmRcIl0gPSBcInRva2VuX3N0YW5kYXJkXCI7XG4gIHJldHVybiBDdXJyZW50X0Fuc19Mb29rdXBfVjJfU2VsZWN0X0NvbHVtbjI7XG59KShDdXJyZW50X0Fuc19Mb29rdXBfVjJfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgQ3VycmVudF9BcHRvc19OYW1lc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoQ3VycmVudF9BcHRvc19OYW1lc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDdXJyZW50X0FwdG9zX05hbWVzX1NlbGVjdF9Db2x1bW4yW1wiRG9tYWluXCJdID0gXCJkb21haW5cIjtcbiAgQ3VycmVudF9BcHRvc19OYW1lc19TZWxlY3RfQ29sdW1uMltcIkRvbWFpbldpdGhTdWZmaXhcIl0gPSBcImRvbWFpbl93aXRoX3N1ZmZpeFwiO1xuICBDdXJyZW50X0FwdG9zX05hbWVzX1NlbGVjdF9Db2x1bW4yW1wiRXhwaXJhdGlvblRpbWVzdGFtcFwiXSA9IFwiZXhwaXJhdGlvbl90aW1lc3RhbXBcIjtcbiAgQ3VycmVudF9BcHRvc19OYW1lc19TZWxlY3RfQ29sdW1uMltcIklzQWN0aXZlXCJdID0gXCJpc19hY3RpdmVcIjtcbiAgQ3VycmVudF9BcHRvc19OYW1lc19TZWxlY3RfQ29sdW1uMltcIklzUHJpbWFyeVwiXSA9IFwiaXNfcHJpbWFyeVwiO1xuICBDdXJyZW50X0FwdG9zX05hbWVzX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIEN1cnJlbnRfQXB0b3NfTmFtZXNfU2VsZWN0X0NvbHVtbjJbXCJPd25lckFkZHJlc3NcIl0gPSBcIm93bmVyX2FkZHJlc3NcIjtcbiAgQ3VycmVudF9BcHRvc19OYW1lc19TZWxlY3RfQ29sdW1uMltcIlJlZ2lzdGVyZWRBZGRyZXNzXCJdID0gXCJyZWdpc3RlcmVkX2FkZHJlc3NcIjtcbiAgQ3VycmVudF9BcHRvc19OYW1lc19TZWxlY3RfQ29sdW1uMltcIlN1YmRvbWFpblwiXSA9IFwic3ViZG9tYWluXCI7XG4gIEN1cnJlbnRfQXB0b3NfTmFtZXNfU2VsZWN0X0NvbHVtbjJbXCJUb2tlbk5hbWVcIl0gPSBcInRva2VuX25hbWVcIjtcbiAgQ3VycmVudF9BcHRvc19OYW1lc19TZWxlY3RfQ29sdW1uMltcIlRva2VuU3RhbmRhcmRcIl0gPSBcInRva2VuX3N0YW5kYXJkXCI7XG4gIHJldHVybiBDdXJyZW50X0FwdG9zX05hbWVzX1NlbGVjdF9Db2x1bW4yO1xufSkoQ3VycmVudF9BcHRvc19OYW1lc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBDdXJyZW50X0NvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKEN1cnJlbnRfQ29pbl9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDdXJyZW50X0NvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJBbW91bnRcIl0gPSBcImFtb3VudFwiO1xuICBDdXJyZW50X0NvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJDb2luVHlwZVwiXSA9IFwiY29pbl90eXBlXCI7XG4gIEN1cnJlbnRfQ29pbl9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIkNvaW5UeXBlSGFzaFwiXSA9IFwiY29pbl90eXBlX2hhc2hcIjtcbiAgQ3VycmVudF9Db2luX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3RpbWVzdGFtcFwiO1xuICBDdXJyZW50X0NvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgQ3VycmVudF9Db2luX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yW1wiT3duZXJBZGRyZXNzXCJdID0gXCJvd25lcl9hZGRyZXNzXCI7XG4gIHJldHVybiBDdXJyZW50X0NvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjI7XG59KShDdXJyZW50X0NvaW5fQmFsYW5jZXNfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgQ3VycmVudF9Db2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChDdXJyZW50X0NvbGxlY3Rpb25fRGF0YXNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgQ3VycmVudF9Db2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiQ29sbGVjdGlvbkRhdGFJZEhhc2hcIl0gPSBcImNvbGxlY3Rpb25fZGF0YV9pZF9oYXNoXCI7XG4gIEN1cnJlbnRfQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIkNvbGxlY3Rpb25OYW1lXCJdID0gXCJjb2xsZWN0aW9uX25hbWVcIjtcbiAgQ3VycmVudF9Db2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiQ3JlYXRvckFkZHJlc3NcIl0gPSBcImNyZWF0b3JfYWRkcmVzc1wiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJEZXNjcmlwdGlvblwiXSA9IFwiZGVzY3JpcHRpb25cIjtcbiAgQ3VycmVudF9Db2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiRGVzY3JpcHRpb25NdXRhYmxlXCJdID0gXCJkZXNjcmlwdGlvbl9tdXRhYmxlXCI7XG4gIEN1cnJlbnRfQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIkxhc3RUcmFuc2FjdGlvblRpbWVzdGFtcFwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl90aW1lc3RhbXBcIjtcbiAgQ3VycmVudF9Db2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIEN1cnJlbnRfQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIk1heGltdW1cIl0gPSBcIm1heGltdW1cIjtcbiAgQ3VycmVudF9Db2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiTWF4aW11bU11dGFibGVcIl0gPSBcIm1heGltdW1fbXV0YWJsZVwiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJNZXRhZGF0YVVyaVwiXSA9IFwibWV0YWRhdGFfdXJpXCI7XG4gIEN1cnJlbnRfQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlN1cHBseVwiXSA9IFwic3VwcGx5XCI7XG4gIEN1cnJlbnRfQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlRhYmxlSGFuZGxlXCJdID0gXCJ0YWJsZV9oYW5kbGVcIjtcbiAgQ3VycmVudF9Db2xsZWN0aW9uX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiVXJpTXV0YWJsZVwiXSA9IFwidXJpX211dGFibGVcIjtcbiAgcmV0dXJuIEN1cnJlbnRfQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uMjtcbn0pKEN1cnJlbnRfQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBDdXJyZW50X0NvbGxlY3Rpb25fT3duZXJzaGlwX1YyX1ZpZXdfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKEN1cnJlbnRfQ29sbGVjdGlvbl9Pd25lcnNoaXBfVjJfVmlld19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDdXJyZW50X0NvbGxlY3Rpb25fT3duZXJzaGlwX1YyX1ZpZXdfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uSWRcIl0gPSBcImNvbGxlY3Rpb25faWRcIjtcbiAgQ3VycmVudF9Db2xsZWN0aW9uX093bmVyc2hpcF9WMl9WaWV3X1NlbGVjdF9Db2x1bW4yW1wiQ29sbGVjdGlvbk5hbWVcIl0gPSBcImNvbGxlY3Rpb25fbmFtZVwiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25fT3duZXJzaGlwX1YyX1ZpZXdfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uVXJpXCJdID0gXCJjb2xsZWN0aW9uX3VyaVwiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25fT3duZXJzaGlwX1YyX1ZpZXdfU2VsZWN0X0NvbHVtbjJbXCJDcmVhdG9yQWRkcmVzc1wiXSA9IFwiY3JlYXRvcl9hZGRyZXNzXCI7XG4gIEN1cnJlbnRfQ29sbGVjdGlvbl9Pd25lcnNoaXBfVjJfVmlld19TZWxlY3RfQ29sdW1uMltcIkRpc3RpbmN0VG9rZW5zXCJdID0gXCJkaXN0aW5jdF90b2tlbnNcIjtcbiAgQ3VycmVudF9Db2xsZWN0aW9uX093bmVyc2hpcF9WMl9WaWV3X1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIEN1cnJlbnRfQ29sbGVjdGlvbl9Pd25lcnNoaXBfVjJfVmlld19TZWxlY3RfQ29sdW1uMltcIk93bmVyQWRkcmVzc1wiXSA9IFwib3duZXJfYWRkcmVzc1wiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25fT3duZXJzaGlwX1YyX1ZpZXdfU2VsZWN0X0NvbHVtbjJbXCJTaW5nbGVUb2tlblVyaVwiXSA9IFwic2luZ2xlX3Rva2VuX3VyaVwiO1xuICByZXR1cm4gQ3VycmVudF9Db2xsZWN0aW9uX093bmVyc2hpcF9WMl9WaWV3X1NlbGVjdF9Db2x1bW4yO1xufSkoQ3VycmVudF9Db2xsZWN0aW9uX093bmVyc2hpcF9WMl9WaWV3X1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIEN1cnJlbnRfQ29sbGVjdGlvbnNfVjJfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKEN1cnJlbnRfQ29sbGVjdGlvbnNfVjJfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgQ3VycmVudF9Db2xsZWN0aW9uc19WMl9TZWxlY3RfQ29sdW1uMltcIkNvbGxlY3Rpb25JZFwiXSA9IFwiY29sbGVjdGlvbl9pZFwiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25zX1YyX1NlbGVjdF9Db2x1bW4yW1wiQ29sbGVjdGlvbk5hbWVcIl0gPSBcImNvbGxlY3Rpb25fbmFtZVwiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25zX1YyX1NlbGVjdF9Db2x1bW4yW1wiQ3JlYXRvckFkZHJlc3NcIl0gPSBcImNyZWF0b3JfYWRkcmVzc1wiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25zX1YyX1NlbGVjdF9Db2x1bW4yW1wiQ3VycmVudFN1cHBseVwiXSA9IFwiY3VycmVudF9zdXBwbHlcIjtcbiAgQ3VycmVudF9Db2xsZWN0aW9uc19WMl9TZWxlY3RfQ29sdW1uMltcIkRlc2NyaXB0aW9uXCJdID0gXCJkZXNjcmlwdGlvblwiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25zX1YyX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3RpbWVzdGFtcFwiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25zX1YyX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIEN1cnJlbnRfQ29sbGVjdGlvbnNfVjJfU2VsZWN0X0NvbHVtbjJbXCJNYXhTdXBwbHlcIl0gPSBcIm1heF9zdXBwbHlcIjtcbiAgQ3VycmVudF9Db2xsZWN0aW9uc19WMl9TZWxlY3RfQ29sdW1uMltcIk11dGFibGVEZXNjcmlwdGlvblwiXSA9IFwibXV0YWJsZV9kZXNjcmlwdGlvblwiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25zX1YyX1NlbGVjdF9Db2x1bW4yW1wiTXV0YWJsZVVyaVwiXSA9IFwibXV0YWJsZV91cmlcIjtcbiAgQ3VycmVudF9Db2xsZWN0aW9uc19WMl9TZWxlY3RfQ29sdW1uMltcIlRhYmxlSGFuZGxlVjFcIl0gPSBcInRhYmxlX2hhbmRsZV92MVwiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25zX1YyX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5TdGFuZGFyZFwiXSA9IFwidG9rZW5fc3RhbmRhcmRcIjtcbiAgQ3VycmVudF9Db2xsZWN0aW9uc19WMl9TZWxlY3RfQ29sdW1uMltcIlRvdGFsTWludGVkVjJcIl0gPSBcInRvdGFsX21pbnRlZF92MlwiO1xuICBDdXJyZW50X0NvbGxlY3Rpb25zX1YyX1NlbGVjdF9Db2x1bW4yW1wiVXJpXCJdID0gXCJ1cmlcIjtcbiAgcmV0dXJuIEN1cnJlbnRfQ29sbGVjdGlvbnNfVjJfU2VsZWN0X0NvbHVtbjI7XG59KShDdXJyZW50X0NvbGxlY3Rpb25zX1YyX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIEN1cnJlbnRfRGVsZWdhdGVkX1N0YWtpbmdfUG9vbF9CYWxhbmNlc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoQ3VycmVudF9EZWxlZ2F0ZWRfU3Rha2luZ19Qb29sX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yKSA9PiB7XG4gIEN1cnJlbnRfRGVsZWdhdGVkX1N0YWtpbmdfUG9vbF9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIkFjdGl2ZVRhYmxlSGFuZGxlXCJdID0gXCJhY3RpdmVfdGFibGVfaGFuZGxlXCI7XG4gIEN1cnJlbnRfRGVsZWdhdGVkX1N0YWtpbmdfUG9vbF9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIkluYWN0aXZlVGFibGVIYW5kbGVcIl0gPSBcImluYWN0aXZlX3RhYmxlX2hhbmRsZVwiO1xuICBDdXJyZW50X0RlbGVnYXRlZF9TdGFraW5nX1Bvb2xfQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgQ3VycmVudF9EZWxlZ2F0ZWRfU3Rha2luZ19Qb29sX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yW1wiT3BlcmF0b3JDb21taXNzaW9uUGVyY2VudGFnZVwiXSA9IFwib3BlcmF0b3JfY29tbWlzc2lvbl9wZXJjZW50YWdlXCI7XG4gIEN1cnJlbnRfRGVsZWdhdGVkX1N0YWtpbmdfUG9vbF9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIlN0YWtpbmdQb29sQWRkcmVzc1wiXSA9IFwic3Rha2luZ19wb29sX2FkZHJlc3NcIjtcbiAgQ3VycmVudF9EZWxlZ2F0ZWRfU3Rha2luZ19Qb29sX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yW1wiVG90YWxDb2luc1wiXSA9IFwidG90YWxfY29pbnNcIjtcbiAgQ3VycmVudF9EZWxlZ2F0ZWRfU3Rha2luZ19Qb29sX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yW1wiVG90YWxTaGFyZXNcIl0gPSBcInRvdGFsX3NoYXJlc1wiO1xuICByZXR1cm4gQ3VycmVudF9EZWxlZ2F0ZWRfU3Rha2luZ19Qb29sX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yO1xufSkoQ3VycmVudF9EZWxlZ2F0ZWRfU3Rha2luZ19Qb29sX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIEN1cnJlbnRfRGVsZWdhdGVkX1ZvdGVyX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChDdXJyZW50X0RlbGVnYXRlZF9Wb3Rlcl9TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDdXJyZW50X0RlbGVnYXRlZF9Wb3Rlcl9TZWxlY3RfQ29sdW1uMltcIkRlbGVnYXRpb25Qb29sQWRkcmVzc1wiXSA9IFwiZGVsZWdhdGlvbl9wb29sX2FkZHJlc3NcIjtcbiAgQ3VycmVudF9EZWxlZ2F0ZWRfVm90ZXJfU2VsZWN0X0NvbHVtbjJbXCJEZWxlZ2F0b3JBZGRyZXNzXCJdID0gXCJkZWxlZ2F0b3JfYWRkcmVzc1wiO1xuICBDdXJyZW50X0RlbGVnYXRlZF9Wb3Rlcl9TZWxlY3RfQ29sdW1uMltcIkxhc3RUcmFuc2FjdGlvblRpbWVzdGFtcFwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl90aW1lc3RhbXBcIjtcbiAgQ3VycmVudF9EZWxlZ2F0ZWRfVm90ZXJfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgQ3VycmVudF9EZWxlZ2F0ZWRfVm90ZXJfU2VsZWN0X0NvbHVtbjJbXCJQZW5kaW5nVm90ZXJcIl0gPSBcInBlbmRpbmdfdm90ZXJcIjtcbiAgQ3VycmVudF9EZWxlZ2F0ZWRfVm90ZXJfU2VsZWN0X0NvbHVtbjJbXCJUYWJsZUhhbmRsZVwiXSA9IFwidGFibGVfaGFuZGxlXCI7XG4gIEN1cnJlbnRfRGVsZWdhdGVkX1ZvdGVyX1NlbGVjdF9Db2x1bW4yW1wiVm90ZXJcIl0gPSBcInZvdGVyXCI7XG4gIHJldHVybiBDdXJyZW50X0RlbGVnYXRlZF9Wb3Rlcl9TZWxlY3RfQ29sdW1uMjtcbn0pKEN1cnJlbnRfRGVsZWdhdGVkX1ZvdGVyX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIEN1cnJlbnRfRGVsZWdhdG9yX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChDdXJyZW50X0RlbGVnYXRvcl9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDdXJyZW50X0RlbGVnYXRvcl9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIkRlbGVnYXRvckFkZHJlc3NcIl0gPSBcImRlbGVnYXRvcl9hZGRyZXNzXCI7XG4gIEN1cnJlbnRfRGVsZWdhdG9yX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIEN1cnJlbnRfRGVsZWdhdG9yX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yW1wiUGFyZW50VGFibGVIYW5kbGVcIl0gPSBcInBhcmVudF90YWJsZV9oYW5kbGVcIjtcbiAgQ3VycmVudF9EZWxlZ2F0b3JfQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJQb29sQWRkcmVzc1wiXSA9IFwicG9vbF9hZGRyZXNzXCI7XG4gIEN1cnJlbnRfRGVsZWdhdG9yX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yW1wiUG9vbFR5cGVcIl0gPSBcInBvb2xfdHlwZVwiO1xuICBDdXJyZW50X0RlbGVnYXRvcl9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIlNoYXJlc1wiXSA9IFwic2hhcmVzXCI7XG4gIEN1cnJlbnRfRGVsZWdhdG9yX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yW1wiVGFibGVIYW5kbGVcIl0gPSBcInRhYmxlX2hhbmRsZVwiO1xuICByZXR1cm4gQ3VycmVudF9EZWxlZ2F0b3JfQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjI7XG59KShDdXJyZW50X0RlbGVnYXRvcl9CYWxhbmNlc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBDdXJyZW50X0Z1bmdpYmxlX0Fzc2V0X0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChDdXJyZW50X0Z1bmdpYmxlX0Fzc2V0X0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yKSA9PiB7XG4gIEN1cnJlbnRfRnVuZ2libGVfQXNzZXRfQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJBbW91bnRcIl0gPSBcImFtb3VudFwiO1xuICBDdXJyZW50X0Z1bmdpYmxlX0Fzc2V0X0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yW1wiQXNzZXRUeXBlXCJdID0gXCJhc3NldF90eXBlXCI7XG4gIEN1cnJlbnRfRnVuZ2libGVfQXNzZXRfQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJJc0Zyb3plblwiXSA9IFwiaXNfZnJvemVuXCI7XG4gIEN1cnJlbnRfRnVuZ2libGVfQXNzZXRfQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJJc1ByaW1hcnlcIl0gPSBcImlzX3ByaW1hcnlcIjtcbiAgQ3VycmVudF9GdW5naWJsZV9Bc3NldF9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIkxhc3RUcmFuc2FjdGlvblRpbWVzdGFtcFwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl90aW1lc3RhbXBcIjtcbiAgQ3VycmVudF9GdW5naWJsZV9Bc3NldF9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIkxhc3RUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcImxhc3RfdHJhbnNhY3Rpb25fdmVyc2lvblwiO1xuICBDdXJyZW50X0Z1bmdpYmxlX0Fzc2V0X0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yW1wiT3duZXJBZGRyZXNzXCJdID0gXCJvd25lcl9hZGRyZXNzXCI7XG4gIEN1cnJlbnRfRnVuZ2libGVfQXNzZXRfQmFsYW5jZXNfU2VsZWN0X0NvbHVtbjJbXCJTdG9yYWdlSWRcIl0gPSBcInN0b3JhZ2VfaWRcIjtcbiAgQ3VycmVudF9GdW5naWJsZV9Bc3NldF9CYWxhbmNlc19TZWxlY3RfQ29sdW1uMltcIlRva2VuU3RhbmRhcmRcIl0gPSBcInRva2VuX3N0YW5kYXJkXCI7XG4gIHJldHVybiBDdXJyZW50X0Z1bmdpYmxlX0Fzc2V0X0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4yO1xufSkoQ3VycmVudF9GdW5naWJsZV9Bc3NldF9CYWxhbmNlc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBDdXJyZW50X09iamVjdHNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKEN1cnJlbnRfT2JqZWN0c19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDdXJyZW50X09iamVjdHNfU2VsZWN0X0NvbHVtbjJbXCJBbGxvd1VuZ2F0ZWRUcmFuc2ZlclwiXSA9IFwiYWxsb3dfdW5nYXRlZF90cmFuc2ZlclwiO1xuICBDdXJyZW50X09iamVjdHNfU2VsZWN0X0NvbHVtbjJbXCJJc0RlbGV0ZWRcIl0gPSBcImlzX2RlbGV0ZWRcIjtcbiAgQ3VycmVudF9PYmplY3RzX1NlbGVjdF9Db2x1bW4yW1wiTGFzdEd1aWRDcmVhdGlvbk51bVwiXSA9IFwibGFzdF9ndWlkX2NyZWF0aW9uX251bVwiO1xuICBDdXJyZW50X09iamVjdHNfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgQ3VycmVudF9PYmplY3RzX1NlbGVjdF9Db2x1bW4yW1wiT2JqZWN0QWRkcmVzc1wiXSA9IFwib2JqZWN0X2FkZHJlc3NcIjtcbiAgQ3VycmVudF9PYmplY3RzX1NlbGVjdF9Db2x1bW4yW1wiT3duZXJBZGRyZXNzXCJdID0gXCJvd25lcl9hZGRyZXNzXCI7XG4gIEN1cnJlbnRfT2JqZWN0c19TZWxlY3RfQ29sdW1uMltcIlN0YXRlS2V5SGFzaFwiXSA9IFwic3RhdGVfa2V5X2hhc2hcIjtcbiAgcmV0dXJuIEN1cnJlbnRfT2JqZWN0c19TZWxlY3RfQ29sdW1uMjtcbn0pKEN1cnJlbnRfT2JqZWN0c19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBDdXJyZW50X1N0YWtpbmdfUG9vbF9Wb3Rlcl9TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoQ3VycmVudF9TdGFraW5nX1Bvb2xfVm90ZXJfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgQ3VycmVudF9TdGFraW5nX1Bvb2xfVm90ZXJfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgQ3VycmVudF9TdGFraW5nX1Bvb2xfVm90ZXJfU2VsZWN0X0NvbHVtbjJbXCJPcGVyYXRvckFkZHJlc3NcIl0gPSBcIm9wZXJhdG9yX2FkZHJlc3NcIjtcbiAgQ3VycmVudF9TdGFraW5nX1Bvb2xfVm90ZXJfU2VsZWN0X0NvbHVtbjJbXCJTdGFraW5nUG9vbEFkZHJlc3NcIl0gPSBcInN0YWtpbmdfcG9vbF9hZGRyZXNzXCI7XG4gIEN1cnJlbnRfU3Rha2luZ19Qb29sX1ZvdGVyX1NlbGVjdF9Db2x1bW4yW1wiVm90ZXJBZGRyZXNzXCJdID0gXCJ2b3Rlcl9hZGRyZXNzXCI7XG4gIHJldHVybiBDdXJyZW50X1N0YWtpbmdfUG9vbF9Wb3Rlcl9TZWxlY3RfQ29sdW1uMjtcbn0pKEN1cnJlbnRfU3Rha2luZ19Qb29sX1ZvdGVyX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIEN1cnJlbnRfVGFibGVfSXRlbXNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKEN1cnJlbnRfVGFibGVfSXRlbXNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgQ3VycmVudF9UYWJsZV9JdGVtc19TZWxlY3RfQ29sdW1uMltcIkRlY29kZWRLZXlcIl0gPSBcImRlY29kZWRfa2V5XCI7XG4gIEN1cnJlbnRfVGFibGVfSXRlbXNfU2VsZWN0X0NvbHVtbjJbXCJEZWNvZGVkVmFsdWVcIl0gPSBcImRlY29kZWRfdmFsdWVcIjtcbiAgQ3VycmVudF9UYWJsZV9JdGVtc19TZWxlY3RfQ29sdW1uMltcIklzRGVsZXRlZFwiXSA9IFwiaXNfZGVsZXRlZFwiO1xuICBDdXJyZW50X1RhYmxlX0l0ZW1zX1NlbGVjdF9Db2x1bW4yW1wiS2V5XCJdID0gXCJrZXlcIjtcbiAgQ3VycmVudF9UYWJsZV9JdGVtc19TZWxlY3RfQ29sdW1uMltcIktleUhhc2hcIl0gPSBcImtleV9oYXNoXCI7XG4gIEN1cnJlbnRfVGFibGVfSXRlbXNfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgQ3VycmVudF9UYWJsZV9JdGVtc19TZWxlY3RfQ29sdW1uMltcIlRhYmxlSGFuZGxlXCJdID0gXCJ0YWJsZV9oYW5kbGVcIjtcbiAgcmV0dXJuIEN1cnJlbnRfVGFibGVfSXRlbXNfU2VsZWN0X0NvbHVtbjI7XG59KShDdXJyZW50X1RhYmxlX0l0ZW1zX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIEN1cnJlbnRfVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKEN1cnJlbnRfVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIkNvbGxlY3Rpb25EYXRhSWRIYXNoXCJdID0gXCJjb2xsZWN0aW9uX2RhdGFfaWRfaGFzaFwiO1xuICBDdXJyZW50X1Rva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiQ29sbGVjdGlvbk5hbWVcIl0gPSBcImNvbGxlY3Rpb25fbmFtZVwiO1xuICBDdXJyZW50X1Rva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiQ3JlYXRvckFkZHJlc3NcIl0gPSBcImNyZWF0b3JfYWRkcmVzc1wiO1xuICBDdXJyZW50X1Rva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiRGVmYXVsdFByb3BlcnRpZXNcIl0gPSBcImRlZmF1bHRfcHJvcGVydGllc1wiO1xuICBDdXJyZW50X1Rva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiRGVzY3JpcHRpb25cIl0gPSBcImRlc2NyaXB0aW9uXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJEZXNjcmlwdGlvbk11dGFibGVcIl0gPSBcImRlc2NyaXB0aW9uX211dGFibGVcIjtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIkxhcmdlc3RQcm9wZXJ0eVZlcnNpb25cIl0gPSBcImxhcmdlc3RfcHJvcGVydHlfdmVyc2lvblwiO1xuICBDdXJyZW50X1Rva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3RpbWVzdGFtcFwiO1xuICBDdXJyZW50X1Rva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJNYXhpbXVtXCJdID0gXCJtYXhpbXVtXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJNYXhpbXVtTXV0YWJsZVwiXSA9IFwibWF4aW11bV9tdXRhYmxlXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJNZXRhZGF0YVVyaVwiXSA9IFwibWV0YWRhdGFfdXJpXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJOYW1lXCJdID0gXCJuYW1lXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJQYXllZUFkZHJlc3NcIl0gPSBcInBheWVlX2FkZHJlc3NcIjtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlByb3BlcnRpZXNNdXRhYmxlXCJdID0gXCJwcm9wZXJ0aWVzX211dGFibGVcIjtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlJveWFsdHlNdXRhYmxlXCJdID0gXCJyb3lhbHR5X211dGFibGVcIjtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlJveWFsdHlQb2ludHNEZW5vbWluYXRvclwiXSA9IFwicm95YWx0eV9wb2ludHNfZGVub21pbmF0b3JcIjtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlJveWFsdHlQb2ludHNOdW1lcmF0b3JcIl0gPSBcInJveWFsdHlfcG9pbnRzX251bWVyYXRvclwiO1xuICBDdXJyZW50X1Rva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiU3VwcGx5XCJdID0gXCJzdXBwbHlcIjtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlRva2VuRGF0YUlkSGFzaFwiXSA9IFwidG9rZW5fZGF0YV9pZF9oYXNoXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJVcmlNdXRhYmxlXCJdID0gXCJ1cmlfbXV0YWJsZVwiO1xuICByZXR1cm4gQ3VycmVudF9Ub2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMjtcbn0pKEN1cnJlbnRfVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgQ3VycmVudF9Ub2tlbl9EYXRhc19WMl9TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoQ3VycmVudF9Ub2tlbl9EYXRhc19WMl9TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDdXJyZW50X1Rva2VuX0RhdGFzX1YyX1NlbGVjdF9Db2x1bW4yW1wiQ29sbGVjdGlvbklkXCJdID0gXCJjb2xsZWN0aW9uX2lkXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfVjJfU2VsZWN0X0NvbHVtbjJbXCJEZXNjcmlwdGlvblwiXSA9IFwiZGVzY3JpcHRpb25cIjtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19WMl9TZWxlY3RfQ29sdW1uMltcIklzRnVuZ2libGVWMlwiXSA9IFwiaXNfZnVuZ2libGVfdjJcIjtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19WMl9TZWxlY3RfQ29sdW1uMltcIkxhcmdlc3RQcm9wZXJ0eVZlcnNpb25WMVwiXSA9IFwibGFyZ2VzdF9wcm9wZXJ0eV92ZXJzaW9uX3YxXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfVjJfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25UaW1lc3RhbXBcIl0gPSBcImxhc3RfdHJhbnNhY3Rpb25fdGltZXN0YW1wXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfVjJfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19WMl9TZWxlY3RfQ29sdW1uMltcIk1heGltdW1cIl0gPSBcIm1heGltdW1cIjtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19WMl9TZWxlY3RfQ29sdW1uMltcIlN1cHBseVwiXSA9IFwic3VwcGx5XCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfVjJfU2VsZWN0X0NvbHVtbjJbXCJUb2tlbkRhdGFJZFwiXSA9IFwidG9rZW5fZGF0YV9pZFwiO1xuICBDdXJyZW50X1Rva2VuX0RhdGFzX1YyX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5OYW1lXCJdID0gXCJ0b2tlbl9uYW1lXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfVjJfU2VsZWN0X0NvbHVtbjJbXCJUb2tlblByb3BlcnRpZXNcIl0gPSBcInRva2VuX3Byb3BlcnRpZXNcIjtcbiAgQ3VycmVudF9Ub2tlbl9EYXRhc19WMl9TZWxlY3RfQ29sdW1uMltcIlRva2VuU3RhbmRhcmRcIl0gPSBcInRva2VuX3N0YW5kYXJkXCI7XG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfVjJfU2VsZWN0X0NvbHVtbjJbXCJUb2tlblVyaVwiXSA9IFwidG9rZW5fdXJpXCI7XG4gIHJldHVybiBDdXJyZW50X1Rva2VuX0RhdGFzX1YyX1NlbGVjdF9Db2x1bW4yO1xufSkoQ3VycmVudF9Ub2tlbl9EYXRhc19WMl9TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKEN1cnJlbnRfVG9rZW5fT3duZXJzaGlwc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbjJbXCJBbW91bnRcIl0gPSBcImFtb3VudFwiO1xuICBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uRGF0YUlkSGFzaFwiXSA9IFwiY29sbGVjdGlvbl9kYXRhX2lkX2hhc2hcIjtcbiAgQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yW1wiQ29sbGVjdGlvbk5hbWVcIl0gPSBcImNvbGxlY3Rpb25fbmFtZVwiO1xuICBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbjJbXCJDcmVhdG9yQWRkcmVzc1wiXSA9IFwiY3JlYXRvcl9hZGRyZXNzXCI7XG4gIEN1cnJlbnRfVG9rZW5fT3duZXJzaGlwc19TZWxlY3RfQ29sdW1uMltcIkxhc3RUcmFuc2FjdGlvblRpbWVzdGFtcFwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl90aW1lc3RhbXBcIjtcbiAgQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIEN1cnJlbnRfVG9rZW5fT3duZXJzaGlwc19TZWxlY3RfQ29sdW1uMltcIk5hbWVcIl0gPSBcIm5hbWVcIjtcbiAgQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yW1wiT3duZXJBZGRyZXNzXCJdID0gXCJvd25lcl9hZGRyZXNzXCI7XG4gIEN1cnJlbnRfVG9rZW5fT3duZXJzaGlwc19TZWxlY3RfQ29sdW1uMltcIlByb3BlcnR5VmVyc2lvblwiXSA9IFwicHJvcGVydHlfdmVyc2lvblwiO1xuICBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbjJbXCJUYWJsZVR5cGVcIl0gPSBcInRhYmxlX3R5cGVcIjtcbiAgQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5EYXRhSWRIYXNoXCJdID0gXCJ0b2tlbl9kYXRhX2lkX2hhc2hcIjtcbiAgQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5Qcm9wZXJ0aWVzXCJdID0gXCJ0b2tlbl9wcm9wZXJ0aWVzXCI7XG4gIHJldHVybiBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbjI7XG59KShDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1YyX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfVjJfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1YyX1NlbGVjdF9Db2x1bW4yW1wiQW1vdW50XCJdID0gXCJhbW91bnRcIjtcbiAgQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1YyX1NlbGVjdF9Db2x1bW4yW1wiSXNGdW5naWJsZVYyXCJdID0gXCJpc19mdW5naWJsZV92MlwiO1xuICBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfVjJfU2VsZWN0X0NvbHVtbjJbXCJJc1NvdWxib3VuZFYyXCJdID0gXCJpc19zb3VsYm91bmRfdjJcIjtcbiAgQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1YyX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3RpbWVzdGFtcFwiO1xuICBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfVjJfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1YyX1NlbGVjdF9Db2x1bW4yW1wiT3duZXJBZGRyZXNzXCJdID0gXCJvd25lcl9hZGRyZXNzXCI7XG4gIEN1cnJlbnRfVG9rZW5fT3duZXJzaGlwc19WMl9TZWxlY3RfQ29sdW1uMltcIlByb3BlcnR5VmVyc2lvblYxXCJdID0gXCJwcm9wZXJ0eV92ZXJzaW9uX3YxXCI7XG4gIEN1cnJlbnRfVG9rZW5fT3duZXJzaGlwc19WMl9TZWxlY3RfQ29sdW1uMltcIlN0b3JhZ2VJZFwiXSA9IFwic3RvcmFnZV9pZFwiO1xuICBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfVjJfU2VsZWN0X0NvbHVtbjJbXCJUYWJsZVR5cGVWMVwiXSA9IFwidGFibGVfdHlwZV92MVwiO1xuICBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfVjJfU2VsZWN0X0NvbHVtbjJbXCJUb2tlbkRhdGFJZFwiXSA9IFwidG9rZW5fZGF0YV9pZFwiO1xuICBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfVjJfU2VsZWN0X0NvbHVtbjJbXCJUb2tlblByb3BlcnRpZXNNdXRhdGVkVjFcIl0gPSBcInRva2VuX3Byb3BlcnRpZXNfbXV0YXRlZF92MVwiO1xuICBDdXJyZW50X1Rva2VuX093bmVyc2hpcHNfVjJfU2VsZWN0X0NvbHVtbjJbXCJUb2tlblN0YW5kYXJkXCJdID0gXCJ0b2tlbl9zdGFuZGFyZFwiO1xuICByZXR1cm4gQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1YyX1NlbGVjdF9Db2x1bW4yO1xufSkoQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1YyX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIEN1cnJlbnRfVG9rZW5fUGVuZGluZ19DbGFpbXNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKEN1cnJlbnRfVG9rZW5fUGVuZGluZ19DbGFpbXNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgQ3VycmVudF9Ub2tlbl9QZW5kaW5nX0NsYWltc19TZWxlY3RfQ29sdW1uMltcIkFtb3VudFwiXSA9IFwiYW1vdW50XCI7XG4gIEN1cnJlbnRfVG9rZW5fUGVuZGluZ19DbGFpbXNfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uRGF0YUlkSGFzaFwiXSA9IFwiY29sbGVjdGlvbl9kYXRhX2lkX2hhc2hcIjtcbiAgQ3VycmVudF9Ub2tlbl9QZW5kaW5nX0NsYWltc19TZWxlY3RfQ29sdW1uMltcIkNvbGxlY3Rpb25JZFwiXSA9IFwiY29sbGVjdGlvbl9pZFwiO1xuICBDdXJyZW50X1Rva2VuX1BlbmRpbmdfQ2xhaW1zX1NlbGVjdF9Db2x1bW4yW1wiQ29sbGVjdGlvbk5hbWVcIl0gPSBcImNvbGxlY3Rpb25fbmFtZVwiO1xuICBDdXJyZW50X1Rva2VuX1BlbmRpbmdfQ2xhaW1zX1NlbGVjdF9Db2x1bW4yW1wiQ3JlYXRvckFkZHJlc3NcIl0gPSBcImNyZWF0b3JfYWRkcmVzc1wiO1xuICBDdXJyZW50X1Rva2VuX1BlbmRpbmdfQ2xhaW1zX1NlbGVjdF9Db2x1bW4yW1wiRnJvbUFkZHJlc3NcIl0gPSBcImZyb21fYWRkcmVzc1wiO1xuICBDdXJyZW50X1Rva2VuX1BlbmRpbmdfQ2xhaW1zX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3RpbWVzdGFtcFwiO1xuICBDdXJyZW50X1Rva2VuX1BlbmRpbmdfQ2xhaW1zX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwibGFzdF90cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIEN1cnJlbnRfVG9rZW5fUGVuZGluZ19DbGFpbXNfU2VsZWN0X0NvbHVtbjJbXCJOYW1lXCJdID0gXCJuYW1lXCI7XG4gIEN1cnJlbnRfVG9rZW5fUGVuZGluZ19DbGFpbXNfU2VsZWN0X0NvbHVtbjJbXCJQcm9wZXJ0eVZlcnNpb25cIl0gPSBcInByb3BlcnR5X3ZlcnNpb25cIjtcbiAgQ3VycmVudF9Ub2tlbl9QZW5kaW5nX0NsYWltc19TZWxlY3RfQ29sdW1uMltcIlRhYmxlSGFuZGxlXCJdID0gXCJ0YWJsZV9oYW5kbGVcIjtcbiAgQ3VycmVudF9Ub2tlbl9QZW5kaW5nX0NsYWltc19TZWxlY3RfQ29sdW1uMltcIlRvQWRkcmVzc1wiXSA9IFwidG9fYWRkcmVzc1wiO1xuICBDdXJyZW50X1Rva2VuX1BlbmRpbmdfQ2xhaW1zX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5EYXRhSWRcIl0gPSBcInRva2VuX2RhdGFfaWRcIjtcbiAgQ3VycmVudF9Ub2tlbl9QZW5kaW5nX0NsYWltc19TZWxlY3RfQ29sdW1uMltcIlRva2VuRGF0YUlkSGFzaFwiXSA9IFwidG9rZW5fZGF0YV9pZF9oYXNoXCI7XG4gIHJldHVybiBDdXJyZW50X1Rva2VuX1BlbmRpbmdfQ2xhaW1zX1NlbGVjdF9Db2x1bW4yO1xufSkoQ3VycmVudF9Ub2tlbl9QZW5kaW5nX0NsYWltc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBDdXJzb3JfT3JkZXJpbmcgPSAvKiBAX19QVVJFX18gKi8gKChDdXJzb3JfT3JkZXJpbmcyKSA9PiB7XG4gIEN1cnNvcl9PcmRlcmluZzJbXCJBc2NcIl0gPSBcIkFTQ1wiO1xuICBDdXJzb3JfT3JkZXJpbmcyW1wiRGVzY1wiXSA9IFwiREVTQ1wiO1xuICByZXR1cm4gQ3Vyc29yX09yZGVyaW5nMjtcbn0pKEN1cnNvcl9PcmRlcmluZyB8fCB7fSk7XG52YXIgRGVsZWdhdGVkX1N0YWtpbmdfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoRGVsZWdhdGVkX1N0YWtpbmdfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBEZWxlZ2F0ZWRfU3Rha2luZ19BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiQW1vdW50XCJdID0gXCJhbW91bnRcIjtcbiAgRGVsZWdhdGVkX1N0YWtpbmdfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIkRlbGVnYXRvckFkZHJlc3NcIl0gPSBcImRlbGVnYXRvcl9hZGRyZXNzXCI7XG4gIERlbGVnYXRlZF9TdGFraW5nX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJFdmVudEluZGV4XCJdID0gXCJldmVudF9pbmRleFwiO1xuICBEZWxlZ2F0ZWRfU3Rha2luZ19BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiRXZlbnRUeXBlXCJdID0gXCJldmVudF90eXBlXCI7XG4gIERlbGVnYXRlZF9TdGFraW5nX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJQb29sQWRkcmVzc1wiXSA9IFwicG9vbF9hZGRyZXNzXCI7XG4gIERlbGVnYXRlZF9TdGFraW5nX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcInRyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgcmV0dXJuIERlbGVnYXRlZF9TdGFraW5nX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjI7XG59KShEZWxlZ2F0ZWRfU3Rha2luZ19BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIERlbGVnYXRlZF9TdGFraW5nX1Bvb2xzX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChEZWxlZ2F0ZWRfU3Rha2luZ19Qb29sc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBEZWxlZ2F0ZWRfU3Rha2luZ19Qb29sc19TZWxlY3RfQ29sdW1uMltcIkZpcnN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJmaXJzdF90cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIERlbGVnYXRlZF9TdGFraW5nX1Bvb2xzX1NlbGVjdF9Db2x1bW4yW1wiU3Rha2luZ1Bvb2xBZGRyZXNzXCJdID0gXCJzdGFraW5nX3Bvb2xfYWRkcmVzc1wiO1xuICByZXR1cm4gRGVsZWdhdGVkX1N0YWtpbmdfUG9vbHNfU2VsZWN0X0NvbHVtbjI7XG59KShEZWxlZ2F0ZWRfU3Rha2luZ19Qb29sc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBEZWxlZ2F0b3JfRGlzdGluY3RfUG9vbF9TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoRGVsZWdhdG9yX0Rpc3RpbmN0X1Bvb2xfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgRGVsZWdhdG9yX0Rpc3RpbmN0X1Bvb2xfU2VsZWN0X0NvbHVtbjJbXCJEZWxlZ2F0b3JBZGRyZXNzXCJdID0gXCJkZWxlZ2F0b3JfYWRkcmVzc1wiO1xuICBEZWxlZ2F0b3JfRGlzdGluY3RfUG9vbF9TZWxlY3RfQ29sdW1uMltcIlBvb2xBZGRyZXNzXCJdID0gXCJwb29sX2FkZHJlc3NcIjtcbiAgcmV0dXJuIERlbGVnYXRvcl9EaXN0aW5jdF9Qb29sX1NlbGVjdF9Db2x1bW4yO1xufSkoRGVsZWdhdG9yX0Rpc3RpbmN0X1Bvb2xfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgRXZlbnRzX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChFdmVudHNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgRXZlbnRzX1NlbGVjdF9Db2x1bW4yW1wiQWNjb3VudEFkZHJlc3NcIl0gPSBcImFjY291bnRfYWRkcmVzc1wiO1xuICBFdmVudHNfU2VsZWN0X0NvbHVtbjJbXCJDcmVhdGlvbk51bWJlclwiXSA9IFwiY3JlYXRpb25fbnVtYmVyXCI7XG4gIEV2ZW50c19TZWxlY3RfQ29sdW1uMltcIkRhdGFcIl0gPSBcImRhdGFcIjtcbiAgRXZlbnRzX1NlbGVjdF9Db2x1bW4yW1wiRXZlbnRJbmRleFwiXSA9IFwiZXZlbnRfaW5kZXhcIjtcbiAgRXZlbnRzX1NlbGVjdF9Db2x1bW4yW1wiSW5kZXhlZFR5cGVcIl0gPSBcImluZGV4ZWRfdHlwZVwiO1xuICBFdmVudHNfU2VsZWN0X0NvbHVtbjJbXCJTZXF1ZW5jZU51bWJlclwiXSA9IFwic2VxdWVuY2VfbnVtYmVyXCI7XG4gIEV2ZW50c19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uQmxvY2tIZWlnaHRcIl0gPSBcInRyYW5zYWN0aW9uX2Jsb2NrX2hlaWdodFwiO1xuICBFdmVudHNfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcInRyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgRXZlbnRzX1NlbGVjdF9Db2x1bW4yW1wiVHlwZVwiXSA9IFwidHlwZVwiO1xuICByZXR1cm4gRXZlbnRzX1NlbGVjdF9Db2x1bW4yO1xufSkoRXZlbnRzX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIEZ1bmdpYmxlX0Fzc2V0X0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKEZ1bmdpYmxlX0Fzc2V0X0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgRnVuZ2libGVfQXNzZXRfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIkFtb3VudFwiXSA9IFwiYW1vdW50XCI7XG4gIEZ1bmdpYmxlX0Fzc2V0X0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJBc3NldFR5cGVcIl0gPSBcImFzc2V0X3R5cGVcIjtcbiAgRnVuZ2libGVfQXNzZXRfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIkJsb2NrSGVpZ2h0XCJdID0gXCJibG9ja19oZWlnaHRcIjtcbiAgRnVuZ2libGVfQXNzZXRfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIkVudHJ5RnVuY3Rpb25JZFN0clwiXSA9IFwiZW50cnlfZnVuY3Rpb25faWRfc3RyXCI7XG4gIEZ1bmdpYmxlX0Fzc2V0X0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJFdmVudEluZGV4XCJdID0gXCJldmVudF9pbmRleFwiO1xuICBGdW5naWJsZV9Bc3NldF9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiR2FzRmVlUGF5ZXJBZGRyZXNzXCJdID0gXCJnYXNfZmVlX3BheWVyX2FkZHJlc3NcIjtcbiAgRnVuZ2libGVfQXNzZXRfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIklzRnJvemVuXCJdID0gXCJpc19mcm96ZW5cIjtcbiAgRnVuZ2libGVfQXNzZXRfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIklzR2FzRmVlXCJdID0gXCJpc19nYXNfZmVlXCI7XG4gIEZ1bmdpYmxlX0Fzc2V0X0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJJc1RyYW5zYWN0aW9uU3VjY2Vzc1wiXSA9IFwiaXNfdHJhbnNhY3Rpb25fc3VjY2Vzc1wiO1xuICBGdW5naWJsZV9Bc3NldF9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiT3duZXJBZGRyZXNzXCJdID0gXCJvd25lcl9hZGRyZXNzXCI7XG4gIEZ1bmdpYmxlX0Fzc2V0X0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJTdG9yYWdlSWRcIl0gPSBcInN0b3JhZ2VfaWRcIjtcbiAgRnVuZ2libGVfQXNzZXRfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIlN0b3JhZ2VSZWZ1bmRBbW91bnRcIl0gPSBcInN0b3JhZ2VfcmVmdW5kX2Ftb3VudFwiO1xuICBGdW5naWJsZV9Bc3NldF9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5TdGFuZGFyZFwiXSA9IFwidG9rZW5fc3RhbmRhcmRcIjtcbiAgRnVuZ2libGVfQXNzZXRfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJ0cmFuc2FjdGlvbl90aW1lc3RhbXBcIjtcbiAgRnVuZ2libGVfQXNzZXRfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwidHJhbnNhY3Rpb25fdmVyc2lvblwiO1xuICBGdW5naWJsZV9Bc3NldF9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiVHlwZVwiXSA9IFwidHlwZVwiO1xuICByZXR1cm4gRnVuZ2libGVfQXNzZXRfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMjtcbn0pKEZ1bmdpYmxlX0Fzc2V0X0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgRnVuZ2libGVfQXNzZXRfTWV0YWRhdGFfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKEZ1bmdpYmxlX0Fzc2V0X01ldGFkYXRhX1NlbGVjdF9Db2x1bW4yKSA9PiB7XG4gIEZ1bmdpYmxlX0Fzc2V0X01ldGFkYXRhX1NlbGVjdF9Db2x1bW4yW1wiQXNzZXRUeXBlXCJdID0gXCJhc3NldF90eXBlXCI7XG4gIEZ1bmdpYmxlX0Fzc2V0X01ldGFkYXRhX1NlbGVjdF9Db2x1bW4yW1wiQ3JlYXRvckFkZHJlc3NcIl0gPSBcImNyZWF0b3JfYWRkcmVzc1wiO1xuICBGdW5naWJsZV9Bc3NldF9NZXRhZGF0YV9TZWxlY3RfQ29sdW1uMltcIkRlY2ltYWxzXCJdID0gXCJkZWNpbWFsc1wiO1xuICBGdW5naWJsZV9Bc3NldF9NZXRhZGF0YV9TZWxlY3RfQ29sdW1uMltcIkljb25VcmlcIl0gPSBcImljb25fdXJpXCI7XG4gIEZ1bmdpYmxlX0Fzc2V0X01ldGFkYXRhX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3RpbWVzdGFtcFwiO1xuICBGdW5naWJsZV9Bc3NldF9NZXRhZGF0YV9TZWxlY3RfQ29sdW1uMltcIkxhc3RUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcImxhc3RfdHJhbnNhY3Rpb25fdmVyc2lvblwiO1xuICBGdW5naWJsZV9Bc3NldF9NZXRhZGF0YV9TZWxlY3RfQ29sdW1uMltcIk5hbWVcIl0gPSBcIm5hbWVcIjtcbiAgRnVuZ2libGVfQXNzZXRfTWV0YWRhdGFfU2VsZWN0X0NvbHVtbjJbXCJQcm9qZWN0VXJpXCJdID0gXCJwcm9qZWN0X3VyaVwiO1xuICBGdW5naWJsZV9Bc3NldF9NZXRhZGF0YV9TZWxlY3RfQ29sdW1uMltcIlN1cHBseUFnZ3JlZ2F0b3JUYWJsZUhhbmRsZVYxXCJdID0gXCJzdXBwbHlfYWdncmVnYXRvcl90YWJsZV9oYW5kbGVfdjFcIjtcbiAgRnVuZ2libGVfQXNzZXRfTWV0YWRhdGFfU2VsZWN0X0NvbHVtbjJbXCJTdXBwbHlBZ2dyZWdhdG9yVGFibGVLZXlWMVwiXSA9IFwic3VwcGx5X2FnZ3JlZ2F0b3JfdGFibGVfa2V5X3YxXCI7XG4gIEZ1bmdpYmxlX0Fzc2V0X01ldGFkYXRhX1NlbGVjdF9Db2x1bW4yW1wiU3ltYm9sXCJdID0gXCJzeW1ib2xcIjtcbiAgRnVuZ2libGVfQXNzZXRfTWV0YWRhdGFfU2VsZWN0X0NvbHVtbjJbXCJUb2tlblN0YW5kYXJkXCJdID0gXCJ0b2tlbl9zdGFuZGFyZFwiO1xuICByZXR1cm4gRnVuZ2libGVfQXNzZXRfTWV0YWRhdGFfU2VsZWN0X0NvbHVtbjI7XG59KShGdW5naWJsZV9Bc3NldF9NZXRhZGF0YV9TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBJbmRleGVyX1N0YXR1c19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoSW5kZXhlcl9TdGF0dXNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgSW5kZXhlcl9TdGF0dXNfU2VsZWN0X0NvbHVtbjJbXCJEYlwiXSA9IFwiZGJcIjtcbiAgSW5kZXhlcl9TdGF0dXNfU2VsZWN0X0NvbHVtbjJbXCJJc0luZGV4ZXJVcFwiXSA9IFwiaXNfaW5kZXhlcl91cFwiO1xuICByZXR1cm4gSW5kZXhlcl9TdGF0dXNfU2VsZWN0X0NvbHVtbjI7XG59KShJbmRleGVyX1N0YXR1c19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBMZWRnZXJfSW5mb3NfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKExlZGdlcl9JbmZvc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBMZWRnZXJfSW5mb3NfU2VsZWN0X0NvbHVtbjJbXCJDaGFpbklkXCJdID0gXCJjaGFpbl9pZFwiO1xuICByZXR1cm4gTGVkZ2VyX0luZm9zX1NlbGVjdF9Db2x1bW4yO1xufSkoTGVkZ2VyX0luZm9zX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIE1vdmVfUmVzb3VyY2VzX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChNb3ZlX1Jlc291cmNlc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBNb3ZlX1Jlc291cmNlc19TZWxlY3RfQ29sdW1uMltcIkFkZHJlc3NcIl0gPSBcImFkZHJlc3NcIjtcbiAgTW92ZV9SZXNvdXJjZXNfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcInRyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgcmV0dXJuIE1vdmVfUmVzb3VyY2VzX1NlbGVjdF9Db2x1bW4yO1xufSkoTW92ZV9SZXNvdXJjZXNfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0F1Y3Rpb25zX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0F1Y3Rpb25zX1NlbGVjdF9Db2x1bW4yW1wiQnV5SXROb3dQcmljZVwiXSA9IFwiYnV5X2l0X25vd19wcmljZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJDb2luVHlwZVwiXSA9IFwiY29pbl90eXBlXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9BdWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIkNvbGxlY3Rpb25JZFwiXSA9IFwiY29sbGVjdGlvbl9pZFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJDb250cmFjdEFkZHJlc3NcIl0gPSBcImNvbnRyYWN0X2FkZHJlc3NcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0F1Y3Rpb25zX1NlbGVjdF9Db2x1bW4yW1wiQ3VycmVudEJpZFByaWNlXCJdID0gXCJjdXJyZW50X2JpZF9wcmljZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJDdXJyZW50QmlkZGVyXCJdID0gXCJjdXJyZW50X2JpZGRlclwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJFbnRyeUZ1bmN0aW9uSWRTdHJcIl0gPSBcImVudHJ5X2Z1bmN0aW9uX2lkX3N0clwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJFeHBpcmF0aW9uVGltZVwiXSA9IFwiZXhwaXJhdGlvbl90aW1lXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9BdWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIkZlZVNjaGVkdWxlSWRcIl0gPSBcImZlZV9zY2hlZHVsZV9pZFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJJc0RlbGV0ZWRcIl0gPSBcImlzX2RlbGV0ZWRcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0F1Y3Rpb25zX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3RpbWVzdGFtcFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0F1Y3Rpb25zX1NlbGVjdF9Db2x1bW4yW1wiTGlzdGluZ0lkXCJdID0gXCJsaXN0aW5nX2lkXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9BdWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIk1hcmtldHBsYWNlXCJdID0gXCJtYXJrZXRwbGFjZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJTZWxsZXJcIl0gPSBcInNlbGxlclwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJTdGFydGluZ0JpZFByaWNlXCJdID0gXCJzdGFydGluZ19iaWRfcHJpY2VcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0F1Y3Rpb25zX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5BbW91bnRcIl0gPSBcInRva2VuX2Ftb3VudFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJUb2tlbkRhdGFJZFwiXSA9IFwidG9rZW5fZGF0YV9pZFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQXVjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJUb2tlblN0YW5kYXJkXCJdID0gXCJ0b2tlbl9zdGFuZGFyZFwiO1xuICByZXR1cm4gTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0F1Y3Rpb25zX1NlbGVjdF9Db2x1bW4yO1xufSkoTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0F1Y3Rpb25zX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Db2xsZWN0aW9uX09mZmVyc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0NvbGxlY3Rpb25fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yKSA9PiB7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Db2xsZWN0aW9uX09mZmVyc19TZWxlY3RfQ29sdW1uMltcIkJ1eWVyXCJdID0gXCJidXllclwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQ29sbGVjdGlvbl9PZmZlcnNfU2VsZWN0X0NvbHVtbjJbXCJDb2luVHlwZVwiXSA9IFwiY29pbl90eXBlXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Db2xsZWN0aW9uX09mZmVyc19TZWxlY3RfQ29sdW1uMltcIkNvbGxlY3Rpb25JZFwiXSA9IFwiY29sbGVjdGlvbl9pZFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQ29sbGVjdGlvbl9PZmZlcnNfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uT2ZmZXJJZFwiXSA9IFwiY29sbGVjdGlvbl9vZmZlcl9pZFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQ29sbGVjdGlvbl9PZmZlcnNfU2VsZWN0X0NvbHVtbjJbXCJDb250cmFjdEFkZHJlc3NcIl0gPSBcImNvbnRyYWN0X2FkZHJlc3NcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0NvbGxlY3Rpb25fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yW1wiRW50cnlGdW5jdGlvbklkU3RyXCJdID0gXCJlbnRyeV9mdW5jdGlvbl9pZF9zdHJcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0NvbGxlY3Rpb25fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yW1wiRXhwaXJhdGlvblRpbWVcIl0gPSBcImV4cGlyYXRpb25fdGltZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQ29sbGVjdGlvbl9PZmZlcnNfU2VsZWN0X0NvbHVtbjJbXCJGZWVTY2hlZHVsZUlkXCJdID0gXCJmZWVfc2NoZWR1bGVfaWRcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0NvbGxlY3Rpb25fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yW1wiSXNEZWxldGVkXCJdID0gXCJpc19kZWxldGVkXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Db2xsZWN0aW9uX09mZmVyc19TZWxlY3RfQ29sdW1uMltcIkl0ZW1QcmljZVwiXSA9IFwiaXRlbV9wcmljZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQ29sbGVjdGlvbl9PZmZlcnNfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25UaW1lc3RhbXBcIl0gPSBcImxhc3RfdHJhbnNhY3Rpb25fdGltZXN0YW1wXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Db2xsZWN0aW9uX09mZmVyc19TZWxlY3RfQ29sdW1uMltcIkxhc3RUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcImxhc3RfdHJhbnNhY3Rpb25fdmVyc2lvblwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQ29sbGVjdGlvbl9PZmZlcnNfU2VsZWN0X0NvbHVtbjJbXCJNYXJrZXRwbGFjZVwiXSA9IFwibWFya2V0cGxhY2VcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0NvbGxlY3Rpb25fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yW1wiUmVtYWluaW5nVG9rZW5BbW91bnRcIl0gPSBcInJlbWFpbmluZ190b2tlbl9hbW91bnRcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0NvbGxlY3Rpb25fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5TdGFuZGFyZFwiXSA9IFwidG9rZW5fc3RhbmRhcmRcIjtcbiAgcmV0dXJuIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Db2xsZWN0aW9uX09mZmVyc19TZWxlY3RfQ29sdW1uMjtcbn0pKE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Db2xsZWN0aW9uX09mZmVyc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfTGlzdGluZ3NfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9MaXN0aW5nc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfTGlzdGluZ3NfU2VsZWN0X0NvbHVtbjJbXCJDb2luVHlwZVwiXSA9IFwiY29pbl90eXBlXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9MaXN0aW5nc19TZWxlY3RfQ29sdW1uMltcIkNvbGxlY3Rpb25JZFwiXSA9IFwiY29sbGVjdGlvbl9pZFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfTGlzdGluZ3NfU2VsZWN0X0NvbHVtbjJbXCJDb250cmFjdEFkZHJlc3NcIl0gPSBcImNvbnRyYWN0X2FkZHJlc3NcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0xpc3RpbmdzX1NlbGVjdF9Db2x1bW4yW1wiRW50cnlGdW5jdGlvbklkU3RyXCJdID0gXCJlbnRyeV9mdW5jdGlvbl9pZF9zdHJcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0xpc3RpbmdzX1NlbGVjdF9Db2x1bW4yW1wiRmVlU2NoZWR1bGVJZFwiXSA9IFwiZmVlX3NjaGVkdWxlX2lkXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9MaXN0aW5nc19TZWxlY3RfQ29sdW1uMltcIklzRGVsZXRlZFwiXSA9IFwiaXNfZGVsZXRlZFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfTGlzdGluZ3NfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25UaW1lc3RhbXBcIl0gPSBcImxhc3RfdHJhbnNhY3Rpb25fdGltZXN0YW1wXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9MaXN0aW5nc19TZWxlY3RfQ29sdW1uMltcIkxhc3RUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcImxhc3RfdHJhbnNhY3Rpb25fdmVyc2lvblwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfTGlzdGluZ3NfU2VsZWN0X0NvbHVtbjJbXCJMaXN0aW5nSWRcIl0gPSBcImxpc3RpbmdfaWRcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0xpc3RpbmdzX1NlbGVjdF9Db2x1bW4yW1wiTWFya2V0cGxhY2VcIl0gPSBcIm1hcmtldHBsYWNlXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9MaXN0aW5nc19TZWxlY3RfQ29sdW1uMltcIlByaWNlXCJdID0gXCJwcmljZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfTGlzdGluZ3NfU2VsZWN0X0NvbHVtbjJbXCJTZWxsZXJcIl0gPSBcInNlbGxlclwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfTGlzdGluZ3NfU2VsZWN0X0NvbHVtbjJbXCJUb2tlbkFtb3VudFwiXSA9IFwidG9rZW5fYW1vdW50XCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9MaXN0aW5nc19TZWxlY3RfQ29sdW1uMltcIlRva2VuRGF0YUlkXCJdID0gXCJ0b2tlbl9kYXRhX2lkXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9MaXN0aW5nc19TZWxlY3RfQ29sdW1uMltcIlRva2VuU3RhbmRhcmRcIl0gPSBcInRva2VuX3N0YW5kYXJkXCI7XG4gIHJldHVybiBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfTGlzdGluZ3NfU2VsZWN0X0NvbHVtbjI7XG59KShOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfTGlzdGluZ3NfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX1Rva2VuX09mZmVyc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX1Rva2VuX09mZmVyc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfVG9rZW5fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yW1wiQnV5ZXJcIl0gPSBcImJ1eWVyXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Ub2tlbl9PZmZlcnNfU2VsZWN0X0NvbHVtbjJbXCJDb2luVHlwZVwiXSA9IFwiY29pbl90eXBlXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Ub2tlbl9PZmZlcnNfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uSWRcIl0gPSBcImNvbGxlY3Rpb25faWRcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX1Rva2VuX09mZmVyc19TZWxlY3RfQ29sdW1uMltcIkNvbnRyYWN0QWRkcmVzc1wiXSA9IFwiY29udHJhY3RfYWRkcmVzc1wiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfVG9rZW5fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yW1wiRW50cnlGdW5jdGlvbklkU3RyXCJdID0gXCJlbnRyeV9mdW5jdGlvbl9pZF9zdHJcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX1Rva2VuX09mZmVyc19TZWxlY3RfQ29sdW1uMltcIkV4cGlyYXRpb25UaW1lXCJdID0gXCJleHBpcmF0aW9uX3RpbWVcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX1Rva2VuX09mZmVyc19TZWxlY3RfQ29sdW1uMltcIkZlZVNjaGVkdWxlSWRcIl0gPSBcImZlZV9zY2hlZHVsZV9pZFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfVG9rZW5fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yW1wiSXNEZWxldGVkXCJdID0gXCJpc19kZWxldGVkXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Ub2tlbl9PZmZlcnNfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25UaW1lc3RhbXBcIl0gPSBcImxhc3RfdHJhbnNhY3Rpb25fdGltZXN0YW1wXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Ub2tlbl9PZmZlcnNfU2VsZWN0X0NvbHVtbjJbXCJMYXN0VHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJsYXN0X3RyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX1Rva2VuX09mZmVyc19TZWxlY3RfQ29sdW1uMltcIk1hcmtldHBsYWNlXCJdID0gXCJtYXJrZXRwbGFjZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfVG9rZW5fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yW1wiT2ZmZXJJZFwiXSA9IFwib2ZmZXJfaWRcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX1Rva2VuX09mZmVyc19TZWxlY3RfQ29sdW1uMltcIlByaWNlXCJdID0gXCJwcmljZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfVG9rZW5fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5BbW91bnRcIl0gPSBcInRva2VuX2Ftb3VudFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfVG9rZW5fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5EYXRhSWRcIl0gPSBcInRva2VuX2RhdGFfaWRcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX1Rva2VuX09mZmVyc19TZWxlY3RfQ29sdW1uMltcIlRva2VuU3RhbmRhcmRcIl0gPSBcInRva2VuX3N0YW5kYXJkXCI7XG4gIHJldHVybiBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfVG9rZW5fT2ZmZXJzX1NlbGVjdF9Db2x1bW4yO1xufSkoTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX1Rva2VuX09mZmVyc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKE5mdF9NYXJrZXRwbGFjZV9WMl9OZnRfTWFya2V0cGxhY2VfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJCdXllclwiXSA9IFwiYnV5ZXJcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX05mdF9NYXJrZXRwbGFjZV9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiQ29pblR5cGVcIl0gPSBcImNvaW5fdHlwZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uSWRcIl0gPSBcImNvbGxlY3Rpb25faWRcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX05mdF9NYXJrZXRwbGFjZV9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiQ29sbGVjdGlvbk5hbWVcIl0gPSBcImNvbGxlY3Rpb25fbmFtZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJDb250cmFjdEFkZHJlc3NcIl0gPSBcImNvbnRyYWN0X2FkZHJlc3NcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX05mdF9NYXJrZXRwbGFjZV9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiQ3JlYXRvckFkZHJlc3NcIl0gPSBcImNyZWF0b3JfYWRkcmVzc1wiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJFbnRyeUZ1bmN0aW9uSWRTdHJcIl0gPSBcImVudHJ5X2Z1bmN0aW9uX2lkX3N0clwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJFdmVudEluZGV4XCJdID0gXCJldmVudF9pbmRleFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJFdmVudFR5cGVcIl0gPSBcImV2ZW50X3R5cGVcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX05mdF9NYXJrZXRwbGFjZV9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiRmVlU2NoZWR1bGVJZFwiXSA9IFwiZmVlX3NjaGVkdWxlX2lkXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9OZnRfTWFya2V0cGxhY2VfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIk1hcmtldHBsYWNlXCJdID0gXCJtYXJrZXRwbGFjZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJPZmZlck9yTGlzdGluZ0lkXCJdID0gXCJvZmZlcl9vcl9saXN0aW5nX2lkXCI7XG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9OZnRfTWFya2V0cGxhY2VfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIlByaWNlXCJdID0gXCJwcmljZVwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJQcm9wZXJ0eVZlcnNpb25cIl0gPSBcInByb3BlcnR5X3ZlcnNpb25cIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX05mdF9NYXJrZXRwbGFjZV9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiU2VsbGVyXCJdID0gXCJzZWxsZXJcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX05mdF9NYXJrZXRwbGFjZV9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5BbW91bnRcIl0gPSBcInRva2VuX2Ftb3VudFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJUb2tlbkRhdGFJZFwiXSA9IFwidG9rZW5fZGF0YV9pZFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJUb2tlbk5hbWVcIl0gPSBcInRva2VuX25hbWVcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX05mdF9NYXJrZXRwbGFjZV9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5TdGFuZGFyZFwiXSA9IFwidG9rZW5fc3RhbmRhcmRcIjtcbiAgTmZ0X01hcmtldHBsYWNlX1YyX05mdF9NYXJrZXRwbGFjZV9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiVHJhbnNhY3Rpb25UaW1lc3RhbXBcIl0gPSBcInRyYW5zYWN0aW9uX3RpbWVzdGFtcFwiO1xuICBOZnRfTWFya2V0cGxhY2VfVjJfTmZ0X01hcmtldHBsYWNlX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcInRyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgcmV0dXJuIE5mdF9NYXJrZXRwbGFjZV9WMl9OZnRfTWFya2V0cGxhY2VfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMjtcbn0pKE5mdF9NYXJrZXRwbGFjZV9WMl9OZnRfTWFya2V0cGxhY2VfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBOZnRfTWV0YWRhdGFfQ3Jhd2xlcl9QYXJzZWRfQXNzZXRfVXJpc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoTmZ0X01ldGFkYXRhX0NyYXdsZXJfUGFyc2VkX0Fzc2V0X1VyaXNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgTmZ0X01ldGFkYXRhX0NyYXdsZXJfUGFyc2VkX0Fzc2V0X1VyaXNfU2VsZWN0X0NvbHVtbjJbXCJBbmltYXRpb25PcHRpbWl6ZXJSZXRyeUNvdW50XCJdID0gXCJhbmltYXRpb25fb3B0aW1pemVyX3JldHJ5X2NvdW50XCI7XG4gIE5mdF9NZXRhZGF0YV9DcmF3bGVyX1BhcnNlZF9Bc3NldF9VcmlzX1NlbGVjdF9Db2x1bW4yW1wiQXNzZXRVcmlcIl0gPSBcImFzc2V0X3VyaVwiO1xuICBOZnRfTWV0YWRhdGFfQ3Jhd2xlcl9QYXJzZWRfQXNzZXRfVXJpc19TZWxlY3RfQ29sdW1uMltcIkNkbkFuaW1hdGlvblVyaVwiXSA9IFwiY2RuX2FuaW1hdGlvbl91cmlcIjtcbiAgTmZ0X01ldGFkYXRhX0NyYXdsZXJfUGFyc2VkX0Fzc2V0X1VyaXNfU2VsZWN0X0NvbHVtbjJbXCJDZG5JbWFnZVVyaVwiXSA9IFwiY2RuX2ltYWdlX3VyaVwiO1xuICBOZnRfTWV0YWRhdGFfQ3Jhd2xlcl9QYXJzZWRfQXNzZXRfVXJpc19TZWxlY3RfQ29sdW1uMltcIkNkbkpzb25VcmlcIl0gPSBcImNkbl9qc29uX3VyaVwiO1xuICBOZnRfTWV0YWRhdGFfQ3Jhd2xlcl9QYXJzZWRfQXNzZXRfVXJpc19TZWxlY3RfQ29sdW1uMltcIkltYWdlT3B0aW1pemVyUmV0cnlDb3VudFwiXSA9IFwiaW1hZ2Vfb3B0aW1pemVyX3JldHJ5X2NvdW50XCI7XG4gIE5mdF9NZXRhZGF0YV9DcmF3bGVyX1BhcnNlZF9Bc3NldF9VcmlzX1NlbGVjdF9Db2x1bW4yW1wiSnNvblBhcnNlclJldHJ5Q291bnRcIl0gPSBcImpzb25fcGFyc2VyX3JldHJ5X2NvdW50XCI7XG4gIE5mdF9NZXRhZGF0YV9DcmF3bGVyX1BhcnNlZF9Bc3NldF9VcmlzX1NlbGVjdF9Db2x1bW4yW1wiUmF3QW5pbWF0aW9uVXJpXCJdID0gXCJyYXdfYW5pbWF0aW9uX3VyaVwiO1xuICBOZnRfTWV0YWRhdGFfQ3Jhd2xlcl9QYXJzZWRfQXNzZXRfVXJpc19TZWxlY3RfQ29sdW1uMltcIlJhd0ltYWdlVXJpXCJdID0gXCJyYXdfaW1hZ2VfdXJpXCI7XG4gIHJldHVybiBOZnRfTWV0YWRhdGFfQ3Jhd2xlcl9QYXJzZWRfQXNzZXRfVXJpc19TZWxlY3RfQ29sdW1uMjtcbn0pKE5mdF9NZXRhZGF0YV9DcmF3bGVyX1BhcnNlZF9Bc3NldF9VcmlzX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIE51bV9BY3RpdmVfRGVsZWdhdG9yX1Blcl9Qb29sX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChOdW1fQWN0aXZlX0RlbGVnYXRvcl9QZXJfUG9vbF9TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBOdW1fQWN0aXZlX0RlbGVnYXRvcl9QZXJfUG9vbF9TZWxlY3RfQ29sdW1uMltcIk51bUFjdGl2ZURlbGVnYXRvclwiXSA9IFwibnVtX2FjdGl2ZV9kZWxlZ2F0b3JcIjtcbiAgTnVtX0FjdGl2ZV9EZWxlZ2F0b3JfUGVyX1Bvb2xfU2VsZWN0X0NvbHVtbjJbXCJQb29sQWRkcmVzc1wiXSA9IFwicG9vbF9hZGRyZXNzXCI7XG4gIHJldHVybiBOdW1fQWN0aXZlX0RlbGVnYXRvcl9QZXJfUG9vbF9TZWxlY3RfQ29sdW1uMjtcbn0pKE51bV9BY3RpdmVfRGVsZWdhdG9yX1Blcl9Qb29sX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIE9yZGVyX0J5ID0gLyogQF9fUFVSRV9fICovICgoT3JkZXJfQnkyKSA9PiB7XG4gIE9yZGVyX0J5MltcIkFzY1wiXSA9IFwiYXNjXCI7XG4gIE9yZGVyX0J5MltcIkFzY051bGxzRmlyc3RcIl0gPSBcImFzY19udWxsc19maXJzdFwiO1xuICBPcmRlcl9CeTJbXCJBc2NOdWxsc0xhc3RcIl0gPSBcImFzY19udWxsc19sYXN0XCI7XG4gIE9yZGVyX0J5MltcIkRlc2NcIl0gPSBcImRlc2NcIjtcbiAgT3JkZXJfQnkyW1wiRGVzY051bGxzRmlyc3RcIl0gPSBcImRlc2NfbnVsbHNfZmlyc3RcIjtcbiAgT3JkZXJfQnkyW1wiRGVzY051bGxzTGFzdFwiXSA9IFwiZGVzY19udWxsc19sYXN0XCI7XG4gIHJldHVybiBPcmRlcl9CeTI7XG59KShPcmRlcl9CeSB8fCB7fSk7XG52YXIgUHJvY2Vzc29yX1N0YXR1c19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoUHJvY2Vzc29yX1N0YXR1c19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBQcm9jZXNzb3JfU3RhdHVzX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFN1Y2Nlc3NWZXJzaW9uXCJdID0gXCJsYXN0X3N1Y2Nlc3NfdmVyc2lvblwiO1xuICBQcm9jZXNzb3JfU3RhdHVzX1NlbGVjdF9Db2x1bW4yW1wiTGFzdFVwZGF0ZWRcIl0gPSBcImxhc3RfdXBkYXRlZFwiO1xuICBQcm9jZXNzb3JfU3RhdHVzX1NlbGVjdF9Db2x1bW4yW1wiUHJvY2Vzc29yXCJdID0gXCJwcm9jZXNzb3JcIjtcbiAgcmV0dXJuIFByb2Nlc3Nvcl9TdGF0dXNfU2VsZWN0X0NvbHVtbjI7XG59KShQcm9jZXNzb3JfU3RhdHVzX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIFByb3Bvc2FsX1ZvdGVzX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChQcm9wb3NhbF9Wb3Rlc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBQcm9wb3NhbF9Wb3Rlc19TZWxlY3RfQ29sdW1uMltcIk51bVZvdGVzXCJdID0gXCJudW1fdm90ZXNcIjtcbiAgUHJvcG9zYWxfVm90ZXNfU2VsZWN0X0NvbHVtbjJbXCJQcm9wb3NhbElkXCJdID0gXCJwcm9wb3NhbF9pZFwiO1xuICBQcm9wb3NhbF9Wb3Rlc19TZWxlY3RfQ29sdW1uMltcIlNob3VsZFBhc3NcIl0gPSBcInNob3VsZF9wYXNzXCI7XG4gIFByb3Bvc2FsX1ZvdGVzX1NlbGVjdF9Db2x1bW4yW1wiU3Rha2luZ1Bvb2xBZGRyZXNzXCJdID0gXCJzdGFraW5nX3Bvb2xfYWRkcmVzc1wiO1xuICBQcm9wb3NhbF9Wb3Rlc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJ0cmFuc2FjdGlvbl90aW1lc3RhbXBcIjtcbiAgUHJvcG9zYWxfVm90ZXNfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcInRyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgUHJvcG9zYWxfVm90ZXNfU2VsZWN0X0NvbHVtbjJbXCJWb3RlckFkZHJlc3NcIl0gPSBcInZvdGVyX2FkZHJlc3NcIjtcbiAgcmV0dXJuIFByb3Bvc2FsX1ZvdGVzX1NlbGVjdF9Db2x1bW4yO1xufSkoUHJvcG9zYWxfVm90ZXNfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG52YXIgVGFibGVfSXRlbXNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKFRhYmxlX0l0ZW1zX1NlbGVjdF9Db2x1bW4yKSA9PiB7XG4gIFRhYmxlX0l0ZW1zX1NlbGVjdF9Db2x1bW4yW1wiRGVjb2RlZEtleVwiXSA9IFwiZGVjb2RlZF9rZXlcIjtcbiAgVGFibGVfSXRlbXNfU2VsZWN0X0NvbHVtbjJbXCJEZWNvZGVkVmFsdWVcIl0gPSBcImRlY29kZWRfdmFsdWVcIjtcbiAgVGFibGVfSXRlbXNfU2VsZWN0X0NvbHVtbjJbXCJLZXlcIl0gPSBcImtleVwiO1xuICBUYWJsZV9JdGVtc19TZWxlY3RfQ29sdW1uMltcIlRhYmxlSGFuZGxlXCJdID0gXCJ0YWJsZV9oYW5kbGVcIjtcbiAgVGFibGVfSXRlbXNfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcInRyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgVGFibGVfSXRlbXNfU2VsZWN0X0NvbHVtbjJbXCJXcml0ZVNldENoYW5nZUluZGV4XCJdID0gXCJ3cml0ZV9zZXRfY2hhbmdlX2luZGV4XCI7XG4gIHJldHVybiBUYWJsZV9JdGVtc19TZWxlY3RfQ29sdW1uMjtcbn0pKFRhYmxlX0l0ZW1zX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIFRhYmxlX01ldGFkYXRhc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoVGFibGVfTWV0YWRhdGFzX1NlbGVjdF9Db2x1bW4yKSA9PiB7XG4gIFRhYmxlX01ldGFkYXRhc19TZWxlY3RfQ29sdW1uMltcIkhhbmRsZVwiXSA9IFwiaGFuZGxlXCI7XG4gIFRhYmxlX01ldGFkYXRhc19TZWxlY3RfQ29sdW1uMltcIktleVR5cGVcIl0gPSBcImtleV90eXBlXCI7XG4gIFRhYmxlX01ldGFkYXRhc19TZWxlY3RfQ29sdW1uMltcIlZhbHVlVHlwZVwiXSA9IFwidmFsdWVfdHlwZVwiO1xuICByZXR1cm4gVGFibGVfTWV0YWRhdGFzX1NlbGVjdF9Db2x1bW4yO1xufSkoVGFibGVfTWV0YWRhdGFzX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIFRva2VuX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKFRva2VuX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgVG9rZW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIkNvaW5BbW91bnRcIl0gPSBcImNvaW5fYW1vdW50XCI7XG4gIFRva2VuX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJDb2luVHlwZVwiXSA9IFwiY29pbl90eXBlXCI7XG4gIFRva2VuX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uRGF0YUlkSGFzaFwiXSA9IFwiY29sbGVjdGlvbl9kYXRhX2lkX2hhc2hcIjtcbiAgVG9rZW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIkNvbGxlY3Rpb25OYW1lXCJdID0gXCJjb2xsZWN0aW9uX25hbWVcIjtcbiAgVG9rZW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIkNyZWF0b3JBZGRyZXNzXCJdID0gXCJjcmVhdG9yX2FkZHJlc3NcIjtcbiAgVG9rZW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIkV2ZW50QWNjb3VudEFkZHJlc3NcIl0gPSBcImV2ZW50X2FjY291bnRfYWRkcmVzc1wiO1xuICBUb2tlbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiRXZlbnRDcmVhdGlvbk51bWJlclwiXSA9IFwiZXZlbnRfY3JlYXRpb25fbnVtYmVyXCI7XG4gIFRva2VuX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJFdmVudEluZGV4XCJdID0gXCJldmVudF9pbmRleFwiO1xuICBUb2tlbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiRXZlbnRTZXF1ZW5jZU51bWJlclwiXSA9IFwiZXZlbnRfc2VxdWVuY2VfbnVtYmVyXCI7XG4gIFRva2VuX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJGcm9tQWRkcmVzc1wiXSA9IFwiZnJvbV9hZGRyZXNzXCI7XG4gIFRva2VuX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJOYW1lXCJdID0gXCJuYW1lXCI7XG4gIFRva2VuX0FjdGl2aXRpZXNfU2VsZWN0X0NvbHVtbjJbXCJQcm9wZXJ0eVZlcnNpb25cIl0gPSBcInByb3BlcnR5X3ZlcnNpb25cIjtcbiAgVG9rZW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIlRvQWRkcmVzc1wiXSA9IFwidG9fYWRkcmVzc1wiO1xuICBUb2tlbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5BbW91bnRcIl0gPSBcInRva2VuX2Ftb3VudFwiO1xuICBUb2tlbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiVG9rZW5EYXRhSWRIYXNoXCJdID0gXCJ0b2tlbl9kYXRhX2lkX2hhc2hcIjtcbiAgVG9rZW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJ0cmFuc2FjdGlvbl90aW1lc3RhbXBcIjtcbiAgVG9rZW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwidHJhbnNhY3Rpb25fdmVyc2lvblwiO1xuICBUb2tlbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yW1wiVHJhbnNmZXJUeXBlXCJdID0gXCJ0cmFuc2Zlcl90eXBlXCI7XG4gIHJldHVybiBUb2tlbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4yO1xufSkoVG9rZW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBUb2tlbl9BY3Rpdml0aWVzX1YyX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChUb2tlbl9BY3Rpdml0aWVzX1YyX1NlbGVjdF9Db2x1bW4yKSA9PiB7XG4gIFRva2VuX0FjdGl2aXRpZXNfVjJfU2VsZWN0X0NvbHVtbjJbXCJBZnRlclZhbHVlXCJdID0gXCJhZnRlcl92YWx1ZVwiO1xuICBUb2tlbl9BY3Rpdml0aWVzX1YyX1NlbGVjdF9Db2x1bW4yW1wiQmVmb3JlVmFsdWVcIl0gPSBcImJlZm9yZV92YWx1ZVwiO1xuICBUb2tlbl9BY3Rpdml0aWVzX1YyX1NlbGVjdF9Db2x1bW4yW1wiRW50cnlGdW5jdGlvbklkU3RyXCJdID0gXCJlbnRyeV9mdW5jdGlvbl9pZF9zdHJcIjtcbiAgVG9rZW5fQWN0aXZpdGllc19WMl9TZWxlY3RfQ29sdW1uMltcIkV2ZW50QWNjb3VudEFkZHJlc3NcIl0gPSBcImV2ZW50X2FjY291bnRfYWRkcmVzc1wiO1xuICBUb2tlbl9BY3Rpdml0aWVzX1YyX1NlbGVjdF9Db2x1bW4yW1wiRXZlbnRJbmRleFwiXSA9IFwiZXZlbnRfaW5kZXhcIjtcbiAgVG9rZW5fQWN0aXZpdGllc19WMl9TZWxlY3RfQ29sdW1uMltcIkZyb21BZGRyZXNzXCJdID0gXCJmcm9tX2FkZHJlc3NcIjtcbiAgVG9rZW5fQWN0aXZpdGllc19WMl9TZWxlY3RfQ29sdW1uMltcIklzRnVuZ2libGVWMlwiXSA9IFwiaXNfZnVuZ2libGVfdjJcIjtcbiAgVG9rZW5fQWN0aXZpdGllc19WMl9TZWxlY3RfQ29sdW1uMltcIlByb3BlcnR5VmVyc2lvblYxXCJdID0gXCJwcm9wZXJ0eV92ZXJzaW9uX3YxXCI7XG4gIFRva2VuX0FjdGl2aXRpZXNfVjJfU2VsZWN0X0NvbHVtbjJbXCJUb0FkZHJlc3NcIl0gPSBcInRvX2FkZHJlc3NcIjtcbiAgVG9rZW5fQWN0aXZpdGllc19WMl9TZWxlY3RfQ29sdW1uMltcIlRva2VuQW1vdW50XCJdID0gXCJ0b2tlbl9hbW91bnRcIjtcbiAgVG9rZW5fQWN0aXZpdGllc19WMl9TZWxlY3RfQ29sdW1uMltcIlRva2VuRGF0YUlkXCJdID0gXCJ0b2tlbl9kYXRhX2lkXCI7XG4gIFRva2VuX0FjdGl2aXRpZXNfVjJfU2VsZWN0X0NvbHVtbjJbXCJUb2tlblN0YW5kYXJkXCJdID0gXCJ0b2tlbl9zdGFuZGFyZFwiO1xuICBUb2tlbl9BY3Rpdml0aWVzX1YyX1NlbGVjdF9Db2x1bW4yW1wiVHJhbnNhY3Rpb25UaW1lc3RhbXBcIl0gPSBcInRyYW5zYWN0aW9uX3RpbWVzdGFtcFwiO1xuICBUb2tlbl9BY3Rpdml0aWVzX1YyX1NlbGVjdF9Db2x1bW4yW1wiVHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJ0cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIFRva2VuX0FjdGl2aXRpZXNfVjJfU2VsZWN0X0NvbHVtbjJbXCJUeXBlXCJdID0gXCJ0eXBlXCI7XG4gIHJldHVybiBUb2tlbl9BY3Rpdml0aWVzX1YyX1NlbGVjdF9Db2x1bW4yO1xufSkoVG9rZW5fQWN0aXZpdGllc19WMl9TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBUb2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uID0gLyogQF9fUFVSRV9fICovICgoVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjIpID0+IHtcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uRGF0YUlkSGFzaFwiXSA9IFwiY29sbGVjdGlvbl9kYXRhX2lkX2hhc2hcIjtcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uTmFtZVwiXSA9IFwiY29sbGVjdGlvbl9uYW1lXCI7XG4gIFRva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiQ3JlYXRvckFkZHJlc3NcIl0gPSBcImNyZWF0b3JfYWRkcmVzc1wiO1xuICBUb2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIkRlZmF1bHRQcm9wZXJ0aWVzXCJdID0gXCJkZWZhdWx0X3Byb3BlcnRpZXNcIjtcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJEZXNjcmlwdGlvblwiXSA9IFwiZGVzY3JpcHRpb25cIjtcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJEZXNjcmlwdGlvbk11dGFibGVcIl0gPSBcImRlc2NyaXB0aW9uX211dGFibGVcIjtcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJMYXJnZXN0UHJvcGVydHlWZXJzaW9uXCJdID0gXCJsYXJnZXN0X3Byb3BlcnR5X3ZlcnNpb25cIjtcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJNYXhpbXVtXCJdID0gXCJtYXhpbXVtXCI7XG4gIFRva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiTWF4aW11bU11dGFibGVcIl0gPSBcIm1heGltdW1fbXV0YWJsZVwiO1xuICBUb2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIk1ldGFkYXRhVXJpXCJdID0gXCJtZXRhZGF0YV91cmlcIjtcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJOYW1lXCJdID0gXCJuYW1lXCI7XG4gIFRva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiUGF5ZWVBZGRyZXNzXCJdID0gXCJwYXllZV9hZGRyZXNzXCI7XG4gIFRva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiUHJvcGVydGllc011dGFibGVcIl0gPSBcInByb3BlcnRpZXNfbXV0YWJsZVwiO1xuICBUb2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlJveWFsdHlNdXRhYmxlXCJdID0gXCJyb3lhbHR5X211dGFibGVcIjtcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJSb3lhbHR5UG9pbnRzRGVub21pbmF0b3JcIl0gPSBcInJveWFsdHlfcG9pbnRzX2Rlbm9taW5hdG9yXCI7XG4gIFRva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiUm95YWx0eVBvaW50c051bWVyYXRvclwiXSA9IFwicm95YWx0eV9wb2ludHNfbnVtZXJhdG9yXCI7XG4gIFRva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4yW1wiU3VwcGx5XCJdID0gXCJzdXBwbHlcIjtcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJUb2tlbkRhdGFJZEhhc2hcIl0gPSBcInRva2VuX2RhdGFfaWRfaGFzaFwiO1xuICBUb2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVGltZXN0YW1wXCJdID0gXCJ0cmFuc2FjdGlvbl90aW1lc3RhbXBcIjtcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblZlcnNpb25cIl0gPSBcInRyYW5zYWN0aW9uX3ZlcnNpb25cIjtcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjJbXCJVcmlNdXRhYmxlXCJdID0gXCJ1cmlfbXV0YWJsZVwiO1xuICByZXR1cm4gVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbjI7XG59KShUb2tlbl9EYXRhc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBUb2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChUb2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yKSA9PiB7XG4gIFRva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbjJbXCJBbW91bnRcIl0gPSBcImFtb3VudFwiO1xuICBUb2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yW1wiQ29sbGVjdGlvbkRhdGFJZEhhc2hcIl0gPSBcImNvbGxlY3Rpb25fZGF0YV9pZF9oYXNoXCI7XG4gIFRva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uTmFtZVwiXSA9IFwiY29sbGVjdGlvbl9uYW1lXCI7XG4gIFRva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbjJbXCJDcmVhdG9yQWRkcmVzc1wiXSA9IFwiY3JlYXRvcl9hZGRyZXNzXCI7XG4gIFRva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbjJbXCJOYW1lXCJdID0gXCJuYW1lXCI7XG4gIFRva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbjJbXCJPd25lckFkZHJlc3NcIl0gPSBcIm93bmVyX2FkZHJlc3NcIjtcbiAgVG9rZW5fT3duZXJzaGlwc19TZWxlY3RfQ29sdW1uMltcIlByb3BlcnR5VmVyc2lvblwiXSA9IFwicHJvcGVydHlfdmVyc2lvblwiO1xuICBUb2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yW1wiVGFibGVIYW5kbGVcIl0gPSBcInRhYmxlX2hhbmRsZVwiO1xuICBUb2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yW1wiVGFibGVUeXBlXCJdID0gXCJ0YWJsZV90eXBlXCI7XG4gIFRva2VuX093bmVyc2hpcHNfU2VsZWN0X0NvbHVtbjJbXCJUb2tlbkRhdGFJZEhhc2hcIl0gPSBcInRva2VuX2RhdGFfaWRfaGFzaFwiO1xuICBUb2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yW1wiVHJhbnNhY3Rpb25UaW1lc3RhbXBcIl0gPSBcInRyYW5zYWN0aW9uX3RpbWVzdGFtcFwiO1xuICBUb2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yW1wiVHJhbnNhY3Rpb25WZXJzaW9uXCJdID0gXCJ0cmFuc2FjdGlvbl92ZXJzaW9uXCI7XG4gIHJldHVybiBUb2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4yO1xufSkoVG9rZW5fT3duZXJzaGlwc19TZWxlY3RfQ29sdW1uIHx8IHt9KTtcbnZhciBUb2tlbnNfU2VsZWN0X0NvbHVtbiA9IC8qIEBfX1BVUkVfXyAqLyAoKFRva2Vuc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBUb2tlbnNfU2VsZWN0X0NvbHVtbjJbXCJDb2xsZWN0aW9uRGF0YUlkSGFzaFwiXSA9IFwiY29sbGVjdGlvbl9kYXRhX2lkX2hhc2hcIjtcbiAgVG9rZW5zX1NlbGVjdF9Db2x1bW4yW1wiQ29sbGVjdGlvbk5hbWVcIl0gPSBcImNvbGxlY3Rpb25fbmFtZVwiO1xuICBUb2tlbnNfU2VsZWN0X0NvbHVtbjJbXCJDcmVhdG9yQWRkcmVzc1wiXSA9IFwiY3JlYXRvcl9hZGRyZXNzXCI7XG4gIFRva2Vuc19TZWxlY3RfQ29sdW1uMltcIk5hbWVcIl0gPSBcIm5hbWVcIjtcbiAgVG9rZW5zX1NlbGVjdF9Db2x1bW4yW1wiUHJvcGVydHlWZXJzaW9uXCJdID0gXCJwcm9wZXJ0eV92ZXJzaW9uXCI7XG4gIFRva2Vuc19TZWxlY3RfQ29sdW1uMltcIlRva2VuRGF0YUlkSGFzaFwiXSA9IFwidG9rZW5fZGF0YV9pZF9oYXNoXCI7XG4gIFRva2Vuc19TZWxlY3RfQ29sdW1uMltcIlRva2VuUHJvcGVydGllc1wiXSA9IFwidG9rZW5fcHJvcGVydGllc1wiO1xuICBUb2tlbnNfU2VsZWN0X0NvbHVtbjJbXCJUcmFuc2FjdGlvblRpbWVzdGFtcFwiXSA9IFwidHJhbnNhY3Rpb25fdGltZXN0YW1wXCI7XG4gIFRva2Vuc19TZWxlY3RfQ29sdW1uMltcIlRyYW5zYWN0aW9uVmVyc2lvblwiXSA9IFwidHJhbnNhY3Rpb25fdmVyc2lvblwiO1xuICByZXR1cm4gVG9rZW5zX1NlbGVjdF9Db2x1bW4yO1xufSkoVG9rZW5zX1NlbGVjdF9Db2x1bW4gfHwge30pO1xudmFyIFVzZXJfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4gPSAvKiBAX19QVVJFX18gKi8gKChVc2VyX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMikgPT4ge1xuICBVc2VyX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIkJsb2NrSGVpZ2h0XCJdID0gXCJibG9ja19oZWlnaHRcIjtcbiAgVXNlcl9UcmFuc2FjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJFbnRyeUZ1bmN0aW9uSWRTdHJcIl0gPSBcImVudHJ5X2Z1bmN0aW9uX2lkX3N0clwiO1xuICBVc2VyX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIkVwb2NoXCJdID0gXCJlcG9jaFwiO1xuICBVc2VyX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIkV4cGlyYXRpb25UaW1lc3RhbXBTZWNzXCJdID0gXCJleHBpcmF0aW9uX3RpbWVzdGFtcF9zZWNzXCI7XG4gIFVzZXJfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4yW1wiR2FzVW5pdFByaWNlXCJdID0gXCJnYXNfdW5pdF9wcmljZVwiO1xuICBVc2VyX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIk1heEdhc0Ftb3VudFwiXSA9IFwibWF4X2dhc19hbW91bnRcIjtcbiAgVXNlcl9UcmFuc2FjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJQYXJlbnRTaWduYXR1cmVUeXBlXCJdID0gXCJwYXJlbnRfc2lnbmF0dXJlX3R5cGVcIjtcbiAgVXNlcl9UcmFuc2FjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJTZW5kZXJcIl0gPSBcInNlbmRlclwiO1xuICBVc2VyX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIlNlcXVlbmNlTnVtYmVyXCJdID0gXCJzZXF1ZW5jZV9udW1iZXJcIjtcbiAgVXNlcl9UcmFuc2FjdGlvbnNfU2VsZWN0X0NvbHVtbjJbXCJUaW1lc3RhbXBcIl0gPSBcInRpbWVzdGFtcFwiO1xuICBVc2VyX1RyYW5zYWN0aW9uc19TZWxlY3RfQ29sdW1uMltcIlZlcnNpb25cIl0gPSBcInZlcnNpb25cIjtcbiAgcmV0dXJuIFVzZXJfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4yO1xufSkoVXNlcl9UcmFuc2FjdGlvbnNfU2VsZWN0X0NvbHVtbiB8fCB7fSk7XG5leHBvcnQge1xuICBBUFRPU19DT0lOLFxuICBBY2NvdW50U2VxdWVuY2VOdW1iZXIsXG4gIEFjY291bnRfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4sXG4gIEFkZHJlc3NfRXZlbnRzX1N1bW1hcnlfU2VsZWN0X0NvbHVtbixcbiAgQWRkcmVzc19WZXJzaW9uX0Zyb21fRXZlbnRzX1NlbGVjdF9Db2x1bW4sXG4gIEFkZHJlc3NfVmVyc2lvbl9Gcm9tX01vdmVfUmVzb3VyY2VzX1NlbGVjdF9Db2x1bW4sXG4gIEFuc0NsaWVudCxcbiAgQXBpRXJyb3IsXG4gIEFwdG9zQWNjb3VudCxcbiAgQXB0b3NBcGlFcnJvcixcbiAgQXB0b3NDbGllbnQsXG4gIEFwdG9zVG9rZW4sXG4gIGJjc19leHBvcnRzIGFzIEJDUyxcbiAgQmxvY2tfTWV0YWRhdGFfVHJhbnNhY3Rpb25zX1NlbGVjdF9Db2x1bW4sXG4gIENLRFByaXYsXG4gIENPSU5fVFJBTlNGRVIsXG4gIENvaW5DbGllbnQsXG4gIENvaW5fQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uLFxuICBDb2luX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4sXG4gIENvaW5fSW5mb3NfU2VsZWN0X0NvbHVtbixcbiAgQ29pbl9TdXBwbHlfU2VsZWN0X0NvbHVtbixcbiAgQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uLFxuICBDdXJyZW50X0Fuc19Mb29rdXBfU2VsZWN0X0NvbHVtbixcbiAgQ3VycmVudF9BbnNfTG9va3VwX1YyX1NlbGVjdF9Db2x1bW4sXG4gIEN1cnJlbnRfQXB0b3NfTmFtZXNfU2VsZWN0X0NvbHVtbixcbiAgQ3VycmVudF9Db2luX0JhbGFuY2VzX1NlbGVjdF9Db2x1bW4sXG4gIEN1cnJlbnRfQ29sbGVjdGlvbl9EYXRhc19TZWxlY3RfQ29sdW1uLFxuICBDdXJyZW50X0NvbGxlY3Rpb25fT3duZXJzaGlwX1YyX1ZpZXdfU2VsZWN0X0NvbHVtbixcbiAgQ3VycmVudF9Db2xsZWN0aW9uc19WMl9TZWxlY3RfQ29sdW1uLFxuICBDdXJyZW50X0RlbGVnYXRlZF9TdGFraW5nX1Bvb2xfQmFsYW5jZXNfU2VsZWN0X0NvbHVtbixcbiAgQ3VycmVudF9EZWxlZ2F0ZWRfVm90ZXJfU2VsZWN0X0NvbHVtbixcbiAgQ3VycmVudF9EZWxlZ2F0b3JfQmFsYW5jZXNfU2VsZWN0X0NvbHVtbixcbiAgQ3VycmVudF9GdW5naWJsZV9Bc3NldF9CYWxhbmNlc19TZWxlY3RfQ29sdW1uLFxuICBDdXJyZW50X09iamVjdHNfU2VsZWN0X0NvbHVtbixcbiAgQ3VycmVudF9TdGFraW5nX1Bvb2xfVm90ZXJfU2VsZWN0X0NvbHVtbixcbiAgQ3VycmVudF9UYWJsZV9JdGVtc19TZWxlY3RfQ29sdW1uLFxuICBDdXJyZW50X1Rva2VuX0RhdGFzX1NlbGVjdF9Db2x1bW4sXG4gIEN1cnJlbnRfVG9rZW5fRGF0YXNfVjJfU2VsZWN0X0NvbHVtbixcbiAgQ3VycmVudF9Ub2tlbl9Pd25lcnNoaXBzX1NlbGVjdF9Db2x1bW4sXG4gIEN1cnJlbnRfVG9rZW5fT3duZXJzaGlwc19WMl9TZWxlY3RfQ29sdW1uLFxuICBDdXJyZW50X1Rva2VuX1BlbmRpbmdfQ2xhaW1zX1NlbGVjdF9Db2x1bW4sXG4gIEN1cnNvcl9PcmRlcmluZyxcbiAgRGVsZWdhdGVkX1N0YWtpbmdfQWN0aXZpdGllc19TZWxlY3RfQ29sdW1uLFxuICBEZWxlZ2F0ZWRfU3Rha2luZ19Qb29sc19TZWxlY3RfQ29sdW1uLFxuICBEZWxlZ2F0b3JfRGlzdGluY3RfUG9vbF9TZWxlY3RfQ29sdW1uLFxuICBFdmVudHNfU2VsZWN0X0NvbHVtbixcbiAgRmFpbGVkVHJhbnNhY3Rpb25FcnJvcixcbiAgRmF1Y2V0Q2xpZW50LFxuICBGdW5naWJsZUFzc2V0Q2xpZW50LFxuICBGdW5naWJsZV9Bc3NldF9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4sXG4gIEZ1bmdpYmxlX0Fzc2V0X01ldGFkYXRhX1NlbGVjdF9Db2x1bW4sXG4gIEhleFN0cmluZyxcbiAgSW5kZXhlckNsaWVudCxcbiAgSW5kZXhlcl9TdGF0dXNfU2VsZWN0X0NvbHVtbixcbiAgTGVkZ2VyX0luZm9zX1NlbGVjdF9Db2x1bW4sXG4gIE1vdmVfUmVzb3VyY2VzX1NlbGVjdF9Db2x1bW4sXG4gIE5ldHdvcmssXG4gIE5ldHdvcmtUb0luZGV4ZXJBUEksXG4gIE5ldHdvcmtUb05vZGVBUEksXG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9BdWN0aW9uc19TZWxlY3RfQ29sdW1uLFxuICBOZnRfTWFya2V0cGxhY2VfVjJfQ3VycmVudF9OZnRfTWFya2V0cGxhY2VfQ29sbGVjdGlvbl9PZmZlcnNfU2VsZWN0X0NvbHVtbixcbiAgTmZ0X01hcmtldHBsYWNlX1YyX0N1cnJlbnRfTmZ0X01hcmtldHBsYWNlX0xpc3RpbmdzX1NlbGVjdF9Db2x1bW4sXG4gIE5mdF9NYXJrZXRwbGFjZV9WMl9DdXJyZW50X05mdF9NYXJrZXRwbGFjZV9Ub2tlbl9PZmZlcnNfU2VsZWN0X0NvbHVtbixcbiAgTmZ0X01hcmtldHBsYWNlX1YyX05mdF9NYXJrZXRwbGFjZV9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4sXG4gIE5mdF9NZXRhZGF0YV9DcmF3bGVyX1BhcnNlZF9Bc3NldF9VcmlzX1NlbGVjdF9Db2x1bW4sXG4gIE5vZGVBUElUb05ldHdvcmssXG4gIE51bV9BY3RpdmVfRGVsZWdhdG9yX1Blcl9Qb29sX1NlbGVjdF9Db2x1bW4sXG4gIE9yZGVyX0J5LFxuICBQcm9jZXNzb3JfU3RhdHVzX1NlbGVjdF9Db2x1bW4sXG4gIFByb3BlcnR5TWFwLFxuICBQcm9wZXJ0eVZhbHVlLFxuICBQcm9wb3NhbF9Wb3Rlc19TZWxlY3RfQ29sdW1uLFxuICBQcm92aWRlcixcbiAgVFJBTlNGRVJfQ09JTlMsXG4gIFRhYmxlX0l0ZW1zX1NlbGVjdF9Db2x1bW4sXG4gIFRhYmxlX01ldGFkYXRhc19TZWxlY3RfQ29sdW1uLFxuICBUb2tlbkNsaWVudCxcbiAgdG9rZW5fdHlwZXNfZXhwb3J0cyBhcyBUb2tlblR5cGVzLFxuICBUb2tlbl9BY3Rpdml0aWVzX1NlbGVjdF9Db2x1bW4sXG4gIFRva2VuX0FjdGl2aXRpZXNfVjJfU2VsZWN0X0NvbHVtbixcbiAgVG9rZW5fRGF0YXNfU2VsZWN0X0NvbHVtbixcbiAgVG9rZW5fT3duZXJzaGlwc19TZWxlY3RfQ29sdW1uLFxuICBUb2tlbnNfU2VsZWN0X0NvbHVtbixcbiAgVHJhbnNhY3Rpb25CdWlsZGVyLFxuICBUcmFuc2FjdGlvbkJ1aWxkZXJBQkksXG4gIFRyYW5zYWN0aW9uQnVpbGRlckVkMjU1MTksXG4gIFRyYW5zYWN0aW9uQnVpbGRlck11bHRpRWQyNTUxOSxcbiAgVHJhbnNhY3Rpb25CdWlsZGVyUmVtb3RlQUJJLFxuICBUcmFuc2FjdGlvbldvcmtlcixcbiAgVHJhbnNhY3Rpb25Xb3JrZXJFdmVudHMsXG4gIGFwdG9zX3R5cGVzX2V4cG9ydHMgYXMgVHhuQnVpbGRlclR5cGVzLFxuICBUeXBlVGFnUGFyc2VyLFxuICBnZW5lcmF0ZWRfZXhwb3J0cyBhcyBUeXBlcyxcbiAgVXNlcl9UcmFuc2FjdGlvbnNfU2VsZWN0X0NvbHVtbixcbiAgV2FpdEZvclRyYW5zYWN0aW9uRXJyb3IsXG4gIGFuc0NvbnRyYWN0c01hcCxcbiAgYXB0b3NSZXF1ZXN0LFxuICBhcmdUb1RyYW5zYWN0aW9uQXJndW1lbnQsXG4gIGRlcml2ZVBhdGgsXG4gIGRlc2VyaWFsaXplUHJvcGVydHlNYXAsXG4gIGRlc2VyaWFsaXplVmFsdWVCYXNlZE9uVHlwZVRhZyxcbiAgZW5zdXJlQmlnSW50LFxuICBlbnN1cmVCb29sZWFuLFxuICBlbnN1cmVOdW1iZXIsXG4gIGdldCxcbiAgZ2V0QWRkcmVzc0Zyb21BY2NvdW50T3JBZGRyZXNzLFxuICBnZXRNYXN0ZXJLZXlGcm9tU2VlZCxcbiAgZ2V0UHJvcGVydHlUeXBlLFxuICBnZXRQcm9wZXJ0eVZhbHVlUmF3LFxuICBnZXRQdWJsaWNLZXksXG4gIGdldFNpbmdsZVByb3BlcnR5VmFsdWVSYXcsXG4gIGlzVmFsaWRQYXRoLFxuICBuYW1lQ29tcG9uZW50UGF0dGVybixcbiAgbmFtZVBhdHRlcm4sXG4gIHBvc3QsXG4gIHNlcmlhbGl6ZUFyZ1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@aptos-labs/aptos-client/dist/browser/index.browser.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@aptos-labs/aptos-client/dist/browser/index.browser.mjs ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ aptosClient; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/axios.js\");\n// src/index.browser.ts\n\nasync function aptosClient(options) {\n  var _a;\n  const { params, method, url, headers, body, overrides } = options;\n  const requestConfig = {\n    headers,\n    method,\n    url,\n    params,\n    data: body,\n    withCredentials: (_a = overrides == null ? void 0 : overrides.WITH_CREDENTIALS) != null ? _a : true\n  };\n  try {\n    const response = await (0,axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(requestConfig);\n    return {\n      status: response.status,\n      statusText: response.statusText,\n      data: response.data,\n      headers: response.headers,\n      config: response.config\n    };\n  } catch (error) {\n    const axiosError = error;\n    if (axiosError.response) {\n      return axiosError.response;\n    }\n    throw error;\n  }\n}\n\n//# sourceMappingURL=index.browser.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQGFwdG9zLWxhYnMvYXB0b3MtY2xpZW50L2Rpc3QvYnJvd3Nlci9pbmRleC5icm93c2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQzBCO0FBQzFCO0FBQ0E7QUFDQSxVQUFVLGdEQUFnRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsaURBQUs7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQGFwdG9zLWxhYnMvYXB0b3MtY2xpZW50L2Rpc3QvYnJvd3Nlci9pbmRleC5icm93c2VyLm1qcz9mZjdjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pbmRleC5icm93c2VyLnRzXG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XG5hc3luYyBmdW5jdGlvbiBhcHRvc0NsaWVudChvcHRpb25zKSB7XG4gIHZhciBfYTtcbiAgY29uc3QgeyBwYXJhbXMsIG1ldGhvZCwgdXJsLCBoZWFkZXJzLCBib2R5LCBvdmVycmlkZXMgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IHJlcXVlc3RDb25maWcgPSB7XG4gICAgaGVhZGVycyxcbiAgICBtZXRob2QsXG4gICAgdXJsLFxuICAgIHBhcmFtcyxcbiAgICBkYXRhOiBib2R5LFxuICAgIHdpdGhDcmVkZW50aWFsczogKF9hID0gb3ZlcnJpZGVzID09IG51bGwgPyB2b2lkIDAgOiBvdmVycmlkZXMuV0lUSF9DUkVERU5USUFMUykgIT0gbnVsbCA/IF9hIDogdHJ1ZVxuICB9O1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MocmVxdWVzdENvbmZpZyk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgc3RhdHVzVGV4dDogcmVzcG9uc2Uuc3RhdHVzVGV4dCxcbiAgICAgIGRhdGE6IHJlc3BvbnNlLmRhdGEsXG4gICAgICBoZWFkZXJzOiByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnOiByZXNwb25zZS5jb25maWdcbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnN0IGF4aW9zRXJyb3IgPSBlcnJvcjtcbiAgICBpZiAoYXhpb3NFcnJvci5yZXNwb25zZSkge1xuICAgICAgcmV0dXJuIGF4aW9zRXJyb3IucmVzcG9uc2U7XG4gICAgfVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5leHBvcnQge1xuICBhcHRvc0NsaWVudCBhcyBkZWZhdWx0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguYnJvd3Nlci5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@aptos-labs/aptos-client/dist/browser/index.browser.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bool: function() { return /* binding */ bool; },\n/* harmony export */   bytes: function() { return /* binding */ bytes; },\n/* harmony export */   exists: function() { return /* binding */ exists; },\n/* harmony export */   hash: function() { return /* binding */ hash; },\n/* harmony export */   number: function() { return /* binding */ number; },\n/* harmony export */   output: function() { return /* binding */ output; }\n/* harmony export */ });\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\n\nconst assert = { number, bool, bytes, hash, exists, output };\n/* harmony default export */ __webpack_exports__[\"default\"] = (assert);\n//# sourceMappingURL=_assert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX2Fzc2VydC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0EsbURBQW1ELEVBQUU7QUFDckQ7QUFDQTtBQUNBO0FBQ0EsaURBQWlELEVBQUU7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsUUFBUSxrQkFBa0IsU0FBUztBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGLElBQUk7QUFDckY7QUFDQTtBQUNxRDtBQUNyRCxpQkFBaUI7QUFDakIsK0RBQWUsTUFBTSxFQUFDO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX2Fzc2VydC5qcz8xNDY5Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG51bWJlcihuKSB7XG4gICAgaWYgKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihuKSB8fCBuIDwgMClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBXcm9uZyBwb3NpdGl2ZSBpbnRlZ2VyOiAke259YCk7XG59XG5mdW5jdGlvbiBib29sKGIpIHtcbiAgICBpZiAodHlwZW9mIGIgIT09ICdib29sZWFuJylcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBib29sZWFuLCBub3QgJHtifWApO1xufVxuLy8gY29waWVkIGZyb20gdXRpbHNcbmZ1bmN0aW9uIGlzQnl0ZXMoYSkge1xuICAgIHJldHVybiAoYSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgfHxcbiAgICAgICAgKGEgIT0gbnVsbCAmJiB0eXBlb2YgYSA9PT0gJ29iamVjdCcgJiYgYS5jb25zdHJ1Y3Rvci5uYW1lID09PSAnVWludDhBcnJheScpKTtcbn1cbmZ1bmN0aW9uIGJ5dGVzKGIsIC4uLmxlbmd0aHMpIHtcbiAgICBpZiAoIWlzQnl0ZXMoYikpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgVWludDhBcnJheScpO1xuICAgIGlmIChsZW5ndGhzLmxlbmd0aCA+IDAgJiYgIWxlbmd0aHMuaW5jbHVkZXMoYi5sZW5ndGgpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIFVpbnQ4QXJyYXkgb2YgbGVuZ3RoICR7bGVuZ3Roc30sIG5vdCBvZiBsZW5ndGg9JHtiLmxlbmd0aH1gKTtcbn1cbmZ1bmN0aW9uIGhhc2goaGFzaCkge1xuICAgIGlmICh0eXBlb2YgaGFzaCAhPT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgaGFzaC5jcmVhdGUgIT09ICdmdW5jdGlvbicpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSGFzaCBzaG91bGQgYmUgd3JhcHBlZCBieSB1dGlscy53cmFwQ29uc3RydWN0b3InKTtcbiAgICBudW1iZXIoaGFzaC5vdXRwdXRMZW4pO1xuICAgIG51bWJlcihoYXNoLmJsb2NrTGVuKTtcbn1cbmZ1bmN0aW9uIGV4aXN0cyhpbnN0YW5jZSwgY2hlY2tGaW5pc2hlZCA9IHRydWUpIHtcbiAgICBpZiAoaW5zdGFuY2UuZGVzdHJveWVkKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hhc2ggaW5zdGFuY2UgaGFzIGJlZW4gZGVzdHJveWVkJyk7XG4gICAgaWYgKGNoZWNrRmluaXNoZWQgJiYgaW5zdGFuY2UuZmluaXNoZWQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSGFzaCNkaWdlc3QoKSBoYXMgYWxyZWFkeSBiZWVuIGNhbGxlZCcpO1xufVxuZnVuY3Rpb24gb3V0cHV0KG91dCwgaW5zdGFuY2UpIHtcbiAgICBieXRlcyhvdXQpO1xuICAgIGNvbnN0IG1pbiA9IGluc3RhbmNlLm91dHB1dExlbjtcbiAgICBpZiAob3V0Lmxlbmd0aCA8IG1pbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGRpZ2VzdEludG8oKSBleHBlY3RzIG91dHB1dCBidWZmZXIgb2YgbGVuZ3RoIGF0IGxlYXN0ICR7bWlufWApO1xuICAgIH1cbn1cbmV4cG9ydCB7IG51bWJlciwgYm9vbCwgYnl0ZXMsIGhhc2gsIGV4aXN0cywgb3V0cHV0IH07XG5jb25zdCBhc3NlcnQgPSB7IG51bWJlciwgYm9vbCwgYnl0ZXMsIGhhc2gsIGV4aXN0cywgb3V0cHV0IH07XG5leHBvcnQgZGVmYXVsdCBhc3NlcnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fYXNzZXJ0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_sha2.js":
/*!********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/_sha2.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SHA2: function() { return /* binding */ SHA2; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n\n\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(this.buffer);\n    }\n    update(data) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.exists)(this);\n        const { view, buffer, blockLen } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.exists)(this);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.output)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX3NoYTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThDO0FBQ1M7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG1CQUFtQiwyQ0FBSTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFEQUFVO0FBQzlCO0FBQ0E7QUFDQSxRQUFRLGtEQUFNO0FBQ2QsZ0JBQWdCLHlCQUF5QjtBQUN6QyxlQUFlLGtEQUFPO0FBQ3RCO0FBQ0EsMEJBQTBCLFVBQVU7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHFEQUFVO0FBQzNDLHVCQUF1Qix1QkFBdUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtEQUFNO0FBQ2QsUUFBUSxrREFBTTtBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLCtCQUErQjtBQUMvQyxjQUFjLE1BQU07QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGNBQWM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHFEQUFVO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0JBQW9CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscURBQXFEO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX3NoYTIuanM/Mzc5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleGlzdHMsIG91dHB1dCB9IGZyb20gJy4vX2Fzc2VydC5qcyc7XG5pbXBvcnQgeyBIYXNoLCBjcmVhdGVWaWV3LCB0b0J5dGVzIH0gZnJvbSAnLi91dGlscy5qcyc7XG4vLyBQb2x5ZmlsbCBmb3IgU2FmYXJpIDE0XG5mdW5jdGlvbiBzZXRCaWdVaW50NjQodmlldywgYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpIHtcbiAgICBpZiAodHlwZW9mIHZpZXcuc2V0QmlnVWludDY0ID09PSAnZnVuY3Rpb24nKVxuICAgICAgICByZXR1cm4gdmlldy5zZXRCaWdVaW50NjQoYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpO1xuICAgIGNvbnN0IF8zMm4gPSBCaWdJbnQoMzIpO1xuICAgIGNvbnN0IF91MzJfbWF4ID0gQmlnSW50KDB4ZmZmZmZmZmYpO1xuICAgIGNvbnN0IHdoID0gTnVtYmVyKCh2YWx1ZSA+PiBfMzJuKSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCB3bCA9IE51bWJlcih2YWx1ZSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCBoID0gaXNMRSA/IDQgOiAwO1xuICAgIGNvbnN0IGwgPSBpc0xFID8gMCA6IDQ7XG4gICAgdmlldy5zZXRVaW50MzIoYnl0ZU9mZnNldCArIGgsIHdoLCBpc0xFKTtcbiAgICB2aWV3LnNldFVpbnQzMihieXRlT2Zmc2V0ICsgbCwgd2wsIGlzTEUpO1xufVxuLy8gQmFzZSBTSEEyIGNsYXNzIChSRkMgNjIzNClcbmV4cG9ydCBjbGFzcyBTSEEyIGV4dGVuZHMgSGFzaCB7XG4gICAgY29uc3RydWN0b3IoYmxvY2tMZW4sIG91dHB1dExlbiwgcGFkT2Zmc2V0LCBpc0xFKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuYmxvY2tMZW4gPSBibG9ja0xlbjtcbiAgICAgICAgdGhpcy5vdXRwdXRMZW4gPSBvdXRwdXRMZW47XG4gICAgICAgIHRoaXMucGFkT2Zmc2V0ID0gcGFkT2Zmc2V0O1xuICAgICAgICB0aGlzLmlzTEUgPSBpc0xFO1xuICAgICAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgICAgICAgdGhpcy5wb3MgPSAwO1xuICAgICAgICB0aGlzLmRlc3Ryb3llZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KGJsb2NrTGVuKTtcbiAgICAgICAgdGhpcy52aWV3ID0gY3JlYXRlVmlldyh0aGlzLmJ1ZmZlcik7XG4gICAgfVxuICAgIHVwZGF0ZShkYXRhKSB7XG4gICAgICAgIGV4aXN0cyh0aGlzKTtcbiAgICAgICAgY29uc3QgeyB2aWV3LCBidWZmZXIsIGJsb2NrTGVuIH0gPSB0aGlzO1xuICAgICAgICBkYXRhID0gdG9CeXRlcyhkYXRhKTtcbiAgICAgICAgY29uc3QgbGVuID0gZGF0YS5sZW5ndGg7XG4gICAgICAgIGZvciAobGV0IHBvcyA9IDA7IHBvcyA8IGxlbjspIHtcbiAgICAgICAgICAgIGNvbnN0IHRha2UgPSBNYXRoLm1pbihibG9ja0xlbiAtIHRoaXMucG9zLCBsZW4gLSBwb3MpO1xuICAgICAgICAgICAgLy8gRmFzdCBwYXRoOiB3ZSBoYXZlIGF0IGxlYXN0IG9uZSBibG9jayBpbiBpbnB1dCwgY2FzdCBpdCB0byB2aWV3IGFuZCBwcm9jZXNzXG4gICAgICAgICAgICBpZiAodGFrZSA9PT0gYmxvY2tMZW4pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhVmlldyA9IGNyZWF0ZVZpZXcoZGF0YSk7XG4gICAgICAgICAgICAgICAgZm9yICg7IGJsb2NrTGVuIDw9IGxlbiAtIHBvczsgcG9zICs9IGJsb2NrTGVuKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3MoZGF0YVZpZXcsIHBvcyk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBidWZmZXIuc2V0KGRhdGEuc3ViYXJyYXkocG9zLCBwb3MgKyB0YWtlKSwgdGhpcy5wb3MpO1xuICAgICAgICAgICAgdGhpcy5wb3MgKz0gdGFrZTtcbiAgICAgICAgICAgIHBvcyArPSB0YWtlO1xuICAgICAgICAgICAgaWYgKHRoaXMucG9zID09PSBibG9ja0xlbikge1xuICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzcyh2aWV3LCAwKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBvcyA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sZW5ndGggKz0gZGF0YS5sZW5ndGg7XG4gICAgICAgIHRoaXMucm91bmRDbGVhbigpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGlnZXN0SW50byhvdXQpIHtcbiAgICAgICAgZXhpc3RzKHRoaXMpO1xuICAgICAgICBvdXRwdXQob3V0LCB0aGlzKTtcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgIC8vIFBhZGRpbmdcbiAgICAgICAgLy8gV2UgY2FuIGF2b2lkIGFsbG9jYXRpb24gb2YgYnVmZmVyIGZvciBwYWRkaW5nIGNvbXBsZXRlbHkgaWYgaXRcbiAgICAgICAgLy8gd2FzIHByZXZpb3VzbHkgbm90IGFsbG9jYXRlZCBoZXJlLiBCdXQgaXQgd29uJ3QgY2hhbmdlIHBlcmZvcm1hbmNlLlxuICAgICAgICBjb25zdCB7IGJ1ZmZlciwgdmlldywgYmxvY2tMZW4sIGlzTEUgfSA9IHRoaXM7XG4gICAgICAgIGxldCB7IHBvcyB9ID0gdGhpcztcbiAgICAgICAgLy8gYXBwZW5kIHRoZSBiaXQgJzEnIHRvIHRoZSBtZXNzYWdlXG4gICAgICAgIGJ1ZmZlcltwb3MrK10gPSAwYjEwMDAwMDAwO1xuICAgICAgICB0aGlzLmJ1ZmZlci5zdWJhcnJheShwb3MpLmZpbGwoMCk7XG4gICAgICAgIC8vIHdlIGhhdmUgbGVzcyB0aGFuIHBhZE9mZnNldCBsZWZ0IGluIGJ1ZmZlciwgc28gd2UgY2Fubm90IHB1dCBsZW5ndGggaW4gY3VycmVudCBibG9jaywgbmVlZCBwcm9jZXNzIGl0IGFuZCBwYWQgYWdhaW5cbiAgICAgICAgaWYgKHRoaXMucGFkT2Zmc2V0ID4gYmxvY2tMZW4gLSBwb3MpIHtcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzcyh2aWV3LCAwKTtcbiAgICAgICAgICAgIHBvcyA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUGFkIHVudGlsIGZ1bGwgYmxvY2sgYnl0ZSB3aXRoIHplcm9zXG4gICAgICAgIGZvciAobGV0IGkgPSBwb3M7IGkgPCBibG9ja0xlbjsgaSsrKVxuICAgICAgICAgICAgYnVmZmVyW2ldID0gMDtcbiAgICAgICAgLy8gTm90ZTogc2hhNTEyIHJlcXVpcmVzIGxlbmd0aCB0byBiZSAxMjhiaXQgaW50ZWdlciwgYnV0IGxlbmd0aCBpbiBKUyB3aWxsIG92ZXJmbG93IGJlZm9yZSB0aGF0XG4gICAgICAgIC8vIFlvdSBuZWVkIHRvIHdyaXRlIGFyb3VuZCAyIGV4YWJ5dGVzICh1NjRfbWF4IC8gOCAvICgxMDI0Kio2KSkgZm9yIHRoaXMgdG8gaGFwcGVuLlxuICAgICAgICAvLyBTbyB3ZSBqdXN0IHdyaXRlIGxvd2VzdCA2NCBiaXRzIG9mIHRoYXQgdmFsdWUuXG4gICAgICAgIHNldEJpZ1VpbnQ2NCh2aWV3LCBibG9ja0xlbiAtIDgsIEJpZ0ludCh0aGlzLmxlbmd0aCAqIDgpLCBpc0xFKTtcbiAgICAgICAgdGhpcy5wcm9jZXNzKHZpZXcsIDApO1xuICAgICAgICBjb25zdCBvdmlldyA9IGNyZWF0ZVZpZXcob3V0KTtcbiAgICAgICAgY29uc3QgbGVuID0gdGhpcy5vdXRwdXRMZW47XG4gICAgICAgIC8vIE5PVEU6IHdlIGRvIGRpdmlzaW9uIGJ5IDQgbGF0ZXIsIHdoaWNoIHNob3VsZCBiZSBmdXNlZCBpbiBzaW5nbGUgb3Agd2l0aCBtb2R1bG8gYnkgSklUXG4gICAgICAgIGlmIChsZW4gJSA0KVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdfc2hhMjogb3V0cHV0TGVuIHNob3VsZCBiZSBhbGlnbmVkIHRvIDMyYml0Jyk7XG4gICAgICAgIGNvbnN0IG91dExlbiA9IGxlbiAvIDQ7XG4gICAgICAgIGNvbnN0IHN0YXRlID0gdGhpcy5nZXQoKTtcbiAgICAgICAgaWYgKG91dExlbiA+IHN0YXRlLmxlbmd0aClcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignX3NoYTI6IG91dHB1dExlbiBiaWdnZXIgdGhhbiBzdGF0ZScpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG91dExlbjsgaSsrKVxuICAgICAgICAgICAgb3ZpZXcuc2V0VWludDMyKDQgKiBpLCBzdGF0ZVtpXSwgaXNMRSk7XG4gICAgfVxuICAgIGRpZ2VzdCgpIHtcbiAgICAgICAgY29uc3QgeyBidWZmZXIsIG91dHB1dExlbiB9ID0gdGhpcztcbiAgICAgICAgdGhpcy5kaWdlc3RJbnRvKGJ1ZmZlcik7XG4gICAgICAgIGNvbnN0IHJlcyA9IGJ1ZmZlci5zbGljZSgwLCBvdXRwdXRMZW4pO1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gICAgX2Nsb25lSW50byh0bykge1xuICAgICAgICB0byB8fCAodG8gPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcigpKTtcbiAgICAgICAgdG8uc2V0KC4uLnRoaXMuZ2V0KCkpO1xuICAgICAgICBjb25zdCB7IGJsb2NrTGVuLCBidWZmZXIsIGxlbmd0aCwgZmluaXNoZWQsIGRlc3Ryb3llZCwgcG9zIH0gPSB0aGlzO1xuICAgICAgICB0by5sZW5ndGggPSBsZW5ndGg7XG4gICAgICAgIHRvLnBvcyA9IHBvcztcbiAgICAgICAgdG8uZmluaXNoZWQgPSBmaW5pc2hlZDtcbiAgICAgICAgdG8uZGVzdHJveWVkID0gZGVzdHJveWVkO1xuICAgICAgICBpZiAobGVuZ3RoICUgYmxvY2tMZW4pXG4gICAgICAgICAgICB0by5idWZmZXIuc2V0KGJ1ZmZlcik7XG4gICAgICAgIHJldHVybiB0bztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fc2hhMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_sha2.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_u64.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/_u64.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: function() { return /* binding */ add; },\n/* harmony export */   add3H: function() { return /* binding */ add3H; },\n/* harmony export */   add3L: function() { return /* binding */ add3L; },\n/* harmony export */   add4H: function() { return /* binding */ add4H; },\n/* harmony export */   add4L: function() { return /* binding */ add4L; },\n/* harmony export */   add5H: function() { return /* binding */ add5H; },\n/* harmony export */   add5L: function() { return /* binding */ add5L; },\n/* harmony export */   fromBig: function() { return /* binding */ fromBig; },\n/* harmony export */   rotlBH: function() { return /* binding */ rotlBH; },\n/* harmony export */   rotlBL: function() { return /* binding */ rotlBL; },\n/* harmony export */   rotlSH: function() { return /* binding */ rotlSH; },\n/* harmony export */   rotlSL: function() { return /* binding */ rotlSL; },\n/* harmony export */   rotr32H: function() { return /* binding */ rotr32H; },\n/* harmony export */   rotr32L: function() { return /* binding */ rotr32L; },\n/* harmony export */   rotrBH: function() { return /* binding */ rotrBH; },\n/* harmony export */   rotrBL: function() { return /* binding */ rotrBL; },\n/* harmony export */   rotrSH: function() { return /* binding */ rotrSH; },\n/* harmony export */   rotrSL: function() { return /* binding */ rotrSL; },\n/* harmony export */   shrSH: function() { return /* binding */ shrSH; },\n/* harmony export */   shrSL: function() { return /* binding */ shrSL; },\n/* harmony export */   split: function() { return /* binding */ split; },\n/* harmony export */   toBig: function() { return /* binding */ toBig; }\n/* harmony export */ });\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\n\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (u64);\n//# sourceMappingURL=_u64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX3U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUw7QUFDakw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQWUsR0FBRyxFQUFDO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX3U2NC5qcz85ZmFhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFUzMl9NQVNLNjQgPSAvKiBAX19QVVJFX18gKi8gQmlnSW50KDIgKiogMzIgLSAxKTtcbmNvbnN0IF8zMm4gPSAvKiBAX19QVVJFX18gKi8gQmlnSW50KDMyKTtcbi8vIFdlIGFyZSBub3QgdXNpbmcgQmlnVWludDY0QXJyYXksIGJlY2F1c2UgdGhleSBhcmUgZXh0cmVtZWx5IHNsb3cgYXMgcGVyIDIwMjJcbmZ1bmN0aW9uIGZyb21CaWcobiwgbGUgPSBmYWxzZSkge1xuICAgIGlmIChsZSlcbiAgICAgICAgcmV0dXJuIHsgaDogTnVtYmVyKG4gJiBVMzJfTUFTSzY0KSwgbDogTnVtYmVyKChuID4+IF8zMm4pICYgVTMyX01BU0s2NCkgfTtcbiAgICByZXR1cm4geyBoOiBOdW1iZXIoKG4gPj4gXzMybikgJiBVMzJfTUFTSzY0KSB8IDAsIGw6IE51bWJlcihuICYgVTMyX01BU0s2NCkgfCAwIH07XG59XG5mdW5jdGlvbiBzcGxpdChsc3QsIGxlID0gZmFsc2UpIHtcbiAgICBsZXQgQWggPSBuZXcgVWludDMyQXJyYXkobHN0Lmxlbmd0aCk7XG4gICAgbGV0IEFsID0gbmV3IFVpbnQzMkFycmF5KGxzdC5sZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbHN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHsgaCwgbCB9ID0gZnJvbUJpZyhsc3RbaV0sIGxlKTtcbiAgICAgICAgW0FoW2ldLCBBbFtpXV0gPSBbaCwgbF07XG4gICAgfVxuICAgIHJldHVybiBbQWgsIEFsXTtcbn1cbmNvbnN0IHRvQmlnID0gKGgsIGwpID0+IChCaWdJbnQoaCA+Pj4gMCkgPDwgXzMybikgfCBCaWdJbnQobCA+Pj4gMCk7XG4vLyBmb3IgU2hpZnQgaW4gWzAsIDMyKVxuY29uc3Qgc2hyU0ggPSAoaCwgX2wsIHMpID0+IGggPj4+IHM7XG5jb25zdCBzaHJTTCA9IChoLCBsLCBzKSA9PiAoaCA8PCAoMzIgLSBzKSkgfCAobCA+Pj4gcyk7XG4vLyBSaWdodCByb3RhdGUgZm9yIFNoaWZ0IGluIFsxLCAzMilcbmNvbnN0IHJvdHJTSCA9IChoLCBsLCBzKSA9PiAoaCA+Pj4gcykgfCAobCA8PCAoMzIgLSBzKSk7XG5jb25zdCByb3RyU0wgPSAoaCwgbCwgcykgPT4gKGggPDwgKDMyIC0gcykpIHwgKGwgPj4+IHMpO1xuLy8gUmlnaHQgcm90YXRlIGZvciBTaGlmdCBpbiAoMzIsIDY0KSwgTk9URTogMzIgaXMgc3BlY2lhbCBjYXNlLlxuY29uc3Qgcm90ckJIID0gKGgsIGwsIHMpID0+IChoIDw8ICg2NCAtIHMpKSB8IChsID4+PiAocyAtIDMyKSk7XG5jb25zdCByb3RyQkwgPSAoaCwgbCwgcykgPT4gKGggPj4+IChzIC0gMzIpKSB8IChsIDw8ICg2NCAtIHMpKTtcbi8vIFJpZ2h0IHJvdGF0ZSBmb3Igc2hpZnQ9PT0zMiAoanVzdCBzd2FwcyBsJmgpXG5jb25zdCByb3RyMzJIID0gKF9oLCBsKSA9PiBsO1xuY29uc3Qgcm90cjMyTCA9IChoLCBfbCkgPT4gaDtcbi8vIExlZnQgcm90YXRlIGZvciBTaGlmdCBpbiBbMSwgMzIpXG5jb25zdCByb3RsU0ggPSAoaCwgbCwgcykgPT4gKGggPDwgcykgfCAobCA+Pj4gKDMyIC0gcykpO1xuY29uc3Qgcm90bFNMID0gKGgsIGwsIHMpID0+IChsIDw8IHMpIHwgKGggPj4+ICgzMiAtIHMpKTtcbi8vIExlZnQgcm90YXRlIGZvciBTaGlmdCBpbiAoMzIsIDY0KSwgTk9URTogMzIgaXMgc3BlY2lhbCBjYXNlLlxuY29uc3Qgcm90bEJIID0gKGgsIGwsIHMpID0+IChsIDw8IChzIC0gMzIpKSB8IChoID4+PiAoNjQgLSBzKSk7XG5jb25zdCByb3RsQkwgPSAoaCwgbCwgcykgPT4gKGggPDwgKHMgLSAzMikpIHwgKGwgPj4+ICg2NCAtIHMpKTtcbi8vIEpTIHVzZXMgMzItYml0IHNpZ25lZCBpbnRlZ2VycyBmb3IgYml0d2lzZSBvcGVyYXRpb25zIHdoaWNoIG1lYW5zIHdlIGNhbm5vdFxuLy8gc2ltcGxlIHRha2UgY2Fycnkgb3V0IG9mIGxvdyBiaXQgc3VtIGJ5IHNoaWZ0LCB3ZSBuZWVkIHRvIHVzZSBkaXZpc2lvbi5cbmZ1bmN0aW9uIGFkZChBaCwgQWwsIEJoLCBCbCkge1xuICAgIGNvbnN0IGwgPSAoQWwgPj4+IDApICsgKEJsID4+PiAwKTtcbiAgICByZXR1cm4geyBoOiAoQWggKyBCaCArICgobCAvIDIgKiogMzIpIHwgMCkpIHwgMCwgbDogbCB8IDAgfTtcbn1cbi8vIEFkZGl0aW9uIHdpdGggbW9yZSB0aGFuIDIgZWxlbWVudHNcbmNvbnN0IGFkZDNMID0gKEFsLCBCbCwgQ2wpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKTtcbmNvbnN0IGFkZDNIID0gKGxvdywgQWgsIEJoLCBDaCkgPT4gKEFoICsgQmggKyBDaCArICgobG93IC8gMiAqKiAzMikgfCAwKSkgfCAwO1xuY29uc3QgYWRkNEwgPSAoQWwsIEJsLCBDbCwgRGwpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKSArIChEbCA+Pj4gMCk7XG5jb25zdCBhZGQ0SCA9IChsb3csIEFoLCBCaCwgQ2gsIERoKSA9PiAoQWggKyBCaCArIENoICsgRGggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbmNvbnN0IGFkZDVMID0gKEFsLCBCbCwgQ2wsIERsLCBFbCkgPT4gKEFsID4+PiAwKSArIChCbCA+Pj4gMCkgKyAoQ2wgPj4+IDApICsgKERsID4+PiAwKSArIChFbCA+Pj4gMCk7XG5jb25zdCBhZGQ1SCA9IChsb3csIEFoLCBCaCwgQ2gsIERoLCBFaCkgPT4gKEFoICsgQmggKyBDaCArIERoICsgRWggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbi8vIHByZXR0aWVyLWlnbm9yZVxuZXhwb3J0IHsgZnJvbUJpZywgc3BsaXQsIHRvQmlnLCBzaHJTSCwgc2hyU0wsIHJvdHJTSCwgcm90clNMLCByb3RyQkgsIHJvdHJCTCwgcm90cjMySCwgcm90cjMyTCwgcm90bFNILCByb3RsU0wsIHJvdGxCSCwgcm90bEJMLCBhZGQsIGFkZDNMLCBhZGQzSCwgYWRkNEwsIGFkZDRILCBhZGQ1SCwgYWRkNUwsIH07XG4vLyBwcmV0dGllci1pZ25vcmVcbmNvbnN0IHU2NCA9IHtcbiAgICBmcm9tQmlnLCBzcGxpdCwgdG9CaWcsXG4gICAgc2hyU0gsIHNoclNMLFxuICAgIHJvdHJTSCwgcm90clNMLCByb3RyQkgsIHJvdHJCTCxcbiAgICByb3RyMzJILCByb3RyMzJMLFxuICAgIHJvdGxTSCwgcm90bFNMLCByb3RsQkgsIHJvdGxCTCxcbiAgICBhZGQsIGFkZDNMLCBhZGQzSCwgYWRkNEwsIGFkZDRILCBhZGQ1SCwgYWRkNUwsXG59O1xuZXhwb3J0IGRlZmF1bHQgdTY0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X3U2NC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_u64.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/crypto.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/crypto.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crypto: function() { return /* binding */ crypto; }\n/* harmony export */ });\nconst crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vY3J5cHRvLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vY3J5cHRvLmpzP2QzNDMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGNyeXB0byA9IHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JyAmJiAnY3J5cHRvJyBpbiBnbG9iYWxUaGlzID8gZ2xvYmFsVGhpcy5jcnlwdG8gOiB1bmRlZmluZWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcnlwdG8uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/crypto.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/hmac.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/hmac.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HMAC: function() { return /* binding */ HMAC; },\n/* harmony export */   hmac: function() { return /* binding */ hmac; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n\n\n// HMAC (RFC 2104)\nclass HMAC extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.hash)(hash);\n        const key = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.exists)(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.exists)(this);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.bytes)(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vaG1hYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdHO0FBQ3JEO0FBQzNDO0FBQ08sbUJBQW1CLDJDQUFJO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxnREFBVTtBQUNsQixvQkFBb0Isa0RBQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdCQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdCQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrREFBWTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsa0RBQVk7QUFDcEIsUUFBUSxpREFBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRTtBQUNqRSxnQkFBZ0IseURBQXlEO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL2htYWMuanM/YWE3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoYXNoIGFzIGFzc2VydEhhc2gsIGJ5dGVzIGFzIGFzc2VydEJ5dGVzLCBleGlzdHMgYXMgYXNzZXJ0RXhpc3RzIH0gZnJvbSAnLi9fYXNzZXJ0LmpzJztcbmltcG9ydCB7IEhhc2gsIHRvQnl0ZXMgfSBmcm9tICcuL3V0aWxzLmpzJztcbi8vIEhNQUMgKFJGQyAyMTA0KVxuZXhwb3J0IGNsYXNzIEhNQUMgZXh0ZW5kcyBIYXNoIHtcbiAgICBjb25zdHJ1Y3RvcihoYXNoLCBfa2V5KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICAgICAgYXNzZXJ0SGFzaChoYXNoKTtcbiAgICAgICAgY29uc3Qga2V5ID0gdG9CeXRlcyhfa2V5KTtcbiAgICAgICAgdGhpcy5pSGFzaCA9IGhhc2guY3JlYXRlKCk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5pSGFzaC51cGRhdGUgIT09ICdmdW5jdGlvbicpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIGluc3RhbmNlIG9mIGNsYXNzIHdoaWNoIGV4dGVuZHMgdXRpbHMuSGFzaCcpO1xuICAgICAgICB0aGlzLmJsb2NrTGVuID0gdGhpcy5pSGFzaC5ibG9ja0xlbjtcbiAgICAgICAgdGhpcy5vdXRwdXRMZW4gPSB0aGlzLmlIYXNoLm91dHB1dExlbjtcbiAgICAgICAgY29uc3QgYmxvY2tMZW4gPSB0aGlzLmJsb2NrTGVuO1xuICAgICAgICBjb25zdCBwYWQgPSBuZXcgVWludDhBcnJheShibG9ja0xlbik7XG4gICAgICAgIC8vIGJsb2NrTGVuIGNhbiBiZSBiaWdnZXIgdGhhbiBvdXRwdXRMZW5cbiAgICAgICAgcGFkLnNldChrZXkubGVuZ3RoID4gYmxvY2tMZW4gPyBoYXNoLmNyZWF0ZSgpLnVwZGF0ZShrZXkpLmRpZ2VzdCgpIDoga2V5KTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYWQubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICBwYWRbaV0gXj0gMHgzNjtcbiAgICAgICAgdGhpcy5pSGFzaC51cGRhdGUocGFkKTtcbiAgICAgICAgLy8gQnkgZG9pbmcgdXBkYXRlIChwcm9jZXNzaW5nIG9mIGZpcnN0IGJsb2NrKSBvZiBvdXRlciBoYXNoIGhlcmUgd2UgY2FuIHJlLXVzZSBpdCBiZXR3ZWVuIG11bHRpcGxlIGNhbGxzIHZpYSBjbG9uZVxuICAgICAgICB0aGlzLm9IYXNoID0gaGFzaC5jcmVhdGUoKTtcbiAgICAgICAgLy8gVW5kbyBpbnRlcm5hbCBYT1IgJiYgYXBwbHkgb3V0ZXIgWE9SXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFkLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgcGFkW2ldIF49IDB4MzYgXiAweDVjO1xuICAgICAgICB0aGlzLm9IYXNoLnVwZGF0ZShwYWQpO1xuICAgICAgICBwYWQuZmlsbCgwKTtcbiAgICB9XG4gICAgdXBkYXRlKGJ1Zikge1xuICAgICAgICBhc3NlcnRFeGlzdHModGhpcyk7XG4gICAgICAgIHRoaXMuaUhhc2gudXBkYXRlKGJ1Zik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkaWdlc3RJbnRvKG91dCkge1xuICAgICAgICBhc3NlcnRFeGlzdHModGhpcyk7XG4gICAgICAgIGFzc2VydEJ5dGVzKG91dCwgdGhpcy5vdXRwdXRMZW4pO1xuICAgICAgICB0aGlzLmZpbmlzaGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5pSGFzaC5kaWdlc3RJbnRvKG91dCk7XG4gICAgICAgIHRoaXMub0hhc2gudXBkYXRlKG91dCk7XG4gICAgICAgIHRoaXMub0hhc2guZGlnZXN0SW50byhvdXQpO1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICBjb25zdCBvdXQgPSBuZXcgVWludDhBcnJheSh0aGlzLm9IYXNoLm91dHB1dExlbik7XG4gICAgICAgIHRoaXMuZGlnZXN0SW50byhvdXQpO1xuICAgICAgICByZXR1cm4gb3V0O1xuICAgIH1cbiAgICBfY2xvbmVJbnRvKHRvKSB7XG4gICAgICAgIC8vIENyZWF0ZSBuZXcgaW5zdGFuY2Ugd2l0aG91dCBjYWxsaW5nIGNvbnN0cnVjdG9yIHNpbmNlIGtleSBhbHJlYWR5IGluIHN0YXRlIGFuZCB3ZSBkb24ndCBrbm93IGl0LlxuICAgICAgICB0byB8fCAodG8gPSBPYmplY3QuY3JlYXRlKE9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzKSwge30pKTtcbiAgICAgICAgY29uc3QgeyBvSGFzaCwgaUhhc2gsIGZpbmlzaGVkLCBkZXN0cm95ZWQsIGJsb2NrTGVuLCBvdXRwdXRMZW4gfSA9IHRoaXM7XG4gICAgICAgIHRvID0gdG87XG4gICAgICAgIHRvLmZpbmlzaGVkID0gZmluaXNoZWQ7XG4gICAgICAgIHRvLmRlc3Ryb3llZCA9IGRlc3Ryb3llZDtcbiAgICAgICAgdG8uYmxvY2tMZW4gPSBibG9ja0xlbjtcbiAgICAgICAgdG8ub3V0cHV0TGVuID0gb3V0cHV0TGVuO1xuICAgICAgICB0by5vSGFzaCA9IG9IYXNoLl9jbG9uZUludG8odG8ub0hhc2gpO1xuICAgICAgICB0by5pSGFzaCA9IGlIYXNoLl9jbG9uZUludG8odG8uaUhhc2gpO1xuICAgICAgICByZXR1cm4gdG87XG4gICAgfVxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveWVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5vSGFzaC5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMuaUhhc2guZGVzdHJveSgpO1xuICAgIH1cbn1cbi8qKlxuICogSE1BQzogUkZDMjEwNCBtZXNzYWdlIGF1dGhlbnRpY2F0aW9uIGNvZGUuXG4gKiBAcGFyYW0gaGFzaCAtIGZ1bmN0aW9uIHRoYXQgd291bGQgYmUgdXNlZCBlLmcuIHNoYTI1NlxuICogQHBhcmFtIGtleSAtIG1lc3NhZ2Uga2V5XG4gKiBAcGFyYW0gbWVzc2FnZSAtIG1lc3NhZ2UgZGF0YVxuICovXG5leHBvcnQgY29uc3QgaG1hYyA9IChoYXNoLCBrZXksIG1lc3NhZ2UpID0+IG5ldyBITUFDKGhhc2gsIGtleSkudXBkYXRlKG1lc3NhZ2UpLmRpZ2VzdCgpO1xuaG1hYy5jcmVhdGUgPSAoaGFzaCwga2V5KSA9PiBuZXcgSE1BQyhoYXNoLCBrZXkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aG1hYy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/hmac.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/pbkdf2.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/pbkdf2.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pbkdf2: function() { return /* binding */ pbkdf2; },\n/* harmony export */   pbkdf2Async: function() { return /* binding */ pbkdf2Async; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _hmac_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hmac.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/hmac.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n\n\n\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.hash)(hash);\n    const opts = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(c);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(dkLen);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(_password);\n    const salt = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = _hmac_js__WEBPACK_IMPORTED_MODULE_2__.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.asyncLoop)(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vcGJrZGYyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBFO0FBQ3pDO0FBQ3NDO0FBQ3ZFO0FBQ0E7QUFDQSxJQUFJLGdEQUFVO0FBQ2QsaUJBQWlCLG9EQUFTLEdBQUcsMEJBQTBCO0FBQ3ZELFlBQVksc0JBQXNCO0FBQ2xDLElBQUksa0RBQVk7QUFDaEIsSUFBSSxrREFBWTtBQUNoQixJQUFJLGtEQUFZO0FBQ2hCO0FBQ0E7QUFDQSxxQkFBcUIsa0RBQU87QUFDNUIsaUJBQWlCLGtEQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwQ0FBSTtBQUNwQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFVBQVU7QUFDNUI7QUFDTztBQUNQLFlBQVksNkJBQTZCO0FBQ3pDLGNBQWM7QUFDZDtBQUNBLGlCQUFpQixxREFBVTtBQUMzQjtBQUNBO0FBQ0EsOEJBQThCLGFBQWE7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsUUFBUTtBQUNqQztBQUNBO0FBQ0EsNEJBQTRCLGVBQWU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSx3Q0FBd0M7QUFDcEQsY0FBYztBQUNkO0FBQ0EsaUJBQWlCLHFEQUFVO0FBQzNCO0FBQ0E7QUFDQSw4QkFBOEIsYUFBYTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsb0RBQVM7QUFDdkI7QUFDQTtBQUNBLDRCQUE0QixlQUFlO0FBQzNDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vcGJrZGYyLmpzP2M0OGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzaCBhcyBhc3NlcnRIYXNoLCBudW1iZXIgYXMgYXNzZXJ0TnVtYmVyIH0gZnJvbSAnLi9fYXNzZXJ0LmpzJztcbmltcG9ydCB7IGhtYWMgfSBmcm9tICcuL2htYWMuanMnO1xuaW1wb3J0IHsgY3JlYXRlVmlldywgdG9CeXRlcywgY2hlY2tPcHRzLCBhc3luY0xvb3AgfSBmcm9tICcuL3V0aWxzLmpzJztcbi8vIENvbW1vbiBwcm9sb2d1ZSBhbmQgZXBpbG9ndWUgZm9yIHN5bmMvYXN5bmMgZnVuY3Rpb25zXG5mdW5jdGlvbiBwYmtkZjJJbml0KGhhc2gsIF9wYXNzd29yZCwgX3NhbHQsIF9vcHRzKSB7XG4gICAgYXNzZXJ0SGFzaChoYXNoKTtcbiAgICBjb25zdCBvcHRzID0gY2hlY2tPcHRzKHsgZGtMZW46IDMyLCBhc3luY1RpY2s6IDEwIH0sIF9vcHRzKTtcbiAgICBjb25zdCB7IGMsIGRrTGVuLCBhc3luY1RpY2sgfSA9IG9wdHM7XG4gICAgYXNzZXJ0TnVtYmVyKGMpO1xuICAgIGFzc2VydE51bWJlcihka0xlbik7XG4gICAgYXNzZXJ0TnVtYmVyKGFzeW5jVGljayk7XG4gICAgaWYgKGMgPCAxKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BCS0RGMjogaXRlcmF0aW9ucyAoYykgc2hvdWxkIGJlID49IDEnKTtcbiAgICBjb25zdCBwYXNzd29yZCA9IHRvQnl0ZXMoX3Bhc3N3b3JkKTtcbiAgICBjb25zdCBzYWx0ID0gdG9CeXRlcyhfc2FsdCk7XG4gICAgLy8gREsgPSBQQktERjIoUFJGLCBQYXNzd29yZCwgU2FsdCwgYywgZGtMZW4pO1xuICAgIGNvbnN0IERLID0gbmV3IFVpbnQ4QXJyYXkoZGtMZW4pO1xuICAgIC8vIFUxID0gUFJGKFBhc3N3b3JkLCBTYWx0ICsgSU5UXzMyX0JFKGkpKVxuICAgIGNvbnN0IFBSRiA9IGhtYWMuY3JlYXRlKGhhc2gsIHBhc3N3b3JkKTtcbiAgICBjb25zdCBQUkZTYWx0ID0gUFJGLl9jbG9uZUludG8oKS51cGRhdGUoc2FsdCk7XG4gICAgcmV0dXJuIHsgYywgZGtMZW4sIGFzeW5jVGljaywgREssIFBSRiwgUFJGU2FsdCB9O1xufVxuZnVuY3Rpb24gcGJrZGYyT3V0cHV0KFBSRiwgUFJGU2FsdCwgREssIHByZlcsIHUpIHtcbiAgICBQUkYuZGVzdHJveSgpO1xuICAgIFBSRlNhbHQuZGVzdHJveSgpO1xuICAgIGlmIChwcmZXKVxuICAgICAgICBwcmZXLmRlc3Ryb3koKTtcbiAgICB1LmZpbGwoMCk7XG4gICAgcmV0dXJuIERLO1xufVxuLyoqXG4gKiBQQktERjItSE1BQzogUkZDIDI4OTgga2V5IGRlcml2YXRpb24gZnVuY3Rpb25cbiAqIEBwYXJhbSBoYXNoIC0gaGFzaCBmdW5jdGlvbiB0aGF0IHdvdWxkIGJlIHVzZWQgZS5nLiBzaGEyNTZcbiAqIEBwYXJhbSBwYXNzd29yZCAtIHBhc3N3b3JkIGZyb20gd2hpY2ggYSBkZXJpdmVkIGtleSBpcyBnZW5lcmF0ZWRcbiAqIEBwYXJhbSBzYWx0IC0gY3J5cHRvZ3JhcGhpYyBzYWx0XG4gKiBAcGFyYW0gb3B0cyAtIHtjLCBka0xlbn0gd2hlcmUgYyBpcyB3b3JrIGZhY3RvciBhbmQgZGtMZW4gaXMgb3V0cHV0IG1lc3NhZ2Ugc2l6ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gcGJrZGYyKGhhc2gsIHBhc3N3b3JkLCBzYWx0LCBvcHRzKSB7XG4gICAgY29uc3QgeyBjLCBka0xlbiwgREssIFBSRiwgUFJGU2FsdCB9ID0gcGJrZGYySW5pdChoYXNoLCBwYXNzd29yZCwgc2FsdCwgb3B0cyk7XG4gICAgbGV0IHByZlc7IC8vIFdvcmtpbmcgY29weVxuICAgIGNvbnN0IGFyciA9IG5ldyBVaW50OEFycmF5KDQpO1xuICAgIGNvbnN0IHZpZXcgPSBjcmVhdGVWaWV3KGFycik7XG4gICAgY29uc3QgdSA9IG5ldyBVaW50OEFycmF5KFBSRi5vdXRwdXRMZW4pO1xuICAgIC8vIERLID0gVDEgKyBUMiArIOKLryArIFRka2xlbi9obGVuXG4gICAgZm9yIChsZXQgdGkgPSAxLCBwb3MgPSAwOyBwb3MgPCBka0xlbjsgdGkrKywgcG9zICs9IFBSRi5vdXRwdXRMZW4pIHtcbiAgICAgICAgLy8gVGkgPSBGKFBhc3N3b3JkLCBTYWx0LCBjLCBpKVxuICAgICAgICBjb25zdCBUaSA9IERLLnN1YmFycmF5KHBvcywgcG9zICsgUFJGLm91dHB1dExlbik7XG4gICAgICAgIHZpZXcuc2V0SW50MzIoMCwgdGksIGZhbHNlKTtcbiAgICAgICAgLy8gRihQYXNzd29yZCwgU2FsdCwgYywgaSkgPSBVMSBeIFUyIF4g4ouvIF4gVWNcbiAgICAgICAgLy8gVTEgPSBQUkYoUGFzc3dvcmQsIFNhbHQgKyBJTlRfMzJfQkUoaSkpXG4gICAgICAgIChwcmZXID0gUFJGU2FsdC5fY2xvbmVJbnRvKHByZlcpKS51cGRhdGUoYXJyKS5kaWdlc3RJbnRvKHUpO1xuICAgICAgICBUaS5zZXQodS5zdWJhcnJheSgwLCBUaS5sZW5ndGgpKTtcbiAgICAgICAgZm9yIChsZXQgdWkgPSAxOyB1aSA8IGM7IHVpKyspIHtcbiAgICAgICAgICAgIC8vIFVjID0gUFJGKFBhc3N3b3JkLCBVY+KIkjEpXG4gICAgICAgICAgICBQUkYuX2Nsb25lSW50byhwcmZXKS51cGRhdGUodSkuZGlnZXN0SW50byh1KTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgVGkubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICAgICAgVGlbaV0gXj0gdVtpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcGJrZGYyT3V0cHV0KFBSRiwgUFJGU2FsdCwgREssIHByZlcsIHUpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBia2RmMkFzeW5jKGhhc2gsIHBhc3N3b3JkLCBzYWx0LCBvcHRzKSB7XG4gICAgY29uc3QgeyBjLCBka0xlbiwgYXN5bmNUaWNrLCBESywgUFJGLCBQUkZTYWx0IH0gPSBwYmtkZjJJbml0KGhhc2gsIHBhc3N3b3JkLCBzYWx0LCBvcHRzKTtcbiAgICBsZXQgcHJmVzsgLy8gV29ya2luZyBjb3B5XG4gICAgY29uc3QgYXJyID0gbmV3IFVpbnQ4QXJyYXkoNCk7XG4gICAgY29uc3QgdmlldyA9IGNyZWF0ZVZpZXcoYXJyKTtcbiAgICBjb25zdCB1ID0gbmV3IFVpbnQ4QXJyYXkoUFJGLm91dHB1dExlbik7XG4gICAgLy8gREsgPSBUMSArIFQyICsg4ouvICsgVGRrbGVuL2hsZW5cbiAgICBmb3IgKGxldCB0aSA9IDEsIHBvcyA9IDA7IHBvcyA8IGRrTGVuOyB0aSsrLCBwb3MgKz0gUFJGLm91dHB1dExlbikge1xuICAgICAgICAvLyBUaSA9IEYoUGFzc3dvcmQsIFNhbHQsIGMsIGkpXG4gICAgICAgIGNvbnN0IFRpID0gREsuc3ViYXJyYXkocG9zLCBwb3MgKyBQUkYub3V0cHV0TGVuKTtcbiAgICAgICAgdmlldy5zZXRJbnQzMigwLCB0aSwgZmFsc2UpO1xuICAgICAgICAvLyBGKFBhc3N3b3JkLCBTYWx0LCBjLCBpKSA9IFUxIF4gVTIgXiDii68gXiBVY1xuICAgICAgICAvLyBVMSA9IFBSRihQYXNzd29yZCwgU2FsdCArIElOVF8zMl9CRShpKSlcbiAgICAgICAgKHByZlcgPSBQUkZTYWx0Ll9jbG9uZUludG8ocHJmVykpLnVwZGF0ZShhcnIpLmRpZ2VzdEludG8odSk7XG4gICAgICAgIFRpLnNldCh1LnN1YmFycmF5KDAsIFRpLmxlbmd0aCkpO1xuICAgICAgICBhd2FpdCBhc3luY0xvb3AoYyAtIDEsIGFzeW5jVGljaywgKCkgPT4ge1xuICAgICAgICAgICAgLy8gVWMgPSBQUkYoUGFzc3dvcmQsIFVj4oiSMSlcbiAgICAgICAgICAgIFBSRi5fY2xvbmVJbnRvKHByZlcpLnVwZGF0ZSh1KS5kaWdlc3RJbnRvKHUpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBUaS5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgICAgICBUaVtpXSBePSB1W2ldO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHBia2RmMk91dHB1dChQUkYsIFBSRlNhbHQsIERLLCBwcmZXLCB1KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBia2RmMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/pbkdf2.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha256.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/sha256.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha224: function() { return /* binding */ sha224; },\n/* harmony export */   sha256: function() { return /* binding */ sha256; }\n/* harmony export */ });\n/* harmony import */ var _sha2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_sha2.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_sha2.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends _sha2_js__WEBPACK_IMPORTED_MODULE_0__.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 7) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 17) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 6) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 11) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 2) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 13) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nconst sha256 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA256());\nconst sha224 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha256.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha3.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/sha3.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Keccak: function() { return /* binding */ Keccak; },\n/* harmony export */   keccakP: function() { return /* binding */ keccakP; },\n/* harmony export */   keccak_224: function() { return /* binding */ keccak_224; },\n/* harmony export */   keccak_256: function() { return /* binding */ keccak_256; },\n/* harmony export */   keccak_384: function() { return /* binding */ keccak_384; },\n/* harmony export */   keccak_512: function() { return /* binding */ keccak_512; },\n/* harmony export */   sha3_224: function() { return /* binding */ sha3_224; },\n/* harmony export */   sha3_256: function() { return /* binding */ sha3_256; },\n/* harmony export */   sha3_384: function() { return /* binding */ sha3_384; },\n/* harmony export */   sha3_512: function() { return /* binding */ sha3_512; },\n/* harmony export */   shake128: function() { return /* binding */ shake128; },\n/* harmony export */   shake256: function() { return /* binding */ shake256; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n\n\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBH)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBL)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSL)(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nclass Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.number)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.exists)(this);\n        const { blockLen, state } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.exists)(this, false);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.bytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.number)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.output)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nconst sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nconst sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nconst sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nconst sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nconst keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nconst keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nconst keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nconst keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nconst shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nconst shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vc2hhMy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkQ7QUFDSztBQUM0QjtBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxZQUFZO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELDhDQUFLO0FBQ3hEO0FBQ0EscUNBQXFDLCtDQUFNLFlBQVksK0NBQU07QUFDN0QscUNBQXFDLCtDQUFNLFlBQVksK0NBQU07QUFDN0Q7QUFDTztBQUNQO0FBQ0E7QUFDQSxrQ0FBa0MsWUFBWTtBQUM5QztBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLFFBQVE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDLDRCQUE0QixRQUFRO0FBQ3BDO0FBQ0EsNEJBQTRCLFFBQVE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFCQUFxQiwyQ0FBSTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsa0RBQU07QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw4Q0FBRztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsa0RBQU07QUFDZCxnQkFBZ0Isa0JBQWtCO0FBQ2xDLGVBQWUsa0RBQU87QUFDdEI7QUFDQSwwQkFBMEIsVUFBVTtBQUNwQztBQUNBLDRCQUE0QixVQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLCtCQUErQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrREFBTTtBQUNkLFFBQVEsaURBQUs7QUFDYjtBQUNBO0FBQ0EsZ0JBQWdCLFdBQVc7QUFDM0IsNENBQTRDLFVBQVU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtEQUFNO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrREFBTTtBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaURBQWlEO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsMERBQWU7QUFDckQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDUCxrREFBa0QscUVBQTBCLFdBQVc7QUFDaEY7QUFDQTtBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vc2hhMy5qcz8wZDU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ5dGVzLCBleGlzdHMsIG51bWJlciwgb3V0cHV0IH0gZnJvbSAnLi9fYXNzZXJ0LmpzJztcbmltcG9ydCB7IHJvdGxCSCwgcm90bEJMLCByb3RsU0gsIHJvdGxTTCwgc3BsaXQgfSBmcm9tICcuL191NjQuanMnO1xuaW1wb3J0IHsgSGFzaCwgdTMyLCB0b0J5dGVzLCB3cmFwQ29uc3RydWN0b3IsIHdyYXBYT0ZDb25zdHJ1Y3RvcldpdGhPcHRzLCB9IGZyb20gJy4vdXRpbHMuanMnO1xuLy8gU0hBMyAoa2VjY2FrKSBpcyBiYXNlZCBvbiBhIG5ldyBkZXNpZ246IGJhc2ljYWxseSwgdGhlIGludGVybmFsIHN0YXRlIGlzIGJpZ2dlciB0aGFuIG91dHB1dCBzaXplLlxuLy8gSXQncyBjYWxsZWQgYSBzcG9uZ2UgZnVuY3Rpb24uXG4vLyBWYXJpb3VzIHBlciByb3VuZCBjb25zdGFudHMgY2FsY3VsYXRpb25zXG5jb25zdCBbU0hBM19QSSwgU0hBM19ST1RMLCBfU0hBM19JT1RBXSA9IFtbXSwgW10sIFtdXTtcbmNvbnN0IF8wbiA9IC8qIEBfX1BVUkVfXyAqLyBCaWdJbnQoMCk7XG5jb25zdCBfMW4gPSAvKiBAX19QVVJFX18gKi8gQmlnSW50KDEpO1xuY29uc3QgXzJuID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgyKTtcbmNvbnN0IF83biA9IC8qIEBfX1BVUkVfXyAqLyBCaWdJbnQoNyk7XG5jb25zdCBfMjU2biA9IC8qIEBfX1BVUkVfXyAqLyBCaWdJbnQoMjU2KTtcbmNvbnN0IF8weDcxbiA9IC8qIEBfX1BVUkVfXyAqLyBCaWdJbnQoMHg3MSk7XG5mb3IgKGxldCByb3VuZCA9IDAsIFIgPSBfMW4sIHggPSAxLCB5ID0gMDsgcm91bmQgPCAyNDsgcm91bmQrKykge1xuICAgIC8vIFBpXG4gICAgW3gsIHldID0gW3ksICgyICogeCArIDMgKiB5KSAlIDVdO1xuICAgIFNIQTNfUEkucHVzaCgyICogKDUgKiB5ICsgeCkpO1xuICAgIC8vIFJvdGF0aW9uYWxcbiAgICBTSEEzX1JPVEwucHVzaCgoKChyb3VuZCArIDEpICogKHJvdW5kICsgMikpIC8gMikgJSA2NCk7XG4gICAgLy8gSW90YVxuICAgIGxldCB0ID0gXzBuO1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgNzsgaisrKSB7XG4gICAgICAgIFIgPSAoKFIgPDwgXzFuKSBeICgoUiA+PiBfN24pICogXzB4NzFuKSkgJSBfMjU2bjtcbiAgICAgICAgaWYgKFIgJiBfMm4pXG4gICAgICAgICAgICB0IF49IF8xbiA8PCAoKF8xbiA8PCAvKiBAX19QVVJFX18gKi8gQmlnSW50KGopKSAtIF8xbik7XG4gICAgfVxuICAgIF9TSEEzX0lPVEEucHVzaCh0KTtcbn1cbmNvbnN0IFtTSEEzX0lPVEFfSCwgU0hBM19JT1RBX0xdID0gLyogQF9fUFVSRV9fICovIHNwbGl0KF9TSEEzX0lPVEEsIHRydWUpO1xuLy8gTGVmdCByb3RhdGlvbiAod2l0aG91dCAwLCAzMiwgNjQpXG5jb25zdCByb3RsSCA9IChoLCBsLCBzKSA9PiAocyA+IDMyID8gcm90bEJIKGgsIGwsIHMpIDogcm90bFNIKGgsIGwsIHMpKTtcbmNvbnN0IHJvdGxMID0gKGgsIGwsIHMpID0+IChzID4gMzIgPyByb3RsQkwoaCwgbCwgcykgOiByb3RsU0woaCwgbCwgcykpO1xuLy8gU2FtZSBhcyBrZWNjYWtmMTYwMCwgYnV0IGFsbG93cyB0byBza2lwIHNvbWUgcm91bmRzXG5leHBvcnQgZnVuY3Rpb24ga2VjY2FrUChzLCByb3VuZHMgPSAyNCkge1xuICAgIGNvbnN0IEIgPSBuZXcgVWludDMyQXJyYXkoNSAqIDIpO1xuICAgIC8vIE5PVEU6IGFsbCBpbmRpY2VzIGFyZSB4MiBzaW5jZSB3ZSBzdG9yZSBzdGF0ZSBhcyB1MzIgaW5zdGVhZCBvZiB1NjQgKGJpZ2ludHMgdG8gc2xvdyBpbiBqcylcbiAgICBmb3IgKGxldCByb3VuZCA9IDI0IC0gcm91bmRzOyByb3VuZCA8IDI0OyByb3VuZCsrKSB7XG4gICAgICAgIC8vIFRoZXRhIM64XG4gICAgICAgIGZvciAobGV0IHggPSAwOyB4IDwgMTA7IHgrKylcbiAgICAgICAgICAgIEJbeF0gPSBzW3hdIF4gc1t4ICsgMTBdIF4gc1t4ICsgMjBdIF4gc1t4ICsgMzBdIF4gc1t4ICsgNDBdO1xuICAgICAgICBmb3IgKGxldCB4ID0gMDsgeCA8IDEwOyB4ICs9IDIpIHtcbiAgICAgICAgICAgIGNvbnN0IGlkeDEgPSAoeCArIDgpICUgMTA7XG4gICAgICAgICAgICBjb25zdCBpZHgwID0gKHggKyAyKSAlIDEwO1xuICAgICAgICAgICAgY29uc3QgQjAgPSBCW2lkeDBdO1xuICAgICAgICAgICAgY29uc3QgQjEgPSBCW2lkeDAgKyAxXTtcbiAgICAgICAgICAgIGNvbnN0IFRoID0gcm90bEgoQjAsIEIxLCAxKSBeIEJbaWR4MV07XG4gICAgICAgICAgICBjb25zdCBUbCA9IHJvdGxMKEIwLCBCMSwgMSkgXiBCW2lkeDEgKyAxXTtcbiAgICAgICAgICAgIGZvciAobGV0IHkgPSAwOyB5IDwgNTA7IHkgKz0gMTApIHtcbiAgICAgICAgICAgICAgICBzW3ggKyB5XSBePSBUaDtcbiAgICAgICAgICAgICAgICBzW3ggKyB5ICsgMV0gXj0gVGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmhvICjPgSkgYW5kIFBpICjPgClcbiAgICAgICAgbGV0IGN1ckggPSBzWzJdO1xuICAgICAgICBsZXQgY3VyTCA9IHNbM107XG4gICAgICAgIGZvciAobGV0IHQgPSAwOyB0IDwgMjQ7IHQrKykge1xuICAgICAgICAgICAgY29uc3Qgc2hpZnQgPSBTSEEzX1JPVExbdF07XG4gICAgICAgICAgICBjb25zdCBUaCA9IHJvdGxIKGN1ckgsIGN1ckwsIHNoaWZ0KTtcbiAgICAgICAgICAgIGNvbnN0IFRsID0gcm90bEwoY3VySCwgY3VyTCwgc2hpZnQpO1xuICAgICAgICAgICAgY29uc3QgUEkgPSBTSEEzX1BJW3RdO1xuICAgICAgICAgICAgY3VySCA9IHNbUEldO1xuICAgICAgICAgICAgY3VyTCA9IHNbUEkgKyAxXTtcbiAgICAgICAgICAgIHNbUEldID0gVGg7XG4gICAgICAgICAgICBzW1BJICsgMV0gPSBUbDtcbiAgICAgICAgfVxuICAgICAgICAvLyBDaGkgKM+HKVxuICAgICAgICBmb3IgKGxldCB5ID0gMDsgeSA8IDUwOyB5ICs9IDEwKSB7XG4gICAgICAgICAgICBmb3IgKGxldCB4ID0gMDsgeCA8IDEwOyB4KyspXG4gICAgICAgICAgICAgICAgQlt4XSA9IHNbeSArIHhdO1xuICAgICAgICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCAxMDsgeCsrKVxuICAgICAgICAgICAgICAgIHNbeSArIHhdIF49IH5CWyh4ICsgMikgJSAxMF0gJiBCWyh4ICsgNCkgJSAxMF07XG4gICAgICAgIH1cbiAgICAgICAgLy8gSW90YSAozrkpXG4gICAgICAgIHNbMF0gXj0gU0hBM19JT1RBX0hbcm91bmRdO1xuICAgICAgICBzWzFdIF49IFNIQTNfSU9UQV9MW3JvdW5kXTtcbiAgICB9XG4gICAgQi5maWxsKDApO1xufVxuZXhwb3J0IGNsYXNzIEtlY2NhayBleHRlbmRzIEhhc2gge1xuICAgIC8vIE5PVEU6IHdlIGFjY2VwdCBhcmd1bWVudHMgaW4gYnl0ZXMgaW5zdGVhZCBvZiBiaXRzIGhlcmUuXG4gICAgY29uc3RydWN0b3IoYmxvY2tMZW4sIHN1ZmZpeCwgb3V0cHV0TGVuLCBlbmFibGVYT0YgPSBmYWxzZSwgcm91bmRzID0gMjQpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5ibG9ja0xlbiA9IGJsb2NrTGVuO1xuICAgICAgICB0aGlzLnN1ZmZpeCA9IHN1ZmZpeDtcbiAgICAgICAgdGhpcy5vdXRwdXRMZW4gPSBvdXRwdXRMZW47XG4gICAgICAgIHRoaXMuZW5hYmxlWE9GID0gZW5hYmxlWE9GO1xuICAgICAgICB0aGlzLnJvdW5kcyA9IHJvdW5kcztcbiAgICAgICAgdGhpcy5wb3MgPSAwO1xuICAgICAgICB0aGlzLnBvc091dCA9IDA7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICAgICAgLy8gQ2FuIGJlIHBhc3NlZCBmcm9tIHVzZXIgYXMgZGtMZW5cbiAgICAgICAgbnVtYmVyKG91dHB1dExlbik7XG4gICAgICAgIC8vIDE2MDAgPSA1eDUgbWF0cml4IG9mIDY0Yml0LiAgMTYwMCBiaXRzID09PSAyMDAgYnl0ZXNcbiAgICAgICAgaWYgKDAgPj0gdGhpcy5ibG9ja0xlbiB8fCB0aGlzLmJsb2NrTGVuID49IDIwMClcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU2hhMyBzdXBwb3J0cyBvbmx5IGtlY2Nhay1mMTYwMCBmdW5jdGlvbicpO1xuICAgICAgICB0aGlzLnN0YXRlID0gbmV3IFVpbnQ4QXJyYXkoMjAwKTtcbiAgICAgICAgdGhpcy5zdGF0ZTMyID0gdTMyKHRoaXMuc3RhdGUpO1xuICAgIH1cbiAgICBrZWNjYWsoKSB7XG4gICAgICAgIGtlY2Nha1AodGhpcy5zdGF0ZTMyLCB0aGlzLnJvdW5kcyk7XG4gICAgICAgIHRoaXMucG9zT3V0ID0gMDtcbiAgICAgICAgdGhpcy5wb3MgPSAwO1xuICAgIH1cbiAgICB1cGRhdGUoZGF0YSkge1xuICAgICAgICBleGlzdHModGhpcyk7XG4gICAgICAgIGNvbnN0IHsgYmxvY2tMZW4sIHN0YXRlIH0gPSB0aGlzO1xuICAgICAgICBkYXRhID0gdG9CeXRlcyhkYXRhKTtcbiAgICAgICAgY29uc3QgbGVuID0gZGF0YS5sZW5ndGg7XG4gICAgICAgIGZvciAobGV0IHBvcyA9IDA7IHBvcyA8IGxlbjspIHtcbiAgICAgICAgICAgIGNvbnN0IHRha2UgPSBNYXRoLm1pbihibG9ja0xlbiAtIHRoaXMucG9zLCBsZW4gLSBwb3MpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0YWtlOyBpKyspXG4gICAgICAgICAgICAgICAgc3RhdGVbdGhpcy5wb3MrK10gXj0gZGF0YVtwb3MrK107XG4gICAgICAgICAgICBpZiAodGhpcy5wb3MgPT09IGJsb2NrTGVuKVxuICAgICAgICAgICAgICAgIHRoaXMua2VjY2FrKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGZpbmlzaCgpIHtcbiAgICAgICAgaWYgKHRoaXMuZmluaXNoZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICBjb25zdCB7IHN0YXRlLCBzdWZmaXgsIHBvcywgYmxvY2tMZW4gfSA9IHRoaXM7XG4gICAgICAgIC8vIERvIHRoZSBwYWRkaW5nXG4gICAgICAgIHN0YXRlW3Bvc10gXj0gc3VmZml4O1xuICAgICAgICBpZiAoKHN1ZmZpeCAmIDB4ODApICE9PSAwICYmIHBvcyA9PT0gYmxvY2tMZW4gLSAxKVxuICAgICAgICAgICAgdGhpcy5rZWNjYWsoKTtcbiAgICAgICAgc3RhdGVbYmxvY2tMZW4gLSAxXSBePSAweDgwO1xuICAgICAgICB0aGlzLmtlY2NhaygpO1xuICAgIH1cbiAgICB3cml0ZUludG8ob3V0KSB7XG4gICAgICAgIGV4aXN0cyh0aGlzLCBmYWxzZSk7XG4gICAgICAgIGJ5dGVzKG91dCk7XG4gICAgICAgIHRoaXMuZmluaXNoKCk7XG4gICAgICAgIGNvbnN0IGJ1ZmZlck91dCA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGNvbnN0IHsgYmxvY2tMZW4gfSA9IHRoaXM7XG4gICAgICAgIGZvciAobGV0IHBvcyA9IDAsIGxlbiA9IG91dC5sZW5ndGg7IHBvcyA8IGxlbjspIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBvc091dCA+PSBibG9ja0xlbilcbiAgICAgICAgICAgICAgICB0aGlzLmtlY2NhaygpO1xuICAgICAgICAgICAgY29uc3QgdGFrZSA9IE1hdGgubWluKGJsb2NrTGVuIC0gdGhpcy5wb3NPdXQsIGxlbiAtIHBvcyk7XG4gICAgICAgICAgICBvdXQuc2V0KGJ1ZmZlck91dC5zdWJhcnJheSh0aGlzLnBvc091dCwgdGhpcy5wb3NPdXQgKyB0YWtlKSwgcG9zKTtcbiAgICAgICAgICAgIHRoaXMucG9zT3V0ICs9IHRha2U7XG4gICAgICAgICAgICBwb3MgKz0gdGFrZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0O1xuICAgIH1cbiAgICB4b2ZJbnRvKG91dCkge1xuICAgICAgICAvLyBTaGEzL0tlY2NhayB1c2FnZSB3aXRoIFhPRiBpcyBwcm9iYWJseSBtaXN0YWtlLCBvbmx5IFNIQUtFIGluc3RhbmNlcyBjYW4gZG8gWE9GXG4gICAgICAgIGlmICghdGhpcy5lbmFibGVYT0YpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1hPRiBpcyBub3QgcG9zc2libGUgZm9yIHRoaXMgaW5zdGFuY2UnKTtcbiAgICAgICAgcmV0dXJuIHRoaXMud3JpdGVJbnRvKG91dCk7XG4gICAgfVxuICAgIHhvZihieXRlcykge1xuICAgICAgICBudW1iZXIoYnl0ZXMpO1xuICAgICAgICByZXR1cm4gdGhpcy54b2ZJbnRvKG5ldyBVaW50OEFycmF5KGJ5dGVzKSk7XG4gICAgfVxuICAgIGRpZ2VzdEludG8ob3V0KSB7XG4gICAgICAgIG91dHB1dChvdXQsIHRoaXMpO1xuICAgICAgICBpZiAodGhpcy5maW5pc2hlZClcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignZGlnZXN0KCkgd2FzIGFscmVhZHkgY2FsbGVkJyk7XG4gICAgICAgIHRoaXMud3JpdGVJbnRvKG91dCk7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICByZXR1cm4gb3V0O1xuICAgIH1cbiAgICBkaWdlc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRpZ2VzdEludG8obmV3IFVpbnQ4QXJyYXkodGhpcy5vdXRwdXRMZW4pKTtcbiAgICB9XG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLnN0YXRlLmZpbGwoMCk7XG4gICAgfVxuICAgIF9jbG9uZUludG8odG8pIHtcbiAgICAgICAgY29uc3QgeyBibG9ja0xlbiwgc3VmZml4LCBvdXRwdXRMZW4sIHJvdW5kcywgZW5hYmxlWE9GIH0gPSB0aGlzO1xuICAgICAgICB0byB8fCAodG8gPSBuZXcgS2VjY2FrKGJsb2NrTGVuLCBzdWZmaXgsIG91dHB1dExlbiwgZW5hYmxlWE9GLCByb3VuZHMpKTtcbiAgICAgICAgdG8uc3RhdGUzMi5zZXQodGhpcy5zdGF0ZTMyKTtcbiAgICAgICAgdG8ucG9zID0gdGhpcy5wb3M7XG4gICAgICAgIHRvLnBvc091dCA9IHRoaXMucG9zT3V0O1xuICAgICAgICB0by5maW5pc2hlZCA9IHRoaXMuZmluaXNoZWQ7XG4gICAgICAgIHRvLnJvdW5kcyA9IHJvdW5kcztcbiAgICAgICAgLy8gU3VmZml4IGNhbiBjaGFuZ2UgaW4gY1NIQUtFXG4gICAgICAgIHRvLnN1ZmZpeCA9IHN1ZmZpeDtcbiAgICAgICAgdG8ub3V0cHV0TGVuID0gb3V0cHV0TGVuO1xuICAgICAgICB0by5lbmFibGVYT0YgPSBlbmFibGVYT0Y7XG4gICAgICAgIHRvLmRlc3Ryb3llZCA9IHRoaXMuZGVzdHJveWVkO1xuICAgICAgICByZXR1cm4gdG87XG4gICAgfVxufVxuY29uc3QgZ2VuID0gKHN1ZmZpeCwgYmxvY2tMZW4sIG91dHB1dExlbikgPT4gd3JhcENvbnN0cnVjdG9yKCgpID0+IG5ldyBLZWNjYWsoYmxvY2tMZW4sIHN1ZmZpeCwgb3V0cHV0TGVuKSk7XG5leHBvcnQgY29uc3Qgc2hhM18yMjQgPSAvKiBAX19QVVJFX18gKi8gZ2VuKDB4MDYsIDE0NCwgMjI0IC8gOCk7XG4vKipcbiAqIFNIQTMtMjU2IGhhc2ggZnVuY3Rpb25cbiAqIEBwYXJhbSBtZXNzYWdlIC0gdGhhdCB3b3VsZCBiZSBoYXNoZWRcbiAqL1xuZXhwb3J0IGNvbnN0IHNoYTNfMjU2ID0gLyogQF9fUFVSRV9fICovIGdlbigweDA2LCAxMzYsIDI1NiAvIDgpO1xuZXhwb3J0IGNvbnN0IHNoYTNfMzg0ID0gLyogQF9fUFVSRV9fICovIGdlbigweDA2LCAxMDQsIDM4NCAvIDgpO1xuZXhwb3J0IGNvbnN0IHNoYTNfNTEyID0gLyogQF9fUFVSRV9fICovIGdlbigweDA2LCA3MiwgNTEyIC8gOCk7XG5leHBvcnQgY29uc3Qga2VjY2FrXzIyNCA9IC8qIEBfX1BVUkVfXyAqLyBnZW4oMHgwMSwgMTQ0LCAyMjQgLyA4KTtcbi8qKlxuICoga2VjY2FrLTI1NiBoYXNoIGZ1bmN0aW9uLiBEaWZmZXJlbnQgZnJvbSBTSEEzLTI1Ni5cbiAqIEBwYXJhbSBtZXNzYWdlIC0gdGhhdCB3b3VsZCBiZSBoYXNoZWRcbiAqL1xuZXhwb3J0IGNvbnN0IGtlY2Nha18yNTYgPSAvKiBAX19QVVJFX18gKi8gZ2VuKDB4MDEsIDEzNiwgMjU2IC8gOCk7XG5leHBvcnQgY29uc3Qga2VjY2FrXzM4NCA9IC8qIEBfX1BVUkVfXyAqLyBnZW4oMHgwMSwgMTA0LCAzODQgLyA4KTtcbmV4cG9ydCBjb25zdCBrZWNjYWtfNTEyID0gLyogQF9fUFVSRV9fICovIGdlbigweDAxLCA3MiwgNTEyIC8gOCk7XG5jb25zdCBnZW5TaGFrZSA9IChzdWZmaXgsIGJsb2NrTGVuLCBvdXRwdXRMZW4pID0+IHdyYXBYT0ZDb25zdHJ1Y3RvcldpdGhPcHRzKChvcHRzID0ge30pID0+IG5ldyBLZWNjYWsoYmxvY2tMZW4sIHN1ZmZpeCwgb3B0cy5ka0xlbiA9PT0gdW5kZWZpbmVkID8gb3V0cHV0TGVuIDogb3B0cy5ka0xlbiwgdHJ1ZSkpO1xuZXhwb3J0IGNvbnN0IHNoYWtlMTI4ID0gLyogQF9fUFVSRV9fICovIGdlblNoYWtlKDB4MWYsIDE2OCwgMTI4IC8gOCk7XG5leHBvcnQgY29uc3Qgc2hha2UyNTYgPSAvKiBAX19QVVJFX18gKi8gZ2VuU2hha2UoMHgxZiwgMTM2LCAyNTYgLyA4KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYTMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha3.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha512.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/sha512.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SHA512: function() { return /* binding */ SHA512; },\n/* harmony export */   sha384: function() { return /* binding */ sha384; },\n/* harmony export */   sha512: function() { return /* binding */ sha512; },\n/* harmony export */   sha512_224: function() { return /* binding */ sha512_224; },\n/* harmony export */   sha512_256: function() { return /* binding */ sha512_256; }\n/* harmony export */ });\n/* harmony import */ var _sha2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_sha2.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_sha2.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n\n\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nclass SHA512 extends _sha2_js__WEBPACK_IMPORTED_MODULE_1__.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSH(W15h, W15l, 7);\n            const s0l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSH(W2h, W2l, 6);\n            const s1l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nconst sha512 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512());\nconst sha512_224 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512_224());\nconst sha512_256 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512_256());\nconst sha384 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA384());\n//# sourceMappingURL=sha512.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha512.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js":
/*!********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hash: function() { return /* binding */ Hash; },\n/* harmony export */   asyncLoop: function() { return /* binding */ asyncLoop; },\n/* harmony export */   bytesToHex: function() { return /* binding */ bytesToHex; },\n/* harmony export */   checkOpts: function() { return /* binding */ checkOpts; },\n/* harmony export */   concatBytes: function() { return /* binding */ concatBytes; },\n/* harmony export */   createView: function() { return /* binding */ createView; },\n/* harmony export */   hexToBytes: function() { return /* binding */ hexToBytes; },\n/* harmony export */   isLE: function() { return /* binding */ isLE; },\n/* harmony export */   nextTick: function() { return /* binding */ nextTick; },\n/* harmony export */   randomBytes: function() { return /* binding */ randomBytes; },\n/* harmony export */   rotr: function() { return /* binding */ rotr; },\n/* harmony export */   toBytes: function() { return /* binding */ toBytes; },\n/* harmony export */   u32: function() { return /* binding */ u32; },\n/* harmony export */   u8: function() { return /* binding */ u8; },\n/* harmony export */   utf8ToBytes: function() { return /* binding */ utf8ToBytes; },\n/* harmony export */   wrapConstructor: function() { return /* binding */ wrapConstructor; },\n/* harmony export */   wrapConstructorWithOpts: function() { return /* binding */ wrapConstructorWithOpts; },\n/* harmony export */   wrapXOFConstructorWithOpts: function() { return /* binding */ wrapXOFConstructorWithOpts; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/crypto.js\");\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\n\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nconst isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!isBytes(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        if (!isBytes(a))\n            throw new Error('Uint8Array expected');\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues === 'function') {\n        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@scure/base/lib/esm/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@scure/base/lib/esm/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertNumber: function() { return /* binding */ assertNumber; },\n/* harmony export */   base16: function() { return /* binding */ base16; },\n/* harmony export */   base32: function() { return /* binding */ base32; },\n/* harmony export */   base32crockford: function() { return /* binding */ base32crockford; },\n/* harmony export */   base32hex: function() { return /* binding */ base32hex; },\n/* harmony export */   base32hexnopad: function() { return /* binding */ base32hexnopad; },\n/* harmony export */   base32nopad: function() { return /* binding */ base32nopad; },\n/* harmony export */   base58: function() { return /* binding */ base58; },\n/* harmony export */   base58check: function() { return /* binding */ base58check; },\n/* harmony export */   base58flickr: function() { return /* binding */ base58flickr; },\n/* harmony export */   base58xmr: function() { return /* binding */ base58xmr; },\n/* harmony export */   base58xrp: function() { return /* binding */ base58xrp; },\n/* harmony export */   base64: function() { return /* binding */ base64; },\n/* harmony export */   base64nopad: function() { return /* binding */ base64nopad; },\n/* harmony export */   base64url: function() { return /* binding */ base64url; },\n/* harmony export */   base64urlnopad: function() { return /* binding */ base64urlnopad; },\n/* harmony export */   bech32: function() { return /* binding */ bech32; },\n/* harmony export */   bech32m: function() { return /* binding */ bech32m; },\n/* harmony export */   bytes: function() { return /* binding */ bytes; },\n/* harmony export */   bytesToString: function() { return /* binding */ bytesToString; },\n/* harmony export */   createBase58check: function() { return /* binding */ createBase58check; },\n/* harmony export */   hex: function() { return /* binding */ hex; },\n/* harmony export */   str: function() { return /* binding */ str; },\n/* harmony export */   stringToBytes: function() { return /* binding */ stringToBytes; },\n/* harmony export */   utf8: function() { return /* binding */ utf8; },\n/* harmony export */   utils: function() { return /* binding */ utils; }\n/* harmony export */ });\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            const rounded = Math.floor(digitBase / to);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = /* @__NO_SIDE_EFFECTS__ */ (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = /*@__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\n/**\n * Implemented with numbers, because BigInt is 5x slower\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nconst utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\nconst base16 = /* @__PURE__ */ chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nconst base32 = /* @__PURE__ */ chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nconst base32nopad = /* @__PURE__ */ chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));\nconst base32hex = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nconst base32hexnopad = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));\nconst base32crockford = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nconst base64 = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nconst base64nopad = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));\nconst base64url = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst base64urlnopad = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nconst base58 = /* @__PURE__ */ genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nconst base58flickr = /* @__PURE__ */ genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nconst base58xrp = /* @__PURE__ */ genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// xmr ver is done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n// Block encoding significantly reduces quadratic complexity of base58.\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nconst base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\n// legacy export, bad name\nconst base58check = createBase58check;\nconst BECH_ALPHABET = /* @__PURE__ */ chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (words instanceof Uint8Array)\n            words = Array.from(words);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        if (prefix.length === 0)\n            throw new TypeError(`Invalid prefix length ${prefix.length}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        const sepIndex = lowered.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = lowered.slice(0, sepIndex);\n        const data = lowered.slice(sepIndex + 1);\n        if (data.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(data).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!data.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    function encodeFromBytes(prefix, bytes) {\n        return encode(prefix, toWords(bytes));\n    }\n    return {\n        encode,\n        decode,\n        encodeFromBytes,\n        decodeToBytes,\n        decodeUnsafe,\n        fromWords,\n        fromWordsUnsafe,\n        toWords,\n    };\n}\nconst bech32 = /* @__PURE__ */ genBech32('bech32');\nconst bech32m = /* @__PURE__ */ genBech32('bech32m');\nconst utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nconst hex = /* @__PURE__ */ chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nconst str = bytesToString; // as in python, but for bytes only\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nconst bytes = stringToBytes;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@scure/base/lib/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/@scure/bip39/esm/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@scure/bip39/esm/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   entropyToMnemonic: function() { return /* binding */ entropyToMnemonic; },\n/* harmony export */   generateMnemonic: function() { return /* binding */ generateMnemonic; },\n/* harmony export */   mnemonicToEntropy: function() { return /* binding */ mnemonicToEntropy; },\n/* harmony export */   mnemonicToSeed: function() { return /* binding */ mnemonicToSeed; },\n/* harmony export */   mnemonicToSeedSync: function() { return /* binding */ mnemonicToSeedSync; },\n/* harmony export */   validateMnemonic: function() { return /* binding */ validateMnemonic; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/_assert */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @noble/hashes/pbkdf2 */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/pbkdf2.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @scure/base */ \"(app-pages-browser)/./node_modules/aptos/node_modules/@scure/base/lib/esm/index.js\");\n\n\n\n\n\n\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes(entropy, 16, 20, 24, 28, 32);\n}\nfunction generateMnemonic(wordlist, strength = 128) {\n    _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(strength / 8), wordlist);\n}\nconst calcChecksum = (entropy) => {\n    const bitsLeft = 8 - entropy.length / 4;\n    return new Uint8Array([((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return _scure_base__WEBPACK_IMPORTED_MODULE_3__.utils.chain(_scure_base__WEBPACK_IMPORTED_MODULE_3__.utils.checksum(1, calcChecksum), _scure_base__WEBPACK_IMPORTED_MODULE_3__.utils.radix2(11, true), _scure_base__WEBPACK_IMPORTED_MODULE_3__.utils.alphabet(wordlist));\n}\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0,_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_4__.pbkdf2Async)(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_5__.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0,_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_4__.pbkdf2)(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_5__.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQHNjdXJlL2JpcDM5L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBMkM7QUFDZ0I7QUFDYjtBQUNBO0FBQ0k7QUFDRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsV0FBVztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsSUFBSSxrRUFBWTtBQUNoQjtBQUNPO0FBQ1AsSUFBSSxtRUFBYTtBQUNqQjtBQUNBO0FBQ0EsNkJBQTZCLGdFQUFXO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qiw0REFBTTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsRUFBRTtBQUMvRCxLQUFLO0FBQ0wsV0FBVyw4Q0FBUyxPQUFPLDhDQUFTLDRCQUE0Qiw4Q0FBUyxtQkFBbUIsOENBQVM7QUFDckc7QUFDTztBQUNQLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsV0FBVztBQUNqRDtBQUNQLFdBQVcsaUVBQVcsQ0FBQyx3REFBTSxnREFBZ0Qsb0JBQW9CO0FBQ2pHO0FBQ087QUFDUCxXQUFXLDREQUFNLENBQUMsd0RBQU0sZ0RBQWdELG9CQUFvQjtBQUM1RjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQHNjdXJlL2JpcDM5L2VzbS9pbmRleC5qcz8yZGI4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhc3NlcnQgZnJvbSAnQG5vYmxlL2hhc2hlcy9fYXNzZXJ0JztcbmltcG9ydCB7IHBia2RmMiwgcGJrZGYyQXN5bmMgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3Bia2RmMic7XG5pbXBvcnQgeyBzaGEyNTYgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3NoYTI1Nic7XG5pbXBvcnQgeyBzaGE1MTIgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3NoYTUxMic7XG5pbXBvcnQgeyByYW5kb21CeXRlcyB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvdXRpbHMnO1xuaW1wb3J0IHsgdXRpbHMgYXMgYmFzZVV0aWxzIH0gZnJvbSAnQHNjdXJlL2Jhc2UnO1xuY29uc3QgaXNKYXBhbmVzZSA9ICh3b3JkbGlzdCkgPT4gd29yZGxpc3RbMF0gPT09ICdcXHUzMDQyXFx1MzA0NFxcdTMwNTNcXHUzMDRmXFx1MzA1N1xcdTMwOTMnO1xuZnVuY3Rpb24gbmZrZChzdHIpIHtcbiAgICBpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYEludmFsaWQgbW5lbW9uaWMgdHlwZTogJHt0eXBlb2Ygc3RyfWApO1xuICAgIHJldHVybiBzdHIubm9ybWFsaXplKCdORktEJyk7XG59XG5mdW5jdGlvbiBub3JtYWxpemUoc3RyKSB7XG4gICAgY29uc3Qgbm9ybSA9IG5ma2Qoc3RyKTtcbiAgICBjb25zdCB3b3JkcyA9IG5vcm0uc3BsaXQoJyAnKTtcbiAgICBpZiAoIVsxMiwgMTUsIDE4LCAyMSwgMjRdLmluY2x1ZGVzKHdvcmRzLmxlbmd0aCkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBtbmVtb25pYycpO1xuICAgIHJldHVybiB7IG5ma2Q6IG5vcm0sIHdvcmRzIH07XG59XG5mdW5jdGlvbiBhc3NlcnRFbnRyb3B5KGVudHJvcHkpIHtcbiAgICBhc3NlcnQuYnl0ZXMoZW50cm9weSwgMTYsIDIwLCAyNCwgMjgsIDMyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZU1uZW1vbmljKHdvcmRsaXN0LCBzdHJlbmd0aCA9IDEyOCkge1xuICAgIGFzc2VydC5udW1iZXIoc3RyZW5ndGgpO1xuICAgIGlmIChzdHJlbmd0aCAlIDMyICE9PSAwIHx8IHN0cmVuZ3RoID4gMjU2KVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIGVudHJvcHknKTtcbiAgICByZXR1cm4gZW50cm9weVRvTW5lbW9uaWMocmFuZG9tQnl0ZXMoc3RyZW5ndGggLyA4KSwgd29yZGxpc3QpO1xufVxuY29uc3QgY2FsY0NoZWNrc3VtID0gKGVudHJvcHkpID0+IHtcbiAgICBjb25zdCBiaXRzTGVmdCA9IDggLSBlbnRyb3B5Lmxlbmd0aCAvIDQ7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFsoc2hhMjU2KGVudHJvcHkpWzBdID4+IGJpdHNMZWZ0KSA8PCBiaXRzTGVmdF0pO1xufTtcbmZ1bmN0aW9uIGdldENvZGVyKHdvcmRsaXN0KSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHdvcmRsaXN0KSB8fCB3b3JkbGlzdC5sZW5ndGggIT09IDIwNDggfHwgdHlwZW9mIHdvcmRsaXN0WzBdICE9PSAnc3RyaW5nJylcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdXb3JsaXN0OiBleHBlY3RlZCBhcnJheSBvZiAyMDQ4IHN0cmluZ3MnKTtcbiAgICB3b3JkbGlzdC5mb3JFYWNoKChpKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgaSAhPT0gJ3N0cmluZycpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFdvcmRsaXN0OiBub24tc3RyaW5nIGVsZW1lbnQ6ICR7aX1gKTtcbiAgICB9KTtcbiAgICByZXR1cm4gYmFzZVV0aWxzLmNoYWluKGJhc2VVdGlscy5jaGVja3N1bSgxLCBjYWxjQ2hlY2tzdW0pLCBiYXNlVXRpbHMucmFkaXgyKDExLCB0cnVlKSwgYmFzZVV0aWxzLmFscGhhYmV0KHdvcmRsaXN0KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gbW5lbW9uaWNUb0VudHJvcHkobW5lbW9uaWMsIHdvcmRsaXN0KSB7XG4gICAgY29uc3QgeyB3b3JkcyB9ID0gbm9ybWFsaXplKG1uZW1vbmljKTtcbiAgICBjb25zdCBlbnRyb3B5ID0gZ2V0Q29kZXIod29yZGxpc3QpLmRlY29kZSh3b3Jkcyk7XG4gICAgYXNzZXJ0RW50cm9weShlbnRyb3B5KTtcbiAgICByZXR1cm4gZW50cm9weTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbnRyb3B5VG9NbmVtb25pYyhlbnRyb3B5LCB3b3JkbGlzdCkge1xuICAgIGFzc2VydEVudHJvcHkoZW50cm9weSk7XG4gICAgY29uc3Qgd29yZHMgPSBnZXRDb2Rlcih3b3JkbGlzdCkuZW5jb2RlKGVudHJvcHkpO1xuICAgIHJldHVybiB3b3Jkcy5qb2luKGlzSmFwYW5lc2Uod29yZGxpc3QpID8gJ1xcdTMwMDAnIDogJyAnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZU1uZW1vbmljKG1uZW1vbmljLCB3b3JkbGlzdCkge1xuICAgIHRyeSB7XG4gICAgICAgIG1uZW1vbmljVG9FbnRyb3B5KG1uZW1vbmljLCB3b3JkbGlzdCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5jb25zdCBzYWx0ID0gKHBhc3NwaHJhc2UpID0+IG5ma2QoYG1uZW1vbmljJHtwYXNzcGhyYXNlfWApO1xuZXhwb3J0IGZ1bmN0aW9uIG1uZW1vbmljVG9TZWVkKG1uZW1vbmljLCBwYXNzcGhyYXNlID0gJycpIHtcbiAgICByZXR1cm4gcGJrZGYyQXN5bmMoc2hhNTEyLCBub3JtYWxpemUobW5lbW9uaWMpLm5ma2QsIHNhbHQocGFzc3BocmFzZSksIHsgYzogMjA0OCwgZGtMZW46IDY0IH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1uZW1vbmljVG9TZWVkU3luYyhtbmVtb25pYywgcGFzc3BocmFzZSA9ICcnKSB7XG4gICAgcmV0dXJuIHBia2RmMihzaGE1MTIsIG5vcm1hbGl6ZShtbmVtb25pYykubmZrZCwgc2FsdChwYXNzcGhyYXNlKSwgeyBjOiAyMDQ4LCBka0xlbjogNjQgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/@scure/bip39/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/adapters/adapters.js":
/*!************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/adapters/adapters.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/null.js\");\n/* harmony import */ var _xhr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./xhr.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/adapters/xhr.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fetch.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/adapters/fetch.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/AxiosError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\n\nconst knownAdapters = {\n  http: _http_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  xhr: _xhr_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  fetch: _fetch_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(adapter) || adapter === null || adapter === false;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  getAdapter: (adapters) => {\n    adapters = _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL2FkYXB0ZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnQztBQUNJO0FBQ0Y7QUFDSTtBQUNTOztBQUUvQztBQUNBLFFBQVEsZ0RBQVc7QUFDbkIsT0FBTywrQ0FBVTtBQUNqQixTQUFTLGlEQUFZO0FBQ3JCOztBQUVBLGlEQUFLO0FBQ0w7QUFDQTtBQUNBLHlDQUF5QyxNQUFNO0FBQy9DLE1BQU07QUFDTjtBQUNBO0FBQ0EsOENBQThDLE1BQU07QUFDcEQ7QUFDQSxDQUFDOztBQUVELHNDQUFzQyxPQUFPOztBQUU3QyxzQ0FBc0MsaURBQUs7O0FBRTNDLCtEQUFlO0FBQ2Y7QUFDQSxlQUFlLGlEQUFLOztBQUVwQixXQUFXLFFBQVE7QUFDbkI7QUFDQTs7QUFFQTs7QUFFQSxvQkFBb0IsWUFBWTtBQUNoQztBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxvQkFBb0IsMkRBQVUscUJBQXFCLEdBQUc7QUFDdEQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHlDQUF5QyxJQUFJO0FBQzdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGdCQUFnQiwyREFBVTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYWRhcHRlcnMvYWRhcHRlcnMuanM/NWY1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IGh0dHBBZGFwdGVyIGZyb20gJy4vaHR0cC5qcyc7XG5pbXBvcnQgeGhyQWRhcHRlciBmcm9tICcuL3hoci5qcyc7XG5pbXBvcnQgZmV0Y2hBZGFwdGVyIGZyb20gJy4vZmV0Y2guanMnO1xuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSBcIi4uL2NvcmUvQXhpb3NFcnJvci5qc1wiO1xuXG5jb25zdCBrbm93bkFkYXB0ZXJzID0ge1xuICBodHRwOiBodHRwQWRhcHRlcixcbiAgeGhyOiB4aHJBZGFwdGVyLFxuICBmZXRjaDogZmV0Y2hBZGFwdGVyXG59XG5cbnV0aWxzLmZvckVhY2goa25vd25BZGFwdGVycywgKGZuLCB2YWx1ZSkgPT4ge1xuICBpZiAoZm4pIHtcbiAgICB0cnkge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGZuLCAnbmFtZScsIHt2YWx1ZX0pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sICdhZGFwdGVyTmFtZScsIHt2YWx1ZX0pO1xuICB9XG59KTtcblxuY29uc3QgcmVuZGVyUmVhc29uID0gKHJlYXNvbikgPT4gYC0gJHtyZWFzb259YDtcblxuY29uc3QgaXNSZXNvbHZlZEhhbmRsZSA9IChhZGFwdGVyKSA9PiB1dGlscy5pc0Z1bmN0aW9uKGFkYXB0ZXIpIHx8IGFkYXB0ZXIgPT09IG51bGwgfHwgYWRhcHRlciA9PT0gZmFsc2U7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0QWRhcHRlcjogKGFkYXB0ZXJzKSA9PiB7XG4gICAgYWRhcHRlcnMgPSB1dGlscy5pc0FycmF5KGFkYXB0ZXJzKSA/IGFkYXB0ZXJzIDogW2FkYXB0ZXJzXTtcblxuICAgIGNvbnN0IHtsZW5ndGh9ID0gYWRhcHRlcnM7XG4gICAgbGV0IG5hbWVPckFkYXB0ZXI7XG4gICAgbGV0IGFkYXB0ZXI7XG5cbiAgICBjb25zdCByZWplY3RlZFJlYXNvbnMgPSB7fTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIG5hbWVPckFkYXB0ZXIgPSBhZGFwdGVyc1tpXTtcbiAgICAgIGxldCBpZDtcblxuICAgICAgYWRhcHRlciA9IG5hbWVPckFkYXB0ZXI7XG5cbiAgICAgIGlmICghaXNSZXNvbHZlZEhhbmRsZShuYW1lT3JBZGFwdGVyKSkge1xuICAgICAgICBhZGFwdGVyID0ga25vd25BZGFwdGVyc1soaWQgPSBTdHJpbmcobmFtZU9yQWRhcHRlcikpLnRvTG93ZXJDYXNlKCldO1xuXG4gICAgICAgIGlmIChhZGFwdGVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgQXhpb3NFcnJvcihgVW5rbm93biBhZGFwdGVyICcke2lkfSdgKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoYWRhcHRlcikge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgcmVqZWN0ZWRSZWFzb25zW2lkIHx8ICcjJyArIGldID0gYWRhcHRlcjtcbiAgICB9XG5cbiAgICBpZiAoIWFkYXB0ZXIpIHtcblxuICAgICAgY29uc3QgcmVhc29ucyA9IE9iamVjdC5lbnRyaWVzKHJlamVjdGVkUmVhc29ucylcbiAgICAgICAgLm1hcCgoW2lkLCBzdGF0ZV0pID0+IGBhZGFwdGVyICR7aWR9IGAgK1xuICAgICAgICAgIChzdGF0ZSA9PT0gZmFsc2UgPyAnaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgZW52aXJvbm1lbnQnIDogJ2lzIG5vdCBhdmFpbGFibGUgaW4gdGhlIGJ1aWxkJylcbiAgICAgICAgKTtcblxuICAgICAgbGV0IHMgPSBsZW5ndGggP1xuICAgICAgICAocmVhc29ucy5sZW5ndGggPiAxID8gJ3NpbmNlIDpcXG4nICsgcmVhc29ucy5tYXAocmVuZGVyUmVhc29uKS5qb2luKCdcXG4nKSA6ICcgJyArIHJlbmRlclJlYXNvbihyZWFzb25zWzBdKSkgOlxuICAgICAgICAnYXMgbm8gYWRhcHRlciBzcGVjaWZpZWQnO1xuXG4gICAgICB0aHJvdyBuZXcgQXhpb3NFcnJvcihcbiAgICAgICAgYFRoZXJlIGlzIG5vIHN1aXRhYmxlIGFkYXB0ZXIgdG8gZGlzcGF0Y2ggdGhlIHJlcXVlc3QgYCArIHMsXG4gICAgICAgICdFUlJfTk9UX1NVUFBPUlQnXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiBhZGFwdGVyO1xuICB9LFxuICBhZGFwdGVyczoga25vd25BZGFwdGVyc1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/adapters/adapters.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/adapters/fetch.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/adapters/fetch.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/composeSignals.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/composeSignals.js\");\n/* harmony import */ var _helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/trackStream.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/trackStream.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/progressEventReducer.js\");\n/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/resolveConfig.js\");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/settle.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/settle.js\");\n\n\n\n\n\n\n\n\n\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](`Response type '${type}' is not supported`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isBlob(body)) {\n    return body.size;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isSpecCompliantForm(body)) {\n    return (await new Request(body).arrayBuffer()).byteLength;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArrayBufferView(body) || _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let [composedSignal, stopTimeout] = (signal || cancelToken || timeout) ?\n    (0,_helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])([signal, cancelToken], timeout) : [];\n\n  let finished, request;\n\n  const onFinish = () => {\n    !finished && setTimeout(() => {\n      composedSignal && composedSignal.unsubscribe();\n    });\n\n    finished = true;\n  }\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventDecorator)(\n          requestContentLength,\n          (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventReducer)((0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.asyncDecorator)(onUploadProgress))\n        );\n\n        data = (0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__.trackStream)(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush, encodeText);\n      }\n    }\n\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: withCredentials\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || isStreamResponse)) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventDecorator)(\n        responseContentLength,\n        (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventReducer)((0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.asyncDecorator)(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        (0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__.trackStream)(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          isStreamResponse && onFinish();\n        }, encodeText),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && onFinish();\n\n    stopTimeout && stopTimeout();\n\n    return await new Promise((resolve, reject) => {\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(resolve, reject, {\n        data: responseData,\n        headers: _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    onFinish();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('Network Error', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].from(err, err && err.code, config, request);\n  }\n}));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/adapters/fetch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/adapters/xhr.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/adapters/xhr.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../core/settle.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/settle.js\");\n/* harmony import */ var _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/transitional.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/AxiosError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/parseProtocol.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/parseProtocol.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../platform/index.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/progressEventReducer.js\");\n/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/resolveConfig.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(config);\n    let requestData = _config.data;\n    const requestHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Request aborted', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Network Error', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ETIMEDOUT : _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      _utils_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventReducer)(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventReducer)(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = (0,_helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(_config.url);\n\n    if (protocol && _platform_index_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].protocols.indexOf(protocol) === -1) {\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Unsupported protocol ' + protocol + ':', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/adapters/xhr.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/axios.js":
/*!************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/axios.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/bind.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/bind.js\");\n/* harmony import */ var _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/Axios.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/Axios.js\");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/mergeConfig.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults/index.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/formDataToJSON.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/formDataToJSON.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cancel/CanceledError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cancel/CancelToken.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/CancelToken.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cancel/isCancel.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./env/data.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./helpers/toFormData.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/AxiosError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers/spread.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/spread.js\");\n/* harmony import */ var _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/isAxiosError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/isAxiosError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./core/AxiosHeaders.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./adapters/adapters.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/adapters/adapters.js\");\n/* harmony import */ var _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./helpers/HttpStatusCode.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/HttpStatusCode.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](defaultConfig);\n  const instance = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.request, context);\n\n  // Copy axios.prototype to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance((0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(_defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\n// Expose Cancel & CancelToken\naxios.CanceledError = _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\naxios.CancelToken = _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\naxios.isCancel = _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\naxios.VERSION = _env_data_js__WEBPACK_IMPORTED_MODULE_8__.VERSION;\naxios.toFormData = _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\n\n// Expose AxiosError class\naxios.AxiosError = _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"];\n\n// Expose isAxiosError\naxios.isAxiosError = _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"];\n\n// Expose mergeConfig\naxios.mergeConfig = _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n\naxios.AxiosHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"];\n\naxios.formToJSON = thing => (0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].getAdapter;\n\naxios.HttpStatusCode = _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"];\n\naxios.default = axios;\n\n// this module should only have a default export\n/* harmony default export */ __webpack_exports__[\"default\"] = (axios);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFhOztBQUVrQjtBQUNNO0FBQ0Q7QUFDWTtBQUNMO0FBQ2M7QUFDSDtBQUNKO0FBQ047QUFDTjtBQUNXO0FBQ0g7QUFDTDtBQUNZO0FBQ0g7QUFDSjtBQUNXOztBQUV6RDtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBLHNCQUFzQixzREFBSztBQUMzQixtQkFBbUIsNERBQUksQ0FBQyxzREFBSzs7QUFFN0I7QUFDQSxFQUFFLGlEQUFLLGtCQUFrQixzREFBSyxzQkFBc0IsaUJBQWlCOztBQUVyRTtBQUNBLEVBQUUsaURBQUssa0NBQWtDLGlCQUFpQjs7QUFFMUQ7QUFDQTtBQUNBLDBCQUEwQixnRUFBVztBQUNyQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsNkJBQTZCLDBEQUFROztBQUVyQztBQUNBLGNBQWMsc0RBQUs7O0FBRW5CO0FBQ0Esc0JBQXNCLGdFQUFhO0FBQ25DLG9CQUFvQiw4REFBVztBQUMvQixpQkFBaUIsMkRBQVE7QUFDekIsZ0JBQWdCLGlEQUFPO0FBQ3ZCLG1CQUFtQiw4REFBVTs7QUFFN0I7QUFDQSxtQkFBbUIsNERBQVU7O0FBRTdCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZUFBZSwyREFBTTs7QUFFckI7QUFDQSxxQkFBcUIsaUVBQVk7O0FBRWpDO0FBQ0Esb0JBQW9CLDREQUFXOztBQUUvQixxQkFBcUIsOERBQVk7O0FBRWpDLDRCQUE0Qix1RUFBYyxDQUFDLGlEQUFLOztBQUVoRCxtQkFBbUIsOERBQVE7O0FBRTNCLHVCQUF1QixtRUFBYzs7QUFFckM7O0FBRUE7QUFDQSwrREFBZSxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzPzI4M2YiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQgYmluZCBmcm9tICcuL2hlbHBlcnMvYmluZC5qcyc7XG5pbXBvcnQgQXhpb3MgZnJvbSAnLi9jb3JlL0F4aW9zLmpzJztcbmltcG9ydCBtZXJnZUNvbmZpZyBmcm9tICcuL2NvcmUvbWVyZ2VDb25maWcuanMnO1xuaW1wb3J0IGRlZmF1bHRzIGZyb20gJy4vZGVmYXVsdHMvaW5kZXguanMnO1xuaW1wb3J0IGZvcm1EYXRhVG9KU09OIGZyb20gJy4vaGVscGVycy9mb3JtRGF0YVRvSlNPTi5qcyc7XG5pbXBvcnQgQ2FuY2VsZWRFcnJvciBmcm9tICcuL2NhbmNlbC9DYW5jZWxlZEVycm9yLmpzJztcbmltcG9ydCBDYW5jZWxUb2tlbiBmcm9tICcuL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyc7XG5pbXBvcnQgaXNDYW5jZWwgZnJvbSAnLi9jYW5jZWwvaXNDYW5jZWwuanMnO1xuaW1wb3J0IHtWRVJTSU9OfSBmcm9tICcuL2Vudi9kYXRhLmpzJztcbmltcG9ydCB0b0Zvcm1EYXRhIGZyb20gJy4vaGVscGVycy90b0Zvcm1EYXRhLmpzJztcbmltcG9ydCBBeGlvc0Vycm9yIGZyb20gJy4vY29yZS9BeGlvc0Vycm9yLmpzJztcbmltcG9ydCBzcHJlYWQgZnJvbSAnLi9oZWxwZXJzL3NwcmVhZC5qcyc7XG5pbXBvcnQgaXNBeGlvc0Vycm9yIGZyb20gJy4vaGVscGVycy9pc0F4aW9zRXJyb3IuanMnO1xuaW1wb3J0IEF4aW9zSGVhZGVycyBmcm9tIFwiLi9jb3JlL0F4aW9zSGVhZGVycy5qc1wiO1xuaW1wb3J0IGFkYXB0ZXJzIGZyb20gJy4vYWRhcHRlcnMvYWRhcHRlcnMuanMnO1xuaW1wb3J0IEh0dHBTdGF0dXNDb2RlIGZyb20gJy4vaGVscGVycy9IdHRwU3RhdHVzQ29kZS5qcyc7XG5cbi8qKlxuICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGRlZmF1bHRDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqXG4gKiBAcmV0dXJucyB7QXhpb3N9IEEgbmV3IGluc3RhbmNlIG9mIEF4aW9zXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRDb25maWcpIHtcbiAgY29uc3QgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgY29uc3QgaW5zdGFuY2UgPSBiaW5kKEF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0LCBjb250ZXh0KTtcblxuICAvLyBDb3B5IGF4aW9zLnByb3RvdHlwZSB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIEF4aW9zLnByb3RvdHlwZSwgY29udGV4dCwge2FsbE93bktleXM6IHRydWV9KTtcblxuICAvLyBDb3B5IGNvbnRleHQgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBjb250ZXh0LCBudWxsLCB7YWxsT3duS2V5czogdHJ1ZX0pO1xuXG4gIC8vIEZhY3RvcnkgZm9yIGNyZWF0aW5nIG5ldyBpbnN0YW5jZXNcbiAgaW5zdGFuY2UuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUluc3RhbmNlKG1lcmdlQ29uZmlnKGRlZmF1bHRDb25maWcsIGluc3RhbmNlQ29uZmlnKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluc3RhbmNlO1xufVxuXG4vLyBDcmVhdGUgdGhlIGRlZmF1bHQgaW5zdGFuY2UgdG8gYmUgZXhwb3J0ZWRcbmNvbnN0IGF4aW9zID0gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdHMpO1xuXG4vLyBFeHBvc2UgQXhpb3MgY2xhc3MgdG8gYWxsb3cgY2xhc3MgaW5oZXJpdGFuY2VcbmF4aW9zLkF4aW9zID0gQXhpb3M7XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsZWRFcnJvciA9IENhbmNlbGVkRXJyb3I7XG5heGlvcy5DYW5jZWxUb2tlbiA9IENhbmNlbFRva2VuO1xuYXhpb3MuaXNDYW5jZWwgPSBpc0NhbmNlbDtcbmF4aW9zLlZFUlNJT04gPSBWRVJTSU9OO1xuYXhpb3MudG9Gb3JtRGF0YSA9IHRvRm9ybURhdGE7XG5cbi8vIEV4cG9zZSBBeGlvc0Vycm9yIGNsYXNzXG5heGlvcy5BeGlvc0Vycm9yID0gQXhpb3NFcnJvcjtcblxuLy8gYWxpYXMgZm9yIENhbmNlbGVkRXJyb3IgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHlcbmF4aW9zLkNhbmNlbCA9IGF4aW9zLkNhbmNlbGVkRXJyb3I7XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5cbmF4aW9zLnNwcmVhZCA9IHNwcmVhZDtcblxuLy8gRXhwb3NlIGlzQXhpb3NFcnJvclxuYXhpb3MuaXNBeGlvc0Vycm9yID0gaXNBeGlvc0Vycm9yO1xuXG4vLyBFeHBvc2UgbWVyZ2VDb25maWdcbmF4aW9zLm1lcmdlQ29uZmlnID0gbWVyZ2VDb25maWc7XG5cbmF4aW9zLkF4aW9zSGVhZGVycyA9IEF4aW9zSGVhZGVycztcblxuYXhpb3MuZm9ybVRvSlNPTiA9IHRoaW5nID0+IGZvcm1EYXRhVG9KU09OKHV0aWxzLmlzSFRNTEZvcm0odGhpbmcpID8gbmV3IEZvcm1EYXRhKHRoaW5nKSA6IHRoaW5nKTtcblxuYXhpb3MuZ2V0QWRhcHRlciA9IGFkYXB0ZXJzLmdldEFkYXB0ZXI7XG5cbmF4aW9zLkh0dHBTdGF0dXNDb2RlID0gSHR0cFN0YXR1c0NvZGU7XG5cbmF4aW9zLmRlZmF1bHQgPSBheGlvcztcblxuLy8gdGhpcyBtb2R1bGUgc2hvdWxkIG9ubHkgaGF2ZSBhIGRlZmF1bHQgZXhwb3J0XG5leHBvcnQgZGVmYXVsdCBheGlvc1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/axios.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/CancelToken.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/cancel/CancelToken.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CanceledError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\");\n\n\n\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CancelToken);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyIsIm1hcHBpbmdzIjoiOztBQUFhOztBQUVrQzs7QUFFL0M7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlCQUF5Qix5REFBYTtBQUN0QztBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0RBQWUsV0FBVyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcz85YzAwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IENhbmNlbGVkRXJyb3IgZnJvbSAnLi9DYW5jZWxlZEVycm9yLmpzJztcblxuLyoqXG4gKiBBIGBDYW5jZWxUb2tlbmAgaXMgYW4gb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVxdWVzdCBjYW5jZWxsYXRpb24gb2YgYW4gb3BlcmF0aW9uLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGV4ZWN1dG9yIFRoZSBleGVjdXRvciBmdW5jdGlvbi5cbiAqXG4gKiBAcmV0dXJucyB7Q2FuY2VsVG9rZW59XG4gKi9cbmNsYXNzIENhbmNlbFRva2VuIHtcbiAgY29uc3RydWN0b3IoZXhlY3V0b3IpIHtcbiAgICBpZiAodHlwZW9mIGV4ZWN1dG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgbGV0IHJlc29sdmVQcm9taXNlO1xuXG4gICAgdGhpcy5wcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gcHJvbWlzZUV4ZWN1dG9yKHJlc29sdmUpIHtcbiAgICAgIHJlc29sdmVQcm9taXNlID0gcmVzb2x2ZTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHRva2VuID0gdGhpcztcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gICAgdGhpcy5wcm9taXNlLnRoZW4oY2FuY2VsID0+IHtcbiAgICAgIGlmICghdG9rZW4uX2xpc3RlbmVycykgcmV0dXJuO1xuXG4gICAgICBsZXQgaSA9IHRva2VuLl9saXN0ZW5lcnMubGVuZ3RoO1xuXG4gICAgICB3aGlsZSAoaS0tID4gMCkge1xuICAgICAgICB0b2tlbi5fbGlzdGVuZXJzW2ldKGNhbmNlbCk7XG4gICAgICB9XG4gICAgICB0b2tlbi5fbGlzdGVuZXJzID0gbnVsbDtcbiAgICB9KTtcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gICAgdGhpcy5wcm9taXNlLnRoZW4gPSBvbmZ1bGZpbGxlZCA9PiB7XG4gICAgICBsZXQgX3Jlc29sdmU7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICB0b2tlbi5zdWJzY3JpYmUocmVzb2x2ZSk7XG4gICAgICAgIF9yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICAgIH0pLnRoZW4ob25mdWxmaWxsZWQpO1xuXG4gICAgICBwcm9taXNlLmNhbmNlbCA9IGZ1bmN0aW9uIHJlamVjdCgpIHtcbiAgICAgICAgdG9rZW4udW5zdWJzY3JpYmUoX3Jlc29sdmUpO1xuICAgICAgfTtcblxuICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgfTtcblxuICAgIGV4ZWN1dG9yKGZ1bmN0aW9uIGNhbmNlbChtZXNzYWdlLCBjb25maWcsIHJlcXVlc3QpIHtcbiAgICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgICAgLy8gQ2FuY2VsbGF0aW9uIGhhcyBhbHJlYWR5IGJlZW4gcmVxdWVzdGVkXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdG9rZW4ucmVhc29uID0gbmV3IENhbmNlbGVkRXJyb3IobWVzc2FnZSwgY29uZmlnLCByZXF1ZXN0KTtcbiAgICAgIHJlc29sdmVQcm9taXNlKHRva2VuLnJlYXNvbik7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogVGhyb3dzIGEgYENhbmNlbGVkRXJyb3JgIGlmIGNhbmNlbGxhdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXG4gICAqL1xuICB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICAgIGlmICh0aGlzLnJlYXNvbikge1xuICAgICAgdGhyb3cgdGhpcy5yZWFzb247XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFN1YnNjcmliZSB0byB0aGUgY2FuY2VsIHNpZ25hbFxuICAgKi9cblxuICBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICAgIGxpc3RlbmVyKHRoaXMucmVhc29uKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fbGlzdGVuZXJzKSB7XG4gICAgICB0aGlzLl9saXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2xpc3RlbmVycyA9IFtsaXN0ZW5lcl07XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFVuc3Vic2NyaWJlIGZyb20gdGhlIGNhbmNlbCBzaWduYWxcbiAgICovXG5cbiAgdW5zdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAoIXRoaXMuX2xpc3RlbmVycykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBpbmRleCA9IHRoaXMuX2xpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICB0aGlzLl9saXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhbiBvYmplY3QgdGhhdCBjb250YWlucyBhIG5ldyBgQ2FuY2VsVG9rZW5gIGFuZCBhIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLFxuICAgKiBjYW5jZWxzIHRoZSBgQ2FuY2VsVG9rZW5gLlxuICAgKi9cbiAgc3RhdGljIHNvdXJjZSgpIHtcbiAgICBsZXQgY2FuY2VsO1xuICAgIGNvbnN0IHRva2VuID0gbmV3IENhbmNlbFRva2VuKGZ1bmN0aW9uIGV4ZWN1dG9yKGMpIHtcbiAgICAgIGNhbmNlbCA9IGM7XG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRva2VuLFxuICAgICAgY2FuY2VsXG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDYW5jZWxUb2tlbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/CancelToken.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n\n\n\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].call(this, message == null ? 'canceled' : message, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inherits(CanceledError, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n  __CANCEL__: true\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CanceledError);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxlZEVycm9yLmpzIiwibWFwcGluZ3MiOiI7OztBQUFhOztBQUVrQztBQUNmOztBQUVoQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWEsZUFBZTtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxFQUFFLDJEQUFVLG9EQUFvRCwyREFBVTtBQUMxRTtBQUNBOztBQUVBLGlEQUFLLHlCQUF5QiwyREFBVTtBQUN4QztBQUNBLENBQUM7O0FBRUQsK0RBQWUsYUFBYSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxlZEVycm9yLmpzP2ExYTUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgQXhpb3NFcnJvciBmcm9tICcuLi9jb3JlL0F4aW9zRXJyb3IuanMnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcblxuLyoqXG4gKiBBIGBDYW5jZWxlZEVycm9yYCBpcyBhbiBvYmplY3QgdGhhdCBpcyB0aHJvd24gd2hlbiBhbiBvcGVyYXRpb24gaXMgY2FuY2VsZWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmc9fSBtZXNzYWdlIFRoZSBtZXNzYWdlLlxuICogQHBhcmFtIHtPYmplY3Q9fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7T2JqZWN0PX0gcmVxdWVzdCBUaGUgcmVxdWVzdC5cbiAqXG4gKiBAcmV0dXJucyB7Q2FuY2VsZWRFcnJvcn0gVGhlIGNyZWF0ZWQgZXJyb3IuXG4gKi9cbmZ1bmN0aW9uIENhbmNlbGVkRXJyb3IobWVzc2FnZSwgY29uZmlnLCByZXF1ZXN0KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lcS1udWxsLGVxZXFlcVxuICBBeGlvc0Vycm9yLmNhbGwodGhpcywgbWVzc2FnZSA9PSBudWxsID8gJ2NhbmNlbGVkJyA6IG1lc3NhZ2UsIEF4aW9zRXJyb3IuRVJSX0NBTkNFTEVELCBjb25maWcsIHJlcXVlc3QpO1xuICB0aGlzLm5hbWUgPSAnQ2FuY2VsZWRFcnJvcic7XG59XG5cbnV0aWxzLmluaGVyaXRzKENhbmNlbGVkRXJyb3IsIEF4aW9zRXJyb3IsIHtcbiAgX19DQU5DRUxfXzogdHJ1ZVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IENhbmNlbGVkRXJyb3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/isCancel.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/cancel/isCancel.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isCancel; }\n/* harmony export */ });\n\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRUU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcz83ZjVmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNDYW5jZWwodmFsdWUpIHtcbiAgcmV0dXJuICEhKHZhbHVlICYmIHZhbHVlLl9fQ0FOQ0VMX18pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/isCancel.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/Axios.js":
/*!*****************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/Axios.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/buildURL.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js\");\n/* harmony import */ var _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InterceptorManager.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/InterceptorManager.js\");\n/* harmony import */ var _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dispatchRequest.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/dispatchRequest.js\");\n/* harmony import */ var _mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mergeConfig.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./buildFullPath.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/validator.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/validator.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst validators = _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](),\n      response: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [_dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n    const fullPath = (0,_buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(config.baseURL, config.url);\n    return (0,_helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Axios);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/Axios.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosError);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3NFcnJvci5qcyIsIm1hcHBpbmdzIjoiOztBQUFhOztBQUVtQjs7QUFFaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlEQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaURBQUs7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLENBQUM7O0FBRUQ7QUFDQSxrREFBa0QsWUFBWTs7QUFFOUQ7QUFDQTtBQUNBOztBQUVBLEVBQUUsaURBQUs7QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQSwrREFBZSxVQUFVLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9BeGlvc0Vycm9yLmpzPzY1NzYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMuanMnO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgbWVzc2FnZSwgY29uZmlnLCBlcnJvciBjb2RlLCByZXF1ZXN0IGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBUaGUgZXJyb3IgbWVzc2FnZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW2NvbmZpZ10gVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgY3JlYXRlZCBlcnJvci5cbiAqL1xuZnVuY3Rpb24gQXhpb3NFcnJvcihtZXNzYWdlLCBjb2RlLCBjb25maWcsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIEVycm9yLmNhbGwodGhpcyk7XG5cbiAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgdGhpcy5jb25zdHJ1Y3Rvcik7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5zdGFjayA9IChuZXcgRXJyb3IoKSkuc3RhY2s7XG4gIH1cblxuICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICB0aGlzLm5hbWUgPSAnQXhpb3NFcnJvcic7XG4gIGNvZGUgJiYgKHRoaXMuY29kZSA9IGNvZGUpO1xuICBjb25maWcgJiYgKHRoaXMuY29uZmlnID0gY29uZmlnKTtcbiAgcmVxdWVzdCAmJiAodGhpcy5yZXF1ZXN0ID0gcmVxdWVzdCk7XG4gIHJlc3BvbnNlICYmICh0aGlzLnJlc3BvbnNlID0gcmVzcG9uc2UpO1xufVxuXG51dGlscy5pbmhlcml0cyhBeGlvc0Vycm9yLCBFcnJvciwge1xuICB0b0pTT046IGZ1bmN0aW9uIHRvSlNPTigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLy8gU3RhbmRhcmRcbiAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgIC8vIE1pY3Jvc29mdFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sXG4gICAgICBudW1iZXI6IHRoaXMubnVtYmVyLFxuICAgICAgLy8gTW96aWxsYVxuICAgICAgZmlsZU5hbWU6IHRoaXMuZmlsZU5hbWUsXG4gICAgICBsaW5lTnVtYmVyOiB0aGlzLmxpbmVOdW1iZXIsXG4gICAgICBjb2x1bW5OdW1iZXI6IHRoaXMuY29sdW1uTnVtYmVyLFxuICAgICAgc3RhY2s6IHRoaXMuc3RhY2ssXG4gICAgICAvLyBBeGlvc1xuICAgICAgY29uZmlnOiB1dGlscy50b0pTT05PYmplY3QodGhpcy5jb25maWcpLFxuICAgICAgY29kZTogdGhpcy5jb2RlLFxuICAgICAgc3RhdHVzOiB0aGlzLnJlc3BvbnNlICYmIHRoaXMucmVzcG9uc2Uuc3RhdHVzID8gdGhpcy5yZXNwb25zZS5zdGF0dXMgOiBudWxsXG4gICAgfTtcbiAgfVxufSk7XG5cbmNvbnN0IHByb3RvdHlwZSA9IEF4aW9zRXJyb3IucHJvdG90eXBlO1xuY29uc3QgZGVzY3JpcHRvcnMgPSB7fTtcblxuW1xuICAnRVJSX0JBRF9PUFRJT05fVkFMVUUnLFxuICAnRVJSX0JBRF9PUFRJT04nLFxuICAnRUNPTk5BQk9SVEVEJyxcbiAgJ0VUSU1FRE9VVCcsXG4gICdFUlJfTkVUV09SSycsXG4gICdFUlJfRlJfVE9PX01BTllfUkVESVJFQ1RTJyxcbiAgJ0VSUl9ERVBSRUNBVEVEJyxcbiAgJ0VSUl9CQURfUkVTUE9OU0UnLFxuICAnRVJSX0JBRF9SRVFVRVNUJyxcbiAgJ0VSUl9DQU5DRUxFRCcsXG4gICdFUlJfTk9UX1NVUFBPUlQnLFxuICAnRVJSX0lOVkFMSURfVVJMJ1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbl0uZm9yRWFjaChjb2RlID0+IHtcbiAgZGVzY3JpcHRvcnNbY29kZV0gPSB7dmFsdWU6IGNvZGV9O1xufSk7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKEF4aW9zRXJyb3IsIGRlc2NyaXB0b3JzKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90b3R5cGUsICdpc0F4aW9zRXJyb3InLCB7dmFsdWU6IHRydWV9KTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbkF4aW9zRXJyb3IuZnJvbSA9IChlcnJvciwgY29kZSwgY29uZmlnLCByZXF1ZXN0LCByZXNwb25zZSwgY3VzdG9tUHJvcHMpID0+IHtcbiAgY29uc3QgYXhpb3NFcnJvciA9IE9iamVjdC5jcmVhdGUocHJvdG90eXBlKTtcblxuICB1dGlscy50b0ZsYXRPYmplY3QoZXJyb3IsIGF4aW9zRXJyb3IsIGZ1bmN0aW9uIGZpbHRlcihvYmopIHtcbiAgICByZXR1cm4gb2JqICE9PSBFcnJvci5wcm90b3R5cGU7XG4gIH0sIHByb3AgPT4ge1xuICAgIHJldHVybiBwcm9wICE9PSAnaXNBeGlvc0Vycm9yJztcbiAgfSk7XG5cbiAgQXhpb3NFcnJvci5jYWxsKGF4aW9zRXJyb3IsIGVycm9yLm1lc3NhZ2UsIGNvZGUsIGNvbmZpZywgcmVxdWVzdCwgcmVzcG9uc2UpO1xuXG4gIGF4aW9zRXJyb3IuY2F1c2UgPSBlcnJvcjtcblxuICBheGlvc0Vycm9yLm5hbWUgPSBlcnJvci5uYW1lO1xuXG4gIGN1c3RvbVByb3BzICYmIE9iamVjdC5hc3NpZ24oYXhpb3NFcnJvciwgY3VzdG9tUHJvcHMpO1xuXG4gIHJldHVybiBheGlvc0Vycm9yO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXhpb3NFcnJvcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosHeaders.js":
/*!************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/AxiosHeaders.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/parseHeaders.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/parseHeaders.js\");\n\n\n\n\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(value)) return;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders((0,_helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(header), valueOrRewrite);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].freezeMethods(AxiosHeaders);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosHeaders);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosHeaders.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/InterceptorManager.js":
/*!******************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/InterceptorManager.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n\n\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (InterceptorManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7O0FBQWE7O0FBRXFCOztBQUVsQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFVBQVU7QUFDdkIsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsSUFBSSxpREFBSztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLCtEQUFlLGtCQUFrQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzPzM1YWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi8uLi91dGlscy5qcyc7XG5cbmNsYXNzIEludGVyY2VwdG9yTWFuYWdlciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaGFuZGxlcnMgPSBbXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bGZpbGxlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGB0aGVuYCBmb3IgYSBgUHJvbWlzZWBcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAgICpcbiAgICogQHJldHVybiB7TnVtYmVyfSBBbiBJRCB1c2VkIHRvIHJlbW92ZSBpbnRlcmNlcHRvciBsYXRlclxuICAgKi9cbiAgdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLmhhbmRsZXJzLnB1c2goe1xuICAgICAgZnVsZmlsbGVkLFxuICAgICAgcmVqZWN0ZWQsXG4gICAgICBzeW5jaHJvbm91czogb3B0aW9ucyA/IG9wdGlvbnMuc3luY2hyb25vdXMgOiBmYWxzZSxcbiAgICAgIHJ1bldoZW46IG9wdGlvbnMgPyBvcHRpb25zLnJ1bldoZW4gOiBudWxsXG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXMuaGFuZGxlcnMubGVuZ3RoIC0gMTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgYW4gaW50ZXJjZXB0b3IgZnJvbSB0aGUgc3RhY2tcbiAgICpcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGlkIFRoZSBJRCB0aGF0IHdhcyByZXR1cm5lZCBieSBgdXNlYFxuICAgKlxuICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gYHRydWVgIGlmIHRoZSBpbnRlcmNlcHRvciB3YXMgcmVtb3ZlZCwgYGZhbHNlYCBvdGhlcndpc2VcbiAgICovXG4gIGVqZWN0KGlkKSB7XG4gICAgaWYgKHRoaXMuaGFuZGxlcnNbaWRdKSB7XG4gICAgICB0aGlzLmhhbmRsZXJzW2lkXSA9IG51bGw7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIENsZWFyIGFsbCBpbnRlcmNlcHRvcnMgZnJvbSB0aGUgc3RhY2tcbiAgICpcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBjbGVhcigpIHtcbiAgICBpZiAodGhpcy5oYW5kbGVycykge1xuICAgICAgdGhpcy5oYW5kbGVycyA9IFtdO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICAgKlxuICAgKiBUaGlzIG1ldGhvZCBpcyBwYXJ0aWN1bGFybHkgdXNlZnVsIGZvciBza2lwcGluZyBvdmVyIGFueVxuICAgKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIGNhbGwgZm9yIGVhY2ggaW50ZXJjZXB0b3JcbiAgICpcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBmb3JFYWNoKGZuKSB7XG4gICAgdXRpbHMuZm9yRWFjaCh0aGlzLmhhbmRsZXJzLCBmdW5jdGlvbiBmb3JFYWNoSGFuZGxlcihoKSB7XG4gICAgICBpZiAoaCAhPT0gbnVsbCkge1xuICAgICAgICBmbihoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBJbnRlcmNlcHRvck1hbmFnZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/InterceptorManager.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ buildFullPath; }\n/* harmony export */ });\n/* harmony import */ var _helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/isAbsoluteURL.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/isAbsoluteURL.js\");\n/* harmony import */ var _helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/combineURLs.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/combineURLs.js\");\n\n\n\n\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !(0,_helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(requestedURL)) {\n    return (0,_helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFMkM7QUFDSjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDZTtBQUNmLGtCQUFrQixxRUFBYTtBQUMvQixXQUFXLG1FQUFXO0FBQ3RCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanM/YTAxMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCBpc0Fic29sdXRlVVJMIGZyb20gJy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcyc7XG5pbXBvcnQgY29tYmluZVVSTHMgZnJvbSAnLi4vaGVscGVycy9jb21iaW5lVVJMcy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBiYXNlVVJMIHdpdGggdGhlIHJlcXVlc3RlZFVSTCxcbiAqIG9ubHkgd2hlbiB0aGUgcmVxdWVzdGVkVVJMIGlzIG5vdCBhbHJlYWR5IGFuIGFic29sdXRlIFVSTC5cbiAqIElmIHRoZSByZXF1ZXN0VVJMIGlzIGFic29sdXRlLCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIHJlcXVlc3RlZFVSTCB1bnRvdWNoZWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVxdWVzdGVkVVJMIEFic29sdXRlIG9yIHJlbGF0aXZlIFVSTCB0byBjb21iaW5lXG4gKlxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIGZ1bGwgcGF0aFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBidWlsZEZ1bGxQYXRoKGJhc2VVUkwsIHJlcXVlc3RlZFVSTCkge1xuICBpZiAoYmFzZVVSTCAmJiAhaXNBYnNvbHV0ZVVSTChyZXF1ZXN0ZWRVUkwpKSB7XG4gICAgcmV0dXJuIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlcXVlc3RlZFVSTCk7XG4gIH1cbiAgcmV0dXJuIHJlcXVlc3RlZFVSTDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/dispatchRequest.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/dispatchRequest.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ dispatchRequest; }\n/* harmony export */ });\n/* harmony import */ var _transformData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transformData.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/transformData.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cancel/isCancel.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/index.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../adapters/adapters.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/adapters/adapters.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(config.headers);\n\n  // Transform request data\n  config.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getAdapter(config.adapter || _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!(0,_cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBYTs7QUFFa0M7QUFDRjtBQUNEO0FBQ1c7QUFDSjtBQUNKOztBQUUvQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWMsZ0VBQWE7QUFDM0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDZTtBQUNmOztBQUVBLG1CQUFtQiw2REFBWTs7QUFFL0I7QUFDQSxnQkFBZ0IseURBQWE7QUFDN0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsNkRBQVEsOEJBQThCLDBEQUFROztBQUVoRTtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CLHlEQUFhO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1Qiw2REFBWTs7QUFFbkM7QUFDQSxHQUFHO0FBQ0gsU0FBUywrREFBUTtBQUNqQjs7QUFFQTtBQUNBO0FBQ0EsK0JBQStCLHlEQUFhO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDZEQUFZO0FBQzlDO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanM/OTNmNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB0cmFuc2Zvcm1EYXRhIGZyb20gJy4vdHJhbnNmb3JtRGF0YS5qcyc7XG5pbXBvcnQgaXNDYW5jZWwgZnJvbSAnLi4vY2FuY2VsL2lzQ2FuY2VsLmpzJztcbmltcG9ydCBkZWZhdWx0cyBmcm9tICcuLi9kZWZhdWx0cy9pbmRleC5qcyc7XG5pbXBvcnQgQ2FuY2VsZWRFcnJvciBmcm9tICcuLi9jYW5jZWwvQ2FuY2VsZWRFcnJvci5qcyc7XG5pbXBvcnQgQXhpb3NIZWFkZXJzIGZyb20gJy4uL2NvcmUvQXhpb3NIZWFkZXJzLmpzJztcbmltcG9ydCBhZGFwdGVycyBmcm9tIFwiLi4vYWRhcHRlcnMvYWRhcHRlcnMuanNcIjtcblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsZWRFcnJvcmAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcgdGhhdCBpcyB0byBiZSB1c2VkIGZvciB0aGUgcmVxdWVzdFxuICpcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZykge1xuICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgY29uZmlnLmNhbmNlbFRva2VuLnRocm93SWZSZXF1ZXN0ZWQoKTtcbiAgfVxuXG4gIGlmIChjb25maWcuc2lnbmFsICYmIGNvbmZpZy5zaWduYWwuYWJvcnRlZCkge1xuICAgIHRocm93IG5ldyBDYW5jZWxlZEVycm9yKG51bGwsIGNvbmZpZyk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKlxuICogQHJldHVybnMge1Byb21pc2V9IFRoZSBQcm9taXNlIHRvIGJlIGZ1bGZpbGxlZFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaXNwYXRjaFJlcXVlc3QoY29uZmlnKSB7XG4gIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICBjb25maWcuaGVhZGVycyA9IEF4aW9zSGVhZGVycy5mcm9tKGNvbmZpZy5oZWFkZXJzKTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgIGNvbmZpZyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIGlmIChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10uaW5kZXhPZihjb25maWcubWV0aG9kKSAhPT0gLTEpIHtcbiAgICBjb25maWcuaGVhZGVycy5zZXRDb250ZW50VHlwZSgnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywgZmFsc2UpO1xuICB9XG5cbiAgY29uc3QgYWRhcHRlciA9IGFkYXB0ZXJzLmdldEFkYXB0ZXIoY29uZmlnLmFkYXB0ZXIgfHwgZGVmYXVsdHMuYWRhcHRlcik7XG5cbiAgcmV0dXJuIGFkYXB0ZXIoY29uZmlnKS50aGVuKGZ1bmN0aW9uIG9uQWRhcHRlclJlc29sdXRpb24ocmVzcG9uc2UpIHtcbiAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgIHJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhLmNhbGwoXG4gICAgICBjb25maWcsXG4gICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2UsXG4gICAgICByZXNwb25zZVxuICAgICk7XG5cbiAgICByZXNwb25zZS5oZWFkZXJzID0gQXhpb3NIZWFkZXJzLmZyb20ocmVzcG9uc2UuaGVhZGVycyk7XG5cbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH0sIGZ1bmN0aW9uIG9uQWRhcHRlclJlamVjdGlvbihyZWFzb24pIHtcbiAgICBpZiAoIWlzQ2FuY2VsKHJlYXNvbikpIHtcbiAgICAgIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAgICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICAgIGlmIChyZWFzb24gJiYgcmVhc29uLnJlc3BvbnNlKSB7XG4gICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2UsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlXG4gICAgICAgICk7XG4gICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzID0gQXhpb3NIZWFkZXJzLmZyb20ocmVhc29uLnJlc3BvbnNlLmhlYWRlcnMpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/dispatchRequest.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ mergeConfig; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\nconst headersToObject = (thing) => thing instanceof _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(target) && _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge.call({caseless}, target, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge({}, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRW1CO0FBQ2E7O0FBRTdDLG9EQUFvRCx3REFBWSxLQUFLLFdBQVc7O0FBRWhGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0EsUUFBUSxpREFBSywwQkFBMEIsaURBQUs7QUFDNUMsYUFBYSxpREFBSyxhQUFhLFNBQVM7QUFDeEMsTUFBTSxTQUFTLGlEQUFLO0FBQ3BCLGFBQWEsaURBQUssU0FBUztBQUMzQixNQUFNLFNBQVMsaURBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVMsaURBQUs7QUFDZDtBQUNBLE1BQU0sVUFBVSxpREFBSztBQUNyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVMsaURBQUs7QUFDZDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVMsaURBQUs7QUFDZDtBQUNBLE1BQU0sVUFBVSxpREFBSztBQUNyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsaURBQUsscUNBQXFDO0FBQzVDO0FBQ0E7QUFDQSxLQUFLLGlEQUFLO0FBQ1YsR0FBRzs7QUFFSDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanM/ZTc5YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscy5qcyc7XG5pbXBvcnQgQXhpb3NIZWFkZXJzIGZyb20gXCIuL0F4aW9zSGVhZGVycy5qc1wiO1xuXG5jb25zdCBoZWFkZXJzVG9PYmplY3QgPSAodGhpbmcpID0+IHRoaW5nIGluc3RhbmNlb2YgQXhpb3NIZWFkZXJzID8geyAuLi50aGluZyB9IDogdGhpbmc7XG5cbi8qKlxuICogQ29uZmlnLXNwZWNpZmljIG1lcmdlLWZ1bmN0aW9uIHdoaWNoIGNyZWF0ZXMgYSBuZXcgY29uZmlnLW9iamVjdFxuICogYnkgbWVyZ2luZyB0d28gY29uZmlndXJhdGlvbiBvYmplY3RzIHRvZ2V0aGVyLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcxXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnMlxuICpcbiAqIEByZXR1cm5zIHtPYmplY3R9IE5ldyBvYmplY3QgcmVzdWx0aW5nIGZyb20gbWVyZ2luZyBjb25maWcyIHRvIGNvbmZpZzFcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMSwgY29uZmlnMikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgY29uZmlnMiA9IGNvbmZpZzIgfHwge307XG4gIGNvbnN0IGNvbmZpZyA9IHt9O1xuXG4gIGZ1bmN0aW9uIGdldE1lcmdlZFZhbHVlKHRhcmdldCwgc291cmNlLCBjYXNlbGVzcykge1xuICAgIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHRhcmdldCkgJiYgdXRpbHMuaXNQbGFpbk9iamVjdChzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gdXRpbHMubWVyZ2UuY2FsbCh7Y2FzZWxlc3N9LCB0YXJnZXQsIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh7fSwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHNvdXJjZS5zbGljZSgpO1xuICAgIH1cbiAgICByZXR1cm4gc291cmNlO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIG1lcmdlRGVlcFByb3BlcnRpZXMoYSwgYiwgY2FzZWxlc3MpIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGIpKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUoYSwgYiwgY2FzZWxlc3MpO1xuICAgIH0gZWxzZSBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGEpKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBhLCBjYXNlbGVzcyk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIHZhbHVlRnJvbUNvbmZpZzIoYSwgYikge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoYikpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGIpO1xuICAgIH1cbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiBkZWZhdWx0VG9Db25maWcyKGEsIGIpIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGIpKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBiKTtcbiAgICB9IGVsc2UgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChhKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgYSk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIG1lcmdlRGlyZWN0S2V5cyhhLCBiLCBwcm9wKSB7XG4gICAgaWYgKHByb3AgaW4gY29uZmlnMikge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKGEsIGIpO1xuICAgIH0gZWxzZSBpZiAocHJvcCBpbiBjb25maWcxKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBhKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBtZXJnZU1hcCA9IHtcbiAgICB1cmw6IHZhbHVlRnJvbUNvbmZpZzIsXG4gICAgbWV0aG9kOiB2YWx1ZUZyb21Db25maWcyLFxuICAgIGRhdGE6IHZhbHVlRnJvbUNvbmZpZzIsXG4gICAgYmFzZVVSTDogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBkZWZhdWx0VG9Db25maWcyLFxuICAgIHRyYW5zZm9ybVJlc3BvbnNlOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIHBhcmFtc1NlcmlhbGl6ZXI6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgdGltZW91dDogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB0aW1lb3V0TWVzc2FnZTogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB3aXRoQ3JlZGVudGlhbHM6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgd2l0aFhTUkZUb2tlbjogZGVmYXVsdFRvQ29uZmlnMixcbiAgICBhZGFwdGVyOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIHJlc3BvbnNlVHlwZTogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB4c3JmQ29va2llTmFtZTogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB4c3JmSGVhZGVyTmFtZTogZGVmYXVsdFRvQ29uZmlnMixcbiAgICBvblVwbG9hZFByb2dyZXNzOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIG9uRG93bmxvYWRQcm9ncmVzczogZGVmYXVsdFRvQ29uZmlnMixcbiAgICBkZWNvbXByZXNzOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIG1heENvbnRlbnRMZW5ndGg6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgbWF4Qm9keUxlbmd0aDogZGVmYXVsdFRvQ29uZmlnMixcbiAgICBiZWZvcmVSZWRpcmVjdDogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB0cmFuc3BvcnQ6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgaHR0cEFnZW50OiBkZWZhdWx0VG9Db25maWcyLFxuICAgIGh0dHBzQWdlbnQ6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgY2FuY2VsVG9rZW46IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgc29ja2V0UGF0aDogZGVmYXVsdFRvQ29uZmlnMixcbiAgICByZXNwb25zZUVuY29kaW5nOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIHZhbGlkYXRlU3RhdHVzOiBtZXJnZURpcmVjdEtleXMsXG4gICAgaGVhZGVyczogKGEsIGIpID0+IG1lcmdlRGVlcFByb3BlcnRpZXMoaGVhZGVyc1RvT2JqZWN0KGEpLCBoZWFkZXJzVG9PYmplY3QoYiksIHRydWUpXG4gIH07XG5cbiAgdXRpbHMuZm9yRWFjaChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCBjb25maWcxLCBjb25maWcyKSksIGZ1bmN0aW9uIGNvbXB1dGVDb25maWdWYWx1ZShwcm9wKSB7XG4gICAgY29uc3QgbWVyZ2UgPSBtZXJnZU1hcFtwcm9wXSB8fCBtZXJnZURlZXBQcm9wZXJ0aWVzO1xuICAgIGNvbnN0IGNvbmZpZ1ZhbHVlID0gbWVyZ2UoY29uZmlnMVtwcm9wXSwgY29uZmlnMltwcm9wXSwgcHJvcCk7XG4gICAgKHV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZ1ZhbHVlKSAmJiBtZXJnZSAhPT0gbWVyZ2VEaXJlY3RLZXlzKSB8fCAoY29uZmlnW3Byb3BdID0gY29uZmlnVmFsdWUpO1xuICB9KTtcblxuICByZXR1cm4gY29uZmlnO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/settle.js":
/*!******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/settle.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ settle; }\n/* harmony export */ });\n/* harmony import */ var _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n      'Request failed with status code ' + response.status,\n      [_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_REQUEST, _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRTRCOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLGVBQWUsc0RBQVU7QUFDekI7QUFDQSxPQUFPLHNEQUFVLGtCQUFrQixzREFBVTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9zZXR0bGUuanM/ODg1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCBBeGlvc0Vycm9yIGZyb20gJy4vQXhpb3NFcnJvci5qcyc7XG5cbi8qKlxuICogUmVzb2x2ZSBvciByZWplY3QgYSBQcm9taXNlIGJhc2VkIG9uIHJlc3BvbnNlIHN0YXR1cy5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZXNvbHZlIEEgZnVuY3Rpb24gdGhhdCByZXNvbHZlcyB0aGUgcHJvbWlzZS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlamVjdCBBIGZ1bmN0aW9uIHRoYXQgcmVqZWN0cyB0aGUgcHJvbWlzZS5cbiAqIEBwYXJhbSB7b2JqZWN0fSByZXNwb25zZSBUaGUgcmVzcG9uc2UuXG4gKlxuICogQHJldHVybnMge29iamVjdH0gVGhlIHJlc3BvbnNlLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCByZXNwb25zZSkge1xuICBjb25zdCB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgaWYgKCFyZXNwb25zZS5zdGF0dXMgfHwgIXZhbGlkYXRlU3RhdHVzIHx8IHZhbGlkYXRlU3RhdHVzKHJlc3BvbnNlLnN0YXR1cykpIHtcbiAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgfSBlbHNlIHtcbiAgICByZWplY3QobmV3IEF4aW9zRXJyb3IoXG4gICAgICAnUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZSAnICsgcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgW0F4aW9zRXJyb3IuRVJSX0JBRF9SRVFVRVNULCBBeGlvc0Vycm9yLkVSUl9CQURfUkVTUE9OU0VdW01hdGguZmxvb3IocmVzcG9uc2Uuc3RhdHVzIC8gMTAwKSAtIDRdLFxuICAgICAgcmVzcG9uc2UuY29uZmlnLFxuICAgICAgcmVzcG9uc2UucmVxdWVzdCxcbiAgICAgIHJlc3BvbnNlXG4gICAgKSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/settle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/transformData.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/transformData.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ transformData; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../defaults/index.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n  const context = response || config;\n  const headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(context.headers);\n  let data = context.data;\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRXFCO0FBQ1U7QUFDTzs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0IsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsYUFBYSxHQUFHO0FBQ2hCO0FBQ2U7QUFDZix5QkFBeUIsMERBQVE7QUFDakM7QUFDQSxrQkFBa0IsNkRBQVk7QUFDOUI7O0FBRUEsRUFBRSxpREFBSztBQUNQO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcz84NTE2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4vLi4vdXRpbHMuanMnO1xuaW1wb3J0IGRlZmF1bHRzIGZyb20gJy4uL2RlZmF1bHRzL2luZGV4LmpzJztcbmltcG9ydCBBeGlvc0hlYWRlcnMgZnJvbSAnLi4vY29yZS9BeGlvc0hlYWRlcnMuanMnO1xuXG4vKipcbiAqIFRyYW5zZm9ybSB0aGUgZGF0YSBmb3IgYSByZXF1ZXN0IG9yIGEgcmVzcG9uc2VcbiAqXG4gKiBAcGFyYW0ge0FycmF5fEZ1bmN0aW9ufSBmbnMgQSBzaW5nbGUgZnVuY3Rpb24gb3IgQXJyYXkgb2YgZnVuY3Rpb25zXG4gKiBAcGFyYW0gez9PYmplY3R9IHJlc3BvbnNlIFRoZSByZXNwb25zZSBvYmplY3RcbiAqXG4gKiBAcmV0dXJucyB7Kn0gVGhlIHJlc3VsdGluZyB0cmFuc2Zvcm1lZCBkYXRhXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zZm9ybURhdGEoZm5zLCByZXNwb25zZSkge1xuICBjb25zdCBjb25maWcgPSB0aGlzIHx8IGRlZmF1bHRzO1xuICBjb25zdCBjb250ZXh0ID0gcmVzcG9uc2UgfHwgY29uZmlnO1xuICBjb25zdCBoZWFkZXJzID0gQXhpb3NIZWFkZXJzLmZyb20oY29udGV4dC5oZWFkZXJzKTtcbiAgbGV0IGRhdGEgPSBjb250ZXh0LmRhdGE7XG5cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbi5jYWxsKGNvbmZpZywgZGF0YSwgaGVhZGVycy5ub3JtYWxpemUoKSwgcmVzcG9uc2UgPyByZXNwb25zZS5zdGF0dXMgOiB1bmRlZmluZWQpO1xuICB9KTtcblxuICBoZWFkZXJzLm5vcm1hbGl6ZSgpO1xuXG4gIHJldHVybiBkYXRhO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/transformData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/defaults/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/defaults/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/AxiosError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _transitional_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transitional.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/toFormData.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/toURLEncodedForm.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/toURLEncodedForm.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../platform/index.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/formDataToJSON.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/formDataToJSON.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: _transitional_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(data);\n\n    if (isObjectPayload && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify((0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(data)) : data;\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isStream(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFile(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return (0,_helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return (0,_helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isResponse(data) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].from(e, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].classes.FormData,\n    Blob: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (defaults);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/defaults/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/defaults/transitional.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/defaults/transitional.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzL3RyYW5zaXRpb25hbC5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7O0FBRWIsK0RBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMvdHJhbnNpdGlvbmFsLmpzPzI5ODIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHNpbGVudEpTT05QYXJzaW5nOiB0cnVlLFxuICBmb3JjZWRKU09OUGFyc2luZzogdHJ1ZSxcbiAgY2xhcmlmeVRpbWVvdXRFcnJvcjogZmFsc2Vcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/defaults/transitional.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/env/data.js":
/*!***************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/env/data.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: function() { return /* binding */ VERSION; }\n/* harmony export */ });\nconst VERSION = \"1.7.4\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2Vudi9kYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9lbnYvZGF0YS5qcz80OWM1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBWRVJTSU9OID0gXCIxLjcuNFwiOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/env/data.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/AxiosURLSearchParams.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/AxiosURLSearchParams.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js\");\n\n\n\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosURLSearchParams);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvQXhpb3NVUkxTZWFyY2hQYXJhbXMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBYTs7QUFFNEI7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcscUJBQXFCO0FBQ2hDLFdBQVcscUJBQXFCO0FBQ2hDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLDBEQUFVO0FBQ3RCOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJOztBQUVKO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEsK0RBQWUsb0JBQW9CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9BeGlvc1VSTFNlYXJjaFBhcmFtcy5qcz9mOTgzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHRvRm9ybURhdGEgZnJvbSAnLi90b0Zvcm1EYXRhLmpzJztcblxuLyoqXG4gKiBJdCBlbmNvZGVzIGEgc3RyaW5nIGJ5IHJlcGxhY2luZyBhbGwgY2hhcmFjdGVycyB0aGF0IGFyZSBub3QgaW4gdGhlIHVucmVzZXJ2ZWQgc2V0IHdpdGhcbiAqIHRoZWlyIHBlcmNlbnQtZW5jb2RlZCBlcXVpdmFsZW50c1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHIgLSBUaGUgc3RyaW5nIHRvIGVuY29kZS5cbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZW5jb2RlZCBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIGVuY29kZShzdHIpIHtcbiAgY29uc3QgY2hhck1hcCA9IHtcbiAgICAnISc6ICclMjEnLFxuICAgIFwiJ1wiOiAnJTI3JyxcbiAgICAnKCc6ICclMjgnLFxuICAgICcpJzogJyUyOScsXG4gICAgJ34nOiAnJTdFJyxcbiAgICAnJTIwJzogJysnLFxuICAgICclMDAnOiAnXFx4MDAnXG4gIH07XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoc3RyKS5yZXBsYWNlKC9bIScoKX5dfCUyMHwlMDAvZywgZnVuY3Rpb24gcmVwbGFjZXIobWF0Y2gpIHtcbiAgICByZXR1cm4gY2hhck1hcFttYXRjaF07XG4gIH0pO1xufVxuXG4vKipcbiAqIEl0IHRha2VzIGEgcGFyYW1zIG9iamVjdCBhbmQgY29udmVydHMgaXQgdG8gYSBGb3JtRGF0YSBvYmplY3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdDxzdHJpbmcsIGFueT59IHBhcmFtcyAtIFRoZSBwYXJhbWV0ZXJzIHRvIGJlIGNvbnZlcnRlZCB0byBhIEZvcm1EYXRhIG9iamVjdC5cbiAqIEBwYXJhbSB7T2JqZWN0PHN0cmluZywgYW55Pn0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIG9iamVjdCBwYXNzZWQgdG8gdGhlIEF4aW9zIGNvbnN0cnVjdG9yLlxuICpcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiBBeGlvc1VSTFNlYXJjaFBhcmFtcyhwYXJhbXMsIG9wdGlvbnMpIHtcbiAgdGhpcy5fcGFpcnMgPSBbXTtcblxuICBwYXJhbXMgJiYgdG9Gb3JtRGF0YShwYXJhbXMsIHRoaXMsIG9wdGlvbnMpO1xufVxuXG5jb25zdCBwcm90b3R5cGUgPSBBeGlvc1VSTFNlYXJjaFBhcmFtcy5wcm90b3R5cGU7XG5cbnByb3RvdHlwZS5hcHBlbmQgPSBmdW5jdGlvbiBhcHBlbmQobmFtZSwgdmFsdWUpIHtcbiAgdGhpcy5fcGFpcnMucHVzaChbbmFtZSwgdmFsdWVdKTtcbn07XG5cbnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKGVuY29kZXIpIHtcbiAgY29uc3QgX2VuY29kZSA9IGVuY29kZXIgPyBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBlbmNvZGVyLmNhbGwodGhpcywgdmFsdWUsIGVuY29kZSk7XG4gIH0gOiBlbmNvZGU7XG5cbiAgcmV0dXJuIHRoaXMuX3BhaXJzLm1hcChmdW5jdGlvbiBlYWNoKHBhaXIpIHtcbiAgICByZXR1cm4gX2VuY29kZShwYWlyWzBdKSArICc9JyArIF9lbmNvZGUocGFpclsxXSk7XG4gIH0sICcnKS5qb2luKCcmJyk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBeGlvc1VSTFNlYXJjaFBhcmFtcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/AxiosURLSearchParams.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/HttpStatusCode.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/HttpStatusCode.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (HttpStatusCode);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvSHR0cFN0YXR1c0NvZGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQsK0RBQWUsY0FBYyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvSHR0cFN0YXR1c0NvZGUuanM/N2E2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBIdHRwU3RhdHVzQ29kZSA9IHtcbiAgQ29udGludWU6IDEwMCxcbiAgU3dpdGNoaW5nUHJvdG9jb2xzOiAxMDEsXG4gIFByb2Nlc3Npbmc6IDEwMixcbiAgRWFybHlIaW50czogMTAzLFxuICBPazogMjAwLFxuICBDcmVhdGVkOiAyMDEsXG4gIEFjY2VwdGVkOiAyMDIsXG4gIE5vbkF1dGhvcml0YXRpdmVJbmZvcm1hdGlvbjogMjAzLFxuICBOb0NvbnRlbnQ6IDIwNCxcbiAgUmVzZXRDb250ZW50OiAyMDUsXG4gIFBhcnRpYWxDb250ZW50OiAyMDYsXG4gIE11bHRpU3RhdHVzOiAyMDcsXG4gIEFscmVhZHlSZXBvcnRlZDogMjA4LFxuICBJbVVzZWQ6IDIyNixcbiAgTXVsdGlwbGVDaG9pY2VzOiAzMDAsXG4gIE1vdmVkUGVybWFuZW50bHk6IDMwMSxcbiAgRm91bmQ6IDMwMixcbiAgU2VlT3RoZXI6IDMwMyxcbiAgTm90TW9kaWZpZWQ6IDMwNCxcbiAgVXNlUHJveHk6IDMwNSxcbiAgVW51c2VkOiAzMDYsXG4gIFRlbXBvcmFyeVJlZGlyZWN0OiAzMDcsXG4gIFBlcm1hbmVudFJlZGlyZWN0OiAzMDgsXG4gIEJhZFJlcXVlc3Q6IDQwMCxcbiAgVW5hdXRob3JpemVkOiA0MDEsXG4gIFBheW1lbnRSZXF1aXJlZDogNDAyLFxuICBGb3JiaWRkZW46IDQwMyxcbiAgTm90Rm91bmQ6IDQwNCxcbiAgTWV0aG9kTm90QWxsb3dlZDogNDA1LFxuICBOb3RBY2NlcHRhYmxlOiA0MDYsXG4gIFByb3h5QXV0aGVudGljYXRpb25SZXF1aXJlZDogNDA3LFxuICBSZXF1ZXN0VGltZW91dDogNDA4LFxuICBDb25mbGljdDogNDA5LFxuICBHb25lOiA0MTAsXG4gIExlbmd0aFJlcXVpcmVkOiA0MTEsXG4gIFByZWNvbmRpdGlvbkZhaWxlZDogNDEyLFxuICBQYXlsb2FkVG9vTGFyZ2U6IDQxMyxcbiAgVXJpVG9vTG9uZzogNDE0LFxuICBVbnN1cHBvcnRlZE1lZGlhVHlwZTogNDE1LFxuICBSYW5nZU5vdFNhdGlzZmlhYmxlOiA0MTYsXG4gIEV4cGVjdGF0aW9uRmFpbGVkOiA0MTcsXG4gIEltQVRlYXBvdDogNDE4LFxuICBNaXNkaXJlY3RlZFJlcXVlc3Q6IDQyMSxcbiAgVW5wcm9jZXNzYWJsZUVudGl0eTogNDIyLFxuICBMb2NrZWQ6IDQyMyxcbiAgRmFpbGVkRGVwZW5kZW5jeTogNDI0LFxuICBUb29FYXJseTogNDI1LFxuICBVcGdyYWRlUmVxdWlyZWQ6IDQyNixcbiAgUHJlY29uZGl0aW9uUmVxdWlyZWQ6IDQyOCxcbiAgVG9vTWFueVJlcXVlc3RzOiA0MjksXG4gIFJlcXVlc3RIZWFkZXJGaWVsZHNUb29MYXJnZTogNDMxLFxuICBVbmF2YWlsYWJsZUZvckxlZ2FsUmVhc29uczogNDUxLFxuICBJbnRlcm5hbFNlcnZlckVycm9yOiA1MDAsXG4gIE5vdEltcGxlbWVudGVkOiA1MDEsXG4gIEJhZEdhdGV3YXk6IDUwMixcbiAgU2VydmljZVVuYXZhaWxhYmxlOiA1MDMsXG4gIEdhdGV3YXlUaW1lb3V0OiA1MDQsXG4gIEh0dHBWZXJzaW9uTm90U3VwcG9ydGVkOiA1MDUsXG4gIFZhcmlhbnRBbHNvTmVnb3RpYXRlczogNTA2LFxuICBJbnN1ZmZpY2llbnRTdG9yYWdlOiA1MDcsXG4gIExvb3BEZXRlY3RlZDogNTA4LFxuICBOb3RFeHRlbmRlZDogNTEwLFxuICBOZXR3b3JrQXV0aGVudGljYXRpb25SZXF1aXJlZDogNTExLFxufTtcblxuT2JqZWN0LmVudHJpZXMoSHR0cFN0YXR1c0NvZGUpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICBIdHRwU3RhdHVzQ29kZVt2YWx1ZV0gPSBrZXk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgSHR0cFN0YXR1c0NvZGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/HttpStatusCode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/bind.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/bind.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ bind; }\n/* harmony export */ });\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRUU7QUFDZjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanM/ODNiYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoaXNBcmcsIGFyZ3VtZW50cyk7XG4gIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/bind.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ buildURL; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/AxiosURLSearchParams.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(params) ?\n      params.toString() :\n      new _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRW1CO0FBQ3NDOztBQUV0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osdUJBQXVCLGlEQUFLO0FBQzVCO0FBQ0EsVUFBVSx3RUFBb0I7QUFDOUI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9idWlsZFVSTC5qcz9lZmU1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCBBeGlvc1VSTFNlYXJjaFBhcmFtcyBmcm9tICcuLi9oZWxwZXJzL0F4aW9zVVJMU2VhcmNoUGFyYW1zLmpzJztcblxuLyoqXG4gKiBJdCByZXBsYWNlcyBhbGwgaW5zdGFuY2VzIG9mIHRoZSBjaGFyYWN0ZXJzIGA6YCwgYCRgLCBgLGAsIGArYCwgYFtgLCBhbmQgYF1gIHdpdGggdGhlaXJcbiAqIFVSSSBlbmNvZGVkIGNvdW50ZXJwYXJ0c1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWwgVGhlIHZhbHVlIHRvIGJlIGVuY29kZWQuXG4gKlxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGVuY29kZWQgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcGFyYW0gez9vYmplY3R9IG9wdGlvbnNcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBidWlsZFVSTCh1cmwsIHBhcmFtcywgb3B0aW9ucykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgaWYgKCFwYXJhbXMpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG4gIFxuICBjb25zdCBfZW5jb2RlID0gb3B0aW9ucyAmJiBvcHRpb25zLmVuY29kZSB8fCBlbmNvZGU7XG5cbiAgY29uc3Qgc2VyaWFsaXplRm4gPSBvcHRpb25zICYmIG9wdGlvbnMuc2VyaWFsaXplO1xuXG4gIGxldCBzZXJpYWxpemVkUGFyYW1zO1xuXG4gIGlmIChzZXJpYWxpemVGbikge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBzZXJpYWxpemVGbihwYXJhbXMsIG9wdGlvbnMpO1xuICB9IGVsc2Uge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSB1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhwYXJhbXMpID9cbiAgICAgIHBhcmFtcy50b1N0cmluZygpIDpcbiAgICAgIG5ldyBBeGlvc1VSTFNlYXJjaFBhcmFtcyhwYXJhbXMsIG9wdGlvbnMpLnRvU3RyaW5nKF9lbmNvZGUpO1xuICB9XG5cbiAgaWYgKHNlcmlhbGl6ZWRQYXJhbXMpIHtcbiAgICBjb25zdCBoYXNobWFya0luZGV4ID0gdXJsLmluZGV4T2YoXCIjXCIpO1xuXG4gICAgaWYgKGhhc2htYXJrSW5kZXggIT09IC0xKSB7XG4gICAgICB1cmwgPSB1cmwuc2xpY2UoMCwgaGFzaG1hcmtJbmRleCk7XG4gICAgfVxuICAgIHVybCArPSAodXJsLmluZGV4T2YoJz8nKSA9PT0gLTEgPyAnPycgOiAnJicpICsgc2VyaWFsaXplZFBhcmFtcztcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/combineURLs.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/combineURLs.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ combineURLs; }\n/* harmony export */ });\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanM/ZWZkOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBzcGVjaWZpZWQgVVJMc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVVJMIFRoZSByZWxhdGl2ZSBVUkxcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgVVJMXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlbGF0aXZlVVJMKSB7XG4gIHJldHVybiByZWxhdGl2ZVVSTFxuICAgID8gYmFzZVVSTC5yZXBsYWNlKC9cXC8/XFwvJC8sICcnKSArICcvJyArIHJlbGF0aXZlVVJMLnJlcGxhY2UoL15cXC8rLywgJycpXG4gICAgOiBiYXNlVVJMO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/combineURLs.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/composeSignals.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/composeSignals.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n\n\n\nconst composeSignals = (signals, timeout) => {\n  let controller = new AbortController();\n\n  let aborted;\n\n  const onabort = function (cancel) {\n    if (!aborted) {\n      aborted = true;\n      unsubscribe();\n      const err = cancel instanceof Error ? cancel : this.reason;\n      controller.abort(err instanceof _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? err : new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](err instanceof Error ? err.message : err));\n    }\n  }\n\n  let timer = timeout && setTimeout(() => {\n    onabort(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](`timeout ${timeout} of ms exceeded`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ETIMEDOUT))\n  }, timeout)\n\n  const unsubscribe = () => {\n    if (signals) {\n      timer && clearTimeout(timer);\n      timer = null;\n      signals.forEach(signal => {\n        signal &&\n        (signal.removeEventListener ? signal.removeEventListener('abort', onabort) : signal.unsubscribe(onabort));\n      });\n      signals = null;\n    }\n  }\n\n  signals.forEach((signal) => signal && signal.addEventListener && signal.addEventListener('abort', onabort));\n\n  const {signal} = controller;\n\n  signal.unsubscribe = unsubscribe;\n\n  return [signal, () => {\n    timer && clearTimeout(timer);\n    timer = null;\n  }];\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (composeSignals);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tcG9zZVNpZ25hbHMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXVEO0FBQ1I7O0FBRS9DO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQywyREFBVSxhQUFhLGdFQUFhO0FBQzFFO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsMkRBQVUsWUFBWSxTQUFTLGlCQUFpQiwyREFBVTtBQUMxRSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxTQUFTLFFBQVE7O0FBRWpCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSwrREFBZSxjQUFjLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21wb3NlU2lnbmFscy5qcz80YjM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDYW5jZWxlZEVycm9yIGZyb20gXCIuLi9jYW5jZWwvQ2FuY2VsZWRFcnJvci5qc1wiO1xuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSBcIi4uL2NvcmUvQXhpb3NFcnJvci5qc1wiO1xuXG5jb25zdCBjb21wb3NlU2lnbmFscyA9IChzaWduYWxzLCB0aW1lb3V0KSA9PiB7XG4gIGxldCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuXG4gIGxldCBhYm9ydGVkO1xuXG4gIGNvbnN0IG9uYWJvcnQgPSBmdW5jdGlvbiAoY2FuY2VsKSB7XG4gICAgaWYgKCFhYm9ydGVkKSB7XG4gICAgICBhYm9ydGVkID0gdHJ1ZTtcbiAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICBjb25zdCBlcnIgPSBjYW5jZWwgaW5zdGFuY2VvZiBFcnJvciA/IGNhbmNlbCA6IHRoaXMucmVhc29uO1xuICAgICAgY29udHJvbGxlci5hYm9ydChlcnIgaW5zdGFuY2VvZiBBeGlvc0Vycm9yID8gZXJyIDogbmV3IENhbmNlbGVkRXJyb3IoZXJyIGluc3RhbmNlb2YgRXJyb3IgPyBlcnIubWVzc2FnZSA6IGVycikpO1xuICAgIH1cbiAgfVxuXG4gIGxldCB0aW1lciA9IHRpbWVvdXQgJiYgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgb25hYm9ydChuZXcgQXhpb3NFcnJvcihgdGltZW91dCAke3RpbWVvdXR9IG9mIG1zIGV4Y2VlZGVkYCwgQXhpb3NFcnJvci5FVElNRURPVVQpKVxuICB9LCB0aW1lb3V0KVxuXG4gIGNvbnN0IHVuc3Vic2NyaWJlID0gKCkgPT4ge1xuICAgIGlmIChzaWduYWxzKSB7XG4gICAgICB0aW1lciAmJiBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgdGltZXIgPSBudWxsO1xuICAgICAgc2lnbmFscy5mb3JFYWNoKHNpZ25hbCA9PiB7XG4gICAgICAgIHNpZ25hbCAmJlxuICAgICAgICAoc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIgPyBzaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbmFib3J0KSA6IHNpZ25hbC51bnN1YnNjcmliZShvbmFib3J0KSk7XG4gICAgICB9KTtcbiAgICAgIHNpZ25hbHMgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIHNpZ25hbHMuZm9yRWFjaCgoc2lnbmFsKSA9PiBzaWduYWwgJiYgc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIgJiYgc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0Jywgb25hYm9ydCkpO1xuXG4gIGNvbnN0IHtzaWduYWx9ID0gY29udHJvbGxlcjtcblxuICBzaWduYWwudW5zdWJzY3JpYmUgPSB1bnN1YnNjcmliZTtcblxuICByZXR1cm4gW3NpZ25hbCwgKCkgPT4ge1xuICAgIHRpbWVyICYmIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgdGltZXIgPSBudWxsO1xuICB9XTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29tcG9zZVNpZ25hbHM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/composeSignals.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/cookies.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/cookies.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/index.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(path) && cookie.push('path=' + path);\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBa0M7QUFDVTs7QUFFNUMsK0RBQWUsMERBQVE7O0FBRXZCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU0saURBQUs7O0FBRVgsTUFBTSxpREFBSzs7QUFFWCxNQUFNLGlEQUFLOztBQUVYOztBQUVBLHVDQUF1QztBQUN2QyxLQUFLOztBQUVMO0FBQ0EsMERBQTBELHdCQUF3QjtBQUNsRjtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcz9iYzFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB1dGlscyBmcm9tICcuLy4uL3V0aWxzLmpzJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuLi9wbGF0Zm9ybS9pbmRleC5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IHBsYXRmb3JtLmhhc1N0YW5kYXJkQnJvd3NlckVudiA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gIHtcbiAgICB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgIGNvbnN0IGNvb2tpZSA9IFtuYW1lICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKV07XG5cbiAgICAgIHV0aWxzLmlzTnVtYmVyKGV4cGlyZXMpICYmIGNvb2tpZS5wdXNoKCdleHBpcmVzPScgKyBuZXcgRGF0ZShleHBpcmVzKS50b0dNVFN0cmluZygpKTtcblxuICAgICAgdXRpbHMuaXNTdHJpbmcocGF0aCkgJiYgY29va2llLnB1c2goJ3BhdGg9JyArIHBhdGgpO1xuXG4gICAgICB1dGlscy5pc1N0cmluZyhkb21haW4pICYmIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG5cbiAgICAgIHNlY3VyZSA9PT0gdHJ1ZSAmJiBjb29raWUucHVzaCgnc2VjdXJlJyk7XG5cbiAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5qb2luKCc7ICcpO1xuICAgIH0sXG5cbiAgICByZWFkKG5hbWUpIHtcbiAgICAgIGNvbnN0IG1hdGNoID0gZG9jdW1lbnQuY29va2llLm1hdGNoKG5ldyBSZWdFeHAoJyhefDtcXFxccyopKCcgKyBuYW1lICsgJyk9KFteO10qKScpKTtcbiAgICAgIHJldHVybiAobWF0Y2ggPyBkZWNvZGVVUklDb21wb25lbnQobWF0Y2hbM10pIDogbnVsbCk7XG4gICAgfSxcblxuICAgIHJlbW92ZShuYW1lKSB7XG4gICAgICB0aGlzLndyaXRlKG5hbWUsICcnLCBEYXRlLm5vdygpIC0gODY0MDAwMDApO1xuICAgIH1cbiAgfVxuXG4gIDpcblxuICAvLyBOb24tc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gIHtcbiAgICB3cml0ZSgpIHt9LFxuICAgIHJlYWQoKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9LFxuICAgIHJlbW92ZSgpIHt9XG4gIH07XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/cookies.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/formDataToJSON.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/formDataToJSON.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(formData) && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(formData.entries)) {\n    const obj = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (formDataToJSON);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvZm9ybURhdGFUb0pTT04uanMiLCJtYXBwaW5ncyI6Ijs7QUFBYTs7QUFFbUI7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxpREFBSztBQUNkO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFNBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLDRCQUE0QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLGlEQUFLOztBQUV6QjtBQUNBLFVBQVUsaURBQUs7QUFDZjtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsMEJBQTBCLGlEQUFLO0FBQy9CO0FBQ0E7O0FBRUE7O0FBRUEsa0JBQWtCLGlEQUFLO0FBQ3ZCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxNQUFNLGlEQUFLLHlCQUF5QixpREFBSztBQUN6Qzs7QUFFQSxJQUFJLGlEQUFLO0FBQ1Q7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSwrREFBZSxjQUFjLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9mb3JtRGF0YVRvSlNPTi5qcz9kMjA5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcblxuLyoqXG4gKiBJdCB0YWtlcyBhIHN0cmluZyBsaWtlIGBmb29beF1beV1bel1gIGFuZCByZXR1cm5zIGFuIGFycmF5IGxpa2UgYFsnZm9vJywgJ3gnLCAneScsICd6J11cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKlxuICogQHJldHVybnMgQW4gYXJyYXkgb2Ygc3RyaW5ncy5cbiAqL1xuZnVuY3Rpb24gcGFyc2VQcm9wUGF0aChuYW1lKSB7XG4gIC8vIGZvb1t4XVt5XVt6XVxuICAvLyBmb28ueC55LnpcbiAgLy8gZm9vLXgteS16XG4gIC8vIGZvbyB4IHkgelxuICByZXR1cm4gdXRpbHMubWF0Y2hBbGwoL1xcdyt8XFxbKFxcdyopXS9nLCBuYW1lKS5tYXAobWF0Y2ggPT4ge1xuICAgIHJldHVybiBtYXRjaFswXSA9PT0gJ1tdJyA/ICcnIDogbWF0Y2hbMV0gfHwgbWF0Y2hbMF07XG4gIH0pO1xufVxuXG4vKipcbiAqIENvbnZlcnQgYW4gYXJyYXkgdG8gYW4gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7QXJyYXk8YW55Pn0gYXJyIC0gVGhlIGFycmF5IHRvIGNvbnZlcnQgdG8gYW4gb2JqZWN0LlxuICpcbiAqIEByZXR1cm5zIEFuIG9iamVjdCB3aXRoIHRoZSBzYW1lIGtleXMgYW5kIHZhbHVlcyBhcyB0aGUgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9PYmplY3QoYXJyKSB7XG4gIGNvbnN0IG9iaiA9IHt9O1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoYXJyKTtcbiAgbGV0IGk7XG4gIGNvbnN0IGxlbiA9IGtleXMubGVuZ3RoO1xuICBsZXQga2V5O1xuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICBrZXkgPSBrZXlzW2ldO1xuICAgIG9ialtrZXldID0gYXJyW2tleV07XG4gIH1cbiAgcmV0dXJuIG9iajtcbn1cblxuLyoqXG4gKiBJdCB0YWtlcyBhIEZvcm1EYXRhIG9iamVjdCBhbmQgcmV0dXJucyBhIEphdmFTY3JpcHQgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGZvcm1EYXRhIFRoZSBGb3JtRGF0YSBvYmplY3QgdG8gY29udmVydCB0byBKU09OLlxuICpcbiAqIEByZXR1cm5zIHtPYmplY3Q8c3RyaW5nLCBhbnk+IHwgbnVsbH0gVGhlIGNvbnZlcnRlZCBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIGZvcm1EYXRhVG9KU09OKGZvcm1EYXRhKSB7XG4gIGZ1bmN0aW9uIGJ1aWxkUGF0aChwYXRoLCB2YWx1ZSwgdGFyZ2V0LCBpbmRleCkge1xuICAgIGxldCBuYW1lID0gcGF0aFtpbmRleCsrXTtcblxuICAgIGlmIChuYW1lID09PSAnX19wcm90b19fJykgcmV0dXJuIHRydWU7XG5cbiAgICBjb25zdCBpc051bWVyaWNLZXkgPSBOdW1iZXIuaXNGaW5pdGUoK25hbWUpO1xuICAgIGNvbnN0IGlzTGFzdCA9IGluZGV4ID49IHBhdGgubGVuZ3RoO1xuICAgIG5hbWUgPSAhbmFtZSAmJiB1dGlscy5pc0FycmF5KHRhcmdldCkgPyB0YXJnZXQubGVuZ3RoIDogbmFtZTtcblxuICAgIGlmIChpc0xhc3QpIHtcbiAgICAgIGlmICh1dGlscy5oYXNPd25Qcm9wKHRhcmdldCwgbmFtZSkpIHtcbiAgICAgICAgdGFyZ2V0W25hbWVdID0gW3RhcmdldFtuYW1lXSwgdmFsdWVdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFyZ2V0W25hbWVdID0gdmFsdWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAhaXNOdW1lcmljS2V5O1xuICAgIH1cblxuICAgIGlmICghdGFyZ2V0W25hbWVdIHx8ICF1dGlscy5pc09iamVjdCh0YXJnZXRbbmFtZV0pKSB7XG4gICAgICB0YXJnZXRbbmFtZV0gPSBbXTtcbiAgICB9XG5cbiAgICBjb25zdCByZXN1bHQgPSBidWlsZFBhdGgocGF0aCwgdmFsdWUsIHRhcmdldFtuYW1lXSwgaW5kZXgpO1xuXG4gICAgaWYgKHJlc3VsdCAmJiB1dGlscy5pc0FycmF5KHRhcmdldFtuYW1lXSkpIHtcbiAgICAgIHRhcmdldFtuYW1lXSA9IGFycmF5VG9PYmplY3QodGFyZ2V0W25hbWVdKTtcbiAgICB9XG5cbiAgICByZXR1cm4gIWlzTnVtZXJpY0tleTtcbiAgfVxuXG4gIGlmICh1dGlscy5pc0Zvcm1EYXRhKGZvcm1EYXRhKSAmJiB1dGlscy5pc0Z1bmN0aW9uKGZvcm1EYXRhLmVudHJpZXMpKSB7XG4gICAgY29uc3Qgb2JqID0ge307XG5cbiAgICB1dGlscy5mb3JFYWNoRW50cnkoZm9ybURhdGEsIChuYW1lLCB2YWx1ZSkgPT4ge1xuICAgICAgYnVpbGRQYXRoKHBhcnNlUHJvcFBhdGgobmFtZSksIHZhbHVlLCBvYmosIDApO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIG9iajtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmb3JtRGF0YVRvSlNPTjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/formDataToJSON.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isAbsoluteURL; }\n/* harmony export */ });\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcz82NTY4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBVUkwgdG8gdGVzdFxuICpcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBzcGVjaWZpZWQgVVJMIGlzIGFic29sdXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNBYnNvbHV0ZVVSTCh1cmwpIHtcbiAgLy8gQSBVUkwgaXMgY29uc2lkZXJlZCBhYnNvbHV0ZSBpZiBpdCBiZWdpbnMgd2l0aCBcIjxzY2hlbWU+Oi8vXCIgb3IgXCIvL1wiIChwcm90b2NvbC1yZWxhdGl2ZSBVUkwpLlxuICAvLyBSRkMgMzk4NiBkZWZpbmVzIHNjaGVtZSBuYW1lIGFzIGEgc2VxdWVuY2Ugb2YgY2hhcmFjdGVycyBiZWdpbm5pbmcgd2l0aCBhIGxldHRlciBhbmQgZm9sbG93ZWRcbiAgLy8gYnkgYW55IGNvbWJpbmF0aW9uIG9mIGxldHRlcnMsIGRpZ2l0cywgcGx1cywgcGVyaW9kLCBvciBoeXBoZW4uXG4gIHJldHVybiAvXihbYS16XVthLXpcXGQrXFwtLl0qOik/XFwvXFwvL2kudGVzdCh1cmwpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/isAbsoluteURL.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/isAxiosError.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/isAxiosError.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isAxiosError; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(payload) && (payload.isAxiosError === true);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRXFCOztBQUVsQztBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZDtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNlO0FBQ2YsU0FBUyxpREFBSztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzP2YwMjgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi8uLi91dGlscy5qcyc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvc1xuICpcbiAqIEBwYXJhbSB7Kn0gcGF5bG9hZCBUaGUgdmFsdWUgdG8gdGVzdFxuICpcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvcywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzQXhpb3NFcnJvcihwYXlsb2FkKSB7XG4gIHJldHVybiB1dGlscy5pc09iamVjdChwYXlsb2FkKSAmJiAocGF5bG9hZC5pc0F4aW9zRXJyb3IgPT09IHRydWUpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/isAxiosError.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!******************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/index.js\");\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzIiwibWFwcGluZ3MiOiI7OztBQUFhOztBQUVxQjtBQUNVOztBQUU1QywrREFBZSwwREFBUTs7QUFFdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTtBQUNBLHNCQUFzQixpREFBSztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLEdBQUcsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcz9iOTBkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4vLi4vdXRpbHMuanMnO1xuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uL3BsYXRmb3JtL2luZGV4LmpzJztcblxuZXhwb3J0IGRlZmF1bHQgcGxhdGZvcm0uaGFzU3RhbmRhcmRCcm93c2VyRW52ID9cblxuLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIGhhdmUgZnVsbCBzdXBwb3J0IG9mIHRoZSBBUElzIG5lZWRlZCB0byB0ZXN0XG4vLyB3aGV0aGVyIHRoZSByZXF1ZXN0IFVSTCBpcyBvZiB0aGUgc2FtZSBvcmlnaW4gYXMgY3VycmVudCBsb2NhdGlvbi5cbiAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICBjb25zdCBtc2llID0gLyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICBjb25zdCB1cmxQYXJzaW5nTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICBsZXQgb3JpZ2luVVJMO1xuXG4gICAgLyoqXG4gICAgKiBQYXJzZSBhIFVSTCB0byBkaXNjb3ZlciBpdHMgY29tcG9uZW50c1xuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgVGhlIFVSTCB0byBiZSBwYXJzZWRcbiAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgKi9cbiAgICBmdW5jdGlvbiByZXNvbHZlVVJMKHVybCkge1xuICAgICAgbGV0IGhyZWYgPSB1cmw7XG5cbiAgICAgIGlmIChtc2llKSB7XG4gICAgICAgIC8vIElFIG5lZWRzIGF0dHJpYnV0ZSBzZXQgdHdpY2UgdG8gbm9ybWFsaXplIHByb3BlcnRpZXNcbiAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG4gICAgICAgIGhyZWYgPSB1cmxQYXJzaW5nTm9kZS5ocmVmO1xuICAgICAgfVxuXG4gICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcblxuICAgICAgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlsc1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaHJlZjogdXJsUGFyc2luZ05vZGUuaHJlZixcbiAgICAgICAgcHJvdG9jb2w6IHVybFBhcnNpbmdOb2RlLnByb3RvY29sID8gdXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCAnJykgOiAnJyxcbiAgICAgICAgaG9zdDogdXJsUGFyc2luZ05vZGUuaG9zdCxcbiAgICAgICAgc2VhcmNoOiB1cmxQYXJzaW5nTm9kZS5zZWFyY2ggPyB1cmxQYXJzaW5nTm9kZS5zZWFyY2gucmVwbGFjZSgvXlxcPy8sICcnKSA6ICcnLFxuICAgICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLFxuICAgICAgICBob3N0bmFtZTogdXJsUGFyc2luZ05vZGUuaG9zdG5hbWUsXG4gICAgICAgIHBvcnQ6IHVybFBhcnNpbmdOb2RlLnBvcnQsXG4gICAgICAgIHBhdGhuYW1lOiAodXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpID9cbiAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZSA6XG4gICAgICAgICAgJy8nICsgdXJsUGFyc2luZ05vZGUucGF0aG5hbWVcbiAgICAgIH07XG4gICAgfVxuXG4gICAgb3JpZ2luVVJMID0gcmVzb2x2ZVVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG5cbiAgICAvKipcbiAgICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0XG4gICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgKi9cbiAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKHJlcXVlc3RVUkwpIHtcbiAgICAgIGNvbnN0IHBhcnNlZCA9ICh1dGlscy5pc1N0cmluZyhyZXF1ZXN0VVJMKSkgPyByZXNvbHZlVVJMKHJlcXVlc3RVUkwpIDogcmVxdWVzdFVSTDtcbiAgICAgIHJldHVybiAocGFyc2VkLnByb3RvY29sID09PSBvcmlnaW5VUkwucHJvdG9jb2wgJiZcbiAgICAgICAgICBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3QpO1xuICAgIH07XG4gIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudnMgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbigpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG4gIH0pKCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/isURLSameOrigin.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/null.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/null.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n// eslint-disable-next-line strict\n/* harmony default export */ __webpack_exports__[\"default\"] = (null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbnVsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQSwrREFBZSxJQUFJLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9udWxsLmpzP2ZhMjciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHN0cmljdFxuZXhwb3J0IGRlZmF1bHQgbnVsbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/null.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/parseHeaders.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/parseHeaders.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n\n\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = (rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7O0FBQWE7O0FBRXFCOztBQUVsQztBQUNBO0FBQ0EsMEJBQTBCLGlEQUFLO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQSwrREFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlSGVhZGVycy5qcz85MWYwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4vLi4vdXRpbHMuanMnO1xuXG4vLyBSYXdBeGlvc0hlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG5jb25zdCBpZ25vcmVEdXBsaWNhdGVPZiA9IHV0aWxzLnRvT2JqZWN0U2V0KFtcbiAgJ2FnZScsICdhdXRob3JpemF0aW9uJywgJ2NvbnRlbnQtbGVuZ3RoJywgJ2NvbnRlbnQtdHlwZScsICdldGFnJyxcbiAgJ2V4cGlyZXMnLCAnZnJvbScsICdob3N0JywgJ2lmLW1vZGlmaWVkLXNpbmNlJywgJ2lmLXVubW9kaWZpZWQtc2luY2UnLFxuICAnbGFzdC1tb2RpZmllZCcsICdsb2NhdGlvbicsICdtYXgtZm9yd2FyZHMnLCAncHJveHktYXV0aG9yaXphdGlvbicsXG4gICdyZWZlcmVyJywgJ3JldHJ5LWFmdGVyJywgJ3VzZXItYWdlbnQnXG5dKTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHJhd0hlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICpcbiAqIEByZXR1cm5zIHtPYmplY3R9IEhlYWRlcnMgcGFyc2VkIGludG8gYW4gb2JqZWN0XG4gKi9cbmV4cG9ydCBkZWZhdWx0IHJhd0hlYWRlcnMgPT4ge1xuICBjb25zdCBwYXJzZWQgPSB7fTtcbiAgbGV0IGtleTtcbiAgbGV0IHZhbDtcbiAgbGV0IGk7XG5cbiAgcmF3SGVhZGVycyAmJiByYXdIZWFkZXJzLnNwbGl0KCdcXG4nKS5mb3JFYWNoKGZ1bmN0aW9uIHBhcnNlcihsaW5lKSB7XG4gICAgaSA9IGxpbmUuaW5kZXhPZignOicpO1xuICAgIGtleSA9IGxpbmUuc3Vic3RyaW5nKDAsIGkpLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuICAgIHZhbCA9IGxpbmUuc3Vic3RyaW5nKGkgKyAxKS50cmltKCk7XG5cbiAgICBpZiAoIWtleSB8fCAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2Zba2V5XSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoa2V5ID09PSAnc2V0LWNvb2tpZScpIHtcbiAgICAgIGlmIChwYXJzZWRba2V5XSkge1xuICAgICAgICBwYXJzZWRba2V5XS5wdXNoKHZhbCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJzZWRba2V5XSA9IFt2YWxdO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBwYXJzZWRba2V5XSA9IHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gKyAnLCAnICsgdmFsIDogdmFsO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHBhcnNlZDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/parseHeaders.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/parseProtocol.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/parseProtocol.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ parseProtocol; }\n/* harmony export */ });\n\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VQcm90b2NvbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRUU7QUFDZiwwQkFBMEIsS0FBSztBQUMvQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VQcm90b2NvbC5qcz9kOTc0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFyc2VQcm90b2NvbCh1cmwpIHtcbiAgY29uc3QgbWF0Y2ggPSAvXihbLStcXHddezEsMjV9KSg6P1xcL1xcL3w6KS8uZXhlYyh1cmwpO1xuICByZXR1cm4gbWF0Y2ggJiYgbWF0Y2hbMV0gfHwgJyc7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/parseProtocol.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/progressEventReducer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/progressEventReducer.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asyncDecorator: function() { return /* binding */ asyncDecorator; },\n/* harmony export */   progressEventDecorator: function() { return /* binding */ progressEventDecorator; },\n/* harmony export */   progressEventReducer: function() { return /* binding */ progressEventReducer; }\n/* harmony export */ });\n/* harmony import */ var _speedometer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./speedometer.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/speedometer.js\");\n/* harmony import */ var _throttle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./throttle.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/throttle.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n\n\n\nconst progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = (0,_speedometer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(50, 250);\n\n  return (0,_throttle_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nconst progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nconst asyncDecorator = (fn) => (...args) => _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].asap(() => fn(...args));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcHJvZ3Jlc3NFdmVudFJlZHVjZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJDO0FBQ047QUFDTDs7QUFFekI7QUFDUDtBQUNBLHVCQUF1QiwyREFBVzs7QUFFbEMsU0FBUyx3REFBUTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7O0FBRU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFTyw0Q0FBNEMsaURBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wcm9ncmVzc0V2ZW50UmVkdWNlci5qcz9lMDBjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzcGVlZG9tZXRlciBmcm9tIFwiLi9zcGVlZG9tZXRlci5qc1wiO1xuaW1wb3J0IHRocm90dGxlIGZyb20gXCIuL3Rocm90dGxlLmpzXCI7XG5pbXBvcnQgdXRpbHMgZnJvbSBcIi4uL3V0aWxzLmpzXCI7XG5cbmV4cG9ydCBjb25zdCBwcm9ncmVzc0V2ZW50UmVkdWNlciA9IChsaXN0ZW5lciwgaXNEb3dubG9hZFN0cmVhbSwgZnJlcSA9IDMpID0+IHtcbiAgbGV0IGJ5dGVzTm90aWZpZWQgPSAwO1xuICBjb25zdCBfc3BlZWRvbWV0ZXIgPSBzcGVlZG9tZXRlcig1MCwgMjUwKTtcblxuICByZXR1cm4gdGhyb3R0bGUoZSA9PiB7XG4gICAgY29uc3QgbG9hZGVkID0gZS5sb2FkZWQ7XG4gICAgY29uc3QgdG90YWwgPSBlLmxlbmd0aENvbXB1dGFibGUgPyBlLnRvdGFsIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IHByb2dyZXNzQnl0ZXMgPSBsb2FkZWQgLSBieXRlc05vdGlmaWVkO1xuICAgIGNvbnN0IHJhdGUgPSBfc3BlZWRvbWV0ZXIocHJvZ3Jlc3NCeXRlcyk7XG4gICAgY29uc3QgaW5SYW5nZSA9IGxvYWRlZCA8PSB0b3RhbDtcblxuICAgIGJ5dGVzTm90aWZpZWQgPSBsb2FkZWQ7XG5cbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgbG9hZGVkLFxuICAgICAgdG90YWwsXG4gICAgICBwcm9ncmVzczogdG90YWwgPyAobG9hZGVkIC8gdG90YWwpIDogdW5kZWZpbmVkLFxuICAgICAgYnl0ZXM6IHByb2dyZXNzQnl0ZXMsXG4gICAgICByYXRlOiByYXRlID8gcmF0ZSA6IHVuZGVmaW5lZCxcbiAgICAgIGVzdGltYXRlZDogcmF0ZSAmJiB0b3RhbCAmJiBpblJhbmdlID8gKHRvdGFsIC0gbG9hZGVkKSAvIHJhdGUgOiB1bmRlZmluZWQsXG4gICAgICBldmVudDogZSxcbiAgICAgIGxlbmd0aENvbXB1dGFibGU6IHRvdGFsICE9IG51bGwsXG4gICAgICBbaXNEb3dubG9hZFN0cmVhbSA/ICdkb3dubG9hZCcgOiAndXBsb2FkJ106IHRydWVcbiAgICB9O1xuXG4gICAgbGlzdGVuZXIoZGF0YSk7XG4gIH0sIGZyZXEpO1xufVxuXG5leHBvcnQgY29uc3QgcHJvZ3Jlc3NFdmVudERlY29yYXRvciA9ICh0b3RhbCwgdGhyb3R0bGVkKSA9PiB7XG4gIGNvbnN0IGxlbmd0aENvbXB1dGFibGUgPSB0b3RhbCAhPSBudWxsO1xuXG4gIHJldHVybiBbKGxvYWRlZCkgPT4gdGhyb3R0bGVkWzBdKHtcbiAgICBsZW5ndGhDb21wdXRhYmxlLFxuICAgIHRvdGFsLFxuICAgIGxvYWRlZFxuICB9KSwgdGhyb3R0bGVkWzFdXTtcbn1cblxuZXhwb3J0IGNvbnN0IGFzeW5jRGVjb3JhdG9yID0gKGZuKSA9PiAoLi4uYXJncykgPT4gdXRpbHMuYXNhcCgoKSA9PiBmbiguLi5hcmdzKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/progressEventReducer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/resolveConfig.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/resolveConfig.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../platform/index.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isURLSameOrigin.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/isURLSameOrigin.js\");\n/* harmony import */ var _cookies_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cookies.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/cookies.js\");\n/* harmony import */ var _core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/buildFullPath.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mergeConfig.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _buildURL_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./buildURL.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js\");\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ((config) => {\n  const newConfig = (0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(headers);\n\n  newConfig.url = (0,_buildURL_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,_core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isFormData(data)) {\n    if (_platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserEnv || _platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (_platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserEnv) {\n    withXSRFToken && _utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && (0,_isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && _cookies_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcmVzb2x2ZUNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNEM7QUFDWjtBQUNtQjtBQUNoQjtBQUNrQjtBQUNKO0FBQ0U7QUFDZDs7QUFFckMsK0RBQWU7QUFDZixvQkFBb0IsZ0VBQVcsR0FBRzs7QUFFbEMsT0FBTyxvRUFBb0U7O0FBRTNFLGdDQUFnQyw2REFBWTs7QUFFNUMsa0JBQWtCLHdEQUFRLENBQUMsa0VBQWE7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxNQUFNLGlEQUFLO0FBQ1gsUUFBUSwwREFBUSwwQkFBMEIsMERBQVE7QUFDbEQseUNBQXlDO0FBQ3pDLE1BQU07QUFDTjtBQUNBLGtFQUFrRTtBQUNsRSxnRkFBZ0Y7QUFDaEY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTSwwREFBUTtBQUNkLHFCQUFxQixpREFBSzs7QUFFMUIscURBQXFELCtEQUFlO0FBQ3BFO0FBQ0EsNERBQTRELG1EQUFPOztBQUVuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3Jlc29sdmVDb25maWcuanM/NGRhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGxhdGZvcm0gZnJvbSBcIi4uL3BsYXRmb3JtL2luZGV4LmpzXCI7XG5pbXBvcnQgdXRpbHMgZnJvbSBcIi4uL3V0aWxzLmpzXCI7XG5pbXBvcnQgaXNVUkxTYW1lT3JpZ2luIGZyb20gXCIuL2lzVVJMU2FtZU9yaWdpbi5qc1wiO1xuaW1wb3J0IGNvb2tpZXMgZnJvbSBcIi4vY29va2llcy5qc1wiO1xuaW1wb3J0IGJ1aWxkRnVsbFBhdGggZnJvbSBcIi4uL2NvcmUvYnVpbGRGdWxsUGF0aC5qc1wiO1xuaW1wb3J0IG1lcmdlQ29uZmlnIGZyb20gXCIuLi9jb3JlL21lcmdlQ29uZmlnLmpzXCI7XG5pbXBvcnQgQXhpb3NIZWFkZXJzIGZyb20gXCIuLi9jb3JlL0F4aW9zSGVhZGVycy5qc1wiO1xuaW1wb3J0IGJ1aWxkVVJMIGZyb20gXCIuL2J1aWxkVVJMLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChjb25maWcpID0+IHtcbiAgY29uc3QgbmV3Q29uZmlnID0gbWVyZ2VDb25maWcoe30sIGNvbmZpZyk7XG5cbiAgbGV0IHtkYXRhLCB3aXRoWFNSRlRva2VuLCB4c3JmSGVhZGVyTmFtZSwgeHNyZkNvb2tpZU5hbWUsIGhlYWRlcnMsIGF1dGh9ID0gbmV3Q29uZmlnO1xuXG4gIG5ld0NvbmZpZy5oZWFkZXJzID0gaGVhZGVycyA9IEF4aW9zSGVhZGVycy5mcm9tKGhlYWRlcnMpO1xuXG4gIG5ld0NvbmZpZy51cmwgPSBidWlsZFVSTChidWlsZEZ1bGxQYXRoKG5ld0NvbmZpZy5iYXNlVVJMLCBuZXdDb25maWcudXJsKSwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpO1xuXG4gIC8vIEhUVFAgYmFzaWMgYXV0aGVudGljYXRpb25cbiAgaWYgKGF1dGgpIHtcbiAgICBoZWFkZXJzLnNldCgnQXV0aG9yaXphdGlvbicsICdCYXNpYyAnICtcbiAgICAgIGJ0b2EoKGF1dGgudXNlcm5hbWUgfHwgJycpICsgJzonICsgKGF1dGgucGFzc3dvcmQgPyB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoYXV0aC5wYXNzd29yZCkpIDogJycpKVxuICAgICk7XG4gIH1cblxuICBsZXQgY29udGVudFR5cGU7XG5cbiAgaWYgKHV0aWxzLmlzRm9ybURhdGEoZGF0YSkpIHtcbiAgICBpZiAocGxhdGZvcm0uaGFzU3RhbmRhcmRCcm93c2VyRW52IHx8IHBsYXRmb3JtLmhhc1N0YW5kYXJkQnJvd3NlcldlYldvcmtlckVudikge1xuICAgICAgaGVhZGVycy5zZXRDb250ZW50VHlwZSh1bmRlZmluZWQpOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfSBlbHNlIGlmICgoY29udGVudFR5cGUgPSBoZWFkZXJzLmdldENvbnRlbnRUeXBlKCkpICE9PSBmYWxzZSkge1xuICAgICAgLy8gZml4IHNlbWljb2xvbiBkdXBsaWNhdGlvbiBpc3N1ZSBmb3IgUmVhY3ROYXRpdmUgRm9ybURhdGEgaW1wbGVtZW50YXRpb25cbiAgICAgIGNvbnN0IFt0eXBlLCAuLi50b2tlbnNdID0gY29udGVudFR5cGUgPyBjb250ZW50VHlwZS5zcGxpdCgnOycpLm1hcCh0b2tlbiA9PiB0b2tlbi50cmltKCkpLmZpbHRlcihCb29sZWFuKSA6IFtdO1xuICAgICAgaGVhZGVycy5zZXRDb250ZW50VHlwZShbdHlwZSB8fCAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScsIC4uLnRva2Vuc10uam9pbignOyAnKSk7XG4gICAgfVxuICB9XG5cbiAgLy8gQWRkIHhzcmYgaGVhZGVyXG4gIC8vIFRoaXMgaXMgb25seSBkb25lIGlmIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50LlxuICAvLyBTcGVjaWZpY2FsbHkgbm90IGlmIHdlJ3JlIGluIGEgd2ViIHdvcmtlciwgb3IgcmVhY3QtbmF0aXZlLlxuXG4gIGlmIChwbGF0Zm9ybS5oYXNTdGFuZGFyZEJyb3dzZXJFbnYpIHtcbiAgICB3aXRoWFNSRlRva2VuICYmIHV0aWxzLmlzRnVuY3Rpb24od2l0aFhTUkZUb2tlbikgJiYgKHdpdGhYU1JGVG9rZW4gPSB3aXRoWFNSRlRva2VuKG5ld0NvbmZpZykpO1xuXG4gICAgaWYgKHdpdGhYU1JGVG9rZW4gfHwgKHdpdGhYU1JGVG9rZW4gIT09IGZhbHNlICYmIGlzVVJMU2FtZU9yaWdpbihuZXdDb25maWcudXJsKSkpIHtcbiAgICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgICAgY29uc3QgeHNyZlZhbHVlID0geHNyZkhlYWRlck5hbWUgJiYgeHNyZkNvb2tpZU5hbWUgJiYgY29va2llcy5yZWFkKHhzcmZDb29raWVOYW1lKTtcblxuICAgICAgaWYgKHhzcmZWYWx1ZSkge1xuICAgICAgICBoZWFkZXJzLnNldCh4c3JmSGVhZGVyTmFtZSwgeHNyZlZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3Q29uZmlnO1xufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/resolveConfig.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/speedometer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/speedometer.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (speedometer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3BlZWRvbWV0ZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFhOztBQUViO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSwrREFBZSxXQUFXLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcGVlZG9tZXRlci5qcz9jZWNlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDYWxjdWxhdGUgZGF0YSBtYXhSYXRlXG4gKiBAcGFyYW0ge051bWJlcn0gW3NhbXBsZXNDb3VudD0gMTBdXG4gKiBAcGFyYW0ge051bWJlcn0gW21pbj0gMTAwMF1cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xuZnVuY3Rpb24gc3BlZWRvbWV0ZXIoc2FtcGxlc0NvdW50LCBtaW4pIHtcbiAgc2FtcGxlc0NvdW50ID0gc2FtcGxlc0NvdW50IHx8IDEwO1xuICBjb25zdCBieXRlcyA9IG5ldyBBcnJheShzYW1wbGVzQ291bnQpO1xuICBjb25zdCB0aW1lc3RhbXBzID0gbmV3IEFycmF5KHNhbXBsZXNDb3VudCk7XG4gIGxldCBoZWFkID0gMDtcbiAgbGV0IHRhaWwgPSAwO1xuICBsZXQgZmlyc3RTYW1wbGVUUztcblxuICBtaW4gPSBtaW4gIT09IHVuZGVmaW5lZCA/IG1pbiA6IDEwMDA7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHB1c2goY2h1bmtMZW5ndGgpIHtcbiAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuXG4gICAgY29uc3Qgc3RhcnRlZEF0ID0gdGltZXN0YW1wc1t0YWlsXTtcblxuICAgIGlmICghZmlyc3RTYW1wbGVUUykge1xuICAgICAgZmlyc3RTYW1wbGVUUyA9IG5vdztcbiAgICB9XG5cbiAgICBieXRlc1toZWFkXSA9IGNodW5rTGVuZ3RoO1xuICAgIHRpbWVzdGFtcHNbaGVhZF0gPSBub3c7XG5cbiAgICBsZXQgaSA9IHRhaWw7XG4gICAgbGV0IGJ5dGVzQ291bnQgPSAwO1xuXG4gICAgd2hpbGUgKGkgIT09IGhlYWQpIHtcbiAgICAgIGJ5dGVzQ291bnQgKz0gYnl0ZXNbaSsrXTtcbiAgICAgIGkgPSBpICUgc2FtcGxlc0NvdW50O1xuICAgIH1cblxuICAgIGhlYWQgPSAoaGVhZCArIDEpICUgc2FtcGxlc0NvdW50O1xuXG4gICAgaWYgKGhlYWQgPT09IHRhaWwpIHtcbiAgICAgIHRhaWwgPSAodGFpbCArIDEpICUgc2FtcGxlc0NvdW50O1xuICAgIH1cblxuICAgIGlmIChub3cgLSBmaXJzdFNhbXBsZVRTIDwgbWluKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgcGFzc2VkID0gc3RhcnRlZEF0ICYmIG5vdyAtIHN0YXJ0ZWRBdDtcblxuICAgIHJldHVybiBwYXNzZWQgPyBNYXRoLnJvdW5kKGJ5dGVzQ291bnQgKiAxMDAwIC8gcGFzc2VkKSA6IHVuZGVmaW5lZDtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3BlZWRvbWV0ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/speedometer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/spread.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/spread.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ spread; }\n/* harmony export */ });\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQSxhQUFhO0FBQ2I7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzPzhhMTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFN5bnRhY3RpYyBzdWdhciBmb3IgaW52b2tpbmcgYSBmdW5jdGlvbiBhbmQgZXhwYW5kaW5nIGFuIGFycmF5IGZvciBhcmd1bWVudHMuXG4gKlxuICogQ29tbW9uIHVzZSBjYXNlIHdvdWxkIGJlIHRvIHVzZSBgRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5YC5cbiAqXG4gKiAgYGBganNcbiAqICBmdW5jdGlvbiBmKHgsIHksIHopIHt9XG4gKiAgdmFyIGFyZ3MgPSBbMSwgMiwgM107XG4gKiAgZi5hcHBseShudWxsLCBhcmdzKTtcbiAqICBgYGBcbiAqXG4gKiBXaXRoIGBzcHJlYWRgIHRoaXMgZXhhbXBsZSBjYW4gYmUgcmUtd3JpdHRlbi5cbiAqXG4gKiAgYGBganNcbiAqICBzcHJlYWQoZnVuY3Rpb24oeCwgeSwgeikge30pKFsxLCAyLCAzXSk7XG4gKiAgYGBgXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNwcmVhZChjYWxsYmFjaykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcChhcnIpIHtcbiAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkobnVsbCwgYXJyKTtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/spread.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/throttle.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/throttle.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (throttle);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdGhyb3R0bGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQSwrREFBZSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy90aHJvdHRsZS5qcz9hMWU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhyb3R0bGUgZGVjb3JhdG9yXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICogQHBhcmFtIHtOdW1iZXJ9IGZyZXFcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxuICovXG5mdW5jdGlvbiB0aHJvdHRsZShmbiwgZnJlcSkge1xuICBsZXQgdGltZXN0YW1wID0gMDtcbiAgbGV0IHRocmVzaG9sZCA9IDEwMDAgLyBmcmVxO1xuICBsZXQgbGFzdEFyZ3M7XG4gIGxldCB0aW1lcjtcblxuICBjb25zdCBpbnZva2UgPSAoYXJncywgbm93ID0gRGF0ZS5ub3coKSkgPT4ge1xuICAgIHRpbWVzdGFtcCA9IG5vdztcbiAgICBsYXN0QXJncyA9IG51bGw7XG4gICAgaWYgKHRpbWVyKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgdGltZXIgPSBudWxsO1xuICAgIH1cbiAgICBmbi5hcHBseShudWxsLCBhcmdzKTtcbiAgfVxuXG4gIGNvbnN0IHRocm90dGxlZCA9ICguLi5hcmdzKSA9PiB7XG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICBjb25zdCBwYXNzZWQgPSBub3cgLSB0aW1lc3RhbXA7XG4gICAgaWYgKCBwYXNzZWQgPj0gdGhyZXNob2xkKSB7XG4gICAgICBpbnZva2UoYXJncywgbm93KTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGFzdEFyZ3MgPSBhcmdzO1xuICAgICAgaWYgKCF0aW1lcikge1xuICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRpbWVyID0gbnVsbDtcbiAgICAgICAgICBpbnZva2UobGFzdEFyZ3MpXG4gICAgICAgIH0sIHRocmVzaG9sZCAtIHBhc3NlZCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY29uc3QgZmx1c2ggPSAoKSA9PiBsYXN0QXJncyAmJiBpbnZva2UobGFzdEFyZ3MpO1xuXG4gIHJldHVybiBbdGhyb3R0bGVkLCBmbHVzaF07XG59XG5cbmV4cG9ydCBkZWZhdWx0IHRocm90dGxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/throttle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/node/classes/FormData.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/null.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\n\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(thing) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (_platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isSpecCompliantForm(formData);\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(value)) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) && isFlatArray(value)) ||\n        ((_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]')) && (arr = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(value, function each(el, key) {\n      const result = !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && visitor.call(\n        formData, el, _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (toFormData);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/toURLEncodedForm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/toURLEncodedForm.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ toURLEncodedForm; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/index.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/index.js\");\n\n\n\n\n\n\nfunction toURLEncodedForm(data, options) {\n  return (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(data, new _platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (_platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNode && _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdG9VUkxFbmNvZGVkRm9ybS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRW1CO0FBQ1M7QUFDRzs7QUFFN0I7QUFDZixTQUFTLDBEQUFVLFdBQVcsMERBQVE7QUFDdEM7QUFDQSxVQUFVLDBEQUFRLFdBQVcsaURBQUs7QUFDbEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy90b1VSTEVuY29kZWRGb3JtLmpzP2Y4MWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IHRvRm9ybURhdGEgZnJvbSAnLi90b0Zvcm1EYXRhLmpzJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuLi9wbGF0Zm9ybS9pbmRleC5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRvVVJMRW5jb2RlZEZvcm0oZGF0YSwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Gb3JtRGF0YShkYXRhLCBuZXcgcGxhdGZvcm0uY2xhc3Nlcy5VUkxTZWFyY2hQYXJhbXMoKSwgT2JqZWN0LmFzc2lnbih7XG4gICAgdmlzaXRvcjogZnVuY3Rpb24odmFsdWUsIGtleSwgcGF0aCwgaGVscGVycykge1xuICAgICAgaWYgKHBsYXRmb3JtLmlzTm9kZSAmJiB1dGlscy5pc0J1ZmZlcih2YWx1ZSkpIHtcbiAgICAgICAgdGhpcy5hcHBlbmQoa2V5LCB2YWx1ZS50b1N0cmluZygnYmFzZTY0JykpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBoZWxwZXJzLmRlZmF1bHRWaXNpdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9LCBvcHRpb25zKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/toURLEncodedForm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/trackStream.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/trackStream.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readBytes: function() { return /* binding */ readBytes; },\n/* harmony export */   streamChunk: function() { return /* binding */ streamChunk; },\n/* harmony export */   trackStream: function() { return /* binding */ trackStream; }\n/* harmony export */ });\n\nconst streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nconst readBytes = async function* (iterable, chunkSize, encode) {\n  for await (const chunk of iterable) {\n    yield* streamChunk(ArrayBuffer.isView(chunk) ? chunk : (await encode(String(chunk))), chunkSize);\n  }\n}\n\nconst trackStream = (stream, chunkSize, onProgress, onFinish, encode) => {\n  const iterator = readBytes(stream, chunkSize, encode);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdHJhY2tTdHJlYW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZSxhQUFhOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy90cmFja1N0cmVhbS5qcz9kYWQ2Il0sInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IGNvbnN0IHN0cmVhbUNodW5rID0gZnVuY3Rpb24qIChjaHVuaywgY2h1bmtTaXplKSB7XG4gIGxldCBsZW4gPSBjaHVuay5ieXRlTGVuZ3RoO1xuXG4gIGlmICghY2h1bmtTaXplIHx8IGxlbiA8IGNodW5rU2l6ZSkge1xuICAgIHlpZWxkIGNodW5rO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGxldCBwb3MgPSAwO1xuICBsZXQgZW5kO1xuXG4gIHdoaWxlIChwb3MgPCBsZW4pIHtcbiAgICBlbmQgPSBwb3MgKyBjaHVua1NpemU7XG4gICAgeWllbGQgY2h1bmsuc2xpY2UocG9zLCBlbmQpO1xuICAgIHBvcyA9IGVuZDtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgcmVhZEJ5dGVzID0gYXN5bmMgZnVuY3Rpb24qIChpdGVyYWJsZSwgY2h1bmtTaXplLCBlbmNvZGUpIHtcbiAgZm9yIGF3YWl0IChjb25zdCBjaHVuayBvZiBpdGVyYWJsZSkge1xuICAgIHlpZWxkKiBzdHJlYW1DaHVuayhBcnJheUJ1ZmZlci5pc1ZpZXcoY2h1bmspID8gY2h1bmsgOiAoYXdhaXQgZW5jb2RlKFN0cmluZyhjaHVuaykpKSwgY2h1bmtTaXplKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgdHJhY2tTdHJlYW0gPSAoc3RyZWFtLCBjaHVua1NpemUsIG9uUHJvZ3Jlc3MsIG9uRmluaXNoLCBlbmNvZGUpID0+IHtcbiAgY29uc3QgaXRlcmF0b3IgPSByZWFkQnl0ZXMoc3RyZWFtLCBjaHVua1NpemUsIGVuY29kZSk7XG5cbiAgbGV0IGJ5dGVzID0gMDtcbiAgbGV0IGRvbmU7XG4gIGxldCBfb25GaW5pc2ggPSAoZSkgPT4ge1xuICAgIGlmICghZG9uZSkge1xuICAgICAgZG9uZSA9IHRydWU7XG4gICAgICBvbkZpbmlzaCAmJiBvbkZpbmlzaChlKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFJlYWRhYmxlU3RyZWFtKHtcbiAgICBhc3luYyBwdWxsKGNvbnRyb2xsZXIpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHtkb25lLCB2YWx1ZX0gPSBhd2FpdCBpdGVyYXRvci5uZXh0KCk7XG5cbiAgICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgIF9vbkZpbmlzaCgpO1xuICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgbGVuID0gdmFsdWUuYnl0ZUxlbmd0aDtcbiAgICAgICAgaWYgKG9uUHJvZ3Jlc3MpIHtcbiAgICAgICAgICBsZXQgbG9hZGVkQnl0ZXMgPSBieXRlcyArPSBsZW47XG4gICAgICAgICAgb25Qcm9ncmVzcyhsb2FkZWRCeXRlcyk7XG4gICAgICAgIH1cbiAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKG5ldyBVaW50OEFycmF5KHZhbHVlKSk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgX29uRmluaXNoKGVycik7XG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH1cbiAgICB9LFxuICAgIGNhbmNlbChyZWFzb24pIHtcbiAgICAgIF9vbkZpbmlzaChyZWFzb24pO1xuICAgICAgcmV0dXJuIGl0ZXJhdG9yLnJldHVybigpO1xuICAgIH1cbiAgfSwge1xuICAgIGhpZ2hXYXRlck1hcms6IDJcbiAgfSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/trackStream.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/validator.js":
/*!************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/validator.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../env/data.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosError.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + _env_data_js__WEBPACK_IMPORTED_MODULE_0__.VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('options must be an object', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('option ' + opt + ' must be ' + result, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('Unknown option ' + opt, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION);\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  assertOptions,\n  validators\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdmFsaWRhdG9yLmpzIiwibWFwcGluZ3MiOiI7OztBQUFhOztBQUUwQjtBQUNROztBQUUvQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixpREFBTztBQUMvQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMkRBQVU7QUFDMUI7QUFDQSxRQUFRLDJEQUFVO0FBQ2xCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQSxjQUFjLDJEQUFVLDhCQUE4QiwyREFBVTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwyREFBVSx5Q0FBeUMsMkRBQVU7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMkRBQVUsMEJBQTBCLDJEQUFVO0FBQzlEO0FBQ0E7QUFDQTs7QUFFQSwrREFBZTtBQUNmO0FBQ0E7QUFDQSxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy92YWxpZGF0b3IuanM/NDEwMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7VkVSU0lPTn0gZnJvbSAnLi4vZW52L2RhdGEuanMnO1xuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSAnLi4vY29yZS9BeGlvc0Vycm9yLmpzJztcblxuY29uc3QgdmFsaWRhdG9ycyA9IHt9O1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuWydvYmplY3QnLCAnYm9vbGVhbicsICdudW1iZXInLCAnZnVuY3Rpb24nLCAnc3RyaW5nJywgJ3N5bWJvbCddLmZvckVhY2goKHR5cGUsIGkpID0+IHtcbiAgdmFsaWRhdG9yc1t0eXBlXSA9IGZ1bmN0aW9uIHZhbGlkYXRvcih0aGluZykge1xuICAgIHJldHVybiB0eXBlb2YgdGhpbmcgPT09IHR5cGUgfHwgJ2EnICsgKGkgPCAxID8gJ24gJyA6ICcgJykgKyB0eXBlO1xuICB9O1xufSk7XG5cbmNvbnN0IGRlcHJlY2F0ZWRXYXJuaW5ncyA9IHt9O1xuXG4vKipcbiAqIFRyYW5zaXRpb25hbCBvcHRpb24gdmFsaWRhdG9yXG4gKlxuICogQHBhcmFtIHtmdW5jdGlvbnxib29sZWFuP30gdmFsaWRhdG9yIC0gc2V0IHRvIGZhbHNlIGlmIHRoZSB0cmFuc2l0aW9uYWwgb3B0aW9uIGhhcyBiZWVuIHJlbW92ZWRcbiAqIEBwYXJhbSB7c3RyaW5nP30gdmVyc2lvbiAtIGRlcHJlY2F0ZWQgdmVyc2lvbiAvIHJlbW92ZWQgc2luY2UgdmVyc2lvblxuICogQHBhcmFtIHtzdHJpbmc/fSBtZXNzYWdlIC0gc29tZSBtZXNzYWdlIHdpdGggYWRkaXRpb25hbCBpbmZvXG4gKlxuICogQHJldHVybnMge2Z1bmN0aW9ufVxuICovXG52YWxpZGF0b3JzLnRyYW5zaXRpb25hbCA9IGZ1bmN0aW9uIHRyYW5zaXRpb25hbCh2YWxpZGF0b3IsIHZlcnNpb24sIG1lc3NhZ2UpIHtcbiAgZnVuY3Rpb24gZm9ybWF0TWVzc2FnZShvcHQsIGRlc2MpIHtcbiAgICByZXR1cm4gJ1tBeGlvcyB2JyArIFZFUlNJT04gKyAnXSBUcmFuc2l0aW9uYWwgb3B0aW9uIFxcJycgKyBvcHQgKyAnXFwnJyArIGRlc2MgKyAobWVzc2FnZSA/ICcuICcgKyBtZXNzYWdlIDogJycpO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgcmV0dXJuICh2YWx1ZSwgb3B0LCBvcHRzKSA9PiB7XG4gICAgaWYgKHZhbGlkYXRvciA9PT0gZmFsc2UpIHtcbiAgICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKFxuICAgICAgICBmb3JtYXRNZXNzYWdlKG9wdCwgJyBoYXMgYmVlbiByZW1vdmVkJyArICh2ZXJzaW9uID8gJyBpbiAnICsgdmVyc2lvbiA6ICcnKSksXG4gICAgICAgIEF4aW9zRXJyb3IuRVJSX0RFUFJFQ0FURURcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKHZlcnNpb24gJiYgIWRlcHJlY2F0ZWRXYXJuaW5nc1tvcHRdKSB7XG4gICAgICBkZXByZWNhdGVkV2FybmluZ3Nbb3B0XSA9IHRydWU7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBmb3JtYXRNZXNzYWdlKFxuICAgICAgICAgIG9wdCxcbiAgICAgICAgICAnIGhhcyBiZWVuIGRlcHJlY2F0ZWQgc2luY2UgdicgKyB2ZXJzaW9uICsgJyBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZWFyIGZ1dHVyZSdcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsaWRhdG9yID8gdmFsaWRhdG9yKHZhbHVlLCBvcHQsIG9wdHMpIDogdHJ1ZTtcbiAgfTtcbn07XG5cbi8qKlxuICogQXNzZXJ0IG9iamVjdCdzIHByb3BlcnRpZXMgdHlwZVxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge29iamVjdH0gc2NoZW1hXG4gKiBAcGFyYW0ge2Jvb2xlYW4/fSBhbGxvd1Vua25vd25cbiAqXG4gKiBAcmV0dXJucyB7b2JqZWN0fVxuICovXG5cbmZ1bmN0aW9uIGFzc2VydE9wdGlvbnMob3B0aW9ucywgc2NoZW1hLCBhbGxvd1Vua25vd24pIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKCdvcHRpb25zIG11c3QgYmUgYW4gb2JqZWN0JywgQXhpb3NFcnJvci5FUlJfQkFEX09QVElPTl9WQUxVRSk7XG4gIH1cbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKG9wdGlvbnMpO1xuICBsZXQgaSA9IGtleXMubGVuZ3RoO1xuICB3aGlsZSAoaS0tID4gMCkge1xuICAgIGNvbnN0IG9wdCA9IGtleXNbaV07XG4gICAgY29uc3QgdmFsaWRhdG9yID0gc2NoZW1hW29wdF07XG4gICAgaWYgKHZhbGlkYXRvcikge1xuICAgICAgY29uc3QgdmFsdWUgPSBvcHRpb25zW29wdF07XG4gICAgICBjb25zdCByZXN1bHQgPSB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbGlkYXRvcih2YWx1ZSwgb3B0LCBvcHRpb25zKTtcbiAgICAgIGlmIChyZXN1bHQgIT09IHRydWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEF4aW9zRXJyb3IoJ29wdGlvbiAnICsgb3B0ICsgJyBtdXN0IGJlICcgKyByZXN1bHQsIEF4aW9zRXJyb3IuRVJSX0JBRF9PUFRJT05fVkFMVUUpO1xuICAgICAgfVxuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChhbGxvd1Vua25vd24gIT09IHRydWUpIHtcbiAgICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKCdVbmtub3duIG9wdGlvbiAnICsgb3B0LCBBeGlvc0Vycm9yLkVSUl9CQURfT1BUSU9OKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBhc3NlcnRPcHRpb25zLFxuICB2YWxpZGF0b3JzXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/validator.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/Blob.js":
/*!************************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/Blob.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (typeof Blob !== 'undefined' ? Blob : null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9CbG9iLmpzIiwibWFwcGluZ3MiOiI7QUFBWTs7QUFFWiwrREFBZSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvcGxhdGZvcm0vYnJvd3Nlci9jbGFzc2VzL0Jsb2IuanM/ZDkwOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0IGRlZmF1bHQgdHlwZW9mIEJsb2IgIT09ICd1bmRlZmluZWQnID8gQmxvYiA6IG51bGxcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/Blob.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/FormData.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/FormData.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (typeof FormData !== 'undefined' ? FormData : null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9Gb3JtRGF0YS5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7O0FBRWIsK0RBQWUsaURBQWlELEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvcGxhdGZvcm0vYnJvd3Nlci9jbGFzc2VzL0Zvcm1EYXRhLmpzP2U2YmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnQgZGVmYXVsdCB0eXBlb2YgRm9ybURhdGEgIT09ICd1bmRlZmluZWQnID8gRm9ybURhdGEgOiBudWxsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/FormData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/AxiosURLSearchParams.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (typeof URLSearchParams !== 'undefined' ? URLSearchParams : _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9VUkxTZWFyY2hQYXJhbXMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBYTs7QUFFK0Q7QUFDNUUsK0RBQWUsMkRBQTJELHdFQUFvQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9VUkxTZWFyY2hQYXJhbXMuanM/MWY4NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCBBeGlvc1VSTFNlYXJjaFBhcmFtcyBmcm9tICcuLi8uLi8uLi9oZWxwZXJzL0F4aW9zVVJMU2VhcmNoUGFyYW1zLmpzJztcbmV4cG9ydCBkZWZhdWx0IHR5cGVvZiBVUkxTZWFyY2hQYXJhbXMgIT09ICd1bmRlZmluZWQnID8gVVJMU2VhcmNoUGFyYW1zIDogQXhpb3NVUkxTZWFyY2hQYXJhbXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/platform/browser/index.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/URLSearchParams.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js\");\n/* harmony import */ var _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/FormData.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/FormData.js\");\n/* harmony import */ var _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/Blob.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/classes/Blob.js\");\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  isBrowser: true,\n  classes: {\n    URLSearchParams: _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    FormData: _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Blob: _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUEwRDtBQUNkO0FBQ1I7O0FBRXBDLCtEQUFlO0FBQ2Y7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQixZQUFZO0FBQ1osUUFBUTtBQUNSLEdBQUc7QUFDSDtBQUNBLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzPzc4NzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVSTFNlYXJjaFBhcmFtcyBmcm9tICcuL2NsYXNzZXMvVVJMU2VhcmNoUGFyYW1zLmpzJ1xuaW1wb3J0IEZvcm1EYXRhIGZyb20gJy4vY2xhc3Nlcy9Gb3JtRGF0YS5qcydcbmltcG9ydCBCbG9iIGZyb20gJy4vY2xhc3Nlcy9CbG9iLmpzJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGlzQnJvd3NlcjogdHJ1ZSxcbiAgY2xhc3Nlczoge1xuICAgIFVSTFNlYXJjaFBhcmFtcyxcbiAgICBGb3JtRGF0YSxcbiAgICBCbG9iXG4gIH0sXG4gIHByb3RvY29sczogWydodHRwJywgJ2h0dHBzJywgJ2ZpbGUnLCAnYmxvYicsICd1cmwnLCAnZGF0YSddXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/common/utils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/platform/common/utils.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasBrowserEnv: function() { return /* binding */ hasBrowserEnv; },\n/* harmony export */   hasStandardBrowserEnv: function() { return /* binding */ hasStandardBrowserEnv; },\n/* harmony export */   hasStandardBrowserWebWorkerEnv: function() { return /* binding */ hasStandardBrowserWebWorkerEnv; },\n/* harmony export */   origin: function() { return /* binding */ origin; }\n/* harmony export */ });\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2NvbW1vbi91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7O0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvcGxhdGZvcm0vY29tbW9uL3V0aWxzLmpzPzE3ZmEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaGFzQnJvd3NlckVudiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCc7XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHdlJ3JlIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50XG4gKlxuICogVGhpcyBhbGxvd3MgYXhpb3MgdG8gcnVuIGluIGEgd2ViIHdvcmtlciwgYW5kIHJlYWN0LW5hdGl2ZS5cbiAqIEJvdGggZW52aXJvbm1lbnRzIHN1cHBvcnQgWE1MSHR0cFJlcXVlc3QsIGJ1dCBub3QgZnVsbHkgc3RhbmRhcmQgZ2xvYmFscy5cbiAqXG4gKiB3ZWIgd29ya2VyczpcbiAqICB0eXBlb2Ygd2luZG93IC0+IHVuZGVmaW5lZFxuICogIHR5cGVvZiBkb2N1bWVudCAtPiB1bmRlZmluZWRcbiAqXG4gKiByZWFjdC1uYXRpdmU6XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ1JlYWN0TmF0aXZlJ1xuICogbmF0aXZlc2NyaXB0XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ05hdGl2ZVNjcmlwdCcgb3IgJ05TJ1xuICpcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5jb25zdCBoYXNTdGFuZGFyZEJyb3dzZXJFbnYgPSAoXG4gIChwcm9kdWN0KSA9PiB7XG4gICAgcmV0dXJuIGhhc0Jyb3dzZXJFbnYgJiYgWydSZWFjdE5hdGl2ZScsICdOYXRpdmVTY3JpcHQnLCAnTlMnXS5pbmRleE9mKHByb2R1Y3QpIDwgMFxuICB9KSh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IucHJvZHVjdCk7XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHdlJ3JlIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIHdlYldvcmtlciBlbnZpcm9ubWVudFxuICpcbiAqIEFsdGhvdWdoIHRoZSBgaXNTdGFuZGFyZEJyb3dzZXJFbnZgIG1ldGhvZCBpbmRpY2F0ZXMgdGhhdFxuICogYGFsbG93cyBheGlvcyB0byBydW4gaW4gYSB3ZWIgd29ya2VyYCwgdGhlIFdlYldvcmtlciB3aWxsIHN0aWxsIGJlXG4gKiBmaWx0ZXJlZCBvdXQgZHVlIHRvIGl0cyBqdWRnbWVudCBzdGFuZGFyZFxuICogYHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCdgLlxuICogVGhpcyBsZWFkcyB0byBhIHByb2JsZW0gd2hlbiBheGlvcyBwb3N0IGBGb3JtRGF0YWAgaW4gd2ViV29ya2VyXG4gKi9cbmNvbnN0IGhhc1N0YW5kYXJkQnJvd3NlcldlYldvcmtlckVudiA9ICgoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIFdvcmtlckdsb2JhbFNjb3BlICE9PSAndW5kZWZpbmVkJyAmJlxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHNlbGYgaW5zdGFuY2VvZiBXb3JrZXJHbG9iYWxTY29wZSAmJlxuICAgIHR5cGVvZiBzZWxmLmltcG9ydFNjcmlwdHMgPT09ICdmdW5jdGlvbidcbiAgKTtcbn0pKCk7XG5cbmNvbnN0IG9yaWdpbiA9IGhhc0Jyb3dzZXJFbnYgJiYgd2luZG93LmxvY2F0aW9uLmhyZWYgfHwgJ2h0dHA6Ly9sb2NhbGhvc3QnO1xuXG5leHBvcnQge1xuICBoYXNCcm93c2VyRW52LFxuICBoYXNTdGFuZGFyZEJyb3dzZXJXZWJXb3JrZXJFbnYsXG4gIGhhc1N0YW5kYXJkQnJvd3NlckVudixcbiAgb3JpZ2luXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/common/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/platform/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node/index.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/browser/index.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/utils.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/common/utils.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  ..._common_utils_js__WEBPACK_IMPORTED_MODULE_0__,\n  ..._node_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7OztBQUF1QztBQUNJOztBQUUzQywrREFBZTtBQUNmLEtBQUssNkNBQUs7QUFDVixLQUFLLHNEQUFRO0FBQ2IsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9pbmRleC5qcz84OWFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwbGF0Zm9ybSBmcm9tICcuL25vZGUvaW5kZXguanMnO1xuaW1wb3J0ICogYXMgdXRpbHMgZnJvbSAnLi9jb21tb24vdXRpbHMuanMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIC4uLnV0aWxzLFxuICAuLi5wbGF0Zm9ybVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/platform/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/utils.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/bind.js */ \"(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/helpers/bind.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aptos/node_modules/axios/lib/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/eventemitter3/index.mjs":
/*!**********************************************!*\
  !*** ./node_modules/eventemitter3/index.mjs ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventEmitter: function() { return /* reexport default export from named module */ _index_js__WEBPACK_IMPORTED_MODULE_0__; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"(app-pages-browser)/./node_modules/eventemitter3/index.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_index_js__WEBPACK_IMPORTED_MODULE_0__);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9ldmVudGVtaXR0ZXIzL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQzs7QUFFZDtBQUN2QiwrREFBZSxzQ0FBWSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZXZlbnRlbWl0dGVyMy9pbmRleC5tanM/NGRiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXZlbnRFbWl0dGVyIGZyb20gJy4vaW5kZXguanMnXG5cbmV4cG9ydCB7IEV2ZW50RW1pdHRlciB9XG5leHBvcnQgZGVmYXVsdCBFdmVudEVtaXR0ZXJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/eventemitter3/index.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Craman%5C%5COneDrive%5C%5CPictures%5C%5Cdecentralized-trust-chain%5C%5Csrc%5C%5Capp%5C%5Cmyorders%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);